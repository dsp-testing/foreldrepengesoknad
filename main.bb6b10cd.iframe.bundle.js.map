{"version":3,"file":"main.bb6b10cd.iframe.bundle.js","mappings":"gNAKA,EAH2BA,oBAA3B,MAGA,WAAoC,CAACA,oBAAAA,QAArC,Y,2WCDAC,OAAAA,YAAqB,CACnBC,aADmB,GAEnBC,cAAe,aAGV,IAAMC,WAAa,CAAEC,OAAU,2BAAMC,GAAN,MAAeC,MAAO,CAAEC,QAAS,SAAU,0BAA1E,QCTP,SAASC,QAAQC,OAAQC,gBAAkB,IAAIC,KAAOC,OAAAA,KAAX,QAAgC,GAAIA,OAAJ,sBAAkC,CAAE,IAAIC,QAAUD,OAAAA,sBAAd,QAAoD,iBAAoBC,QAAUA,QAAA,QAAe,SAAUC,KAAO,OAAOF,OAAAA,yBAAAA,OAAAA,KAAP,eAAoED,KAAAA,KAAAA,MAAAA,KAAAA,SAAkC,YAIvU,SAASI,gBAAgBC,IAAKC,IAAKC,OAAiK,OAApJD,OAAJ,IAAkBL,OAAAA,eAAAA,IAAAA,IAAgC,CAAEM,MAAcC,YAAhB,EAAkCC,cAAlC,EAAsDC,UAAU,IAAkBL,IAAAA,KAAAA,MAAoB,IAMpMJ,OAAAA,KAAAA,yBAAAA,SAA4B,SAAUK,KACpC,IAAIC,MAAQI,wBAAZ,KAEA,YACE,WACA,eAEI,OAAOC,IAAAA,GAAAA,KAAAA,6CAA0DC,KAAAA,UAAjE,QAGJ,iBAEI,OAAON,MAAA,SAAc,SAAUO,WAC7B,OAAOC,EAAAA,WAAAA,IAAaD,WAApB,MAIN,cAEI,OAAOP,MAAA,SAAc,SAAUS,QAC7B,OAAOC,EAAAA,WAAAA,IAAUD,QAAjB,MAIN,iBAEI,OAAOE,EAAAA,WAAAA,IAlCf,SAASC,cAAcC,QAAU,IAAK,IAAIC,EAAT,EAAgBA,EAAIC,UAApB,OAAsCD,IAAK,CAAE,IAAIE,OAASD,MAAAA,UAAAA,GAAuBA,UAAvBA,GAAb,GAA2DD,EAAJ,EAAaxB,QAAQI,OAAD,SAAPJ,GAAAA,SAAsC,SAAUS,KAAOF,gBAAgBgB,OAAQd,IAAKiB,OAA7BnB,SAA0DH,OAAJ,0BAAwCA,OAAAA,iBAAAA,OAAgCA,OAAAA,0BAAhCA,SAAoFJ,QAAQI,OAARJ,SAAAA,SAAgC,SAAUS,KAAOL,OAAAA,eAAAA,OAAAA,IAAmCA,OAAAA,yBAAAA,OAAnCA,SAA0F,cAkCzekB,CAAc,GAAf,QAApB,GAGJ,wBAEI,OAAOZ,MAAA,SAAc,SAAUiB,UAC7B,OAAOC,EAAAA,WAAAA,IAAP,aAIN,oBAEI,OAAOlB,MAAA,SAAc,SAAUiB,UAC7B,OAAOE,EAAAA,WAAAA,IAAP,aAIN,aAEI,OAAOC,EAAAA,WAAAA,IAAP,OAGJ,cACA,kBAEI,IAAIC,EAAJ,GAEA,OADAA,EAAAA,KAAAA,OACOV,EAAAA,WAAAA,IAAcU,GAArB,GAGJ,QAGI,OAAOC,QAAAA,IAAYvB,IAAnB,gC,+mDCtDR,kCACIwB,MADW,wBAEXC,UAFW,oEAGXvC,WAAY,CAAC,kDAAD,IAGhB,IAAMwC,SAAyB,SAAzBA,SAA0BC,MAAD,OAAU,qHAAV,OAElBC,sBAAwBF,SAAAA,KAA9B,IACPE,sBAAAA,KAA6B,CACzBC,WAAY,CACRzC,GADQ,IAER0C,SAFQ,EAGRC,SAAU,wBAIX,IAAMC,cAAgBN,SAAAA,KAAtB,IACPM,cAAAA,KAAqB,CACjBH,WAAY,CACRzC,GADQ,IAER0C,SAFQ,EAGRG,IAHQ,cAIRF,SAAU,wBAIX,IAAMG,aAAeR,SAAAA,KAArB,IACPQ,aAAAA,KAAoB,CAChBL,WAAY,CACRzC,GADQ,IAER0C,SAFQ,EAGRG,IAHQ,cAIRF,SAJQ,sBAKRI,SAAU,MAIX,IAAMC,WAAaV,SAAAA,KAAnB,IACPU,WAAAA,KAAkB,CACdP,WAAY,CACRzC,GADQ,IAER0C,SAFQ,EAGRG,IAHQ,cAIRF,SAJQ,sBAKRI,SAAU,MAMlBP,sBAAAA,WAAAA,cAAAA,CAAqCS,YAAa,CAAEpB,OAAQ,uCAA2CW,sBAAvGA,YACAI,cAAAA,WAAAA,cAAAA,CAA6BK,YAAa,CAAEpB,OAAQ,uCAA2Ce,cAA/FA,YACAE,aAAAA,WAAAA,cAAAA,CAA4BG,YAAa,CAAEpB,OAAQ,uCAA2CiB,aAA9FA,YACAE,WAAAA,WAAAA,cAAAA,CAA0BC,YAAa,CAAEpB,OAAQ,uCAA2CmB,WAA5FA,a,u7CCtDA,kCACIZ,MADW,4BAEXC,UAFW,wEAGXvC,WAAY,CAAC,kDAAD,IAGhB,IAAMwC,SAAuB,SAAvBA,SAAwBC,MAAD,OAAU,yHAAV,OAEhBW,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACXC,YAAa,CACT,CACInD,GADJ,IAEI2C,SAFJ,sBAGII,SAHJ,IAIIL,SAAS,GAEb,CACI1C,GADJ,IAEI2C,SAFJ,gBAGII,SAHJ,IAIIL,SAAS,KAKd,IAAMU,4BAA8Bd,SAAAA,KAApC,IACPc,4BAAAA,KAAmC,CAC/BD,YAAa,CACT,CACInD,GADJ,IAEI2C,SAFJ,sBAGII,SAHJ,IAIIL,SAAS,GAEb,CACI1C,GADJ,IAEI2C,SAFJ,gBAGII,SAHJ,IAIIL,SAAS,IAGjBW,cAAc,GAKlBH,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,2CAA+CqB,QAA7FA,YACAE,4BAAAA,WAAAA,cAAAA,CAA2CH,YAAa,CAAEpB,OAAQ,2CAA+CuB,4BAAjHA,a,k7BClDA,kCACIhB,MADW,yBAEXC,UAFW,wEAGXvC,WAAY,CAAC,kDAAD,IAGT,IAAMoD,QAAU,SAAVA,UAAU,OAAM,yHAAN,OAIvBA,QAAAA,W,0cAAAA,CAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,0BAA8BqB,QAA5EA,a,s5CCTA,kCACId,MADW,wBAEXC,UAFW,sEAGXvC,WAAY,CAAC,kDAAD,IAGhB,IAAMwC,SAAyB,SAAzBA,SAA0BC,MAAD,OAAU,uHAAV,OAElBW,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACXL,IADW,cAEXS,WAAY,0BAGT,IAAMC,YAAcjB,SAAAA,KAApB,IACPiB,YAAAA,KAAmB,CACfV,IADe,cAEfS,WAFe,yBAGfE,MAAO,cAKXN,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uCAA2CqB,QAAzFA,YACAK,YAAAA,WAAAA,cAAAA,CAA2BN,YAAa,CAAEpB,OAAQ,uCAA2C0B,YAA7FA,a,81BC1BA,kCACInB,MADW,sBAEXC,UAAWoB,+DAAAA,GAGR,IAAMP,QAAU,SAAVA,UAAU,OACnB,mHAAUQ,OAAO,mBACb,4DAFe,sBAQvBR,QAAAA,W,0cAAAA,CAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,sHAA4HqB,QAA1KA,a,o8CCbA,kCACId,MADW,yBAEXC,UAAWsB,qEAAAA,GAGf,IAAMrB,SAAuB,SAAvBA,SAAwBC,MAAD,OAAU,wHAAV,OAEhBW,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACXU,UAAW,QAGR,IAAMC,SAAWvB,SAAAA,KAAjB,IACPuB,SAAAA,KAAgB,CACZD,UADY,OAEZE,UAAW,QAGR,IAAMC,eAAiBzB,SAAAA,KAAvB,IACPyB,eAAAA,KAAsB,CAClBH,UADkB,OAElBE,UAFkB,OAGlBE,QAAS,6BAGN,IAAMC,iBAAmB3B,SAAAA,KAAzB,IACP2B,iBAAAA,KAAwB,CACpBL,UADoB,OAEpBE,UAFoB,OAGpBE,QAAS,oBAGN,IAAME,gBAAkB5B,SAAAA,KAAxB,IACP4B,gBAAAA,KAAuB,CACnBN,UADmB,OAEnBE,UAFmB,OAGnBE,QAAS,mBAGN,IAAMG,QAAU7B,SAAAA,KAAhB,IACP6B,QAAAA,KAAe,CACXP,UADW,OAEXE,UAFW,OAGXE,QAHW,kBAIXI,SAAS,GAKblB,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,wCAA4CqB,QAA1FA,YACAW,SAAAA,WAAAA,cAAAA,CAAwBZ,YAAa,CAAEpB,OAAQ,wCAA4CgC,SAA3FA,YACAE,eAAAA,WAAAA,cAAAA,CAA8Bd,YAAa,CAAEpB,OAAQ,wCAA4CkC,eAAjGA,YACAE,iBAAAA,WAAAA,cAAAA,CAAgChB,YAAa,CAAEpB,OAAQ,wCAA4CoC,iBAAnGA,YACAC,gBAAAA,WAAAA,cAAAA,CAA+BjB,YAAa,CAAEpB,OAAQ,wCAA4CqC,gBAAlGA,YACAC,QAAAA,WAAAA,cAAAA,CAAuBlB,YAAa,CAAEpB,OAAQ,wCAA4CsC,QAA1FA,a,ypDCjDA,kCACI/B,MADW,gCAEXC,UAFW,uFAGXvC,WAAY,CAAC,kDAAD,oDAGhB,IAAMwC,SAAyB,SAAzBA,SAA0BC,MAAD,OAAU,wIAAV,OAElBW,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACXC,YADW,GAEXkB,KAFW,aAGXC,MAHW,mBAIXC,eAAgBC,sDAAAA,EAAAA,gBAChBC,aAAcC,qDAAAA,EAAAA,OAGX,IAAMC,kBAAoBrC,SAAAA,KAA1B,IACPqC,kBAAAA,KAAyB,CACrBxB,YAAa,CACT,CACInD,GADJ,IAEI0C,SAFJ,EAGIC,SAAU,0BAGlB0B,KARqB,aASrBC,MATqB,mBAUrBC,eAAgBC,sDAAAA,EAAAA,gBAChBC,aAAcC,qDAAAA,EAAAA,OAKlBxB,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,+CAAmDqB,QAAjGA,YACAyB,kBAAAA,WAAAA,cAAAA,CAAiC1B,YAAa,CAAEpB,OAAQ,+CAAmD8C,kBAA3GA,a,+hEChDI,IAsBEC,QAAU,CACZC,OAAQ,CACJC,KADI,iBAEJC,mBAFI,EAGJC,eAAgB,CACZC,UADY,SAEZC,MAAO,OAEXC,KAAM,CACFL,KADE,OAEFM,cAAe,CAFb,cAGFC,WAHE,IAIFC,mBAJE,GAKFC,2BAA4B,IAEhCC,cAAe,CACXC,eAAe,GAEnBC,MAjBI,GAkBJC,8BAlBI,GAmBJC,kBAnBI,EAoBJC,aApBI,MAqBJC,WAAY,IAEhBC,QAxBY,EAyBZC,aAzBY,0BA0BZC,UA1BY,GA2BZC,MAAO,IAELD,UAAY,CACdP,MAAO,CACHS,IADG,cAEHC,QAFG,aAGHC,UAHG,OAIHC,MAJG,IAKHC,YALG,aAMHC,oBANG,EAOHrB,KAAM,CACF,CACIgB,IADJ,cAEII,YAFJ,aAGIf,cAAe,CACXW,IADW,cAEXI,YAFW,aAGXH,QAHW,UAIXC,UAAW,YAEfD,QATJ,UAUIC,UAVJ,YAWIC,MAAO,QAMvB,kCACIlE,MADW,4BAEXC,UAFW,mFAGXvC,WAAY,CAAC,oDAAD,mIAUhB,IAAMwC,SAAyB,SAAzBA,SAA0B,MAAuE,IAArEsC,QAAqE,KAArEA,QAASqB,UAA4D,KAA5DA,UAA4D,2BAAjDQ,oBAAAA,yBAAiD,iDAArBC,eAAqB,KAArBA,eAC9E,OACI,gHAAyB7B,OAAzB,QAA0CoB,WACtC,qIACIU,4BAA6B,CACzB,CACIC,MAAOC,+DAAAA,EAAAA,cACPC,MAAO,KAGfC,gBAPJ,eAQIN,wBAMHvD,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QACAqB,WAGG,IAAMe,cAAgB1E,SAAAA,KAAtB,IACP0E,cAAAA,KAAqB,CACjBpC,QAAS,cAAF,8BAEHC,OAAQ,cAAF,iBACCD,QADD,YAEFc,MAAO,cAAF,iBACEd,QAAAA,OADF,WAEDqC,iBAAiB,IAErBzB,cAAe,CACXY,QADW,QAEXC,UAFW,WAGXF,IAHW,aAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,WAGG,IAAMkB,cAAgB7E,SAAAA,KAAtB,IACP6E,cAAAA,KAAqB,CACjBvC,QAAS,cAAF,8BAEHC,OAAQ,cAAF,iBACCD,QADD,YAEFc,MAAO,cAAF,iBACEd,QAAAA,OADF,WAEDqC,iBAAiB,IAErBjC,eAAgB,CACZC,UADY,SAEZC,MAAO,OAEXM,cAAe,CACXY,QADW,OAEXC,UAFW,WAGXF,IAHW,aAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,UACAS,eAAgB,CACZU,iBADY,EAEZtB,WAAY,CACR,CACIhB,KAAMuC,sDAAAA,GAAAA,MACNC,SAFJ,EAGIC,iBAHJ,MAIIC,qBAJJ,EAKIC,qBALJ,KAMIC,YAAa,CACTC,IAAKC,4CAAAA,CAAAA,cADI,SAETC,IAAKD,4CAAAA,CAAAA,cAAAA,aAKrBnB,qBAAqB,GAKzBvD,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,imBAAqmBqB,QAAnpBA,YACA8D,cAAAA,WAAAA,cAAAA,CAA6B/D,YAAa,CAAEpB,OAAQ,imBAAqmBmF,cAAzpBA,YACAG,cAAAA,WAAAA,cAAAA,CAA6BlE,YAAa,CAAEpB,OAAQ,imBAAqmBsF,cAAzpBA,a,qiDC7KA,kCACI/E,MADW,oCAEXC,UAAWyF,6FAAAA,GAGf,IAAMxF,SAAuB,SAAvBA,SAAwBC,MAAD,OAAU,gJAAV,OAEhBW,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX6E,OAAQ,sBAGL,IAAMC,gBAAkB1F,SAAAA,KAAxB,IACP0F,gBAAAA,KAAuB,CACnBD,OADmB,qBAEnBE,eAAgB,CAAC,6JAAYrH,IAAZ,OAAuBsH,KAAM,OAG3C,IAAMC,0BAA4B7F,SAAAA,KAAlC,IACP6F,0BAAAA,KAAiC,CAC7BJ,OAD6B,qBAE7BE,eAAgB,CAAC,6JAAYrH,IAAZ,OAAuBsH,KAAM,MAC9CE,SAAU,qFAKdlF,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,mDAAuDqB,QAArGA,YACA8E,gBAAAA,WAAAA,cAAAA,CAA+B/E,YAAa,CAAEpB,OAAQ,mDAAuDmG,gBAA7GA,YACAG,0BAAAA,WAAAA,cAAAA,CAAyClF,YAAa,CAAEpB,OAAQ,mDAAuDsG,0BAAvHA,a,w3CC9BA,kCACI/F,MADW,oCAEXC,UAAWgG,6FAAAA,GAGR,IAAMnF,QAAU,SAAVA,UAAU,OACnB,iJACId,MADJ,qBAEIkG,KAFJ,oBAGIC,OAAQ,yBAAMC,MAAN,oBACRC,SAAU,2BAAMD,MAAN,mBACVE,eALJ,QAMIC,mBANJ,WAOIC,qBAAqB,gBAIhBC,uBAAyB,SAAzBA,yBAAyB,OAClC,iJACIzG,MADJ,qBAEIkG,KAFJ,oBAGIC,OAAQ,yBAAMC,MAAN,oBACRC,SAAU,2BAAMD,MAAN,mBACVE,eALJ,QAMIC,mBANJ,WAOIC,qBAPJ,aAQIE,sBAAoB,KAM5B5F,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uWAAiXqB,QAA/ZA,YACA2F,uBAAAA,WAAAA,cAAAA,CAAsC5F,YAAa,CAAEpB,OAAQ,uYAAiZgH,uBAA9cA,a,k2BChCA,kCACIzG,MADW,wBAEXC,UAAW0G,mEAAAA,GAGf,IAEa7F,QAFgB,SAAvBZ,SAAwBC,MAAD,OAAU,sHAAV,OAEND,KAAhB,IACPY,QAAAA,KAAe,CACX8F,QAAS,0BAAMR,MAAN,mBACTF,KAAM,eAKVpF,QAAAA,W,0cAAAA,CAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uCAA2CqB,QAAzFA,a,8hDCdA,kCACId,MADW,wBAEXC,UAAW4G,kEAAAA,GAGf,IAAM3G,SAAuB,SAAvBA,SAAwBC,MAAD,OAAU,qHAAV,OAEhBW,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX6E,OADW,qBAEXmB,SAAU,mFAGP,IAAMC,kBAAoB7G,SAAAA,KAA1B,IACP6G,kBAAAA,KAAyB,CACrBpB,OADqB,qBAErBmB,SAAU,4DAFW,sBAGrBE,KAAM,gHAGH,IAAMC,4BAA8B/G,SAAAA,KAApC,IACP+G,4BAAAA,KAAmC,CAC/BtB,OAD+B,qBAE/BmB,SAAU,4DAFqB,sBAG/BI,WAAW,GAGR,IAAMC,6BAA+BjH,SAAAA,KAArC,IACPiH,6BAAAA,KAAoC,CAChCxB,OADgC,qBAEhCmB,SAAU,4DAFsB,sBAGhCM,WAAY,UAKhBtG,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uCAA2CqB,QAAzFA,YACAiG,kBAAAA,WAAAA,cAAAA,CAAiClG,YAAa,CAAEpB,OAAQ,uCAA2CsH,kBAAnGA,YACAE,4BAAAA,WAAAA,cAAAA,CAA2CpG,YAAa,CAAEpB,OAAQ,uCAA2CwH,4BAA7GA,YACAE,6BAAAA,WAAAA,cAAAA,CAA4CtG,YAAa,CAAEpB,OAAQ,uCAA2C0H,6BAA9GA,a,uaC/CME,WAAa,SAAbA,WAAc,MAAD,wBAAGC,UAAH,kCACf,2BAAKC,UAAL,QAAuBC,KAAvB,eAA2CC,QAA3C,YAA+DC,MAA/D,KAA4EC,OAAQL,MAChF,yBAAGM,KAAH,OAAeC,SAAS,WACpB,4BAAMD,KAAN,UAAqBE,EAAE,kBACvB,4BAAMF,KAAN,UAAqBE,EAAE,2BACvB,4BAAMF,KAAN,UAAqBE,EAAE,kBACvB,4BAAMF,KAAN,UAAqBE,EAAE,2BACvB,4BAAMF,KAAN,UAAqBE,EAAE,mBACvB,4BAAMF,KAAN,UAAqBE,EAAE,4BACvB,4BACIF,KADJ,UAEIE,EAAE,kxBAEN,8BAAQC,GAAR,IAAiBC,GAAjB,KAA2BC,EAA3B,IAAmCL,KAAnC,UAAkDC,SAAS,YAC3D,4BACID,KADJ,UAEIC,SAFJ,UAGIC,EAAE,oHAMlB,mC,03CChBA,2BACI9H,MADW,yBAEXC,UAAWiI,YAAAA,GAGf,IAAMhI,SAAuB,SAAvBA,SAAwBC,MAAD,OACzB,uCACI,uCAAYmH,KAAM,OAIba,mBAAqBjI,SAAAA,KAA3B,IACPiI,mBAAAA,KAA0B,CACtBC,SADsB,OAEtBC,OAAO,GAGJ,IAAMC,iBAAmBpI,SAAAA,KAAzB,IACPoI,iBAAAA,KAAwB,CACpBF,SADoB,OAEpBC,OAAO,GAGJ,IAAME,4BAA8BrI,SAAAA,KAApC,IACPqI,4BAAAA,KAAmC,CAC/BH,SAD+B,OAE/BC,OAF+B,EAG/BG,MAAO,WAKXL,mBAAAA,WAAAA,cAAAA,CAAkCtH,YAAa,CAAEpB,OAAQ,8GAAkH0I,mBAA3KA,YACAG,iBAAAA,WAAAA,cAAAA,CAAgCzH,YAAa,CAAEpB,OAAQ,8GAAkH6I,iBAAzKA,YACAC,4BAAAA,WAAAA,cAAAA,CAA2C1H,YAAa,CAAEpB,OAAQ,8GAAkH8I,4BAApLA,a,+/CClCA,kCACIvI,MADW,sBAEXC,UAFW,gEAGXvC,WAAY,CACR,uBACI,wDAAKG,MAAO,CAAE4K,OAAF,OAAkBf,MAAO,SACjC,uDAFR,UAQR,IAAMxH,SAAuB,SAAvBA,SAAwBC,MAAD,OAAU,iHAAV,OAEhBW,QAAUZ,SAAAA,KAAhB,IAEMwI,kBAAoBxI,SAAAA,KAA1B,IACPwI,kBAAAA,KAAyB,CACrBC,OAAQ,YAGL,IAAMC,kBAAoB1I,SAAAA,KAA1B,IACP0I,kBAAAA,KAAyB,CACrBD,OAAQ,YAGL,IAAME,aAAe3I,SAAAA,KAArB,IACP2I,aAAAA,KAAoB,CAChBL,MAAO,SAGJ,IAAMM,YAAc5I,SAAAA,KAApB,IACP4I,YAAAA,KAAmB,CACfN,MAAO,OAGJ,IAAMO,oBAAsB7I,SAAAA,KAA5B,IACP6I,oBAAAA,KAA2B,CACvBP,MAAO,eAGJ,IAAMQ,eAAiB9I,SAAAA,KAAvB,IACP8I,eAAAA,KAAsB,CAClBC,KAAM,WAKVnI,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,qCAAyCqB,QAAvFA,YACA4H,kBAAAA,WAAAA,cAAAA,CAAiC7H,YAAa,CAAEpB,OAAQ,qCAAyCiJ,kBAAjGA,YACAE,kBAAAA,WAAAA,cAAAA,CAAiC/H,YAAa,CAAEpB,OAAQ,qCAAyCmJ,kBAAjGA,YACAC,aAAAA,WAAAA,cAAAA,CAA4BhI,YAAa,CAAEpB,OAAQ,qCAAyCoJ,aAA5FA,YACAC,YAAAA,WAAAA,cAAAA,CAA2BjI,YAAa,CAAEpB,OAAQ,qCAAyCqJ,YAA3FA,YACAC,oBAAAA,WAAAA,cAAAA,CAAmClI,YAAa,CAAEpB,OAAQ,qCAAyCsJ,oBAAnGA,YACAC,eAAAA,WAAAA,cAAAA,CAA8BnI,YAAa,CAAEpB,OAAQ,qCAAyCuJ,eAA9FA,a,ovDCrDO,IAAME,qBAAuD,SAAvDA,qBAAwD,MAA2B,IAAzBC,mBAAyB,KAAzBA,mBACnE,gCAA+BC,MAAAA,SAA/B,uBAAOC,OAAP,oBAAeC,aAAf,oBACMC,MAAOC,EAAAA,QAAAA,KACPC,KAAMC,EAAAA,cAAAA,UAAZ,sBACA,OACI,mCACIC,UAAWF,IADf,MAEIG,cAAcC,EAAAA,cAAAA,WAAUN,KAF5B,uBAGIO,aAHJ,EAIIT,OACAU,eAAgB,6BAEhB,+CAPJ,MAQI,6DAAcJ,UAAU,WAAW,+BAAkB/L,GAAG,wBACxD,4DAAa+L,UAAU,WAAW,+BAAkB/L,GAAG,yBACvD,2BAAK+L,UAAWF,IAAAA,QAAAA,aACZ,yDAAYE,UAAWF,IAAAA,QAAvB,YAAgD7C,QAAS,0BAAM0C,cAAN,KACpD,+BAAkB1L,GAAG,W,ymCClB1C,gCACIoC,MADW,yBAEXC,UAFW,qBAGXvC,WAAY,CAACsM,SAAD,IAGT,IAAMlJ,QAAU,SAAVA,UAAU,OAAM,0CAAkBqI,oBAAkB,KAIjErI,QAAAA,W,0cAAAA,CAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,kDAAsDqB,QAApGA,a,u7BCTA,kCACId,MADW,oCAEXC,UAFW,6EAGXvC,WAAY,CAAC,kDAAD,IAGhB,IAEaoD,QAFgB,SAAvBZ,SAAwBC,MAAD,OAAU,8HAAV,OAEND,KAAhB,IACPY,QAAAA,KAAe,CACXuI,QADW,EAEXU,eAAgB,iCAAM3D,MAAN,uBAKpBtF,QAAAA,W,0cAAAA,CAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,wDAA4DqB,QAA1GA,a,2zBC5BMmJ,oBAAsB,SAAtBA,oBAAuBC,QAGzB,IAFA,IAAMC,aAAe5M,OAAAA,KAArB,QACM6M,MAAQ,IAAIC,WAAWF,aAA7B,QACS5K,EAAT,EAAgBA,EAAI4K,aAApB,OAAyC5K,IACrC6K,MAAAA,GAAWD,aAAAA,WAAXC,GAEJ,cAGSE,eAAiB,SAAjBA,eAAkBJ,QAC3B,IAAMK,aAAcC,EAAAA,GAAAA,MACdC,QAAU,IAAIC,KAAK,CAACT,oBAAV,SAAwC,CACpDvH,KAAM,oBAIN6H,cACCA,SAAAA,YAAAA,MADDA,OACgCA,YAAAA,OAChChN,OAFAgN,WAGAhN,OAAAA,UAJJ,iBAMIA,OAAAA,UAAAA,iBAAAA,SAEAA,OAAAA,KAAYoN,IAAAA,gBAAZpN,W,wQCvBR,IAAMqN,gBAAkB,SAAlBA,gBAAmBC,OAAD,OACpB,oCACInD,MADJ,IAEIC,OAFJ,IAGIF,QAHJ,cAII9D,QAJJ,MAKImH,MALJ,6BAMIC,cAAY,gCANhB,OASI,iCATJ,6BAUI,gCACI,8BAAQnN,GAAR,SAAoBmK,GAApB,KAA4BC,GAA5B,KAAoCC,EAAE,OACtC,8BAAQrK,GAAR,SAAoBmK,GAApB,IAA2BC,GAA3B,IAAkCC,EAAE,OAExC,yBAAGrK,GAAH,mBAAyBoN,OAAzB,OAAuCC,YAAvC,IAAuDrD,KAAvD,OAAmEC,SAAS,WACxE,2BAAKjK,GAAL,aAAqBgK,KAArB,UAAoCsD,UAAU,YAC9C,yBAAGtN,GAAH,SAAeuN,UAAU,mCACrB,4BACIrD,EADJ,gPAEIlK,GAFJ,OAGIgK,KAAK,YAET,yBAAGuD,UAAU,kCACT,4BACIrD,EADJ,iZAEIlK,GAFJ,QAGIgK,KAAK,YAET,yBAAGhK,GAAH,YAAkBuN,UAAU,kCACxB,2BAAKvN,GAAL,SAAiBgK,KAAjB,UAAgCsD,UAAU,YAC1C,4BACIpD,EADJ,sgBAEIlK,GAFJ,OAGIgK,KAAK,cAIjB,4BACIE,EADJ,iNAEIlK,GAFJ,aAGIgK,KAAK,YAET,4BACIE,EADJ,wLAEIlK,GAFJ,cAGIgK,KAAK,gBAOzB,6C,8aCrCA,IAAMwD,iBAAmD,SAAnDA,iBAAoD,MAA0B,IAAxB9H,MAAwB,KAAxBA,MAAO+H,WAAiB,KAAjBA,WACzDC,KAAM5B,EAAAA,cAAAA,UAAZ,oBACQ6B,IAAqBF,WAA7B,IAAaG,YAAgBH,WAA7B,YAEA,OACI,2BAAK1B,UAAW2B,IAAIG,OAChB,yCAAOC,UAAU,KACb,4CAAiB/B,UAAW2B,IAAAA,QAAAA,sBAGhC,yCAAOI,UAAU,KACb,oCAAYC,IAAI,MACZ,+BACI/N,GADJ,qBAEIgO,OAAQ,CACJ3J,KAAM,GAAF,OAAKqB,MAAL,oBAAsBA,MAAtB,gBAMpB,yCAAOoI,UAAP,IAAqBG,aAAiBC,IAARP,KAC1B,2BAAK5B,UAAW2B,IAAAA,QAAAA,mBACZ,+CAAa3B,UAAW2B,IAAAA,QAAxB,eAAoD5D,MAApD,GAA+DC,OAAQ,KACvE,qCACIgC,UAAW2B,IAAAA,QADf,eAEIS,KAFJ,IAGInF,QAAS,oBACLoF,EAAAA,iBACA1B,eAAAA,OAGJ,+BAAkB1M,GAAI,uBAKlC,yCAAO8N,UAAU,KACb,2BAAK/B,UAAW2B,IAAAA,QAAAA,gBACZ,yCACI,+BAAkB1N,GAAG,0BAEzB,4BAAMC,MAAO,CAAE6J,MAAO,aACrBlC,mBAAAA,CAAAA,aAAAA,OALL,yBAKsDA,mBAAAA,CAAAA,aAAAA,OAvClE,aA8CJ,mD,iwBCtDMyG,kBAA8C,SAA9CA,kBAA+C,MAA2B,IAAzBC,mBAAyB,KAAzBA,mBAC7C3C,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,cAAAA,UAAZ,cACMyC,qBAAuBD,mBAAAA,OAA7B,EAEA,OACI,2BAAKvC,UAAW2B,IAAIG,OAChB,2BACI9B,UAAW2B,IAAAA,WACPA,IAAAA,QADOA,WAEPA,IAAAA,oBAAAA,kBAFOA,wBAKX,2BAAK3B,UAAW2B,IAAAA,QAAAA,SAAsBa,qBAAuB,+CAAH,MAAsB,oCANpF,OAOI,2BAAKxC,UAAW2B,IAAAA,QAAAA,UACZ,yCAAOI,UAAU,KACb,yCACI,+BACI9N,GACIuO,qBAAoB,+CAEd,8BAKtB,+BACI,yCACI,+BACIvO,GACIuO,qBAAoB,gDAEd,8BAIjBA,sBACG,wCACI,8BACKD,mBAAA,KAAuB,mBACpB,0BAAI1N,KAAK4N,EAAAA,0BAAAA,SACL,yCACI,+BACIxO,GAAE,6CAAwCyO,EAAxC,sBAOtB,sDACIC,WAAWzC,EAAAA,cAAAA,WAAUN,KAAM,8CAE3B,+BAAkB3L,GAAG,6DAWzD,qD,k1BChEM2O,WAAuC,SAAvCA,WAAwC,MAAe,IAAbC,OAAa,KAAbA,OACtClB,KAAM5B,EAAAA,cAAAA,UAAZ,cAEA,OACI,6CACI,yCAAOgC,UAAU,KACb,0CACI,+BAAkB9N,GAAG,gCAG7B,gEAAgBmO,KAAMU,MAAAA,EAAAA,OAAcC,QAApC,EAAkD/C,UAAU,0BACxD,2BAAKA,UAAW2B,IAAIG,OAChB,2BAAK9B,UAAW2B,IAAAA,QAAAA,SACZ,yCAAOI,UAAU,KACb,qCAAaC,IAAI,MACb,+BAAkB/N,GAAG,qCAG7B,0DAAa8E,KAAK,SACd,+BAAkB9E,GAAG,gCAG5B4O,QACG,2BAAK7C,UAAW2B,IAAAA,QAAAA,UACZ,yCACI,+BAAkB1N,GAAG,mCAEzB,qCAxBxB,aAiCJ,uC,06CCtBA,sBA1ByB,SAAnB+O,iBAAoB9B,OACKA,MAA3B,UAAkB+B,KAAlB,0CACA,OACI,4CAAKrF,UAAL,QAAuBC,KAAvB,eAA2CE,MAA3C,GAAsDC,OAAQ,IAA9D,MACI,yBAAGwD,UAAH,kBAA+BvD,KAA/B,OAA2CC,SAAS,WAChD,4BAAMD,KAAN,UAAqBE,EAAE,kCACvB,4BAAMF,KAAN,UAAqBE,EAAE,uCACvB,4BAAMF,KAAN,UAAqBE,EAAE,kCACvB,4BAAMF,KAAN,UAAqBE,EAAE,sCACvB,4BAAMF,KAAN,UAAqBE,EAAE,+BACvB,4BAAMF,KAAN,UAAqBE,EAAE,wCACvB,4BACIA,EADJ,kxBAEIF,KAAK,YAET,+BAASA,KAAT,UAAwBC,SAAxB,UAA2CE,GAA3C,MAAsDC,GAAtD,OAAkE6E,GAAlE,MAA6EC,GAAI,QACjF,4BACIhF,EADJ,oQAEIF,KAFJ,UAGIC,SAAS,e,woBCnB7B,IAAMkF,aAAe,SAAfA,aAAgBlC,OAAD,OACjB,gDAAKtD,UAAL,QAAuBC,KAAvB,eAA2CE,MAA3C,GAAsDC,OAAQ,IAA9D,OACI,iCADJ,SAEI,yBAAGC,KAAH,OAAeC,SAAS,WACpB,4BACIC,EADJ,uWAEIF,KAAK,YAET,4BAAME,EAAN,mFAA2FF,KAAK,YAChG,yBAAGC,SAAS,WACR,4BACIC,EADJ,+IAEIF,KAAK,YAET,4BACIE,EADJ,iQAEIF,KAAK,YAET,4BACIE,EADJ,+IAEIF,KAAK,gBAOzB,uC,8qBC3BA,IAAMoF,YAAc,SAAdA,YAAenC,OAAD,OAChB,+CAAKtD,UAAL,QAAuBC,KAAvB,eAA2CE,MAA3C,GAAsDC,OAAtD,GAAkEF,QAAQ,aAA1E,OACI,yBAAGG,KAAH,OAAeC,SAAS,WACpB,4BACID,KADJ,UAEIE,EAAE,2IAEN,4BACIF,KADJ,OAEIE,EAAE,qNAEN,4BACIF,KADJ,UAEIE,EAAE,2IAEN,4BACIF,KADJ,OAEIE,EAAE,uKAEN,4BACIF,KADJ,UAEIE,EAAE,oKAMlB,qC,sYCLA,qBAZiD,SAA3CmF,eAA4C,MAAwB,IAAtBvK,KAAsB,KAAtBA,KAAMiH,UAAgB,KAAhBA,UACtD,aACI,WACI,OAAO,qCAAkBA,UAAsBjC,MAAxC,GAAmDC,OAAQ,KACtE,cACI,OAAO,wCAAagC,UAAsBjC,MAAnC,GAA8CC,OAAQ,KACjE,eACI,OAAO,yCAAcgC,UAAsBjC,MAApC,GAA+CC,OAAQ,KAClE,QACI,c,2rBCcZ,+BAnB2D,SAArDuF,yBAAsD,MAAmD,IAAjDlN,MAAiD,KAAjDA,MAAOmN,KAA0C,KAA1CA,KAAMzK,KAAoC,KAApCA,KAAM0K,cAA8B,KAA9BA,cAAetG,SAAe,KAAfA,SACtFwE,KAAM5B,EAAAA,cAAAA,UAAZ,4BAEA,OACI,+BAASC,UAAW2B,IAAIG,OACpB,2BAAK9B,UAAW2B,IAAAA,QAAAA,UACZ,2BAAK3B,UAAW2B,IAAAA,QAAAA,SACZ,oCAAgB5I,QAEpB,2BAAKiH,UAAW2B,IAAAA,QAAAA,YACZ,qCADJ,OAEI,sDAAoBgB,UAAWc,eAFnC,MANZ,a,8pCCRJ,wBAN0B,SAApBC,oBAAoB,OACtB,2BAAK1D,UAAL,oBAAmCnC,KAAnC,OAA+C8F,aAAW,yBACtD,yCAFkB,2B,wsCCyJ1B,kBAtIoB,SAAdC,cACF,+BAAoCC,EAAAA,MAAAA,YAApC,GAAOnC,WAAP,cAAmBoC,cAAnB,cACM5J,WAAY6J,EAAAA,aAAAA,KAIZnE,MAAOC,EAAAA,QAAAA,KACLmE,OAA2B9J,UAAnC,OAAgB+J,eAAmB/J,UAAnC,eACMyH,KAAM5B,EAAAA,cAAAA,UAAZ,eAcA,OAZAmE,EAAAA,MAAAA,YAAU,WACNC,IAAAA,EAAAA,sBAA0B,CAAEC,qBAAsBvI,mBAAAA,GAAAA,OAAAA,eAAgC3B,UAAAA,OAAlFiK,KAAAA,MACI,0BAAcL,cAAcO,SAA5B,UAGJC,EAAAA,UAAAA,IAAkB,cAAe,CAC7BC,IAD6B,sBAE7BC,KAF6B,iBAG7BC,QAASC,UAAAA,GAAAA,mBAEd,CAACxK,UAAAA,OAVJgK,MAYA,WASI,wCACI,oDAAe7N,OAAO6J,EAAAA,cAAAA,WAAUN,KAAM,wBACtC,sCAFJ,MAGI,2BAAKI,UAAW2B,IAAIG,OAChB,iDAAkBnI,MAAlB,OAAiC+H,aAEjC,yCAAOK,UAAU,KACb,kDAAmBQ,mBAnCnC,MAuCgB,wCACI,yCAAOR,UAAU,KACb,8CACI1L,OAAO6J,EAAAA,cAAAA,WAAUN,KADrB,0BAEI7G,KAFJ,WAGIyK,MAAMtD,EAAAA,cAAAA,WAAUN,KAHpB,2BAII6D,eAAevD,EAAAA,cAAAA,WAAUN,KAAM,sCAE/B,yCAAc/D,mBAAAA,CA7C1C,cA6C0CA,OAR1B,mBAYKoI,gBAAkBA,eAAAA,OAAlBA,GACG,yCAAOlC,UAAU,KACb,8CACI1L,OAAO6J,EAAAA,cAAAA,WAAUN,KADrB,0CAEI7G,KAFJ,UAGIyK,MAAMtD,EAAAA,cAAAA,WAAUN,KAHpB,2CAII6D,eAAevD,EAAAA,cAAAA,WAAUN,KAAM,sDAE/B,yCAAOmC,UAAU,KACb,yCACI,+BAAkB9N,GAAI,2CAG9B,yCACI,qCACImO,KADJ,IAEInF,QAAS,oBACLoF,EAAAA,iBACA1B,eAAee,WAAff,gBAGJ,+BAAkB1M,GAAI,6CAO1C,yCAAO8N,UAAU,KACb,8CACI1L,OAAO6J,EAAAA,cAAAA,WAAUN,KADrB,8BAEI7G,KAFJ,OAGIyK,MAAMtD,EAAAA,cAAAA,WAAUN,KAHpB,+BAII6D,eAAevD,EAAAA,cAAAA,WAAUN,KAAM,0CAE9BoE,OAAAA,WAAoBA,OAAAA,UAApBA,YACG,wCACI,yCAAOjC,UAAU,KACb,yCACI,+BAAkB9N,GAAG,sCAG7B,yCAAO8N,UAAU,KACb,qCAAUiC,OAAAA,WAAoBA,OAAAA,UAPtC,cASI,yCAAOjC,UAAU,KACb,yCACI,qCAAOK,KAAMU,MAAAA,EAAAA,cACT,+BAAkB7O,GAAG,8CAMrC,wCACI,yCAAO8N,UAAU,KACb,yCACI,+BAAkB9N,GAAG,2CAG7B,yCAAO8N,UAAU,KACb,yCACI,qCAAOK,KAAMU,MAAAA,EAAAA,cACT,+BAAkB7O,GAAG,mDAWzD,2CAAY4O,OAAQnB,WAAWmB,WAxGnC,2BAAK3O,MAAO,CAAEyQ,UAAF,SAAuBxQ,QAAS,YACxC,uCAAoB4E,KAAK,U,6lCC7BzC,2BACI1C,MADW,oBAEXC,UAFW,YAGXvC,WAAY,CAACsM,SAAD,sCAWhB,IAAM9J,SAAyB,SAAzBA,SAA0B,MAA4C,IAA1CqO,SAA0C,KAA1CA,SAAUC,UAAgC,KAAhCA,UAAWZ,eAAqB,KAArBA,eAMnD,OACI,iCAAWa,KANE,SAAXC,SAAYC,SACd,UACIA,QAAAA,OAAAA,sCAAAA,UAAAA,IAAAA,MAKA,+CACIlM,OADJ,GAEIoB,UACI,CACIP,MAAO,CAAES,IAAF,UAAkBC,QAAlB,QAAoCC,UAApC,WAA2DuK,UAAWZ,kBAIrF,gCAVZ,SAgBS9M,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACXyN,UAAU,GAGP,IAAMK,aAAe1O,SAAAA,KAArB,IACP0O,aAAAA,KAAoB,CAChBL,UADgB,EAEhBC,UAAW,CAAEK,YAAa,aAGvB,IAAMC,kBAAoB5O,SAAAA,KAA1B,IACP4O,kBAAAA,KAAyB,CACrBP,UADqB,EAErBX,eAAgB,CAAC,KAGd,IAAMmB,gBAAkB7O,SAAAA,KAAxB,IACP6O,gBAAAA,KAAuB,CACnBR,UAAU,GAKdzN,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uwBAA2wBqB,QAAzzBA,YACA8N,aAAAA,WAAAA,cAAAA,CAA4B/N,YAAa,CAAEpB,OAAQ,uwBAA2wBmP,aAA9zBA,YACAE,kBAAAA,WAAAA,cAAAA,CAAiCjO,YAAa,CAAEpB,OAAQ,uwBAA2wBqP,kBAAn0BA,YACAC,gBAAAA,WAAAA,cAAAA,CAA+BlO,YAAa,CAAEpB,OAAQ,uwBAA2wBsP,gBAAj0BA,a,6RCjFA,mB,2TAAYC,oBAAAA,mBAAAA,mCAAAA,kC,CAAAA,qBAAAA,mBAAAA,KAQL,IAAMC,0BAA4B,SAA5BA,0BAA6BC,iCACtC,MAAO,CACHA,kCAIKC,yBAA0BC,EAAAA,sBAAAA,0B,wMCb1BC,wCAA0C,SAA1CA,wCAA2C9F,MAAD,OAAqB,gBACxE,QAAI9K,MACA,OAAOoL,EAAAA,IAAAA,WAAUN,KAAjB,uE,0uCCsBR,IAAM+F,UAA4C,SAA5CA,UAA6C,MAAwC,IAAtCtL,QAAsC,KAAtCA,QAASuL,OAA6B,KAA7BA,OAAQC,eAAqB,KAArBA,eAC5DjG,MAAOC,EAAAA,QAAAA,KACP/G,QAASgN,EAAAA,UAAAA,KACf,2BAAgFjC,EAAAA,MAAAA,WAAhF,MAAOkC,kCAAP,cAA0CC,mCAA1C,cACMrE,KAAM5B,EAAAA,IAAAA,UAAZ,aAMMkG,eAAgBC,EAAAA,iBAAAA,IAJO,SAAvBC,qBAAwBlE,QAC1B,MAAO,CAACmE,cAAAA,EAAAA,aAA2BnE,OAAnC,oCAGyDoE,OAAAA,EAAAA,mBAE7D,OACI,oBAACb,wBAAwBc,cAAzB,CACIC,cAAejB,0BAA0BxM,OAD7C,mBAEI0N,SAFJ,cAGIC,WAAY,sBACR,OACI,oBAACjB,wBAAwBkB,KAAzB,CAA8BC,gBAAgB,GAC1C,wCACIf,OACAgB,iBAAkB,CAAC,KAFvB,MAGIC,OAAQ,0BAAehB,eAAf,MAEZ,oCACIiB,OAAQ,CACJzQ,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,wBAAyB,CAAEtH,KAAM+B,UACxDkC,KACI,wCACI,+BAAOwF,UAAU,KACb,+BAAkB9N,GAAI,8BAM1C,2BAAK+L,UAAW2B,IAAIG,OAChB,+BAAOC,UAAU,MACb,oBAACyD,wBAAwBuB,qBAAzB,CACIzO,KAAM+M,mBAAAA,mCACN9M,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,sBAGIoH,SAAUtB,wCAAwC9F,OAElD,wCACI,+BAAOmC,UAAU,KACb,+BAAkB9N,GAAG,kCAEzB,+BAAO8N,UAAU,KACb,kCALR,OAOI,+BAAOA,UAAU,KACb,+BAAkB9N,GAAG,kCAEzB,+BAAkBA,GAAG,oCAIjC,+BAAO8N,UAAU,KACb,2BAAK7N,MAAO,CAAEyQ,UAAW,WACrB,6DAvBZ,uBA0BI,4DAAa3E,UAAW2B,IAAAA,QAAAA,2BACpB,yBACI3B,UADJ,QAEIoC,KAFJ,IAGInF,QAAS,oBACLoF,EAAAA,iBACA2D,oCAAAA,KAGJ,+BAAkB/R,GAAG,2CAG7B,mDACIyL,OADJ,kCAEIU,eAAgB,iCAAM4F,oCAAN,YAUhD,oC,6xDC/FA,yBACI3P,MADW,kBAEXC,UAFW,oBAGXvC,WAAY,CAACsM,SAAD,sCAGhB,IAAM9J,SAAuB,SAAvBA,SAAwB,MAA0B,IAAxByC,kBAAwB,KAAxBA,kBAC5B,OACI,+CACIF,OAAQ,CAAEA,OAAQ,CAAEE,oBACpBkB,UAAW,CAAEP,MAAO,CAAES,IAAK,aAE3B,yCAAWC,QAAX,QAA2BwL,eAAgB,4BAAiBD,OAAO,SAKlEzO,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX6B,mBAAmB,GAGhB,IAAMiO,0BAA4B1Q,SAAAA,KAAlC,IACP0Q,0BAAAA,KAAiC,CAC7BjO,mBAAmB,GAKvB7B,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,yZAA+ZqB,QAA7cA,YACA8P,0BAAAA,WAAAA,cAAAA,CAAyC/P,YAAa,CAAEpB,OAAQ,yZAA+ZmR,0BAA/dA,a,wtCC7CA,uB,8yBAAYC,wBAAAA,uBAAAA,cAAAA,gBAAAA,uBAAAA,2BAAAA,0BAAAA,uBAAAA,yBAAAA,wBAAAA,uBAAAA,QAAAA,UAAAA,uBAAAA,UAAAA,YAAAA,uBAAAA,IAAAA,MAAAA,uBAAAA,cAAAA,gBAAAA,uBAAAA,cAAAA,gBAAAA,uBAAAA,aAAAA,YAAAA,uBAAAA,mBAAAA,qBAAAA,uBAAAA,YAAAA,cAAAA,uBAAAA,2BAAAA,6B,CAAAA,yBAAAA,uBAAAA,KA8BL,I,sBAAMC,6BAA8B1B,EAAAA,sBAAAA,0B,k/BCpBpC,I,sBAAM2B,4BAAiD,yCACzDF,uBAAuBxN,eADkC,yCAEzDwN,uBAAAA,2BAAiDG,sBAAAA,QAAAA,YAFQ,sCAGzDH,uBAAAA,yBAA+CG,sBAAAA,QAAAA,YAHU,sCAIzDH,uBAAuB7M,QAJkC,0CAKzD6M,uBAAuB5M,UALkC,0CAMzD4M,uBAAuB9M,IANkC,0CAOzD8M,uBAAuBI,eAPkC,yCAQzDJ,uBAAuBK,cAAgBF,sBAAAA,QAAAA,YARkB,sCASzDH,uBAAAA,aAAmCG,sBAAAA,QAAAA,YATsB,sCAUzDH,uBAAuB3N,mBAVkC,0CAWzD2N,uBAAuBM,YAXkC,0CAYzDN,uBAAuB1N,2BAZkC,IAAvD,uBA6DMiO,4BAA8B,SAA9BA,4BAA+BxF,QACxC,WAAIA,OAAAA,cACO,CACH3H,WAAWoN,EAAAA,IAAAA,UAASzF,OAATyF,WAA6BzF,OAA7ByF,eADR,EAEHrN,SAASqN,EAAAA,IAAAA,UAASzF,OAATyF,SAA2BzF,OAA3ByF,aAFN,EAGHtN,KAAKsN,EAAAA,IAAAA,UAASzF,OAATyF,KAAuBzF,OAAvByF,SAHF,EAIHF,aAAaE,EAAAA,IAAAA,UAASzF,OAATyF,aAA+BzF,OAA/ByF,iBAJV,EAKHJ,eAAeI,EAAAA,IAAAA,UAASzF,OAATyF,eAAiCzF,OAAjCyF,mBALZ,EAMHC,QAAQC,EAAAA,UAAAA,GAAmC3F,OANxC,WAOHvI,cAAeuI,OAPZ,cAQH9G,yBAAyByM,EAAAA,UAAAA,GAAmC3F,OARzD,yBASH4F,uBAAuBD,EAAAA,UAAAA,GAAmC3F,OAAD,wBAI1D,CACHvI,eAAe,IAIVoO,kCAAoC,SAApCA,kCAAqC,cAAD,2BAM7C,OAAIC,EAAAA,cAAAA,GAAAA,iBAAyCL,EAAAA,IAAAA,UAASjO,cAAtD,SACI,+DAEI0B,yBAAyB6M,EAAAA,UAAAA,GAAmCvO,cAFhE,yBAGI+N,YAAa/N,cAAAA,aAHjB,GAIIoO,uBAAuBG,EAAAA,UAAAA,GAAmCvO,cAJ9D,uBAKIwO,WAAWD,EAAAA,UAAAA,GAAmCvO,cALlD,QAMID,2BAA4BJ,KAAAA,4BANhC,GAOIkB,UAAWb,cAPf,UAQIY,QAASZ,cARb,QASIC,cAAeD,cATnB,cAUIW,IAAKX,cAVT,IAWI8N,eAAeS,EAAAA,UAAAA,GAAmCrO,MAXtD,iBAYIJ,mBAAoBH,KAAAA,oBAZxB,GAaIkO,cAAe7N,cAAAA,gBAA+B,IAIlD,gBAAsByO,eAA1B,cACI,+DAEI7N,QAAS6N,eAAAA,cAFb,QAGI5N,UAAW4N,eAAAA,cAHf,UAII9N,IAAK8N,eAAAA,cAA6B9N,OAItC+N,EAAAA,cAAAA,GAAJ,eACI,+DAEIzO,cAAeD,cAAcC,gBAIrC,8C,oPCzHJ,IAYM0O,yBAA8F,qEAC/FlB,uBAAuB7M,QAAU,CAC9BgO,WAAY,8BAAGhO,QAAH,oBAAiBqN,EAAAA,IAAAA,UAAjB,UACZY,WAAY,6DACZC,WAAY,6DAJgF,kEAM/FrB,uBAAuB5M,UAAY,CAChC+N,WAAY,+BAAG/N,UAAH,uBAAmBoN,EAAAA,IAAAA,UAAnB,YACZY,WAAY,6DACZC,WAAY,6DATgF,kEAW/FrB,uBAAuBxN,cAAgB,CACpC2O,WAAY,+BAAG3O,cAAH,2BAAuBgO,EAAAA,IAAAA,UAAvB,gBACZa,WAAY,gCACZD,WAAY,+BAAGE,oBAAH,0BAAwBC,WAAxB,iBAAoCC,wBAApC,qCACRF,qBA3BiC,SAAvCG,qCAAwCF,WAAD,yBACzC,gCAIA,WAAIA,WAsB2BE,CAAqCF,WADpD,4BAdgF,kEAiB/FvB,uBAAuB9M,IAAM,CAC1BiO,WAAY,+BAAGjO,IAAH,UAAQkN,cAAR,2BAA4BI,EAAAA,IAAAA,UAAAA,OAAkBJ,IAAAA,gBAA0BI,EAAAA,IAAAA,UAAxE,MACZY,WAAY,gCAAGE,oBAAH,2BAAwB9O,cAAxB,4BAA4C8O,sBAA5C,IAAmE9O,eAC/EkP,iBAAkB,sCAAGvO,QAAH,eAAYC,UAAZ,wBAA4BoN,EAAAA,IAAAA,UAAAA,WAAqBA,EAAAA,IAAAA,UAAjD,cApB0E,kEAsB/FR,uBAAuBI,cAAgB,CACpCe,WAAY,gCAAGf,cAAH,4BAAuBI,EAAAA,IAAAA,UAAvB,gBACZkB,iBAAkB,sCAAGlP,cAAH,qBAAkBW,QAAlB,eAA2BC,UAA3B,wBACdZ,IAAAA,gBAA0BgO,EAAAA,IAAAA,UAA1BhO,WAA+CgO,EAAAA,IAAAA,UADjC,YAElBY,WAAY,+DACZC,WAAY,kCA3BgF,kEA6B/FrB,uBAAuBK,cAAgB,CACpCc,WAAY,0DAAyChB,sBAAAA,QAAAA,YACrDiB,WAAY,6DACZM,iBAAkB,sCAAGJ,oBAAH,2BAAwBpO,IAAxB,WAA6BkN,cAA7B,qBAA4CE,YAA5C,0BACbgB,qBACAA,sBAAuBd,EAAAA,IAAAA,UAAvBc,OADD,IACyClB,eACxCkB,sBAAuBd,EAAAA,IAAAA,UAAvBc,eAHa,IAGmClB,iBAnCuC,kEAqC/FJ,uBAAuB1N,2BAA6B,CACjD6O,WAAY,gCACZC,WAAY,gCAAGf,cAAH,qBAAkBkB,WAAlB,yBAAmClB,gBAAkBF,sBAAAA,QAAAA,KAArD,QAAoEoB,YAChFG,iBAAkB,sCAAGrB,cAAH,qBAAkBhO,mBAAlB,iCACdgO,gBAAkBF,sBAAAA,QAAAA,MAAeK,EAAAA,IAAAA,UADnB,uBAxC0E,kEA2C/FR,uBAAAA,2BAAiD,CAC9C2B,eAAgB3B,uBAAuBK,cACvCc,WAAY,oEAA6DhB,sBAAAA,QAAAA,YACzEuB,iBAAkB,gEAAyCvB,sBAAAA,QAAAA,MA9CiC,kEAgD/FH,uBAAAA,yBAA+C,CAC5C2B,eAAgB3B,uBAAAA,2BAChBmB,WAAY,kEAAyDhB,sBAAAA,QAAAA,YACrEuB,iBAAkB,sCAAGrB,cAAH,qBAAkBpM,wBAAlB,sCACdoM,gBAAkBF,sBAAAA,QAAAA,IAAclM,0BAA4BkM,sBAAAA,QAAAA,OApD4B,kEAsD/FH,uBAAAA,aAAmC,CAChC2B,eAAgB3B,uBAAAA,2BAChBmB,WAAY,sDAAiChB,sBAAAA,QAAAA,YAC7CuB,iBAAkB,sCAAGrB,cAAH,qBAAkBpM,wBAAlB,+BAA2CsN,WAA3C,yBACdlB,gBAAkBF,sBAAAA,QAAAA,IAAclM,0BAA4BkM,sBAAAA,QAAAA,KAAcyB,EAAAA,iBAAAA,GAD5D,eAzD0E,kEA4D/F5B,uBAAuB3N,mBAAqB,CACzC8O,WAAY,gCAAG9O,mBAAH,iCAA4BmO,EAAAA,IAAAA,UAA5B,qBACZY,WAAY,gCAAGf,cAAH,qBAAkBkB,WAAlB,yBAAmClB,gBAAkBF,sBAAAA,QAAAA,MAAeyB,EAAAA,iBAAAA,GAApE,eA9DgF,kEAgE/F5B,uBAAuBM,YAAc,CAClCa,WAAY,gCAAGb,YAAH,0BAAqBE,EAAAA,IAAAA,UAArB,cACZY,WAAY,6DACZM,iBAAkB,sCAAGxO,IAAH,kBAAasN,EAAAA,IAAAA,UAAb,QAnE1B,uBAuEaqB,8BAA+BC,EAAAA,+BAAAA,IAArC,yB,8ICpFDC,uCAAyE,SAAzEA,uCAA0E,MAAmC,IAAjC/G,QAAiC,KAAjCA,QAASgH,kBAAwB,KAAxBA,kBACvF,eAKI,2BAAKlJ,UAAU,yBACX,6CAAemJ,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,+CAEIgO,OAAQ,CAAEqH,KAAMJ,uBAR5B,MAeR,+F,g5BCtBA,IAAMK,oCAA+D,SAA/DA,sCACF,OACI,2BAAKvJ,UAAU,yBACX,6CAAemJ,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BAAkBpV,GAAG,mEAMrC,yF,wqBCYA,uCAjByE,SAAnEuV,iCAAoE,MAAmC,IAAjCtH,QAAiC,KAAjCA,QAASgH,kBAAwB,KAAxBA,kBACjF,eAKI,2BAAKlJ,UAAU,yBACX,6CAAemJ,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,kDAEIgO,OAAQ,CAAEqH,KAAMJ,uBAR5B,M,i7BCTKO,2BACT,SADSA,2BACR7J,KAAD,4BAAuD,6BACnD,OAAK8H,EAAAA,IAAAA,UAAL,qBAIKgC,EAAAA,mBAAAA,iBAAL,oBAII7N,mBAAAA,CAAAA,oBAAAA,SAAJ,sBACWqE,EAAAA,IAAAA,WAAUN,KAAM,0EAA2E,CAC9F+J,MAAMC,EAAAA,IAAAA,YAAWC,oBAAD,iBAFxB,GAHW3J,EAAAA,IAAAA,WAAUN,KAAjB,uEAJOM,EAAAA,IAAAA,WAAUN,KAAjB,gEAgBCkK,gBAAkB,SAAlBA,gBAAmBlK,KAAD,sBAA8C,kBACzE,IAAKlG,iBAAkBgO,EAAAA,IAAAA,UAAvB,SACI,OAAOxH,EAAAA,IAAAA,WAAUN,KAAjB,kDAMKmK,kBAAoB,SAApBA,kBAAqBnK,KAAD,sBAA8C,oBAC3E,IAAKlG,iBAAkBgO,EAAAA,IAAAA,UAAvB,WACI,OAAOxH,EAAAA,IAAAA,WAAUN,KAAjB,oDCjCFoK,qBAAuBrW,oBAA7B,MCGasW,sBACT,SADSA,sBACRrK,KAAD,4CACA,cACI,mBACI,YAAIxF,IAAAA,KAAJ,KAAyBA,KACd8F,EAAAA,IAAAA,WAAUN,KAAjB,+CAGJ,EAGJ,GAAIxF,MAAJ,oBACI,OAAO8F,EAAAA,IAAAA,WAAUN,KAAjB,0DAGJ,IAAMsK,eDf4B,SAA7BC,2BAA8B/P,KACvC,IACI,OAAO4P,qBAAqB5P,KAA5B,GACF,MAAOiI,GACL,UCWuB8H,CAAvB,KAEA,OAAKC,iBDTmB,SAAnBC,iBAAoBjQ,IAAD,sBAC5B,IAAMuP,KAAOW,MAAAA,qBAAAA,GAAAA,OAAkCC,OAAOnQ,IAAAA,OAAAA,EAAPmQ,IAAlCD,GAAAA,OAAiElQ,IAAAA,OAAAA,EAAjEkQ,IAAsFlQ,IAAAA,OAAAA,EAAnG,GACMoQ,IAAMpQ,IAAAA,OAAAA,EAAZ,GACMqQ,GAAKrQ,IAAAA,OAAAA,EAAX,GAEMI,YAAcqB,mBAAAA,CAAM,GAAD,4CAAzB,YAMA,OAJIrB,YAAAA,IAAAA,QAA0BqB,mBAAAA,GAAAA,IAA9B,SACIrB,YAAAA,SAAAA,IAAAA,UAGCA,YAAL,WAIOA,YAAAA,SAAqBqB,mBAAAA,GAAAA,SAAAA,GAA5B,SCN6BwO,CAAiBjQ,IAAtC,iBAAJ,MAAkE8P,eAI3DA,MAAAA,gBAAAA,MAA0BA,oBAA1BA,GAEDhK,EAAAA,IAAAA,WAAUN,KAFhB,uDAHWM,EAAAA,IAAAA,WAAUN,KAAjB,gD,sDCDN8K,gBAAkD,SAAlDA,gBAAmD,MAOnD,IANFrQ,QAME,KANFA,QACA+P,gBAKE,KALFA,gBACA1Q,cAIE,KAJFA,cACAiR,WAGE,KAHFA,WACAC,gBAEE,KAFFA,gBACAC,oBACE,KADFA,oBAEMjL,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,IAAAA,UAAZ,mBAEA,OACI,2BAAKC,UAAW2B,IAAIG,OAChB,0DAAcnK,OAAQ,6DAAUuI,EAAAA,IAAAA,WAAUN,KAApB,iCAClB,+BAAOsC,QAASyI,WAAAA,UAAqBzD,uBAAuB7M,UACxD,2BAAK2F,UAAW2B,IAAAA,QAAAA,sBACZ,oBAACwF,4BAA4B2D,MAA7B,CACI9K,UAAW2B,IAAAA,QADf,aAEIrJ,KAAM4O,uBAAuB7M,QAC7B9B,OAAO2H,EAAAA,IAAAA,WAAUN,KAHrB,kCAIImL,SAJJ,cAKI/D,SAAU8C,gBAAgBlK,KAAMlG,iBAEpC,oBAACyN,4BAA4B2D,MAA7B,CACI9K,UAAW2B,IAAAA,QADf,aAEIrJ,KAAM4O,uBAAuB5M,UAC7B/B,OAAO2H,EAAAA,IAAAA,WAAUN,KAHrB,oCAIImL,SAJJ,cAKI/D,SAAU+C,kBAAkBnK,KAAMlG,mBAI9C,+BAAOqI,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBzD,uBAAuBxN,gBACtE,oBAACyN,4BAA4B6D,SAA7B,CACI1S,KAAM4O,uBAAuBxN,cAC7BnB,MACIqS,iBACM1K,EAAAA,IAAAA,WAAUN,KADD,0CAETM,EAAAA,IAAAA,WAAUN,KAAM,wCAKtC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBzD,uBAAuB9M,MACtE,oBAAC+M,4BAA4B2D,MAA7B,CACIxS,KAAM4O,uBAAuB9M,IAC7B7B,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,6BAA8B,CAAE0J,KAAMjP,UAC7D2M,SAAUiD,sBAAsBrK,KAAMiL,oBAAqBT,oBAGnE,+BAAOrI,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBzD,uBAAuBI,gBACtE,oBAACH,4BAA4B6D,SAA7B,CACI1S,KAAM4O,uBAAuBI,cAC7B/O,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,uCAAwC,CAAE0J,KAAMjP,aAG/E,+BAAO0H,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBzD,uBAAuBM,cACtE,oBAACL,4BAA4B8D,cAA7B,CACI3S,KAAM4O,uBAAuBM,YAC7BjP,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,4BAA6B,CAAE0J,KAAMjP,UAC5D6Q,eAAe,OAOnC,iD,ivCC1EMC,sBAAwD,SAAxDA,sBAAyD,MAAsB,IAApBnH,OAAoB,KAApBA,OACvDrC,KAAM5B,EAAAA,IAAAA,UAAZ,yBAEA,OACI,2BAAKC,UAAW2B,IAAIG,OAChB,wDAAS9B,UAAW2B,IAAAA,QAAAA,UACfyJ,EAAAA,YAAAA,IAAapH,OAAD,QAAiBA,OAAjB,UAAmCA,OAFxD,aAII,gEACI,+BACI/P,GADJ,wDAEIgO,OAAQ,CAAE7H,IAAK4J,OAAP,IAAmByG,IAAIY,EAAAA,UAAAA,IAAgBrH,OAAhBqH,aAAoCZ,SAOvF,yE,ktDC4MA,mCAzMsB,SAAhBxP,gBACF,IAAM2E,MAAOC,EAAAA,QAAAA,KACb,YAKIiG,EAAAA,UAAAA,KAJArM,cADJ,yBAEIL,KAFJ,gBAGIO,MAHJ,iBAIsBR,MAJtB,gCAMM0Q,oBAAsBhO,mBAAAA,EAAMyP,EAAAA,UAAAA,GAAlC,OACMpR,WAAY6J,EAAAA,aAAAA,KACZmE,gBAAiBqD,EAAAA,UAAAA,GAA6BnS,KAAMc,UAA1D,iBACMsO,yBACFN,IAAAA,qBAAiCA,IAAAA,qBADrC,IACqEA,eAAAA,cAE/D/B,sBAAuBqF,EAAAA,MAAAA,cACzB,iBACI,IAAMC,SAAkB,2BAAH,yCAEjBvQ,mBAAmB0M,EAAAA,UAAAA,GAAmC3F,OAAD,iBAEnDyJ,QAAgB,2BAAH,wCAEfnS,oBAAoBmO,EAAAA,IAAAA,UAASzF,OAATyF,oBAAsCzF,OAAtCyF,wBAFL,EAGflO,2BACIyI,OAAAA,4BAAqCA,OAAAA,2BAAAA,OAArCA,EACMA,OADNA,gCAEME,IAGd,MAAO,CACHiE,cAAAA,EAAAA,iBAA+BqB,4BAD5B,SAEHrB,cAAAA,EAAAA,YAFG,UAGHA,cAAAA,EAAAA,YAHJ,YAMJ,CAACzM,MArBL,OAwBMsM,eAAgBC,EAAAA,iBAAAA,GAAiBC,qBAAsBE,OAAAA,EAAAA,iBACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACI,oBAACzE,4BAA4Bb,cAA7B,CACIC,cAAeuB,kCAAkCrO,cAAeL,KAAMO,MAD1E,gBAEI6M,SAFJ,cAGIC,WAAY,0BAA4B,IAAjBoF,WAAiB,KAAzB5J,OACL0I,WAAa5B,6BAA6B+C,aAAa,2BAA1C,8CAEftD,oBACAC,WAHe,MAIfC,2BAAyBqD,EAAAA,KAAAA,IAAAA,SAG7B,OACI,8BACIC,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIqM,cAAcC,EAAAA,YAAAA,GAFlB,iBAGIC,aAHJ,gBAIIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAJzB,yBAKIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KALzB,yBAMI0M,SANJ,eAOIC,gBAAiB,wCACjBC,MARJ,cASInU,SAAS,GAET,oBAAC8O,4BAA4BT,KAA7B,CACIC,gBADJ,EAEI8F,QAAS,gCV1EK,SAA7BC,2BAA8B,OAAD,2BAKtC,IAAMC,YAAqC,CACvCpF,cAAeoD,WAAAA,UAAqBzD,uBAAuBK,eACrDtF,OADS0I,cAETtD,sBAAAA,QAAAA,WACNG,YAAamD,WAAAA,UAAqBzD,uBAAuBM,aAAevF,OAA3D0I,YAJ0B,GAKvCpR,mBAAoBoR,WAAAA,UAAqBzD,uBAAuB3N,oBAC1D0I,OADc0I,mBALmB,GAQvCnR,2BAA4BmR,WAAAA,UAAqBzD,uBAAuB1N,6BAClEoT,EAAAA,aAAAA,IACI3K,OADoC,2BAEpCxJ,eAAAA,EAAAA,YACAE,aAAAA,EAAAA,oBAZ6B,GAevCkP,sBAAuB8C,WAAAA,UAAqBzD,uBAAAA,0BACtCjF,OADiB0I,sBAEjBtD,sBAAAA,QAAAA,WACNY,UAAW0C,WAAAA,UAAqBzD,uBAAAA,cAAoCjF,OAAzD0I,UAA4EtD,sBAAAA,QAAAA,WACvF/M,UAAWqQ,WAAAA,UAAqBzD,uBAAuB5M,WAAa2H,OAAzD0I,UAnB4B,GAoBvCvQ,IAAKuQ,WAAAA,UAAqBzD,uBAAuB9M,KAAO6H,OAAnD0I,IApBkC,GAqBvCtQ,QAASsQ,WAAAA,UAAqBzD,uBAAuB7M,SAAW4H,OAAvD0I,QArB8B,GAsBvCxP,wBAAyBwP,WAAAA,UAAqBzD,uBAAAA,4BACxCjF,OADmB0I,wBAEnBtD,sBAAAA,QAAAA,WACN3N,gBAAeiR,WAAAA,UAAqBzD,uBAAuBxN,gBAAiBuI,OAA7D0I,cACfrD,gBAAeqD,WAAAA,UAAqBzD,uBAAuBI,gBAAiBrF,OAA7D0I,eAGnB,OAAI,gBAAsBzC,eAA1B,cACI,gDAEI7N,QAAS6N,eAAAA,cAFb,QAGI5N,UAAW4N,eAAAA,cAHf,UAII9N,IAAK8N,eAAAA,cAA6B9N,MAI1C,YU+B6CsS,CAA2BzK,OAAQ0I,WAA/C,iBACTkC,0BAA0B,GAEzBrE,qBACG,gDACInO,QAASwR,WADb,QAEIzB,gBAAiByB,WAFrB,cAGInS,cAAemS,WAHnB,cAIIlB,WACAC,iBALJ,EAMIC,oBAAqB,6BAG5B3C,IAAAA,gBAAgCA,eAAhCA,eACG,+BAAOnG,UAAU,KACb,kEAAuBiC,OAAQkE,eAAezO,iBAGtD,+BACIyI,QACIyI,WAAAA,UAAqBzD,uBAAuBK,iBAFpD,oBAIIxF,UAAU,KAEV,oBAACoF,4BAA4B2F,gBAA7B,CACIxU,KAAM4O,uBAAuBK,cAC7BwF,YACI,4CACIpK,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,oDAKnBA,EAAAA,IAAAA,WAAUN,KATvB,yCAYIjI,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,iCAE5B,uEACIsC,UAAU4G,EAAAA,iBAAAA,GAAD,QAA4B+C,WAAAA,gBAA6BxE,sBAAAA,QAAAA,IAClE6B,kBAAmB2C,WAAWxR,WAItC,+BACI0H,UADJ,IAEIG,QAASyI,WAAAA,UAAqBzD,uBAAuB3N,qBAErD,mCACI,oBAAC4N,4BAA4B6F,WAA7B,CACI1U,KAAM4O,uBAAuB3N,mBAC7BhB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,oCAGIqN,QAASpD,oBAHb,SAII7C,SAAUyC,2BAA2B7J,KAAMiK,wBAInD,mEAbJ,MAeI,0CACItR,OAAO2H,EAAAA,IAAAA,WAAU,KADrB,8DAKI5H,KAAM4O,uBAAuB1N,2BAC7BpC,YAAayU,WAAAA,4BANjB,GAOIrT,eAAgBC,eAAAA,EAAAA,YAChBC,aAAcC,aAAAA,EAAAA,sBAGtB,+BACIoJ,UADJ,IAEIG,QAASyI,WAAAA,UAAqBzD,uBAAAA,6BAE9B,oBAACC,4BAA4B2F,gBAA7B,CACIxU,KAAM4O,uBAAAA,2BACN6F,YACI,4CACIpK,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,uEAKpB,+BACIjM,GADJ,gEAEIgO,OAAQ,CAAEqH,KAAMuC,WAAWxR,WAE/B,yBAVJ,MAWI,+BACIpG,GADJ,gEAEIgO,OAAQ,CAAEqH,KAAMuC,WAAWxR,YAIvC1C,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,kDAAmD,CACvE0J,KAAMuC,WAAWxR,aAI7B,+BACI0H,UADJ,IAEIG,QAASyI,WAAAA,UAAqBzD,uBAAAA,2BAE9B,oBAACC,4BAA4B2F,gBAA7B,CACIxU,KAAM4O,uBAAAA,yBACNvP,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,kDAAmD,CACvE0J,KAAMuC,WAAWxR,YAGzB,sDACI6H,QAAS2J,WAAAA,wBAAqCxE,sBAAAA,QAAAA,GAC9C6B,kBAAmB2C,WAAWxR,WAItC,+BAAO0H,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBzD,uBAAAA,eAC/C,oBAACC,4BAA4B2F,gBAA7B,CACIxU,KAAM4O,uBAAAA,aACNvP,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,0BAA2B,CAC/C0J,KAAMuC,WAAWxR,aAI7B,+BAAO6H,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KA1IvC,2B,owCCjEhB,6BACIvJ,MADW,sBAEXC,UAFW,6BAGXvC,WAAY,CAACoZ,WAAD,iDAQhB,IAAM5W,SAAyB,SAAzBA,SAA0B,MAA2B,IAAzBsC,QAAyB,KAAzBA,QAASqB,UAAgB,KAAhBA,UAUvC,OACI,iCAAW4K,KAVE,SAAXC,SAAYC,SACdA,QAAAA,OAAAA,oBAAAA,MAAAA,IAEI,CAAEoI,KAAM,IACR,CACIC,SAAU,OAMd,+CAAyBvU,OAAzB,QAA0CoB,WACtC,iDAHZ,SASS/C,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QADW,wBAEXqB,UAAAA,2BAGG,IAAMoT,oBAAsB/W,SAAAA,KAA5B,IACP+W,oBAAAA,KAA2B,CACvBzU,QAAS,mCAAF,mEAEHC,OAAQ,mCAAF,sCACCD,wBAAAA,WADD,IAEFY,cAAe,CACXC,eAAe,OAI3BQ,UAAW,CACPP,MAAO,mCAAF,qEAEDP,KAAM,OAKX,IAAMmU,OAAShX,SAAAA,KAAf,IACPgX,OAAAA,KAAc,CACV1U,QAAS,mCAAF,mEAEHC,OAAQ,mCAAF,sCACCD,wBAAAA,WADD,IAEFI,eAAgB,CACZC,UADY,SAEZC,MAAO,WAInBe,UAAW,CACPP,MAAO,mCAAF,sCACEO,0BAAAA,UADF,IAEDG,QAFC,UAGDC,UAHC,WAIDC,MAJC,IAKDnB,KAAM,CACF,CACIgB,IADJ,cAEII,YAFJ,aAGIf,cAAe,CACXW,IADW,cAEXI,YAFW,aAGXH,QAHW,aAIXC,UAAW,QAEfD,QATJ,UAUIC,UAVJ,YAWIC,MAAO,UAS3BpD,QAAAA,WAAAA,mCAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,ohBAAwhBqB,QAAtkBA,YACAmW,oBAAAA,WAAAA,mCAAAA,CAAmCpW,YAAa,CAAEpB,OAAQ,ohBAAwhBwX,oBAAllBA,YACAC,OAAAA,WAAAA,mCAAAA,CAAsBrW,YAAa,CAAEpB,OAAQ,ohBAAwhByX,OAArkBA,a,ouCCrHA,6B,giBAAYC,8BAAAA,6BAAAA,sBAAAA,wBAAAA,6BAAAA,iCAAAA,gCAAAA,6BAAAA,mBAAAA,qBAAAA,6BAAAA,qBAAAA,uBAAAA,6BAAAA,4BAAAA,8BAAAA,6BAAAA,oCAAAA,mCAAAA,6BAAAA,yBAAAA,2B,CAAAA,+BAAAA,6BAAAA,KAoBL,IAAMC,mCAAoChI,EAAAA,sBAAAA,0B,yFCV3CiI,SAAW,SAAXA,SAAY3U,KAAD,MACb,OAAIA,OAAS4U,aAAAA,EAAAA,iBACFzN,EAAAA,IAAAA,WAAUN,KAAjB,kEAGA7G,OAAS4U,aAAAA,EAAAA,oBACFzN,EAAAA,IAAAA,WAAUN,KAAjB,wEAGA7G,OAAS4U,aAAAA,EAAAA,YACFzN,EAAAA,IAAAA,WAAUN,KAAjB,gEAGGM,EAAAA,IAAAA,WAAUN,KAAjB,+DAGEgO,oBAAgD,SAAhDA,oBAAiD,MAA+D,IAA7DC,eAA6D,KAA7DA,eAAgBC,mBAA6C,KAA7CA,mBAAoBC,mBAAyB,KAAzBA,mBACnFnO,MAAOC,EAAAA,QAAAA,KAEb,WAAIgO,eAAAA,OACA,KAIA,0BAAI3Z,MAAO,CAAE4K,OAAF,EAAa3K,QAAb,EAAyB6Z,UAAW,SAC1CH,eAAA,KAAmB,oCAChB,8CACIlR,eADJ,sBAEID,SAAU,2BAAMoR,mBAAN,eACVtR,OAAQ,yBAAMuR,mBAAN,eACRxR,MAAM0R,EAAAA,IAAAA,sCAAqCC,aAJ/C,aAKI7X,MAAOqX,SAASQ,aAAD,KALnB,MAMIrR,qBANJ,sBAOID,mBAPJ,wBAQIG,qBACImR,IAAAA,aAAAA,QAAAA,QAAqCA,aAAAA,OAAsBP,aAAAA,EAAAA,gBAE/D9Y,IAAG,UAAKqZ,aAAL,aAAyBA,aAAAA,YAAzB,0BAOvB,8D,07BCpDA,wB,yIAAYC,yBAAAA,wBAAAA,KAAAA,OAAAA,wBAAAA,sBAAAA,qBAAAA,wBAAAA,KAAAA,OAAAA,wBAAAA,IAAAA,MAAAA,wBAAAA,IAAAA,MAAAA,wBAAAA,YAAAA,WAAAA,wBAAAA,cAAAA,gB,CAAAA,0BAAAA,wBAAAA,KAoBL,I,sBAAMC,mCAAoC3I,EAAAA,sBAAAA,0B,gkCCfjD,I,sBAAM4I,iCAAuD,yCACxDF,wBAAwBpV,UADgC,yCAExDoV,wBAAwBvS,IAFgC,0CAGxDuS,wBAAwBrS,IAHgC,0CAIxDqS,wBAAAA,YAAmC9G,sBAAAA,QAAAA,YAJqB,sCAKxD8G,wBAAAA,sBALwD,0CAMxDA,wBAAwBG,KANgC,0CAOxDH,wBAAwBI,cAPgC,IAA7D,uBAUaC,gBAAkB,SAAlBA,gBAAmBvM,QAC5B,OAAIA,OAAAA,OAAgB0L,aAAAA,EAAAA,mBACThV,aAAAA,EAAAA,+BAGPsJ,OAAAA,OAAgB0L,aAAAA,EAAAA,WACThV,aAAAA,EAAAA,iCAGJA,aAAAA,EAAAA,OA4BE8V,mCAAqC,SAArCA,mCAAsCP,cAC/C,oBAMIA,aAAAA,OAAsBP,aAAAA,EAAAA,gBACtB,oEAEIe,mBAAoBR,aAFxB,iBAGII,KAAMJ,aAHV,KAIItS,IAAKsS,aAAAA,YAJT,IAKIpS,IAAKoS,aAAAA,YAAAA,KALT,GAMIK,cAAeL,aANnB,QAOIS,UAAU3G,EAAAA,UAAAA,GAAmCkG,aAPjD,UAQInV,KAAMmV,aAAanV,OAI3B,oEAEI6C,IAAKsS,aAAAA,YAFT,IAGIpS,IAAKoS,aAAAA,YAAAA,KAHT,GAIIK,cAAeL,aAJnB,QAKIS,UAAU3G,EAAAA,UAAAA,GAAmCkG,aALjD,UAMInV,KAAMmV,aAAanV,OAxBnB,mDA4BK6V,kCAAoC,SAApCA,kCAAqCV,cAC9C,OAAIA,aAAAA,OAAsBP,aAAAA,EAAAA,gBACf,CACHkB,iBAAkBX,aADf,mBAEHI,KAAMJ,aAFH,KAGHS,UAAU/G,EAAAA,UAAAA,GAAmCsG,aAH1C,UAIHvS,YAAa,CACTC,IAAKsS,aADI,IAETpS,IAAKoS,aAAapS,KAEtB/C,KAAMmV,aARH,KASHY,QAAS,IAIV,CACHH,UAAU/G,EAAAA,UAAAA,GAAmCsG,aAD1C,UAEHvS,YAAa,CACTC,IAAKsS,aADI,IAETpS,IAAKoS,aAAapS,KAEtB/C,KAAMmV,aANH,KAOHY,QAASZ,aAAAA,eAA8B,K,0PCtG/C,IAAMa,+BAA8F,2EAC/FZ,wBAAwBpV,KAAO,CAC5BuP,WAAY,gCACZD,WAAY,8BAAGtP,KAAH,iBAAc2O,EAAAA,IAAAA,UAAd,SAHgF,wEAK/FyG,wBAAwBG,KAAO,CAC5BhG,WAAY,+CAAuBqF,aAAAA,EAAAA,iBACnCtF,WAAY,+BAAGiG,KAAH,kBAAc5G,EAAAA,IAAAA,UAAd,OACZkB,iBAAkB,qDAAuB+E,aAAAA,EAAAA,mBARmD,wEAU/FQ,wBAAAA,sBAA6C,CAC1C7F,WAAY,+CAAuBqF,aAAAA,EAAAA,iBACnCtF,WAAY,+BAAGqG,mBAAH,gCAA4BhH,EAAAA,IAAAA,UAA5B,qBACZkB,iBAAkB,qCAAG0F,KAAH,kBAAc5G,EAAAA,IAAAA,UAAd,SAb0E,wEAe/FyG,wBAAwBvS,IAAM,CAC3B0M,WAAY,gCACZD,WAAY,+BAAGzM,IAAH,iBAAa8L,EAAAA,IAAAA,UAAb,MACZkB,iBAAkB,qCAAG7P,KAAH,WAAS2V,mBAAT,yBAA6BJ,KAA7B,kBACbvV,OAAS4U,aAAAA,EAAAA,kBAAoCjG,EAAAA,IAAAA,UAA7C3O,sBAA6E2O,EAAAA,IAAAA,UAA9E,OACC3O,OAAS4U,aAAAA,EAAAA,kBAAoCjG,EAAAA,IAAAA,UAFhC,SAlB0E,wEAsB/FyG,wBAAAA,YAAmC,CAChC7F,WAAY,gCACZD,WAAY,qDAA+BhB,sBAAAA,QAAAA,YAC3CuB,iBAAkB,sCAAGhN,IAAH,kBAAa8L,EAAAA,IAAAA,UAAb,QAzB0E,wEA2B/FyG,wBAAwBrS,IAAM,CAC3BwM,WAAY,qDAA+BjB,sBAAAA,QAAAA,IAC3CgB,WAAY,gCAAGvM,IAAH,kBAAa4L,EAAAA,IAAAA,UAAb,MACZkB,iBAAkB,2DAA+BvB,sBAAAA,QAAAA,MA9B2C,wEAgC/F8G,wBAAwBI,cAAgB,CACrCjG,WAAY,iDAAuBqF,aAAAA,EAAAA,iBACnCtF,WAAY,gCACZO,iBAAkB,sCAAG+F,SAAH,gBAAa7S,IAAb,kBAAuB6S,WAAatH,sBAAAA,QAAAA,KAAgBsH,WAAatH,sBAAAA,QAAAA,KAAcK,EAAAA,IAAAA,UAA/E,QAnC1B,uBA2CA,gDAJ2CsB,EAAAA,+BAAAA,IAA3C,+B,kRCxCagG,wBAA0B,SAA1BA,wBAA2BpP,KAAD,YAAkC,cACrE,OAAK8H,EAAAA,IAAAA,UAAL,MAIKgC,EAAAA,mBAAAA,iBAAL,MAIIuF,EAAAA,UAAAA,IAAJ,MACW/O,EAAAA,IAAAA,WAAUN,KAAjB,8CAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,MACWoE,EAAAA,IAAAA,WAAUN,KAAjB,gDADJ,GAPWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CAkBKuP,wBAA0B,SAA1BA,wBAA2BvP,KAAD,YAAkC,cACrE,OAAK8H,EAAAA,IAAAA,UAAL,MAIKgC,EAAAA,mBAAAA,iBAAL,MAIIuF,EAAAA,UAAAA,IAAJ,MACW/O,EAAAA,IAAAA,WAAUN,KAAjB,8CAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,MACWoE,EAAAA,IAAAA,WAAUN,KAAjB,kDADJ,GAPWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0C,wFCUFwP,oBAAgD,SAAhDA,oBAAiD,MAOjD,IANF1P,OAME,KANFA,OACAO,aAKE,KALFA,aACAG,eAIE,KAJFA,eACAiP,qBAGE,KAHFA,qBACAC,gBAEE,KAFFA,gBACAC,iBACE,KADFA,iBAEM3P,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,IAAAA,UAAZ,uBAWMyP,qBAAuB,SAAvBA,qBAAwBvN,QAC1B,OAAIA,OAAAA,OAAgB0L,aAAAA,EAAAA,mBAChB,2DAGA1L,OAAAA,OAAgB0L,aAAAA,EAAAA,WAChB,8DAGJ,8DAGJ,OACI,sDACIjO,OACAO,aACAG,eACAD,aAJJ,EAKIsP,2BALJ,EAMIzP,UAAW2B,IAAIG,OAEf,oBAACsM,kCAAkC9H,cAAnC,CACIC,cAAekI,mCADnB,sBAEIjI,SAhCU,SAAhBP,cAAiBhE,QACnB,qBAGIsN,iBAAiBX,kCAAjBW,SAFAD,gBAAgBV,kCAAhBU,SAIJlP,kBA2BQqG,WAAY,2BAA4B,IAAjBoF,WAAiB,MAAzB5J,OACL0I,WAAa+E,yCAAAA,aAAnB,YAEA,OACI,oBAACtB,kCAAkC1H,KAAnC,CACIC,gBADJ,EAEI8F,QAAS,gCHxDI,SAA5BkD,0BAA6B,OAAD,YAIrC,MAAO,CACH5W,KAAM4R,WAAAA,UAAqBwD,wBAAwBpV,MAAQkJ,OAArD0I,KAAmE0D,gCADtE,KAEHE,cAAe5D,WAAAA,UAAqBwD,wBAAwBI,gBACtD3B,EAAAA,aAAAA,IACI3K,OADoC,cAEpCxJ,eAAAA,EAAAA,cACA+V,gBAJK7D,SAMT0D,gCARH,cASHzS,IAAK+O,WAAAA,UAAqBwD,wBAAwBvS,KAAOqG,OAApD0I,IAAiE0D,gCATnE,IAUHvS,IAAK6O,WAAAA,UAAqBwD,wBAAwBrS,KAAOmG,OAApD0I,IAAiE0D,gCAVnE,IAWHM,SAAUhE,WAAAA,UAAqBwD,wBAAAA,aACzBlM,OADI0I,SAEJ0D,gCAbH,SAcHK,mBAAoB/D,WAAAA,UAAqBwD,wBAAAA,uBACnClM,OADc0I,mBAEd0D,gCAhBH,mBAiBHC,KAAM3D,WAAAA,UAAqBwD,wBAAwBG,MAAQrM,OAArD0I,KAAmE0D,gCAAgCC,MGmChEqB,CAA0B1N,OAAtC,cAET,+BAAOF,UAAU,KACb,4DAAa/B,UAAW2B,IAAAA,QAAAA,WACpB,+BAAkB1N,GAAG,qDAG7B,+BAAO8N,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAwBpV,OACvE,oBAACqV,kCAAkCwB,gBAAnC,CACItX,KAAM6V,wBAAwBpV,KAC9B8W,OAAQ,CACJ,CAAEtX,MAAF,kBAA4BzD,MAAO6Y,aAAAA,EAAAA,iBACnC,CAAEpV,MAAF,0BAAoCzD,MAAO6Y,aAAAA,EAAAA,cAC3C,CAAEpV,MAAF,gBAA0BzD,MAAO6Y,aAAAA,EAAAA,YACjC,CAAEpV,MAAF,sBAAgCzD,MAAO6Y,aAAAA,EAAAA,wBAInD,+BAAO5L,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAwBG,OACvE,oBAACF,kCAAkCnD,cAAnC,CACI3S,KAAM6V,wBAAwBG,KAC9B/V,MAAO,mCAGf,+BACIwJ,UADJ,IAEIG,QAASyI,WAAAA,UAAqBwD,wBAAAA,wBAE9B,oBAACC,kCAAkCtD,MAAnC,CACIxS,KAAM6V,wBAAAA,sBACN5V,MAAO,oCAGf,+BAAOwJ,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAwBvS,MACvE,oBAACwS,kCAAkCpB,WAAnC,CACI1U,KAAM6V,wBAAwBvS,IAC9BrD,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,OAGIkQ,YAHJ,aAIIC,mBAJJ,EAKIC,kBALJ,EAMIhJ,SAAUgI,wBAAwBpP,KAAMiM,WAN5C,KAOIoE,QAASpU,mBAAAA,GAAAA,YAGjB,+BAAOkG,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAAA,cAC/C,oBAACC,kCAAkCtB,gBAAnC,CACIxU,KAAM6V,wBAAAA,YACNxW,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,eAGhC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAwBrS,MACvE,oBAACsS,kCAAkCpB,WAAnC,CACI1U,KAAM6V,wBAAwBrS,IAC9BvD,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,OAGIkQ,YAHJ,aAIIC,mBAJJ,EAKIC,kBALJ,EAMIhJ,SAAUmI,wBAAwBvP,KAAMiM,WAN5C,KAOIoE,QAASpU,mBAAAA,GAAAA,YAGjB,+BAAOkG,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAwBI,gBACvE,6CAAepF,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BAAkBpV,GAAIub,qBAAqB3D,gBAGnD,+BAAO9J,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBwD,wBAAwBI,gBACvE,0CACIjW,KAAM6V,wBAAwBI,cAC9BhW,MAFJ,yBAGInB,YAAayU,WAHjB,cAIIrT,eAAgBC,eAAAA,EAAAA,cAChBC,aAAc8V,gBAAgB3C,eAGtC,+BAAO3J,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KA/EnC,2BAyFpB,oD,48ECvJA,IAAMsQ,eAA2C,SAA3CA,eAA4C,MAK5C,IAJFC,0BAIE,KAJFA,0BACAC,6BAGE,KAHFA,6BACAzF,WAEE,KAFFA,WACAkB,WACE,KADFA,WAEMjM,MAAOC,EAAAA,QAAAA,KACb,2BAAsCgE,EAAAA,MAAAA,WAAtC,MAAOwM,YAAP,cAAoBC,eAApB,cACA,2BAAwDzM,EAAAA,MAAAA,YAAxD,GAAOwL,qBAAP,cAA6BkB,wBAA7B,cAiCA,OACI,wCACI,+BAAOxO,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6C,6BAA6BgD,qBAC5E,oBAAC/C,kCAAkCX,gBAAnC,CACIxU,KAAMkV,6BAA6BgD,mBACnC7Y,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,uCAG/BiM,WAAAA,qBAAkCxE,sBAAAA,QAAAA,KAC/B,2BAAKnT,MAAO,CAAEuc,gBAAF,UAA8BC,aAA9B,OAAoDvc,QAAS,SACrE,+CACIuL,OADJ,YAEIO,cAAcC,EAAAA,IAAAA,WAAUN,KAF5B,wDAGIQ,eAAgB,iCAAMkQ,gBAAN,IAChBjB,qBACAC,gBA1CI,SAAlBA,gBAAmBpB,cACrB,IAAMyC,iCAAmCR,0BAAAA,OAAzC,cAEAC,6BAAAA,mCAwCgBb,iBA7BK,SAAnBA,iBAAoBrB,cACtB,IAAM0C,iCAAmCT,0BAAA,QAC7B,yBAAaU,UAAb,wBAD6B,OAAzC,cAIAT,6BAAAA,qCA0BY,+BAAOrO,UAAP,IAAqBG,QAASiO,0BAAAA,OAAmC,GAC7D,yDACItC,eADJ,0BAEIC,mBA1CG,SAArBA,mBAAsBI,cACxB,IAAM0C,iCAAmCT,0BAAA,QACrC,yBAAaU,UAAb,gBAGJT,6BAAAA,mCAsCoBrC,mBA3BG,SAArBA,mBAAsBG,cACxBqC,wBAAAA,cACAD,gBAAAA,OA4BY,oDAAOQ,SAAP,SAAyB7T,QAxDjB,SAAlB8T,kBACFT,gBAAAA,KAwDgB,+BAAkBrc,GAAG,2CAQ7C,oD,snCCrFM+c,0BAA4D,SAA5DA,0BAA6D,MAAuB,IAArB/M,eAAqB,KAArBA,eAC3DgN,uBAAoBhN,IAAAA,gBAAgCA,eAAAA,OAA1D,EAEA,OACI,wCACI,4DADJ,uBAEI,4CAAoBtB,UAAU,kCAC1B,gEAHR,+KAQI,6CAAuBsO,oBACvB,yCAAmBA,kBAAsChN,mBAKrE,qF,svBCMA,sBAzBkD,SAA5CiN,gBAA6C,MAAuD,IAArDC,mBAAqD,KAArDA,mBAAoBC,aAAiC,KAAjCA,aAAcC,aAAmB,KAAnBA,aACnF,WAAIF,mBAAAA,OACA,KAIA,0BAAIjd,MAAO,CAAE4K,OAAF,EAAa3K,QAAb,EAAyB6Z,UAAW,SAC1CmD,mBAAA,KAAuB,8BACpB,8CACIxU,eADJ,eAEID,SAAU,2BAAM0U,aAAN,SACV5U,OAAQ,yBAAM6U,aAAN,SACR9U,KAAI,WAAKqN,EAAAA,IAAAA,YAAW0H,OAAAA,YAAhB,mBACAA,OAAAA,YAAAA,KAAyB1H,EAAAA,IAAAA,YAAW0H,OAAAA,YAApCA,KALR,YAOIjb,MAAOib,OAPX,eAQIzU,qBARJ,eASID,mBATJ,iBAUI/H,IAAG,UAAKyc,OAAL,qC,u6BCCvB,gCAvBkC,SAA5BC,4BACF,IAAM3R,MAAOC,EAAAA,QAAAA,KAEb,OACI,4CACI8C,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,mFAKpB,2BAAKhM,MAAO,CAAEuc,gBAAF,UAA8Btc,QAAS,WAC/C,gEACI,kCACIsD,MADJ,sFAEIX,IAAKgM,MAAAA,EAAAA,2BACLvL,YAAY2I,EAAAA,IAAAA,WAAUN,KAAM,oBCnBpD,8B,SAAY4R,0BAAAA,yBAAAA,MAAAA,QAAAA,yBAAAA,kBAAAA,iBAAAA,yBAAAA,iBAAAA,mBAAAA,yBAAAA,MAAAA,QAAAA,yBAAAA,KAAAA,OAAAA,yBAAAA,IAAAA,MAAAA,yBAAAA,IAAAA,MAAAA,yBAAAA,YAAAA,WAAAA,yBAAAA,eAAAA,iBAAAA,yBAAAA,mBAAAA,kBAAAA,yBAAAA,0DAAAA,yDAAAA,yBAAAA,oDAAAA,mDAAAA,yBAAAA,eAAAA,iBAAAA,yBAAAA,oBAAAA,sBAAAA,yBAAAA,kBAAAA,oBAAAA,yBAAAA,qBAAAA,oBAAAA,yBAAAA,sBAAAA,qBAAAA,yBAAAA,yBAAAA,wBAAAA,yBAAAA,qCAAAA,oC,CAAAA,2BAAAA,yBAAAA,KA4CL,I,sBAAMC,+BAAgChM,EAAAA,sBAAAA,0B,qjCCtCtC,I,sBAAMiM,8BAAqD,iEAC7DF,yBAAyBG,MADoC,kEAE7DH,yBAAAA,kBAF6D,kEAG7DA,yBAAyBI,iBAAmBvK,sBAAAA,QAAAA,YAHiB,8DAI7DmK,yBAAyBK,MAJoC,kEAK7DL,yBAAyBlD,KALoC,kEAM7DkD,yBAAyB1V,IANoC,kEAO7D0V,yBAAyB5V,IAPoC,kEAQ7D4V,yBAAAA,YAAoCnK,sBAAAA,QAAAA,YARyB,8DAS7DmK,yBAAAA,mBAT6D,kEAU7DA,yBAAAA,oDAA4EnK,sBAAAA,QAAAA,YAVf,8DAW7DmK,yBAAAA,0DAAkFnK,sBAAAA,QAAAA,YAXrB,8DAY7DmK,yBAAyBM,eAZoC,kEAa7DN,yBAAyBO,eAboC,kEAc7DP,yBAAyBQ,oBAdoC,kEAe7DR,yBAAyBS,kBAfoC,kEAgB7DT,yBAAAA,qBAA6CnK,sBAAAA,QAAAA,YAhBgB,8DAiB7DmK,yBAAAA,sBAjB6D,kEAkB7DA,yBAAAA,yBAlB6D,kEAmB7DA,yBAAAA,qCAA6DnK,sBAAAA,QAAAA,YAnB3D,uBAmFM6K,gCAAkC,SAAlCA,gCAAmCZ,QAC5C,cAMA,iHAEIK,MAAOL,OAFX,aAGIa,eAAgBb,OAHpB,eAIIM,kBAAkB5J,EAAAA,UAAAA,GAAmCsJ,OAJzD,kBAKIhD,KAAMgD,OAAAA,iBALV,GAMI1V,IAAK0V,OAAAA,YANT,IAOIxV,IAAKwV,OAAAA,YAAAA,KAPT,GAQIO,MAAOP,OAAAA,qBARX,GASI3C,UAAU3G,EAAAA,UAAAA,GAAmCsJ,OATjD,UAUIc,gBAAiBd,OAAAA,gBAVrB,GAWIe,kDAAkDrK,EAAAA,UAAAA,GAC9CsJ,OAZR,kDAcIgB,wDAAwDtK,EAAAA,UAAAA,GACpDsJ,OAfR,wDAiBIQ,eAAgBR,OAAAA,eAjBpB,GAkBIS,eAAgBT,OAAAA,mCAA4CA,OAAAA,mCAA5CA,KAlBpB,GAmBIU,oBAAqBV,OAAAA,mCACfA,OAAAA,mCAAAA,2BADeA,WAnBzB,GAsBIW,kBAAmBX,OAAAA,mCACbA,OAAAA,mCADaA,WAtBvB,GAyBIiB,mBAAmBvK,EAAAA,UAAAA,GAAmCsJ,OAzB1D,mBA0BIkB,mBAAoBlB,OAAAA,eAAwBA,OAAAA,eAAxBA,KA1BxB,GA2BImB,sBAAuBnB,OAAAA,eAAwBA,OAAAA,eAAxBA,cA3B3B,GA4BIoB,mCAAmC1K,EAAAA,UAAAA,GAC/BsJ,OAAAA,eAAwBA,OAAAA,eAAxBA,2BADiE,KAjCrE,wEAuCKqB,oCAAsC,SAAtCA,oCAAuC1Q,QAChD,IAAI2Q,wCAAJ,EACIC,oBAAJ,EAkBA,OAhBI5Q,OAAAA,mDAA4DoF,sBAAAA,QAAAA,MAC5DuL,mCAAqC,CACjCjJ,KAAM1H,OAD2B,eAEjC6Q,WAAY7Q,OAFqB,kBAGjC8Q,2BAA4BC,SAAS/Q,OAAD,uBAIxCA,OAAAA,oBAA6BoF,sBAAAA,QAAAA,MAC7BwL,eAAiB,CACbvJ,KAAMrH,OADO,mBAEbgR,cAAehR,OAFF,sBAGbiR,uBAAuBtL,EAAAA,UAAAA,GAAmC3F,OAAD,qCAI1D,CACHkR,aAAclR,OADX,MAEHkQ,eAAgBlQ,OAFb,eAGH2P,kBAAkBhK,EAAAA,UAAAA,GAAmC3F,OAHlD,kBAIHmR,qBAAqB1L,EAAAA,IAAAA,UAASzF,OAATyF,OAAyBzF,OAAzByF,WAJlB,EAKH2L,iBAAiB3L,EAAAA,IAAAA,UAASzF,OAATyF,MAAwBzF,OAAxByF,UALd,EAMH/L,YAAa,CACTC,IAAKqG,OADI,IAETnG,IAAKmG,OAAOnG,KAEhB6S,UAAU/G,EAAAA,UAAAA,GAAmC3F,OAV1C,UAWHqR,gBAAgB5L,EAAAA,IAAAA,UAASzF,OAATyF,iBAAmCzF,OAAnCyF,qBAXb,EAYH2K,kDAAkDzK,EAAAA,UAAAA,GAC9C3F,OAbD,kDAeHqQ,wDAAwD1K,EAAAA,UAAAA,GACpD3F,OAhBD,wDAkBHsR,eAAe7L,EAAAA,IAAAA,UAASzF,OAATyF,gBAAkCzF,OAAlCyF,oBAlBZ,EAmBHkL,mCACAL,mBAAmB3K,EAAAA,UAAAA,GAAmC3F,OApBnD,mBAqBH4Q,iBAIKW,kCAAoC,SAApCA,kCAAqCD,eAC9C,sBAIO1X,mBAAAA,CAAAA,eAAAA,QAAAA,OAAAA,QAAP,e,8NChLJ,IAAM4X,2BAA4F,uEAC7FjC,yBAAyBG,MAAQ,CAC9BrJ,WAAY,gCACZD,WAAY,4CAAesJ,OAAf,KAH8E,oEAK7FH,yBAAAA,kBAA0C,CACvClJ,WAAY,gCACZD,WAAY,+BAAG8J,eAAH,4BAAwBzK,EAAAA,IAAAA,UAAxB,iBACZkB,iBAAkB,oDAAe+I,OAAf,KARwE,oEAU7FH,yBAAyBI,iBAAmB,CACzCtJ,WAAY,gCACZD,WAAY,2DAA+ChB,sBAAAA,QAAAA,YAC3DuB,iBAAkB,qCAAGuJ,eAAH,4BAAwBzK,EAAAA,IAAAA,UAAxB,mBAbwE,oEAe7F8J,yBAAyBK,MAAQ,CAC9BvJ,WAAY,2DAA+CjB,sBAAAA,QAAAA,KAC3DgB,WAAY,+BAAGwJ,MAAH,mBAAenK,EAAAA,IAAAA,UAAf,QACZkB,iBAAkB,iEAA+CvB,sBAAAA,QAAAA,OAlByB,oEAoB7FmK,yBAAyBlD,KAAO,CAC7BhG,WAAY,2DAA+CjB,sBAAAA,QAAAA,IAC3DgB,WAAY,gCAAGiG,KAAH,mBAAc5G,EAAAA,IAAAA,UAAd,OACZkB,iBAAkB,mEAA+CvB,sBAAAA,QAAAA,MAvByB,oEAyB7FmK,yBAAyB5V,IAAM,CAC5B0M,WAAY,gCACZD,WAAY,gCAAGzM,IAAH,kBAAa8L,EAAAA,IAAAA,UAAb,MACZkB,iBAAkB,sCAAGiJ,MAAH,aAAUvD,KAAV,mBAAqB5G,EAAAA,IAAAA,UAAAA,SAAmBA,EAAAA,IAAAA,UAAxC,SA5BwE,oEA8B7F8J,yBAAAA,YAAoC,CACjClJ,WAAY,gCACZD,WAAY,qDAA+BhB,sBAAAA,QAAAA,YAC3CuB,iBAAkB,sCAAGhN,IAAH,kBAAa8L,EAAAA,IAAAA,UAAb,QAjCwE,oEAmC7F8J,yBAAyB1V,IAAM,CAC5BwM,WAAY,qDAA+BjB,sBAAAA,QAAAA,IAC3CgB,WAAY,gCAAGvM,IAAH,kBAAa4L,EAAAA,IAAAA,UAAb,MACZkB,iBAAkB,2DAA+BvB,sBAAAA,QAAAA,MAtCyC,oEAwC7FmK,yBAAAA,mBAA2C,CACxClJ,WAAY,gCAAG1M,IAAH,kBAAa4X,mCAAkCE,EAAAA,UAAAA,IAA/C,OACZrL,WAAY,gCAAG+J,gBAAH,8BAAyB1K,EAAAA,IAAAA,UAAzB,kBACZkB,iBAAkB,sCAAG+F,SAAH,gBAAa7S,IAAb,kBAAuB6S,WAAatH,sBAAAA,QAAAA,MAAeK,EAAAA,IAAAA,UAAnD,QA3CwE,oEA6C7F8J,yBAAAA,0DAAkF,CAC/ElJ,WAAY,gCAAG1M,IAAH,kBAAa4X,mCAAkCE,EAAAA,UAAAA,IAA/C,OACZrL,WAAY,mGACmDhB,sBAAAA,QAAAA,YAC/DuB,iBAAkB,sCAAGwJ,gBAAH,8BAAyB1K,EAAAA,IAAAA,UAAzB,oBAjDwE,oEAmD7F8J,yBAAyBM,eAAiB,CACvCxJ,WAAY,gCAAG1M,IAAH,kBAAa4X,mCAAkCE,EAAAA,UAAAA,IAA/C,OACZrL,WAAY,gCAAGyJ,eAAH,6BAAwBpK,EAAAA,IAAAA,UAAxB,iBACZkB,iBAAkB,yGAC6CvB,sBAAAA,QAAAA,OAvD2B,oEAyD7FmK,yBAAAA,oDAA4E,CACzElJ,WAAY,gCAAG1M,IAAH,kBAAc4X,mCAAkCE,EAAAA,UAAAA,IAAhD,OACZrL,WAAY,6FAC6ChB,sBAAAA,QAAAA,YACzDuB,iBAAkB,sCAAG+F,SAAH,gBAAa7S,IAAb,kBAAuB6S,WAAatH,sBAAAA,QAAAA,MAAeK,EAAAA,IAAAA,UAAnD,QA7DwE,oEA+D7F8J,yBAAyBO,eAAiB,CACvCzJ,WAAY,6FAC6CjB,sBAAAA,QAAAA,KACzDgB,WAAY,gCAAG0J,eAAH,6BAAwBrK,EAAAA,IAAAA,UAAxB,iBACZkB,iBAAkB,mGACuCvB,sBAAAA,QAAAA,OApEiC,oEAsE7FmK,yBAAyBQ,oBAAsB,CAC5C1J,WAAY,6FAC6CjB,sBAAAA,QAAAA,KACzDgB,WAAY,gCAAG2J,oBAAH,kCAA6BtK,EAAAA,IAAAA,UAA7B,sBACZkB,iBAAkB,sCAAGmJ,eAAH,6BAAwBrK,EAAAA,IAAAA,UAAxB,mBA1EwE,oEA4E7F8J,yBAAyBS,kBAAoB,CAC1C3J,WAAY,6FAC6CjB,sBAAAA,QAAAA,KACzDgB,WAAY,gCAAG4J,kBAAH,gCAA2BvK,EAAAA,IAAAA,UAA3B,oBACZkB,iBAAkB,sCAAGoJ,oBAAH,kCAA6BtK,EAAAA,IAAAA,UAA7B,wBAhFwE,oEAkF7F8J,yBAAAA,qBAA6C,CAC1ClJ,WAAY,gCACZD,WAAY,8DAAiDhB,sBAAAA,QAAAA,YAC7DuB,iBAAkB,sCACdkJ,eADc,sBAEdG,kBAFc,yBAGdK,uDAHc,8DAIdD,iDAJc,+DAMd3K,EAAAA,IAAAA,UAAAA,kBACAA,EAAAA,IAAAA,UADAA,oBAEA4K,yDAA2DjL,sBAAAA,QAAAA,IAC3DgL,mDAAqDhL,sBAAAA,QAAAA,MA9FiC,oEAgG7FmK,yBAAAA,sBAA8C,CAC3ClJ,WAAY,8DAAiDjB,sBAAAA,QAAAA,KAC7DgB,WAAY,gCAAGmK,mBAAH,iCAA4B9K,EAAAA,IAAAA,UAA5B,qBACZkB,iBAAkB,oEAAiDvB,sBAAAA,QAAAA,OAnGuB,oEAqG7FmK,yBAAAA,yBAAiD,CAC9ClJ,WAAY,8DAAiDjB,sBAAAA,QAAAA,KAC7DgB,WAAY,gCAAGoK,sBAAH,oCAA+B/K,EAAAA,IAAAA,UAA/B,wBACZkB,iBAAkB,sCAAG4J,mBAAH,iCAA4B9K,EAAAA,IAAAA,UAA5B,uBAxGwE,oEA0G7F8J,yBAAAA,qCAA6D,CAC1DlJ,WAAY,8DAAiDjB,sBAAAA,QAAAA,KAC7DgB,WAAY,8EAAiFhB,sBAAAA,QAAAA,YAC7FuB,iBAAkB,sCAAG6J,sBAAH,oCAA+B/K,EAAAA,IAAAA,UAA/B,0BA7G1B,uBAqHA,sCAJuCsB,EAAAA,+BAAAA,IAAvC,2B,2CChHa2K,sBACT,SADSA,sBACR/T,KAAD,YACA,cACI,OAAK8H,EAAAA,IAAAA,UAAL,MAIKgC,EAAAA,mBAAAA,iBAAL,MAIIuF,EAAAA,UAAAA,IAAJ,MACW/O,EAAAA,IAAAA,WAAUN,KAAjB,8CAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,MACWoE,EAAAA,IAAAA,WAAUN,KAAjB,gDADJ,GAPWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CAkBCgU,sBACT,SADSA,sBACRhU,KAAD,YACA,cACI,OAAK8H,EAAAA,IAAAA,UAAL,MAIKgC,EAAAA,mBAAAA,iBAAL,MAIIuF,EAAAA,UAAAA,IAAJ,MACW/O,EAAAA,IAAAA,WAAUN,KAAjB,8CAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,MACWoE,EAAAA,IAAAA,WAAUN,KAAjB,gDADJ,GAPWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CAkBCiU,wBACT,SADSA,wBACRjU,MAAD,OACA,gBACI,KAAKkU,EAAAA,YAAAA,IAAL,OACI,OAAO5T,EAAAA,IAAAA,WAAUN,KAAjB,6DAMCmU,uCAAyC,SAAzCA,uCAA0CnU,MAAD,OAAqB,qBACvE,OAAIkT,WAAAA,OAAJ,IACW5S,EAAAA,IAAAA,WAAUN,KAAjB,oEAGAkT,WAAAA,OAAJ,KACW5S,EAAAA,IAAAA,WAAUN,KAAjB,yEADJ,IAKSoU,wCAA0C,SAA1CA,wCAA2CpU,MAAD,OAAqB,eACxE,OAAK8H,EAAAA,IAAAA,UAAL,OAIKgC,EAAAA,mBAAAA,iBAAL,OAIIuF,EAAAA,UAAAA,IAAJ,OACW/O,EAAAA,IAAAA,WAAUN,KAAjB,kDADJ,GAHWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CAcKqU,qCAAuC,SAAvCA,qCAAwCrU,MAAD,OAAqB,eACrE,OAAK8H,EAAAA,IAAAA,UAAL,OAIKgC,EAAAA,mBAAAA,iBAAL,OAIIuF,EAAAA,UAAAA,IAAJ,OACW/O,EAAAA,IAAAA,WAAUN,KAAjB,kDADJ,GAHWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CAcKsU,eAAiB,SAAjBA,eAAkBtU,KAAD,iBAAuC,gBACjE,IAAMuU,aAAcC,EAAAA,sBAAAA,+BAApB,OAEA,IAAKD,aAAeE,KAAAA,MAAAA,eAApB,YACI,OAAOnU,EAAAA,IAAAA,WAAUN,KAAjB,YCjGF0U,mBAA+C,SAA/CA,mBAAgD,MAAmB,IAAjB3J,WAAiB,KAAjBA,WAC9C/K,MAAOC,EAAAA,QAAAA,KAEb,OACI,wCACI,+BAAOkC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAyBK,QACxE,oBAACJ,8BAA8B8C,YAA/B,CACIjc,KAAMkZ,yBAAyBK,MAC/BtZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,6CAGIoH,SAAU6M,wBAAwBjU,SAG1C,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAyBlD,OACxE,oBAACmD,8BAA8BxG,cAA/B,CACI3S,KAAMkZ,yBAAyBlD,KAC/B/V,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,4DAO3C,uD,mtBC+BA,qBAlDiD,SAA3C4U,eAA4C,MAAmB,IAAjB7J,WAAiB,KAAjBA,WAC1C/K,MAAOC,EAAAA,QAAAA,KAEb,OACI,wCACI,+BAAOkC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAAA,uBAC/C,oBAACC,8BAA8B3E,gBAA/B,CACIxU,KAAMkZ,yBAAAA,qBACN7Z,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,4DAGhC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAAA,wBAC/C,oBAACC,8BAA8B3G,MAA/B,CACIxS,KAAMkZ,yBAAAA,sBACNjZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,6DAG/B,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAAA,2BAC/C,oBAACC,8BAA8B8C,YAA/B,CACIjc,KAAMkZ,yBAAAA,yBACNjZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,yDAGIoH,SAAUkN,eAAe,KAAD,oFAMhC,+BACInS,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAAA,uCAE9B,oBAACC,8BAA8B3E,gBAA/B,CACIxU,KAAMkZ,yBAAAA,qCACN7Z,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,4EAGhC,+BACImC,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAAA,uCAE9B,6CAAerI,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,gEACI,+BAAkBpV,GAAG,oE,mqBC4Q7C,sBA3RkD,SAA5CwgB,gBAA6C,MAO7C,IANF/U,OAME,KANFA,OACArJ,MAKE,KALFA,MACA+J,eAIE,KAJFA,eACAsU,eAGE,KAHFA,eACAC,UAEE,KAFFA,UACAC,WACE,KADFA,WAEMhV,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,IAAAA,UAAZ,mBAWA,OACI,sDACIL,OACAO,aAFJ,MAGIG,eACAD,aAJJ,EAKIsP,2BALJ,EAMIzP,UAAW2B,IAAIG,OAEf,oBAAC2P,8BAA8BnL,cAA/B,CACIC,cAAe2L,gCADnB,gBAEI1L,SAAU,iCApBA,SAAhBP,cAAiBhE,QACnB,eAGI2S,WAAWjC,oCAAXiC,SAFAD,UAAUhC,oCAAVgC,SAIJvU,iBAcgE6F,CAA9C,SACVQ,WAAY,2BAA4B,IAAjBoF,WAAiB,MAAzB5J,OACL0I,WAAakK,+BAAAA,aAAnB,YAEA,OACI,oBAACpD,8BAA8B/K,KAA/B,CACIC,gBADJ,EAEI8F,QAAS,gCLhDA,SAAxBqI,sBAAyB,OAAD,YAIjC,MAAO,CACHnD,MAAOhH,WAAAA,UAAqB6G,yBAAyBG,OAAS1P,OAAvD0I,MADJ,GAEHwH,eAAgBxH,WAAAA,UAAqB6G,yBAAAA,mBAC/BvP,OADU0I,eAEV+G,6BAJH,eAKHE,iBAAkBjH,WAAAA,UAAqB6G,yBAAyBI,kBAC1D3P,OADY0I,iBAEZ+G,6BAPH,iBAQHG,MAAOlH,WAAAA,UAAqB6G,yBAAyBK,OAAS5P,OAAvD0I,MAAsE+G,6BAR1E,MASHpD,KAAM3D,WAAAA,UAAqB6G,yBAAyBlD,MAAQrM,OAAtD0I,KAAoE+G,6BATvE,KAUH5V,IAAK6O,WAAAA,UAAqB6G,yBAAyB1V,KAAOmG,OAArD0I,IAAkE+G,6BAVpE,IAWH9V,IAAK+O,WAAAA,UAAqB6G,yBAAyB5V,KAAOqG,OAArD0I,IAAkE+G,6BAXpE,IAYH/C,SAAUhE,WAAAA,UAAqB6G,yBAAAA,aACzBvP,OADI0I,SAEJ+G,6BAdH,SAeHU,gBAAiBzH,WAAAA,UAAqB6G,yBAAAA,oBAChCvP,OADW0I,gBAEX+G,6BAjBH,gBAkBHW,iDAAkD1H,WAAAA,UAC9C6G,yBAAAA,qDAEEvP,OAH4C0I,iDAI5C+G,6BAtBH,iDAuBHY,uDAAwD3H,WAAAA,UACpD6G,yBAAAA,2DAEEvP,OAHkD0I,uDAIlD+G,6BA3BH,uDA4BHI,eAAgBnH,WAAAA,UAAqB6G,yBAAyBM,gBACxD7P,OADU0I,eAEV+G,6BA9BH,eA+BHK,eAAgBpH,WAAAA,UAAqB6G,yBAAyBO,gBACxD9P,OADU0I,eAEV+G,6BAjCH,eAkCHM,oBAAqBrH,WAAAA,UAAqB6G,yBAAyBQ,qBAC7D/P,OADe0I,oBAEf+G,6BApCH,oBAqCHO,kBAAmBtH,WAAAA,UAAqB6G,yBAAyBS,mBAC3DhQ,OADa0I,kBAEb+G,6BAvCH,kBAwCHa,kBAAmB5H,WAAAA,UAAqB6G,yBAAAA,sBAClCvP,OADa0I,kBAEb+G,6BA1CH,kBA2CHc,mBAAoB7H,WAAAA,UAAqB6G,yBAAAA,uBACnCvP,OADc0I,mBAEd+G,6BA7CH,mBA8CHe,sBAAuB9H,WAAAA,UAAqB6G,yBAAAA,0BACtCvP,OADiB0I,sBAEjB+G,6BAhDH,sBAiDHgB,kCAAmC/H,WAAAA,UAC/B6G,yBAAAA,sCAEEvP,OAH6B0I,kCAI7B+G,6BAA6BgB,mCKTMoC,CAAsB7S,OAAlC,aACT4K,0BAA0B,GAE1B,+BAAO9K,UAAU,KACb,4DAAa/B,UAAW2B,IAAAA,QAAAA,WACpB,+BAAkB1N,GAAG,iDAG7B,+BAAO8N,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAyBG,QACxE,oBAACF,8BAA8BsD,mBAA/B,CACIzc,KAAMkZ,yBAAyBG,MAC/Bha,QAAQuI,EAAAA,IAAAA,WAAUN,KAFtB,mDAGIoV,WAAY,CACR,CACIzc,OAAO2H,EAAAA,IAAAA,WAAU,KADrB,4DAKIpL,MAAOmgB,OAAAA,EAAAA,UAEX,CACI1c,OAAO2H,EAAAA,IAAAA,WAAU,KADrB,yDAKIpL,MAAOmgB,OAAAA,EAAAA,QAEX,CACI1c,OAAO2H,EAAAA,IAAAA,WAAU,KADrB,oEAKIpL,MAAOmgB,OAAAA,EAAAA,UAEX,CACI1c,OAAO2H,EAAAA,IAAAA,WAAU,KADrB,yDAKIpL,MAAOmgB,OAAAA,EAAAA,WAKvB,+BACIlT,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAAA,oBAE9B,oBAACC,8BAA8B3G,MAA/B,CACIxS,KAAMkZ,yBAAAA,kBACNjZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,uDAG/B,+BACImC,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAyBI,mBAEvD,oBAACH,8BAA8B3E,gBAA/B,CACIxU,KAAMkZ,yBAAyBI,iBAC/Bja,QAAQuI,EAAAA,IAAAA,WAAU,KAAD,iEAGb,CACIiS,eAAgBtG,WAAWsG,oBAK3C,mDAAoBxH,aACpB,+BAAO5I,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAyB5V,MACxE,oBAAC6V,8BAA8BzE,WAA/B,CACI1U,KAAMkZ,yBAAyB5V,IAC/BrD,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,wDAAyD,CAC5EuS,eAAgBtG,WAAWsG,iBAE/BrC,YALJ,aAMIC,mBANJ,EAOIC,kBAPJ,EAQIhJ,SAAU2M,sBAAsB/T,KAAMiM,WAR1C,KASIoE,QAASpU,mBAAAA,GAAAA,YAGjB,+BAAOkG,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAAA,cAC/C,oBAACC,8BAA8B3E,gBAA/B,CACIxU,KAAMkZ,yBAAAA,YACN7Z,QAAQuI,EAAAA,IAAAA,WAAU,KAAD,6DAGb,CACIiS,eAAgBtG,WAAWsG,oBAK3C,+BAAOpQ,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6G,yBAAyB1V,MACxE,oBAAC2V,8BAA8BzE,WAA/B,CACI1U,KAAMkZ,yBAAyB1V,IAC/BvD,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,wDAAyD,CAC5EuS,eAAgBtG,WAAWsG,iBAE/BrC,YALJ,aAMIC,mBANJ,EAOIC,kBAPJ,EAQIhJ,SAAU4M,sBAAsBhU,KAAMiM,WAR1C,KASIoE,QAASpU,mBAAAA,GATb,SAUIoR,QAASpR,mBAAAA,CAAMgQ,WAANhQ,KAAAA,YAGjB,+BACIkG,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAAA,qBAE9B,oBAACC,8BAA8B8C,YAA/B,CACIjc,KAAMkZ,yBAAAA,mBACNjZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,sDAGImN,YACI,4CACIpK,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,sEAKpB,gEACI,+BAAkBjM,GAAG,8DAIjC+S,SAAUkN,eAAe,KAAD,uEAMhC,+BACInS,UADJ,IAEIG,QAASyI,WAAAA,UACL6G,yBAAAA,4DAGJ,oBAACC,8BAA8B3E,gBAA/B,CACIxU,KACIkZ,yBAAAA,0DAEJ7Z,QAAQuI,EAAAA,IAAAA,WAAU,KAJtB,+DAQI6M,YACI,4CACIpK,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,+EAKpB,gEACI,+BAAkBjM,GAAG,0EAMzC,+BACI8N,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAyBM,iBAEvD,oBAACL,8BAA8BzE,WAA/B,CACI1U,KAAMkZ,yBAAyBM,eAC/BvZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,sDAGIkQ,YAHJ,aAIIC,mBAJJ,EAKIC,kBALJ,EAMIhJ,SAAUiN,qCANd,MAOIhE,QAASpU,mBAAAA,GAAAA,YAGjB,+BACIkG,UADJ,IAEIG,QAASyI,WAAAA,UACL6G,yBAAAA,sDAGJ,oBAACC,8BAA8B3E,gBAA/B,CACIxU,KAAMkZ,yBAAAA,oDACN7Z,QAAQuI,EAAAA,IAAAA,WAAU,KAAD,uEAMzB,+BACI6B,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAyBO,iBAEvD,oBAACN,8BAA8BzE,WAA/B,CACI1U,KAAMkZ,yBAAyBO,eAC/BxZ,OAAO2H,EAAAA,IAAAA,WAAU,KAFrB,wEAMI4P,YANJ,aAOIC,mBAPJ,EAQIC,kBARJ,EASIhJ,SAAUgN,wCATd,MAUI/D,QAASpU,mBAAAA,GAAAA,YAGjB,+BACIkG,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAyBQ,sBAEvD,oBAACP,8BAA8B8C,YAA/B,CACIjc,KAAMkZ,yBAAyBQ,oBAC/BzZ,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,2DAGIoH,SAAUkN,eAAe,KAAD,8EAMhC,+BACInS,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6G,yBAAyBS,oBAEvD,oBAACR,8BAA8ByD,SAA/B,CACI5c,KAAMkZ,yBAAyBS,kBAC/B1Z,OAAO2H,EAAAA,IAAAA,WAAU,KAFrB,8EAMIiV,UANJ,IAOInO,SAAU+M,uCAAuCnU,SAGzD,oCAAgB+K,aAChB,+BAAOzI,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KA9OnC,2B,w4ECyBpB,iBA9E6C,SAAvCwV,WAAwC,MAKxC,IAJFC,sBAIE,KAJFA,sBACAC,0BAGE,KAHFA,0BACA3K,WAEE,KAFFA,WACAkB,WACE,KADFA,WAEMjM,MAAOC,EAAAA,QAAAA,KACb,qCAAsCgE,EAAAA,MAAAA,WAAtC,MAAOwM,YAAP,cAAoBC,eAApB,cACA,qCAA4CzM,EAAAA,MAAAA,YAA5C,GAAO6Q,eAAP,cAAuBa,kBAAvB,cAgCA,OACI,wCACI,+BACIxT,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6C,6BAAAA,mCAE9B,oBAACC,kCAAkCX,gBAAnC,CACIxU,KAAMkV,6BAAAA,iCACN7V,QAAQuI,EAAAA,IAAAA,WAAUN,KAFtB,wEAGImN,YAAa,uDAGpBlB,WAAAA,gCAA6CxE,sBAAAA,QAAAA,KAC1C,2BAAKnT,MAAO,CAAEuc,gBAAF,UAA8BC,aAA9B,OAAoDvc,QAAS,SACrE,qCACIuL,OADJ,YAEIrJ,MAFJ,qBAGI+J,eAAgB,iCAAMkQ,gBAAN,IAChBoE,eACAC,UA5CF,SAAZA,UAAarD,QACf,IAAMkE,6BAA+BH,sBAAAA,OAArC,QAEAC,0BAAAA,+BA0CgBV,WAjCD,SAAbA,WAActD,QAChB,IAAMkE,6BAA+BH,sBAAA,QACzB,qBAASI,MAAT,kBADyB,OAArC,QAIAH,0BAAAA,iCA8BY,+BAAOvT,UAAP,IAAqBG,QAASmT,sBAAAA,OAA+B,GACzD,qCACIlE,mBADJ,sBAEIC,aA5CH,SAAfA,aAAgBE,QAClB,IAAMkE,6BAA+BH,sBAAA,QAA6B,qBAASI,MAAT,UAElEH,0BAAAA,+BA0CoBjE,aA/BH,SAAfA,aAAgBC,QAClBiE,kBAAAA,QACAjF,gBAAAA,OAgCY,oDAAOQ,SAAP,SAAyB7T,QA3DjB,SAAlB8T,kBACFT,gBAAAA,GACAiF,uBAAAA,KA0DgB,+BAAkBthB,GAAG,8C,g+BCzFtC,IAAMyhB,6BAA+B,SAA/BA,6BAAgC9V,MAAD,OAAqB,wBAC7D,OAAK8H,EAAAA,IAAAA,UAAL,gBAIKgC,EAAAA,mBAAAA,iBAAL,uBACWxJ,EAAAA,IAAAA,WAAUN,KAAjB,+EAJOM,EAAAA,IAAAA,WAAUN,KAAjB,sECKF+V,oBAAgD,SAAhDA,oBAAiD,MAA4D,IAA1DC,eAA0D,KAA1DA,eAAgBC,qBAA0C,KAA1CA,qBAAsBC,cAAoB,KAApBA,cAC3F,WAAIF,eAAAA,OACA,KAIA,0BAAI1hB,MAAO,CAAE4K,OAAF,EAAa3K,QAAb,EAAyB6Z,UAAW,SAC1C4H,eAAA,KAAmB,+BAChB,8CACIjZ,eADJ,gBAEID,SAAU,2BAAMmZ,qBAAN,UACVrZ,OAAQ,yBAAMsZ,cAAN,UACRvZ,KAAI,WAAKqN,EAAAA,IAAAA,YAAWmM,QAAAA,YAAhB,mBACAA,QAAAA,YAAAA,KAA0BnM,EAAAA,IAAAA,YAAWmM,QAAAA,YAArCA,KALR,YAOI1f,MAAO0f,QAPX,mBAQIlZ,qBAAoB,4BAAuBkZ,QAR/C,oBASInZ,mBAAkB,8BAAyBmZ,QAT/C,oBAUIlhB,IAAG,UAAKkhB,QAAL,6CAOvB,sD,s6BCiBA,2BA9C6B,SAAvBC,uBACF,IAAMpW,MAAOC,EAAAA,QAAAA,KAEb,OACI,4CACI8C,WAAWzC,EAAAA,IAAAA,WAAUN,KAAM,kEAE3B,2BAAK1L,MAAO,CAAEuc,gBAAF,UAA8Btc,QAAS,WAC/C,gEACI,+BAAkBF,GAAG,4EAEzB,8BACI,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,8EAEzB,8BACI,+BAAkBA,GAAG,+EAG7B,gEACI,+BAAkBA,GAAG,2EACrB,kCAAY6C,IAAKgM,MAAAA,EAAAA,kBAAyBvL,YAAY2I,EAAAA,IAAAA,WAAUN,KAAM,oBC5C1F,kC,SAAYqW,8BAAAA,6BAAAA,kBAAAA,oBAAAA,6BAAAA,IAAAA,MAAAA,6BAAAA,IAAAA,MAAAA,6BAAAA,YAAAA,W,CAAAA,+BAAAA,6BAAAA,KAcL,I,sBAAMC,mCAAoCzQ,EAAAA,sBAAAA,0B,6kCCT1C,I,sBAAM0Q,kCAA6D,qEACrEF,6BAA6BG,kBADwC,sEAErEH,6BAA6Bra,IAFwC,sEAGrEqa,6BAA6Bna,IAHwC,sEAIrEma,6BAAAA,YAAwC5O,sBAAAA,QAAAA,YAJtC,uBAuBMgP,oCAAsC,SAAtCA,oCAAuCpU,QAChD,MAAO,CACHyM,mBAAoBzM,OADjB,kBAEH0M,UAAU/G,EAAAA,UAAAA,GAAmC3F,OAF1C,UAGHtG,YAAa,CACTC,IAAKqG,OADI,IAETnG,KAAK4L,EAAAA,IAAAA,UAASzF,OAATyF,KAAuBzF,OAAvByF,SAAoCvF,KAKxCmU,oCAAsC,SAAtCA,oCAAuC,SAGhD,eAMA,6HAEI1a,IAAKma,QAAAA,YAFT,IAGIja,IAAKia,QAAAA,YAAAA,KAHT,GAIIK,kBAAmBL,QAJvB,mBAKIpH,UAAU3G,EAAAA,UAAAA,GAAmC+N,QAAD,YAV5C,gF,gMCxCR,IAAMQ,+BAAwG,2EACzGN,6BAA6BG,kBAAoB,CAC9C9N,WAAY,gCACZD,WAAY,8BAAG+N,kBAAH,8BAA2B1O,EAAAA,IAAAA,UAA3B,sBAH0F,wEAKzGuO,6BAA6Bra,IAAM,CAChC0M,WAAY,gCACZD,WAAY,+BAAGzM,IAAH,iBAAa8L,EAAAA,IAAAA,UAAb,MACZkB,iBAAkB,qCAAGwN,kBAAH,+BAA2B1O,EAAAA,IAAAA,UAA3B,sBARoF,wEAUzGuO,6BAAAA,YAAwC,CACrC3N,WAAY,gCACZD,WAAY,mDAA+BhB,sBAAAA,QAAAA,YAC3CuB,iBAAkB,qCAAGhN,IAAH,iBAAa8L,EAAAA,IAAAA,UAAb,QAboF,wEAezGuO,6BAA6Bna,IAAM,CAChCwM,WAAY,mDAA+BjB,sBAAAA,QAAAA,IAC3CgB,WAAY,+BAAGvM,IAAH,iBAAa4L,EAAAA,IAAAA,UAAb,MACZkB,iBAAkB,yDAA+BvB,sBAAAA,QAAAA,MAlBzD,uBA0BA,gDAJ2C2B,EAAAA,+BAAAA,IAA3C,+BCrBO,IAAMwN,4BAA8B,SAA9BA,4BAA+B5W,MAAD,OAAqB,eAC5D,KAAK8H,EAAAA,IAAAA,UAAL,MACI,OAAOxH,EAAAA,IAAAA,WAAUN,KAAjB,oFAMK6W,mBAAqB,SAArBA,mBAAsB7W,KAAD,0BAAyD,cACvF,OAAK8H,EAAAA,IAAAA,UAAL,MAIKgC,EAAAA,mBAAAA,iBAAL,MAIIuF,EAAAA,UAAAA,IAAJ,MACW/O,EAAAA,IAAAA,WAAUN,KAAjB,8CAGAsP,EAAAA,UAAAA,IAAmBtT,IAAvB,gBACWsE,EAAAA,IAAAA,WAAUN,KAAjB,4EAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,MACWoE,EAAAA,IAAAA,WAAUN,KAAjB,gDADJ,GAXWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CAsBK8W,wBAA0B,SAA1BA,wBAA2B9W,MAAD,OAAqB,mBACxD,GAAI+O,WAAatH,sBAAAA,QAAAA,WACb,OAAOnH,EAAAA,IAAAA,WAAUN,KAAjB,yEAMK+W,mBACT,SADSA,mBACR/W,KAAD,mCAA4E,cACxE,GAAI+O,WAAatH,sBAAAA,QAAAA,IAIjB,OAAKK,EAAAA,IAAAA,UAAL,MAIKgC,EAAAA,mBAAAA,iBAAL,MAIIuF,EAAAA,UAAAA,IAAJ,MACW/O,EAAAA,IAAAA,WAAUN,KAAjB,8CAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,gBACWoE,EAAAA,IAAAA,WAAUN,KAAjB,4EAGAsP,EAAAA,UAAAA,IAAmBpT,IAAvB,MACWoE,EAAAA,IAAAA,WAAUN,KAAjB,kDADJ,GAXWM,EAAAA,IAAAA,WAAUN,KAAjB,4CAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0CCfNgX,oBAAgD,SAAhDA,oBAAiD,MAQjD,IAPFlX,OAOE,KAPFA,OACArJ,MAME,KANFA,MACA+J,eAKE,KALFA,eACAyW,uBAIE,KAJFA,uBACAC,kBAGE,KAHFA,kBACAC,mBAEE,KAFFA,mBACAxD,cACE,KADFA,cAEM5R,KAAM5B,EAAAA,IAAAA,UAAZ,uBACMH,MAAOC,EAAAA,QAAAA,KAWb,OACI,sDACIH,OACAO,aAFJ,MAGIG,eACAD,aAJJ,EAKIsP,2BALJ,EAMIzP,UAAW2B,IAAIG,OAEf,oBAACoU,kCAAkC5P,cAAnC,CACIC,cAAe+P,oCADnB,wBAEI9P,SAAU,iCApBA,SAAhBP,cAAiBhE,QACnB,uBAGI8U,mBAAmBV,oCAAnBU,SAFAD,kBAAkBT,oCAAlBS,SAIJ1W,iBAcoE6F,CAAlD,SACVQ,WAAY,2BAA4B,IAAjBoF,WAAiB,MAAzB5J,OACL0I,WAAaqM,yCAAAA,aAAnB,YAEA,OACI,oBAACd,kCAAkCxP,KAAnC,CACI+F,QAAS,gCH9DI,SAA5BwK,0BAA6B,OAAD,YAIrC,MAAO,CACHb,kBAAmBzL,WAAAA,UAAqBsL,6BAA6BG,mBAC/DnU,OADa0I,kBAEbwL,iCAHH,kBAIHva,IAAK+O,WAAAA,UAAqBsL,6BAA6Bra,KAAOqG,OAAzD0I,IAAsEwL,iCAJxE,IAKHra,IAAK6O,WAAAA,UAAqBsL,6BAA6Bna,KAAOmG,OAAzD0I,IAAsEwL,iCALxE,IAMHxH,SAAUhE,WAAAA,UAAqBsL,6BAAAA,aACzBhU,OADI0I,SAEJwL,iCAAiCxH,UGkDEsI,CAA0BhV,OAAtC,cAET,4DAAajC,UAAW2B,IAAAA,QAAAA,WACpB,+BAAkB1N,GAAG,+CAEzB,+BAAO8N,UAAU,KACb,oBAACmU,kCAAkCpL,MAAnC,CACIxS,KAAM2d,6BAA6BG,kBACnC7d,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,oDAGIoH,SAAUwP,4BAA4B5W,SAG9C,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBsL,6BAA6Bra,MAC5E,oBAACsa,kCAAkClJ,WAAnC,CACI1U,KAAM2d,6BAA6Bra,IACnCrD,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,OAGIkQ,YAHJ,aAIIC,mBAJJ,EAKI/I,SAAUyP,mBAAmB7W,KAAMiM,WAAP,IALhC,eAMIoB,QAASpR,mBAAAA,CAAAA,eANb,SAOIoU,QAASpU,mBAAAA,GAAAA,YAGjB,+BAAOkG,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBsL,6BAAAA,cAC/C,oBAACC,kCAAkCpJ,gBAAnC,CACIxU,KAAM2d,6BAAAA,YACNte,QAAQuI,EAAAA,IAAAA,WAAUN,KAFtB,+CAGIoH,SAAU0P,wBAAwB9W,SAG1C,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBsL,6BAA6Bna,MAC5E,oBAACoa,kCAAkClJ,WAAnC,CACI1U,KAAM2d,6BAA6Bna,IACnCvD,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,OAGIkQ,YAHJ,aAIIC,mBAJJ,EAKI/I,SAAU2P,mBAAmB,KAEzB9K,WAFwB,SAGxBA,WAHwB,IALhC,eAWIoB,QAASpR,mBAAAA,CAAMgQ,WAANhQ,KAXb,SAYIoU,QAASpU,mBAAAA,GAAAA,kBAW7C,oD,ykFC1GA,IAAMqb,QAAoC,SAApCA,QAAqC,MAAkE,IAAhEtB,eAAgE,KAAhEA,eAAgBuB,kBAAgD,KAAhDA,kBAAmBxM,WAA6B,KAA7BA,WAAYkB,WAAiB,KAAjBA,WAClFjM,MAAOC,EAAAA,QAAAA,KACb,kCAAsCgE,EAAAA,MAAAA,WAAtC,MAAOwM,YAAP,cAAoBC,eAApB,cACA,kCAA8CzM,EAAAA,MAAAA,YAA9C,GAAOuT,gBAAP,cAAwBC,mBAAxB,cA8BA,OACI,wCACI,+BAAOtV,UAAP,IAAqBG,QAASyI,WAAAA,UAAqB6C,6BAA6B8J,wBAC5E,oBAAC7J,kCAAkCX,gBAAnC,CACIxU,KAAMkV,6BAA6B8J,sBACnC3f,QAAQuI,EAAAA,IAAAA,WAAUN,KAFtB,uDAGImN,YAAa,kDAGpBlB,WAAAA,wBAAqCxE,sBAAAA,QAAAA,KAClC,2BAAKnT,MAAO,CAAEuc,gBAAF,UAA8BC,aAA9B,OAAoDvc,QAAS,SACrE,+BACI4N,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6C,6BAA6B+J,uBAE3D,oBAAC9J,kCAAkCT,WAAnC,CACI1U,KAAMkV,6BAA6B+J,qBACnChf,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,wCAGIoH,SAAU0O,6BAA6B9V,SAG/C,+BACImC,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6C,6BAA6BgK,8BAE3D,oBAAC/J,kCAAkCX,gBAAnC,CACIxU,KAAMkV,6BAA6BgK,4BACnC7f,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,4DAGhC,+BACImC,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6C,6BAAAA,sCAE9B,oBAACC,kCAAkCX,gBAAnC,CACIxU,KAAMkV,6BAAAA,oCACN7V,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,oEAGhC,+BAAOmC,UAAP,IAAqBG,QAAS2J,WAAAA,mCAAgDxE,sBAAAA,QAAAA,KAC1E,+CACI3H,OADJ,YAEIrJ,OAAO6J,EAAAA,IAAAA,WAAUN,KAFrB,6CAGIQ,eAAgB,iCAAMkQ,gBAAN,IAChBuG,uBAJJ,gBAKIC,kBAzEE,SAApBA,kBAAqBf,SACvB,IAAM0B,sBAAwB7B,eAAAA,OAA9B,SAEAuB,kBAAAA,wBAuEoBJ,mBA9DG,SAArBA,mBAAsBhB,SACxB,IAAM0B,sBAAwB7B,eAAA,QAAsB,qBAAS8B,MAAT,mBAAtB,OAA9B,SAEAP,kBAAAA,wBA4DoB5D,cAAe1H,WAAW0L,uBAE9B,+BAAOxV,UAAP,IAAqBG,QAAS0T,eAAAA,OAAwB,GAClD,iDACIA,eACAC,qBA1EC,SAAvBA,qBAAwBE,SAC1B,IAAM0B,sBAAwB7B,eAAA,QAAsB,qBAAS8B,MAAT,WAEpDP,kBAAAA,wBAwEwBrB,cA/DN,SAAhBA,cAAiBF,gBACnByB,mBAAAA,gBACA/G,gBAAAA,OAgEgB,oDAAOQ,SAAP,SAAyB7T,QA7DrB,SAAlB8T,kBACFT,gBAAAA,GACA+G,wBAAAA,KA4DoB,+BAAkBpjB,GAAG,yCAG7B,+BACI8N,UADJ,IAEIG,QAASyI,WAAAA,UAAqB6C,6BAA6BmK,2BAE3D,oBAAClK,kCAAkCX,gBAAnC,CACIxU,KAAMkV,6BAA6BmK,yBACnChgB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,8CASpD,8B,o7BCrBA,sCAzGuB,SAAjBgY,iBACF,IAAMhY,MAAOC,EAAAA,QAAAA,KAEb,OACI,4CAAoB8C,WAAWzC,EAAAA,IAAAA,WAAUN,KAAM,iDAC3C,2BAAK1L,MAAO,CAAEuc,gBAAF,UAA8Btc,QAAS,WAC/C,+BAAO4N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,wDAAS+N,IAAT,KAAkB9N,MAAO,CAAEwc,aAAc,UACrC,+BAAkBzc,GAAG,6CAEzB,+BAAO8N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,+BAAO8N,UAAU,KACb,gEACI,+BACI9N,GADJ,0CAEIgO,OAAQ,CACJS,EAAG,uBACC,yBACIN,KAAMU,MAAAA,EAAAA,4BACNnN,OAFJ,SAGIkiB,IAHJ,aAII7X,UAAU,SALf,WAcnB,wDAASgC,IAAT,KAAkB9N,MAAO,CAAEwc,aAAc,UACrC,+BAAkBzc,GAAG,6CAEzB,+BAAO8N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,+BAAO8N,UAAU,KACb,gEACI,+BACI9N,GADJ,0CAEIgO,OAAQ,CACJS,EAAG,uBACC,yBAAGN,KAAMU,MAAAA,EAAAA,aAAoBnN,OAA7B,SAA6CkiB,IAA7C,aAA8D7X,UAAU,SADzE,WASnB,wDAASgC,IAAT,KAAkB9N,MAAO,CAAEwc,aAAc,UACrC,+BAAkBzc,GAAG,gDAEzB,+BAAO8N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,wDAAS+N,IAAT,KAAkB9N,MAAO,CAAEwc,aAAc,UACrC,+BAAkBzc,GAAG,mDAEzB,+BAAO8N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,+BAAO8N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,+BAAO8N,UAAU,KACb,gEACI,+BAAkB9N,GAAG,8CAG7B,+BAAO6K,OAAO,QACV,gEACI,+BACI7K,GADJ,0CAEIgO,OAAQ,CACJS,EAAG,uBACC,yBAAGN,KAAMU,MAAAA,EAAAA,aAAoBnN,OAA7B,SAA6CkiB,IAA7C,aAA8D7X,UAAU,SADzE,c,umCCzF5B,I,sBAAM8X,sCAAiE,qEACzEtK,6BAA6B8J,sBAAwBjQ,sBAAAA,QAAAA,YADoB,kEAEzEmG,6BAAAA,iCAA6DnG,sBAAAA,QAAAA,YAFY,kEAGzEmG,6BAA6BgD,mBAAqBnJ,sBAAAA,QAAAA,YAHuB,kEAIzEmG,6BAA6B+J,qBAJ4C,sEAKzE/J,6BAAAA,oCAAgEnG,sBAAAA,QAAAA,YALS,kEAMzEmG,6BAA6BmK,yBAA2BtQ,sBAAAA,QAAAA,YANiB,kEAOzEmG,6BAA6BgK,4BAA8BnQ,sBAAAA,QAAAA,YAPc,kEAQzEmG,6BAA6BgD,mBAAqBnJ,sBAAAA,QAAAA,YARhD,uBA8CM0Q,wCAA0C,SAA1CA,wCAA2Cpe,OACpD,wIAEI6W,oBAAoBxI,EAAAA,UAAAA,GAAmCrO,MAF3D,+BAGIqe,+BAA+BhQ,EAAAA,UAAAA,GAC3BrO,MAJR,kDAMI2d,uBAAuBtP,EAAAA,UAAAA,GAAmCrO,MAN9D,+BAOI4d,qBAAsB5d,MAAAA,mBAA2BA,MAAAA,mBAA3BA,SAP1B,GAQIge,yBAA0Bhe,MAAAA,oBACpBqO,EAAAA,UAAAA,GAAmCrO,MAAAA,mBADfA,kBAEpB0N,sBAAAA,QAAAA,WACNmQ,4BAA6B7d,MAAAA,oBACvBqO,EAAAA,UAAAA,GAAmCrO,MAAAA,mBADZA,2BAEvB0N,sBAAAA,QAAAA,WACN4Q,iCAAkCte,MAAAA,oBAC5BqO,EAAAA,UAAAA,GAAmCrO,MAAAA,mBADPA,2CAE5B0N,sBAAAA,QAAAA,c,gMClEd,IAAM6Q,+BAAwG,2EACzG1K,6BAA6B8J,sBAAwB,CAClDhP,WAAY,gCACZD,WAAY,8DAAyDhB,sBAAAA,QAAAA,cAHiC,wEAKzGmG,6BAA6B+J,qBAAuB,CACjDjP,WAAY,gEAAyDjB,sBAAAA,QAAAA,KACrEgB,WAAY,+BAAGkP,qBAAH,kCAA8B7P,EAAAA,IAAAA,UAA9B,uBACZkB,iBAAkB,sEAAyDvB,sBAAAA,QAAAA,OAR2B,wEAUzGmG,6BAA6BgK,4BAA8B,CACxDlP,WAAY,gEAAyDjB,sBAAAA,QAAAA,KACrEgB,WAAY,sEAAqEhB,sBAAAA,QAAAA,YACjFuB,iBAAkB,qCAAG2O,qBAAH,kCAA8B7P,EAAAA,IAAAA,UAA9B,yBAboF,wEAezG8F,6BAAAA,oCAAgE,CAC7DlF,WAAY,gEAAyDjB,sBAAAA,QAAAA,KACrEgB,WAAY,2EAA+EhB,sBAAAA,QAAAA,YAC3FuB,iBAAkB,8EAAqEvB,sBAAAA,QAAAA,cAlBe,wEAoBzGmG,6BAA6BmK,yBAA2B,CACrDrP,WAAY,kEAAyDjB,sBAAAA,QAAAA,KACrEgB,WAAY,qEAA+DhB,sBAAAA,QAAAA,YAC3EuB,iBAAkB,mFACuBvB,sBAAAA,QAAAA,cAxB6D,wEA0BzGmG,6BAAAA,iCAA6D,CAC1DlF,WAAY,gCACZD,WAAY,0EAAyEhB,sBAAAA,QAAAA,YACrFuB,iBAAkB,wEAAyDvB,sBAAAA,QAAAA,cA7B2B,wEA+BzGmG,6BAA6BgD,mBAAqB,CAC/ClI,WAAY,gCACZD,WAAY,+DAAmDhB,sBAAAA,QAAAA,YAC/DuB,iBAAkB,gFAAyEvB,sBAAAA,QAAAA,cAlCnG,uBA0CA,0CAJ2C2B,EAAAA,+BAAAA,IAA3C,+B,g2CCgFA,8CAnG4B,SAAtBmP,sBACF,IAAMvY,MAAOC,EAAAA,QAAAA,KACLoE,gBAAmBF,EAAAA,aAAAA,KAA3B,eACQpK,OAAUmM,EAAAA,UAAAA,KAAlB,MAEA,8CAA4CjC,EAAAA,MAAAA,UACxClK,MAAAA,mBAA2BA,MAAAA,mBAA3BA,2CADJ,OAAOic,eAAP,cAAuBuB,kBAAvB,cAGA,8CAA2DtT,EAAAA,MAAAA,UACvDlK,MAAAA,sCAA8CA,MAA9CA,sCADJ,OAAO0b,sBAAP,cAA8BC,0BAA9B,cAGA,8CAAkEzR,EAAAA,MAAAA,UAC9DlK,MAAAA,yBAAiCA,MAAjCA,yBADJ,OAAOwW,0BAAP,cAAkCC,6BAAlC,cAgBMnK,eAAgBC,EAAAA,iBAAAA,IAZO,SAAvBC,qBAAwBlE,QAC1B,IAAMmW,aFrBuC,SAAxCC,sCAAyC,OAAD,8CAOjD,IAAIC,wBAAJ,EAcA,OAZIrW,OAAAA,wBAAiCoF,sBAAAA,QAAAA,MACjCiR,mBAAqB,CACjBC,SAAUtW,OADO,qBAEjBuW,2BAA2B5Q,EAAAA,UAAAA,GAAmC3F,OAF7C,6BAGjBwW,2CAA2C7Q,EAAAA,UAAAA,GACvC3F,OAJa,kCAMjByW,kBAAkB9Q,EAAAA,UAAAA,GAAmC3F,OANpC,0BAOjB0W,2CAA4C/C,iBAI7C,CACH1a,gBAAiBvB,MADd,gBAEHif,UAAWjf,MAFR,UAGHkf,+BAA+BjR,EAAAA,UAAAA,GAAmC3F,OAH/D,oBAIH6W,+BAA+BlR,EAAAA,UAAAA,GAAmC3F,OAJ/D,uBAKH8W,kDAAkDnR,EAAAA,UAAAA,GAC9C3F,OAND,+BAQH+W,yBAA0B/W,OAAAA,qBAA8BoF,sBAAAA,QAAAA,IAA9BpF,eARvB,GASHgX,sCAAuChX,OAAAA,gCAAyCoF,sBAAAA,QAAAA,IAAzCpF,SATpC,GAUHqW,mBAAoBrW,OAAAA,wBAAiCoF,sBAAAA,QAAAA,IAAjCpF,wBAAoEE,GEVnEkW,CAAsC,OAAD,+CAA1D,uBAQA,MAAO,CAACjS,cAAAA,EAAAA,YAAR,iBAGyDC,OAAAA,EAAAA,cACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACI,oBAAC6B,kCAAkCnH,cAAnC,CACIC,cAAewR,wCADnB,OAEIvR,SAFJ,cAGIC,WAAY,0BAA4B,IAAjBoF,WAAiB,KAAzB5J,OACL0I,WAAauO,mCAAAA,aAAnB,YAEA,OACI,8BACIlN,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,8BAEIqM,cAAcC,EAAAA,YAAAA,GAFlB,uBAGIC,aAHJ,sBAIIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAJzB,8BAKIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KALzB,8BAMI0M,SANJ,eAOIC,gBAAiB,wCACjBC,MARJ,cASInU,SAAS,GAET,oBAACoV,kCAAkC/G,KAAnC,CAAwCC,gBAAgB,GACpD,+BAAO5E,UAAU,KACb,4DADJ,wBAEI,gEAHR,kFAQI,0EAA2BkC,iBAE3B,oDAVJ,MAYI,+BAAOlC,UAAU,KACb,qCACI6T,eACAuB,kBACAxM,WACAkB,cAIR,+BAAO9J,UAAU,KACb,gCACIsT,sBACAC,0BACA3K,WACAkB,cAIR,+BAAO9J,UAAU,KACb,oDACIoO,0BACAC,6BACAzF,WACAkB,cAIR,+BAAOqB,iBAAP,EAA8BhL,QAASyI,WAAAA,2BACnC,8DAAazK,EAAAA,IAAAA,WAAUN,KApDvC,2B,wyCCtChB,mCACIvJ,MADW,4BAEXC,UAFW,wCAGXvC,WAAY,CAACoZ,WAAD,iDAQhB,IAAM5W,SAAyB,SAAzBA,SAA0B,MAA2B,IAAzBsC,QAAyB,KAAzBA,QAASqB,UAAgB,KAAhBA,UAUvC,OACI,iCAAW4K,KAVE,SAAXC,SAAYC,SACdA,QAAAA,OAAAA,oBAAAA,MAAAA,IAEI,CAAEoI,KAAM,IACR,CACIC,SAAU,OAMd,+CAAyBvU,OAAzB,QAA0CoB,WACtC,4DAHZ,SASS/C,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QADW,wBAEXqB,UAAAA,2BAGG,IAAMif,8CAAoB5iB,SAAAA,KAA1B,IACP4iB,8CAAAA,KAAyB,CACrBtgB,QADqB,wBAErBqB,UAAW,CACPP,MAAO,yCAAF,2EAEDsK,eAAgB,CACZ,CACImV,eADJ,IAEIC,mBAFJ,QAGIxK,iBAHJ,wBAIIrT,iBAJJ,GAKII,IAAK,cAET,CACIwd,eADJ,IAEIC,mBAFJ,QAGIxK,iBAHJ,eAIIrT,iBAJJ,GAKII,IALJ,aAMIE,IAAK,mBASzB3E,QAAAA,WAAAA,yCAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,0hBAA8hBqB,QAA5kBA,YACAgiB,8CAAAA,WAAAA,yCAAAA,CAAiCjiB,YAAa,CAAEpB,OAAQ,0hBAA8hBqjB,8CAAtlBA,a,uyCCtFA,0B,2gBAAYG,2BAAAA,0BAAAA,QAAAA,U,CAAAA,4BAAAA,0BAAAA,KAQL,IAAMC,gCAAiC9T,EAAAA,sBAAAA,0B,kJCF9C,IAAM+T,2B,8JAA0G,CAAH,GACxGF,0BAA0BxK,QAAU,CACjCzG,WAAY,8BAAGyG,QAAH,aAAY2K,sBAAZ,sFAGFA,sBAAA,OAA4B,sBACxB3K,QAAA,QACY,qCADZ,aAGU,mBAAO3Y,EAAAA,OAAP,YAExBmS,WAAY,kCAIPoR,iCAAkC1Q,EAAAA,+BAAAA,IAAxC,4B,shBCrBP,IAea2Q,sBAAwB,SAAxBA,sBAAyB,OAAD,4BAKjC,GAAItlB,MAAAA,OACA,OAAO,IAAP,IAGJ,IAAMulB,KAAeC,YAArB,SACIC,iBAAmBC,iBAAmB,IAA1C,IAUA,OATAvlB,OAAAA,KAAAA,QAAAA,SAA4B,cACxB,WAAI,QAAOH,OAAP,SA3BiB,SAAvB2lB,qBAAwB3lB,QAC1B,OACI4lB,MAAAA,QAAAA,SAAAA,OACA5lB,OAAAA,IACAA,OAAA,MAAY,yBAAa6lB,SAAWA,QAAAA,kBAA4BC,WAAAA,EAAAA,eAwBxDH,CAAqB3lB,OAAzB,MAGIylB,iBAAmBH,sBAAsBtlB,OAAD,KAAculB,KAAAA,IAAd,IAAxCE,kBAFAA,iBAAAA,IAAqBF,KAAAA,IAArBE,IAAuCzlB,OAAAA,KAAvCylB,QAMZ,kB,2ICpCG,IAAMM,cAAgB,SAAhBA,gBAAgB,O,uLAAA,IACxBd,0BAA0BxK,QADF,K,w+BC2BtB,IAEDuL,0BAA4B,SAA5BA,0BAA6BthB,KAAD,sBAC9B,OAAOA,OAASN,eAAAA,EAAAA,6BACV,CACI6Q,KAAMgR,2BAFhB,GAcEC,iBAA4C,SAA5CA,mBACF,IAAM3a,MAAOC,EAAAA,QAAAA,KACP/G,QAASgN,EAAAA,UAAAA,KACP/L,WAAejB,OAAvB,WAEM0hB,sBAAwBb,sBAA9B,QACMc,6BAA+BR,MAAAA,KAAWO,sBAAhD,QAiBMvU,eAAgBC,EAAAA,iBAAAA,IAfO,SAAvBC,qBAAwBlE,QAU1B,OATAA,OAAAA,QAAAA,SAAwB,wBACpB,WAAe,CACX,IAAMyY,IAlBP,SAATC,OAAUC,UAIZ,OAHYA,SAAA,QAAgB,2BACxB,OAAOC,OAAAA,KAAcC,aAAAA,IAAdD,IAAyCC,aAAAA,IAAAA,IAAhD,MADJ,IAGOJ,QAAAA,WAAP,IAcwBC,CAAOF,6BAAAA,OAAAA,MAAnB,MACAM,iBAAAA,IAAAA,OAAAA,IAAAA,aAMD,KAKkD1U,OAAAA,EAAAA,cACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEjB0O,sBAAuBvS,EAAAA,cAAAA,GAAuBjP,OAAvBiP,eAA+CjP,OAAAA,cAA/CiP,QAA7B,GAEMiT,qCAAuCjhB,WAAA,QACjC,wBAAgBkhB,IAAAA,EAAAA,YAAAA,OAAoCC,EAAAA,QAAAA,IAApD,MADiC,mBAA7C,QAKMC,kDACFH,IAAAA,sCACAnf,mBAAAA,CAAMmf,qCAAAA,YAANnf,KAAAA,eAA2EA,mBAAAA,GAAAA,IAAAA,EAF/E,UAIM4d,sBAAwBQ,MAAA,KAAWO,sBAAX,eAA+C,mBAAOrkB,EAAP,QAE7E,OACI,oBAACojB,+BAA+BjT,cAAhC,CACIC,cAAe6T,gBACf5T,SAFJ,cAGIC,WAAY,0BAA4B,IAAjBoF,WAAiB,KAAzB5J,OACL0I,WAAa+O,gCAAgC5N,aAAa,cAA7C,iCAEf2N,sBACA0B,gDAGJ,OACI,8BACInP,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIqM,cAAcC,EAAAA,YAAAA,GAFlB,YAGIC,aAHJ,gBAIIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAJzB,2BAKIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KALzB,2BAMI0M,SANJ,eAOIC,gBAAiB,wCACjBC,MARJ,cASInU,SAAS,GAET,oBAACkhB,+BAA+B7S,KAAhC,CAAqCC,gBAAgB,GACjD,+BAAO5E,UAAU,KACb,6CAAeoH,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GACIknB,6CAA4C,4BAEtC,sEAKrBV,6BAAA,KAAiC,2BAAuB,+CAC/C5lB,IAAMumB,WAAAA,QAAAA,UAAZ,IACMC,QAAUN,iBAAAA,IAAAA,OAAclmB,IAAAA,QAAAA,WAAAA,IAAAA,MAA9B,MAEMymB,kBAAoBd,sBAAAA,IAA1B,YACA,OAAIc,kBAAAA,OAA2B7iB,eAAAA,EAAAA,YAC3B,KAGA,+BACI5D,IACIymB,kBAAAA,MACAD,MAAAA,SADAC,QAAAA,qBACAD,QADAC,mBAAAA,IAAAA,0BAAAA,EACAD,qBADAC,MAEAD,MAAAA,SAFAC,QAAAA,sBAEAD,QAFAC,mBAAAA,IAAAA,2BAAAA,EAEAD,sBAFAC,MAKJ,6DACKpb,EAAAA,IAAAA,WAAU,KAAD,iCAEoBob,kBAFpB,MAGNjB,0BAA0BiB,kBAAD,KAXrC,wBAcI,4CACI3Y,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,qCAEcob,kBAFd,MAGhBjB,0BAA0BiB,kBAAD,KAHT,wBAMpB,2BAAKpnB,MAAO,CAAEuc,gBAAF,UAA8Btc,QAAS,WAC/C,iEACK+L,EAAAA,IAAAA,WAAU,KAAD,gCAEmBob,kBAFnB,MAGNjB,0BACIiB,kBADqB,KA1B7C,2BAkCKD,MAAAA,aAAA,EAAAA,QAAA,eAAwBA,MAAAA,aAAxB,EAAwBA,QAAxB,OACG,+BAAOvc,OAAO,KACV,iEACKoB,EAAAA,IAAAA,WAAU,KF3JzB,SAAzBqb,uBAA0BxiB,MAAD,OAClCA,OAASN,eAAAA,EAAAA,mBACTM,OAASN,eAAAA,EAAAA,8BACTM,OAASN,eAAAA,EAAAA,cACTM,OAASN,eAAAA,EAAAA,YACTM,OAASN,eAAAA,EAAAA,oBEwJ2C8iB,CAAuBD,kBAAvBC,MAAAA,6CAFM,uCAKN,CACIxiB,MAAMmH,EAAAA,IAAAA,WAAU,KAEZob,kBAAAA,OAA2B7iB,eAAAA,EAAAA,cAA3B6iB,gBAAAA,OACsBD,QAAAA,KADtBC,eAEMD,QALd,MAOIzf,KAAKgO,EAAAA,IAAAA,YAAWyR,QAAAA,YAPpB,KAQIvf,IAAKuf,QAAAA,YAAAA,KACCzR,EAAAA,IAAAA,YAAWyR,QAAAA,YADZA,KAEC,QAM1B,2CACI/iB,KAAMghB,0BAA0BxK,QAChC0M,OAAQ,kBACJ,OACI,0CACI3mB,IAAG,UAAKykB,0BAA0BxK,QAA/B,YADP,OAEIxW,KAAI,UAAKghB,0BAA0BxK,QAA/B,YAFR,OAGIvW,OAAO2H,EAAAA,IAAAA,WAAU,KAHrB,8CAOI9I,YACIyU,WAAAA,QAAAA,OAAAA,OACAA,WAAAA,QADAA,OAEMA,WAAAA,QAFNA,OARR,GAaIrT,eAAgB8iB,kBAbpB,KAcI5iB,aAAc4iB,kBAAkB5iB,sBAQ5D,+BAAOwJ,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KAtHvC,2BAgIhB,0D,+zDCtMA,gCACIvJ,MADW,yBAEXC,UAFW,mCAGXvC,WAAY,CAACoZ,WAAD,iDAQhB,IAAM5W,SAAyB,SAAzBA,SAA0B,MAA2B,IAAzBsC,QAAyB,KAAzBA,QAASqB,UAAgB,KAAhBA,UAUvC,OACI,iCAAW4K,KAVE,SAAXC,SAAYC,SACdA,QAAAA,OAAAA,oBAAAA,MAAAA,IAEI,CAAEoI,KAAM,IACR,CACIC,SAAU,OAMd,+CAAyBvU,OAAzB,QAA0CoB,WACtC,uDAHZ,SASS/C,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QAAS,sCAAF,sEAEHC,OAAQ,sCAAF,yCACCD,wBAAAA,WADD,IAEFO,KAAM,sCAAF,yCACGP,wBAAAA,UAAAA,MADH,IAEAW,2BAA4B,EACxBiiB,EAAAA,aAAAA,IAAsBhjB,eAAAA,EAAAA,YAA4BE,aAAAA,EAAAA,qBAEtD+iB,kBAAmB,EACfD,EAAAA,aAAAA,IAAsBhjB,eAAAA,EAAAA,kBAAkCE,aAAAA,EAAAA,0BAKxEuB,UAAAA,2BAGG,IAAMyhB,+BAAiCplB,SAAAA,KAAvC,IACPolB,+BAAAA,KAAsC,CAClC9iB,QAAS,sCAAF,sEAEHC,OAAQ,sCAAF,yCACCD,wBAAAA,WADD,IAEFc,MAAO,sCAAF,yCACEd,wBAAAA,UAAAA,UADF,IAEDmgB,yBAA0B,CACtB,CACIrK,UADJ,EAEIhT,YAAa,CACTC,IADS,aAETE,IAAK,IAET/C,KANJ,uBAOI+V,QAAS,EACL2M,EAAAA,aAAAA,IACIhjB,eAAAA,EAAAA,cACAE,aAAAA,EAAAA,oCAIZ,CACIgW,UADJ,EAEIhT,YAAa,CACTC,IADS,aAETE,IAAK,IAET/C,KANJ,uBAOI+V,QAAS,EACL2M,EAAAA,aAAAA,IACIhjB,eAAAA,EAAAA,cACAE,aAAAA,EAAAA,2CAQ5BuB,UAAAA,2BAKJ/C,QAAAA,WAAAA,sCAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uhBAA2hBqB,QAAzkBA,YACAwkB,+BAAAA,WAAAA,sCAAAA,CAA8CzkB,YAAa,CAAEpB,OAAQ,uhBAA2hB6lB,+BAAhmBA,a,irCCxHA,kB,o3BAAYC,mBAAAA,kBAAAA,gBAAAA,eAAAA,kBAAAA,yBAAAA,2BAAAA,kBAAAA,WAAAA,aAAAA,kBAAAA,cAAAA,gBAAAA,kBAAAA,sBAAAA,qBAAAA,kBAAAA,kBAAAA,oBAAAA,kBAAAA,iBAAAA,gBAAAA,kBAAAA,WAAAA,aAAAA,kBAAAA,mBAAAA,qBAAAA,kBAAAA,kBAAAA,oBAAAA,kBAAAA,sBAAAA,wBAAAA,kBAAAA,YAAAA,cAAAA,kBAAAA,iBAAAA,mBAAAA,kBAAAA,WAAAA,a,CAAAA,oBAAAA,kBAAAA,KAiCL,IAAMC,wBAAyBpW,EAAAA,sBAAAA,0B,8RCrBtC5J,oBAAAA,OAAAA,yBACAA,oBAAAA,OAAAA,0BAEO,IAAMigB,oBAAsB,SAAtBA,oBAAuBlc,MAAD,OAAqB,sBACpD,OAAK8H,EAAAA,IAAAA,UAAL,cAIKgC,EAAAA,mBAAAA,iBAAL,cAIIqS,EAAAA,IAAAA,iBAAJ,cACW7b,EAAAA,IAAAA,WAAUN,KAAjB,sEADJ,GAHWM,EAAAA,IAAAA,WAAUN,KAAjB,2DAJOM,EAAAA,IAAAA,WAAUN,KAAjB,oDAcKoc,4BAA8B,SAA9BA,4BAA+Bpc,MAAD,OAAqB,oCAC5D,OAAK8H,EAAAA,IAAAA,UAAL,cAIKgC,EAAAA,mBAAAA,iBAAL,cAIIqS,EAAAA,IAAAA,iBAAJ,cACW7b,EAAAA,IAAAA,WAAUN,KAAjB,kEAGAsP,EAAAA,UAAAA,IAAmB+M,cAAvB,cACW/b,EAAAA,IAAAA,WAAUN,KAAjB,gEAGCsc,EAAAA,IAAAA,qCAAiC1hB,YAAtC,uBACW0F,EAAAA,IAAAA,WAAUN,KAAjB,mEAZOM,EAAAA,IAAAA,WAAUN,KAAjB,2DAJOM,EAAAA,IAAAA,WAAUN,KAAjB,oDAsBKuc,mBAAqB,SAArBA,mBAAsBvc,MAAD,OAAqB,qBACnD,OAAK8H,EAAAA,IAAAA,UAAL,aAIKgC,EAAAA,mBAAAA,iBAAL,aAIK0S,EAAAA,IAAAA,uBAAL,aAIKC,EAAAA,IAAAA,gBAAL,oBACWnc,EAAAA,IAAAA,WAAUN,KAAjB,uDAJOM,EAAAA,IAAAA,WAAUN,KAAjB,kDAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0DAJOM,EAAAA,IAAAA,WAAUN,KAAjB,mDAgBK0c,yBAA2B,SAA3BA,yBAA4B1c,MAAD,OAAqB,qBACzD,OAAK8H,EAAAA,IAAAA,UAAL,aAIKgC,EAAAA,mBAAAA,iBAAL,YAIK7N,mBAAAA,GAAAA,IAAAA,EAAAA,UAAAA,cAAuCA,mBAAAA,CAAvCA,YAAL,eACWqE,EAAAA,IAAAA,WAAUN,KAAjB,yDAJOM,EAAAA,IAAAA,WAAUN,KAAjB,0DAJOM,EAAAA,IAAAA,WAAUN,KAAjB,mDAYK2c,sBAAwB,SAAxBA,sBAAyB3c,MAAD,OAAqB,wBACtD,OAAK8H,EAAAA,IAAAA,UAAL,gBAIKgC,EAAAA,mBAAAA,iBAAL,uBACWxJ,EAAAA,IAAAA,WAAUN,KAAjB,6DAJOM,EAAAA,IAAAA,WAAUN,KAAjB,sDClEF4c,kBAA8C,SAA9CA,kBAA+C,MAA+C,IAA7CvjB,eAA6C,KAA7CA,eAAgB4S,WAA6B,KAA7BA,WAAYlB,WAAiB,KAAjBA,WACzE/K,MAAOC,EAAAA,QAAAA,KAEb,MAAI5G,WAAAA,eAAAA,WAAyC4S,WAAAA,2BAAwCxE,sBAAAA,QAAAA,GACjF,KAIA,wCACI,+BAAOtF,UAAU,KACb,oBAAC8Z,uBAAuB7O,WAAxB,CACIzU,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,oCAEItH,KAAMsjB,kBAAkBK,cACxBjV,SAAUuV,sBAAsB3c,SAGxC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBtiB,aACjE,oBAACuiB,uBAAuBjM,gBAAxB,CACItX,KAAMsjB,kBAAkBtiB,WACxBuW,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,gCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,mCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,8BAEI9K,MAAO,MAGf2nB,eAhBJ,EAiBI9kB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,+BAGhC,+BACImC,UADJ,IAEIG,aAAS2J,IAAAA,WAAAA,YAAuCmH,SAASnH,WAAD,WAARmH,KAAuC,GAEvF,oBAAC6I,uBAAuBa,OAAxB,CAA+BpkB,KAAMsjB,kBAAkBtiB,YACnD,8BAAQxE,MAAM,KADlB,KAEI,8BAAQA,MAAM,KAFlB,KAGI,8BAAQA,MAAM,KAHlB,KAII,8BAAQA,MAAM,KAJlB,KAKI,8BAAQA,MAAM,KALlB,KAMI,8BAAQA,MAAM,KANlB,KAOI,8BAAQA,MAAM,KAxC1B,OA2CI,+BAAOiN,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAAA,mBAC/C,2CACItjB,KAAMsjB,kBAAAA,iBACNJ,OAAQ,wBAAM,CACV,oBAACK,uBAAuB7O,WAAxB,CACInY,IAAG,UAAK+mB,kBAAAA,iBADZ,MAEItjB,KAAI,UAAKsjB,kBAAAA,iBAFb,MAGIrjB,OAAO2H,EAAAA,IAAAA,WAAUN,KAHrB,wBAIIqN,QAASpR,mBAAAA,CAAMgQ,WAANhQ,eAAAA,SAAAA,GAAAA,SAJb,SAKIoU,SAAS0M,EAAAA,sBAAAA,iBAAgB9Q,WAL7B,eAMI7E,SAAU,gCAAWgV,4BAAAA,KAAAA,CAAAA,MAAyCnQ,WAApD,gBACViE,YAPJ,aAQIE,kBAAkB,SAKlC,+BAAOjO,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBgB,oBACjE,oBAACf,uBAAuB/O,gBAAxB,CACIxU,KAAMsjB,kBAAkBgB,kBACxBjlB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,oCAGhC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBiB,cACjE,oBAAChB,uBAAuB7O,WAAxB,CACI1U,KAAMsjB,kBAAkBiB,YACxBtkB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,wBAGIqN,QAASpR,mBAAAA,CAAMgQ,WAAAA,cAANhQ,IAHb,SAIIoU,QAASpU,mBAAAA,GAAAA,IAAAA,EAAAA,UAJb,SAKImL,SAAU,gCDNK,SAAtB8V,oBAAuBld,MAAD,OAAqB,kCACpD,OAAK8H,EAAAA,IAAAA,UAAL,cAIKgC,EAAAA,mBAAAA,iBAAL,aAIK7N,mBAAAA,CAAAA,aAAAA,eAAAA,YAAL,eACWqE,EAAAA,IAAAA,WAAUN,KAAjB,wDAJOM,EAAAA,IAAAA,WAAUN,KAAjB,2DAJOM,EAAAA,IAAAA,WAAUN,KAAjB,mDCIiCkd,CAAAA,KAAAA,CAAAA,MAAiCjR,WAAAA,cAA5C,KACViE,YAAa,gBAGrB,+BAAO/N,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBmB,qBACjE,6CAAe5T,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BAAkBpV,GAAG,qDAG7B,+BAAOiO,QAASyI,WAAAA,UAAqBiR,kBAAkBmB,qBACnD,0CACIxkB,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,6BAEItH,KAAMsjB,kBAAkBmB,mBACxB3lB,YAAayU,WAAAA,oBAHjB,GAIIrT,eAAgBC,eAAAA,EAAAA,mBAChBC,aAAcC,aAAAA,EAAAA,6BAOlC,qD,g1BC1GA,IAAMqkB,uBAAmD,SAAnDA,uBAAoD,MAA+C,IAA7C/jB,eAA6C,KAA7CA,eAAgB4S,WAA6B,KAA7BA,WAAYlB,WAAiB,KAAjBA,WAC9E/K,MAAOC,EAAAA,QAAAA,KAEb,MAAI5G,WAAAA,eAAAA,WAAyC4S,WAAAA,2BAAwCxE,sBAAAA,QAAAA,IACjF,KAIA,wCACI,+BAAOtF,UAAU,KACb,oBAAC8Z,uBAAuB7O,WAAxB,CACIzU,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,kCAEItH,KAAMsjB,kBAAkBK,cACxBjV,SAAUuV,sBAAsB3c,SAGxC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBtiB,aACjE,oBAACuiB,uBAAuBjM,gBAAxB,CACItX,KAAMsjB,kBAAkBtiB,WACxBuW,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,gCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,mCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,8BAEI9K,MAAO,MAGf2nB,eAhBJ,EAiBI9kB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,+BAGhC,+BACImC,UADJ,IAEIG,aAAS2J,IAAAA,WAAAA,YAAuCmH,SAASnH,WAAD,WAARmH,KAAuC,GAEvF,oBAAC6I,uBAAuBa,OAAxB,CAA+BpkB,KAAMsjB,kBAAkBtiB,YACnD,8BAAQxE,MAAM,KADlB,KAEI,8BAAQA,MAAM,KAFlB,KAGI,8BAAQA,MAAM,KAHlB,KAII,8BAAQA,MAAM,KAJlB,KAKI,8BAAQA,MAAM,KALlB,KAMI,8BAAQA,MAAM,KANlB,KAOI,8BAAQA,MAAM,KAxC1B,OA2CI,+BAAOiN,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAAA,mBAC/C,2CACItjB,KAAMsjB,kBAAAA,iBACNJ,OAAQ,wBAAM,CACV,oBAACK,uBAAuB7O,WAAxB,CACInY,IAAG,UAAK+mB,kBAAAA,iBADZ,MAEItjB,KAAI,UAAKsjB,kBAAAA,iBAFb,MAGIrjB,OAAO2H,EAAAA,IAAAA,WAAUN,KAHrB,wBAIIqN,QAASpR,mBAAAA,GAAAA,SAAAA,EAAAA,SAJb,SAKIoU,SAAS0M,EAAAA,sBAAAA,iBAAgB9Q,WAL7B,eAMI7E,SAAU,gCAAWgV,4BAAAA,KAAAA,CAAAA,MAAyCnQ,WAApD,gBACViE,YAAa,oBAK7B,+BAAO/N,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBmB,qBACjE,6CAAe5T,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BAAkBpV,GAAG,mDAG7B,+BAAOiO,QAASyI,WAAAA,UAAqBiR,kBAAkBmB,qBACnD,0CACIxkB,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,6BAEItH,KAAMsjB,kBAAkBmB,mBACxB3lB,YAAayU,WAAAA,oBAHjB,GAIIrT,eAAgBC,eAAAA,EAAAA,mBAChBC,aAAcC,aAAAA,EAAAA,6BAOlC,+D,k4BC5EA,4BArBwD,SAAlDskB,sBAAmD,MAAmB,IAAjBtS,WAAiB,KAAjBA,WACjD/K,MAAOC,EAAAA,QAAAA,KAEb,OACI,wCACI,+BAAOkC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBsB,2BACjE,oBAACrB,uBAAuB/O,gBAAxB,CACIxU,KAAMsjB,kBAAkBsB,yBACxBvlB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,+BAGhC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAAA,kBAC/C,oBAACC,uBAAuB/O,gBAAxB,CACIxU,KAAMsjB,kBAAAA,gBACNjkB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,8B,opBCqE5C,aA5EyC,SAAnCud,OAAoC,MAA+C,IAA7ClkB,eAA6C,KAA7CA,eAAgB4S,WAA6B,KAA7BA,WAAYlB,WAAiB,KAAjBA,WAC5DyS,aAAiBvR,WAAzB,aAEMjM,MAAOC,EAAAA,QAAAA,KAEb,MAAI5G,aAAAA,eAAAA,WAA2CmkB,eAAiB/V,sBAAAA,QAAAA,IAC5D,KAIA,wCACI,+BAAOtF,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBtiB,aACjE,oBAACuiB,uBAAuBjM,gBAAxB,CACItX,KAAMsjB,kBAAkBtiB,WACxBuW,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,gCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,mCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,8BAEI9K,MAAO,MAGf2nB,eAhBJ,EAiBI9kB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,+BAGhC,+BACImC,UADJ,IAEIG,aAAS2J,IAAAA,WAAAA,YAAuCmH,SAASnH,WAAD,WAARmH,KAAuC,GAEvF,oBAAC6I,uBAAuBa,OAAxB,CAA+BpkB,KAAMsjB,kBAAkBtiB,YACnD,8BAAQxE,MAAM,KADlB,KAEI,8BAAQA,MAAM,KAFlB,KAGI,8BAAQA,MAAM,KAHlB,KAII,8BAAQA,MAAM,KAJlB,KAKI,8BAAQA,MAAM,KALlB,KAMI,8BAAQA,MAAM,KANlB,KAOI,8BAAQA,MAAM,KAjC1B,OAoCI,+BAAOiN,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAAA,mBAC/C,2CACItjB,KAAMsjB,kBAAAA,iBACNJ,OAAQ,wBAAM,CACV,oBAACK,uBAAuB7O,WAAxB,CACInY,IAAG,UAAK+mB,kBAAAA,iBADZ,MAEItjB,KAAI,UAAKsjB,kBAAAA,iBAFb,MAGIrjB,OAAO2H,EAAAA,IAAAA,WAAUN,KAHrB,wBAIIqN,QAASpR,mBAAAA,GAAAA,SAAAA,EAAAA,UAJb,SAKIoU,QAASpU,mBAAAA,GALb,SAMImL,SAAU8U,oBANd,MAOIhM,YAAa,oBAK7B,+BAAO5N,QAASyI,WAAAA,UAAqBiR,kBAAkByB,aACnD,oBAACxB,uBAAuB7O,WAAxB,CACI1U,KAAMsjB,kBAAkByB,WACxB9kB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,4BAGIqN,QAASpR,mBAAAA,GAAAA,SAAAA,EAAAA,UAHb,SAIIoU,QAASpU,mBAAAA,GAAAA,IAAAA,EAAAA,UAJb,SAKIiU,YALJ,aAMI9I,SAAUsV,yBAAyB1c,W,0tBClEvD,IAAM0d,OAAmC,SAAnCA,OAAoC,MAA+C,IAA7CrkB,eAA6C,KAA7CA,eAAgB0R,WAA6B,KAA7BA,WAAYkB,WAAiB,KAAjBA,WAC9DjM,MAAOC,EAAAA,QAAAA,KAEb,MAAI5G,aAAAA,eAAAA,WAA2C4S,WAAAA,eAA4BxE,sBAAAA,QAAAA,GACvE,KAIA,wCACI,+BAAOtF,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBtiB,aACjE,oBAACuiB,uBAAuBjM,gBAAxB,CACItX,KAAMsjB,kBAAkBtiB,WACxBuW,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,gCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,mCAEI9K,MAAO,KAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,8BAEI9K,MAAO,MAGf2nB,eAhBJ,EAiBI9kB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,iCAGhC,+BACImC,UADJ,IAEIG,aAAS2J,IAAAA,WAAAA,YAAuCmH,SAASnH,WAAD,WAARmH,KAAuC,GAEvF,oBAAC6I,uBAAuBa,OAAxB,CAA+BpkB,KAAMsjB,kBAAkBtiB,YACnD,8BAAQxE,MAAM,KADlB,KAEI,8BAAQA,MAAM,KAFlB,KAGI,8BAAQA,MAAM,KAHlB,KAII,8BAAQA,MAAM,KAJlB,KAKI,8BAAQA,MAAM,KALlB,KAMI,8BAAQA,MAAM,KANlB,KAOI,8BAAQA,MAAM,KAjC1B,OAoCI,+BAAOiN,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkByB,aACjE,oBAACxB,uBAAuB7O,WAAxB,CACI1U,KAAMsjB,kBAAkByB,WACxB9kB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,8BAGIkQ,YAHJ,aAII/C,YACI,4CAAoBpK,WAAWzC,EAAAA,IAAAA,WAAUN,KAAM,mCAC1CM,EAAAA,IAAAA,WAAUN,KANvB,kCASIqN,QATJ,kBAUIgD,QAVJ,sBAWIjJ,SAAUmV,mBAAmBvc,SAGrC,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBF,oBACjE,6CAAevS,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BAAkBpV,GAAG,0CAG7B,+BAAO8N,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkBF,oBACjE,0CACInjB,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,8DAEItH,KAAMsjB,kBAAkBF,kBACxBtkB,YAAayU,WAAAA,mBAHjB,GAIIrT,eAAgBC,eAAAA,EAAAA,kBAChBC,aAAcC,aAAAA,EAAAA,qBAGtB,+BAAOoJ,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkB2B,wBACjE,oBAAC1B,uBAAuB7O,WAAxB,CACI1U,KAAMsjB,kBAAkB2B,sBACxBhlB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,kCAGIkQ,YAAa,kBAOjC,+B,8/BCvFA,IA8BM0N,oBAA8E,uCAC/E5B,kBAAkB6B,iBAAmB,CAClCnV,WAAY,sDAAyBoV,OAAzB,GACZrV,WAAY,gCACZO,iBAAkB,qEAJ0D,oCAM/EgT,kBAAkB+B,WAAa,CAC5BrV,WAAY,+BAAGoV,gBAAH,sBAAoBxkB,UAApB,uBAAoCwkB,gBAAAA,OAAAA,GAApC,WAAkExkB,WAC9EmP,WAAY,+BAAGsV,WAAH,iBAAeF,iBAAf,8BAAsCE,WAAAA,OAAAA,GAAtC,kBACZ/U,iBAAkB,8DAAyB8U,OAAzB,KAT0D,oCAW/E9B,kBAAkBsB,yBAA2B,CAC1C5U,WAAY,+DACZD,WAAY,mEAA+DhB,sBAAAA,QAAAA,YAC3EuB,iBAAkB,uEAd0D,oCAgB/EgT,kBAAAA,gBAAiC,CAC9BtT,WAAY,6DACZD,WAAY,yDAAuChB,sBAAAA,QAAAA,YACnDuB,iBAAkB,yCAnCC,SAArBgV,mBAAsB,UAAD,kCAKvB,iBAAI1kB,cACIwkB,gBAAAA,OAAJ,IACI,kBA6BAE,CADc,oEAnB0D,oCAsB/EhC,kBAAkBtiB,WAAa,CAC5BgP,WAAY,gCACZD,WAAY,gCAAG/O,WAAH,yBAAoBoO,EAAAA,IAAAA,UAApB,aACZkB,iBAAkB,sCAAGsU,yBAAH,gCAA6BE,aAA7B,oBAA2CnB,cAA3C,4BACdmB,eAAiB/V,sBAAAA,QAAAA,YAChB6V,2BAA6B7V,sBAAAA,QAAAA,aAAsBK,EAAAA,IAAAA,UAFtC,kBAzB0D,oCA6B/EkU,kBAAkBK,cAAgB,CAC/B3T,WAAY,qEAA+DjB,sBAAAA,QAAAA,YAC3EgB,WAAY,gCAAG4T,cAAH,4BAAuBvU,EAAAA,IAAAA,UAAvB,gBACZkB,iBAAkB,2EAA+DvB,sBAAAA,QAAAA,cAhCL,oCAkC/EuU,kBAAAA,iBAAkC,CAC/BtT,WAAY,gCAAG8U,aAAH,oBAAiBF,yBAAjB,uCACRE,eAAiB/V,sBAAAA,QAAAA,KAAe6V,2BAA6B7V,sBAAAA,QAAAA,YACjEgB,WAAY,gCAAGhP,cAAH,4BAAuBA,cAAAA,OAAAA,IAA4BqO,EAAAA,IAAAA,UAASrO,cAA5D,KACZuP,iBAAkB,kCAAoB,IAAjBtP,WAAiB,OAAjBA,WACjB,OAAOoO,EAAAA,IAAAA,UAAP,eAvCwE,oCA0C/EkU,kBAAkBmB,mBAAqB,CACpCzU,WAAY,qEAA+DjB,sBAAAA,QAAAA,YAC3EgB,WAAY,gCACZO,iBAAkB,sCAAGgU,kBAAH,yBAAsBM,yBAAtB,gCAAgD7jB,cAAhD,4BACdujB,oBAAsBvV,sBAAAA,QAAAA,YACrB6V,2BAA6B7V,sBAAAA,QAAAA,MAAeK,EAAAA,IAAAA,UAASrO,cAFxC,OA7C0D,oCAiD/EuiB,kBAAkByB,WAAa,CAC5B/U,WAAY,gCAAGnP,MAAH,aAAUE,cAAV,qBAAyB+jB,aAAzB,2BAhFM,SAApBS,kBAAqB1kB,MAAD,aACtB,gBACI,SAGJ,IAAI2P,EAAAA,iBAAAA,GAAJ,OAA6B,CACzB,IAAMgV,sBAAwBjiB,mBAAAA,CAAAA,aAAAA,IAAAA,EAA9B,SAEA,OAAOA,mBAAAA,CAAAA,uBAAAA,QAAqC,IAA5C,MAGJ,SAsESgiB,CAAkB1kB,MAAOE,cAAzBwkB,KAA8CT,eAAiB/V,sBAAAA,QAAAA,YAChE+V,eAAiB/V,sBAAAA,QAAAA,IACrBgB,WAAY,gCAAGgV,WAAH,yBAAoB3V,EAAAA,IAAAA,UAApB,aACZkB,iBAAkB,kCAAiD,IAA9CvP,cAA8C,OAA9CA,cAAe+jB,aAA+B,OAA/BA,aAAc9jB,WAAiB,OAAjBA,WAC9C,OAAOoO,EAAAA,IAAAA,UAASrO,cAATqO,KAA+B0V,eAAiB/V,sBAAAA,QAAAA,KAAcK,EAAAA,IAAAA,UAArE,eAvDwE,oCA0D/EkU,kBAAkBF,kBAAoB,CACnCpT,WAAY,gCAAG8U,aAAH,oBAAiBnZ,eAAjB,6BAAsCmZ,eAAiB/V,sBAAAA,QAAAA,IAAvD,IAAqEpD,eAAAA,QACjFoE,WAAY,gCACZO,iBAAkB,sCAAGyU,WAAH,yBAAoB3V,EAAAA,IAAAA,UAApB,eA7D0D,oCA+D/EkU,kBAAkB2B,sBAAwB,CACvCjV,WAAY,gCAAG8U,aAAH,oBAAiBnZ,eAAjB,6BAAsCmZ,eAAiB/V,sBAAAA,QAAAA,IAAvD,IAAqEpD,eAAAA,QACjFoE,WAAY,gCAAGkV,sBAAH,oCAA+B7V,EAAAA,IAAAA,UAA/B,wBACZkB,iBAAkB,sCAAGyU,WAAH,yBAAoB3V,EAAAA,IAAAA,UAApB,eAlE0D,oCAoE/EkU,kBAAkBgB,kBAAoB,CACnCtU,WAAY,qEAA+DjB,sBAAAA,QAAAA,IAC3EgB,WAAY,8DAAiDhB,sBAAAA,QAAAA,YAC7DuB,iBAAkB,sCAAGvP,cAAH,4BAAuBqO,EAAAA,IAAAA,UAASrO,cAAhC,OAvE0D,oCAyE/EuiB,kBAAkBiB,YAAc,CAC7BvU,WAAY,qEAA+DjB,sBAAAA,QAAAA,IAC3EgB,WAAY,gCAAGwU,YAAH,0BAAqBnV,EAAAA,IAAAA,UAArB,cACZkB,iBAAkB,oEAAiDvB,sBAAAA,QAAAA,OA5E3E,qBAkFA,yCAFgC2B,EAAAA,+BAAAA,IAAhC,oB,klCC7GA,IAkFa+U,yBAA2B,SAA3BA,yBAA4B3kB,KAAD,iBACpC,IAAM4kB,sBAnFY,SAAhB5D,gBAAgB,qDACjBwB,kBAAAA,gBAAiCvU,sBAAAA,QAAAA,YADhB,kCAEjBuU,kBAAkBsB,yBAA2B7V,sBAAAA,QAAAA,YAF5B,kCAGjBuU,kBAAkBtiB,WAHD,sCAIjBsiB,kBAAkBK,cAJD,sCAKjBL,kBAAAA,iBALiB,sCAMjBA,kBAAkBmB,mBAND,sCAOjBnB,kBAAkByB,WAPD,sCAQjBzB,kBAAkBF,kBARD,sCASjBE,kBAAkB2B,sBATD,sCAUjB3B,kBAAkBgB,kBAAoBvV,sBAAAA,QAAAA,YAVrB,kCAWjBuU,kBAAkBiB,YAXD,sCAYjBjB,kBAAkB6B,kBAZD,qCAajB7B,kBAAkB+B,WAbD,SAmFYvD,GAE9B,SACI,6BAGJ,IAAI6D,EAAAA,KAAAA,IAAJ,MAAsB,CAClB,IAAM/V,gBAAiBqD,EAAAA,UAAAA,GAA6BnS,KAApD,iBAEA,kBACI,iEAEIC,cAAeD,KAFnB,cAGIikB,WAAYjkB,KAAAA,YAHhB,GAIIE,WAAYF,KAJhB,WAKIukB,WAAY,CAACzV,eAAD,OAKxB,OAAI+V,EAAAA,KAAAA,IAAJ,MACI,0DAEIb,aAAc/V,sBAAAA,QAAAA,IACdhO,cAAeD,KAHnB,cAIIikB,WAAYjkB,KAAAA,YAJhB,GAKIE,WAAYF,KALhB,WAMIqkB,kBAAkB,KAItBS,EAAAA,KAAAA,IAAJ,MACI,0DAEId,aAAc/V,sBAAAA,QAAAA,GACdqU,kBAAmBtiB,KAHvB,kBAIImkB,sBAAuBnkB,KAAAA,uBAJ3B,GAKIikB,WAAYjkB,KALhB,WAMIE,WAAYF,KAAKE,cAIrB6kB,EAAAA,KAAAA,IAAJ,MACI,0DAEIjB,yBAA0B7V,sBAAAA,QAAAA,GAC1BhO,cAAeD,KAHnB,cAII6iB,cAAe7iB,KAJnB,cAKIE,WAAYF,KALhB,WAMIwjB,mBAAmB5U,EAAAA,UAAAA,GAAmC5O,KAN1D,mBAOI2jB,mBAAoB3jB,KAPxB,mBAQIyjB,YAAazjB,KAAKyjB,eAItB9Q,EAAAA,KAAAA,IAAJ,MACI,0DAEImR,yBAA0B7V,sBAAAA,QAAAA,IAC1B4U,cAAe7iB,KAHnB,cAIIE,WAAYF,KAJhB,WAKIC,cAAeD,KALnB,cAMI2jB,mBAAoB3jB,KAAK2jB,qBAIjC,uB,uCCvJEqB,eAA2C,SAA3CA,eAA4C,MAA+D,IAA7DV,gBAA6D,KAA7DA,gBAAiB/S,WAA4C,KAA5CA,WAAYkB,WAAgC,KAAhCA,WAAYwS,cAAoB,KAApBA,cACnFze,MAAOC,EAAAA,QAAAA,KAEb,OACI,wCACI,+BAAOkC,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkB+B,aACjE,oBAAC9B,uBAAuB9G,mBAAxB,CACIzc,KAAMsjB,kBAAkB+B,WACxBhmB,QAAQuI,EAAAA,IAAAA,WAAUN,KAFtB,2BAGIoV,WAAY0I,gBAAA,KAAoB,qBAAW,CACvCnlB,OAAO6S,EAAAA,YAAAA,IAAahS,KAAD,QAAeA,KAAf,UAA+BA,KADX,YAEvCtE,MAAOsE,KAFgC,IAGvCklB,SAAS1U,EAAAA,IAAAA,YAAWxQ,KAHmB,aAIvCmlB,aAJuC,MAKvCxT,SAAUc,WAAW4R,wBAIjC,+BAAO1b,UAAP,IAAqBG,QAASyI,WAAAA,UAAqBiR,kBAAkB6B,mBACjE,oBAAC5B,uBAAuB7Q,SAAxB,CACI1S,KAAMsjB,kBAAkB6B,iBACxBllB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,6BAGI3C,QAAS,mBACA4O,WAAL,iBAGIwS,cAAczC,kBAAAA,gBAAgCvU,sBAAAA,QAAAA,YAF9CgX,cAAczC,kBAAkB+B,WAAhCU,UAW5B,+C,q7DC9BA,IAAMG,SAAoC,SAApCA,WACF,IAAM5e,MAAOC,EAAAA,QAAAA,KACb,YAAiCiG,EAAAA,UAAAA,KAAzB7M,eAAR,0BAAwBG,KAAxB,gBACA,eAA4C2K,EAAAA,aAAAA,KAApCE,eAAR,6BAAwByZ,gBAAxB,8BAOMzX,eAAgBC,EAAAA,iBAAAA,IALO,SAAvBC,qBAAwBlE,QAC1B,IAAM7I,KFO4B,SAA7BqlB,2BAA8B,OAAD,iBAItC,IAAKxc,OAAD,kBAA4BA,OAA5B,YAAiDA,OAAAA,WAAAA,OAArD,EAAmF,CAC/E,IAAMyc,YAAaC,EAAAA,UAAAA,IAAejB,gBAAiBzb,OAAnD,YAEA,MAAO,CACHlJ,KAAM6lB,KAAAA,GAAAA,QACNvlB,cAAe,EAACwlB,EAAAA,sBAAAA,iBAAgBH,WAF7B,cAGHplB,WAAY2I,OAAAA,WAAAA,OAHT,WAIHob,YAAY3V,EAAAA,IAAAA,UAASzF,OAATyF,YAA8BzF,OAA9ByF,gBAAkDvF,GAItE,GAAIF,OAAAA,eAAwBoF,sBAAAA,QAAAA,IACxB,MAAO,CACHtO,KAAM6lB,KAAAA,GAAAA,QACNvlB,cAAe4I,OAFZ,cAGH3I,WAAY2I,OAHT,WAIHob,WAAYpb,OAAOob,YAI3B,GAAIpb,OAAAA,eAAwBoF,sBAAAA,QAAAA,GAAY,CACpC,IAAMqU,mBAAoB9O,EAAAA,aAAAA,IACtB3K,OAD8D,kBAE9DxJ,eAAAA,EAAAA,kBACAE,aAAAA,EAAAA,mBAEJ,MAAO,CACHI,KAAM6lB,KAAAA,GAAAA,SACNlD,kBACA6B,sBAAuBtb,OAHpB,sBAIH3I,WAAY2I,OAJT,WAKHob,WAAYpb,OAAOob,YAI3B,IAAMN,oBAAqBnQ,EAAAA,aAAAA,IACvB3K,OAD+D,mBAE/DxJ,eAAAA,EAAAA,mBACAE,aAAAA,EAAAA,yBAGJ,OAAIsJ,OAAAA,2BAAoCoF,sBAAAA,QAAAA,IAC7B,CACHtO,KAAM6lB,KAAAA,GAAAA,iBACN3C,cAAeha,OAFZ,cAGH3I,WAAY2I,OAHT,WAIH5I,cAAe4I,OAJZ,cAKH8a,oBAID,CACHhkB,KAAM6lB,KAAAA,GAAAA,oBACNvlB,cAAe4I,OAFZ,cAGHga,cAAeha,OAHZ,cAIH3I,WAAY2I,OAJT,WAKH2a,mBAAmBhV,EAAAA,UAAAA,GAAmC3F,OALnD,mBAMH8a,mBACAF,YAAa5a,OAAAA,oBAA8BoF,sBAAAA,QAAAA,IAAcpF,OAA5CA,iBAAkEE,GErElEsc,CAA2Bxc,OAAxC,iBACA,MAAO,CAACmE,cAAAA,EAAAA,YAAR,SAGyDC,OAAAA,EAAAA,gBACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACI,oBAACiQ,uBAAuBvV,cAAxB,CACIC,cAAewX,yBAAyB3kB,KAD5C,iBAEIoN,SAFJ,cAGIC,WAAY,0BAA2C,IAAhCoF,WAAgC,KAAxC5J,OAAoBoc,cAAoB,KAApBA,cACzB1T,WAAa,8GAEf1G,eACA/K,UAAWD,eAHI,UAIfE,MAAOF,eAJQ,MAKfykB,mBAGJ,OACI,8BACI1R,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIqM,cAAcC,EAAAA,YAAAA,GAFlB,YAGIC,aAHJ,WAIIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAJzB,mBAKIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KALzB,mBAMI0M,SANJ,eAOIC,gBAAiB,wCACjBC,MARJ,cASInU,SAAS,GAET,oBAACwjB,uBAAuBnV,KAAxB,CAA6BC,gBAAgB,GACzC,+CACI+W,gBACA/S,WACAkB,WACAwS,gBAEJ,2CAAuB1T,aACvB,kDACI1R,eACA4S,WACAlB,aAEJ,uDACI1R,eACA4S,WACAlB,aAEJ,uCAAQ1R,eAAgC4S,WAAwBlB,aAChE,4BAAQ1R,eAAgC4S,WAAwBlB,aAChE,+BAAOzI,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KAjCvC,2BA2ChB,kC,gmDCnEA,wBACIvJ,MADW,iBAEXC,UAFW,mBAGXvC,WAAY,CAACoZ,WAAD,iDAQhB,IAAM5W,SAAyB,SAAzBA,SAA0B,MAA2B,IAAzBsC,QAAyB,KAAzBA,QAASqB,UAAgB,KAAhBA,UAUvC,OACI,iCAAW4K,KAVE,SAAXC,SAAYC,SACdA,QAAAA,OAAAA,oBAAAA,MAAAA,IAEI,CAAEoI,KAAM,IACR,CACIC,SAAU,OAMd,+CAAyBvU,OAAzB,QAA0CoB,WACtC,uCAHZ,SASS/C,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QADW,wBAEXqB,UAAAA,2BAGG,IAAM4kB,YAAcvoB,SAAAA,KAApB,IACPuoB,YAAAA,KAAmB,CACfjmB,QAAS,8BAAF,8DAEHC,OAAQ,8BAAF,iCACCD,wBAAAA,WADD,IAEFI,eAAgB,CACZC,UADY,WAEZC,MAAO,WAInBe,UAAAA,2BAKJ/C,QAAAA,WAAAA,8BAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,+gBAAmhBqB,QAAjkBA,YACA2nB,YAAAA,WAAAA,8BAAAA,CAA2B5nB,YAAa,CAAEpB,OAAQ,+gBAAmhBgpB,YAArkBA,a,q1ECnEMC,mBAA+C,SAA/CA,mBAAgD,MAAiC,IAA/B1oB,MAA+B,KAA/BA,MAAO6L,QAAwB,KAAxBA,QAAS/E,SAAe,KAAfA,SACpE,OACI,+BAAO4E,UAAP,IAAqBG,SACjB,4DADJ,OADJ,WAQJ,uD,4qBCNA,IAAM8c,0BAAsD,SAAtDA,0BAAuD,MAA6B,IAA3BvlB,cAA2B,KAA3BA,cAAeE,MAAY,KAAZA,MACpEiG,MAAOC,EAAAA,QAAAA,KAEb,OACI,yCACKsI,EAAAA,cAAAA,GAAAA,gBACG,mDAAoB9R,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,6CAE9CmI,EAAAA,cAAAA,GAAAA,gBACG,wCACI,mDAAoB1R,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,oCACvC,0EAAiBnG,cAAjB,oBAA0CA,cAFlD,aAII,mDAAoBpD,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,mCACvC,gEAAcnG,cALtB,MAOI,mDACIpD,MACKsD,MAAD,iBAEMuG,EAAAA,IAAAA,WAAUN,KAAM,oDADhBM,EAAAA,IAAAA,WAAUN,KADhB,mDAKJ,gEACI,+BACI3L,GACK0F,MAAD,gBAEM,iDAFN,oDAOhB,mDACItD,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,kDAAmD,CACtE0J,KAAM7P,cAAcY,WAGxB,gEACI,+BAAkBpG,GAAIwF,cAAAA,wBAAAA,KAA+C,aASjG,sF,+1BClDMwlB,8BAA0D,SAA1DA,8BAA2D,MAAa,IAAX7lB,KAAW,KAAXA,KACzDwG,MAAOC,EAAAA,QAAAA,KAEb,OAAIkM,EAAAA,KAAAA,IAAJ,MACI,KAIA,wCACI,mDAAoB1V,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,wCACvC,gEACI,+BAAkB3L,GAAImF,KAAAA,kBAAAA,KAAgC,UAG9D,mDACI/C,OAAO6J,EAAAA,IAAAA,WAAUN,KADrB,iCAEIsC,SAASwF,EAAAA,IAAAA,UAAStO,KAAD,cAEjB,iEAAcwQ,EAAAA,IAAAA,YAAWxQ,KAXrC,iBAiBJ,oF,6vBCvBA,IAcM8lB,2BAA6B,SAA7BA,2BAA8BnmB,MAChC,OAAIA,OAAS6lB,KAAAA,GAAAA,SACT,SAGJ,eAWEO,iBAA6C,SAA7CA,iBAA8C,MAAa,IAAX/lB,KAAW,KAAXA,KAC5CwG,MAAOC,EAAAA,QAAAA,KAEb,OACI,wCACI,mDAAoBxJ,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,sCACvC,gEApCW,SAArBwf,mBAAsBC,iBAAD,MACvB,IAAM/lB,WAAa0Z,SAASqM,iBAA5B,IAEA,WAAI/lB,YACO4G,EAAAA,IAAAA,WAAUN,KAAjB,wCAGJ,IAAItG,YACO4G,EAAAA,IAAAA,WAAUN,KAAjB,wCAGGM,EAAAA,IAAAA,WAAUN,KAAM,qCAAsC,CAAEtG,aAyBrC8lB,CAAmBhmB,KAAD,WAFxC,QAII,mDAAoB/C,MAAO6oB,2BAA2B9lB,KAAD,OACjD,gEAjBkB,SAA5BkmB,0BAA6BlmB,MAC/B,OAAI8kB,EAAAA,KAAAA,IAAJ,OACWtU,EAAAA,IAAAA,YAAWxQ,KAAlB,aAGGwQ,EAAAA,IAAAA,YAAWxQ,KAAAA,cAAlB,IAY0BkmB,CALtB,UAOMnB,EAAAA,KAAAA,IAAAA,QAA6BpS,EAAAA,KAAAA,IAA9B,QACG,wCACI,mDAAoB1V,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,sDACvC,gEACI,+BAAkB3L,GAAImF,KAAAA,OAAcwlB,KAAAA,GAAAA,iBAAdxlB,KAAiD,UAG/E,mDAAoB/C,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,oCACvC,iEAAcgK,EAAAA,IAAAA,YAAWxQ,KAPjC,iBASI,qEAA+BA,UAOnD,0D,swBC3DMmmB,mBAA+C,SAA/CA,mBAAgD,MAAwB,IAAtBlpB,MAAsB,KAAtBA,MAAO8G,SAAe,KAAfA,SACrDwE,KAAM5B,EAAAA,IAAAA,UAAZ,sBAEA,OACI,mEAAoBC,UAAW2B,IAA/B,MAA0C3F,OAAQ3F,OAC9C,2BAAK2J,UAAW2B,IAAAA,QAAAA,YAFxB,YAOJ,uD,glBCgBA,wBAnCmB,SAAb6d,aAAa,OACf,2BACIzhB,MADJ,GAEIC,OAFJ,GAGIF,QAHJ,YAII2hB,QAJJ,QAKIzlB,QALJ,MAMImH,MANJ,6BAOIue,WAAW,gCAEX,2BATJ,MAUI,yBACIzrB,GADJ,iCAEIoN,OAFJ,OAGIC,YAHJ,IAIIrD,KAJJ,OAKIC,SALJ,UAMIsD,UAAU,mCAEV,yBAAGvN,GAAH,kCAAwCuN,UAAU,kCAC9C,8BAAQvN,GAAR,OAAkBgK,KAAlB,UAAiCG,GAAjC,KAAyCC,GAAzC,KAAiDC,EAAE,OACnD,yBAAGrK,GAAH,SAAeqN,YAAf,IAA+BrD,KAAK,WAChC,yBAAGhK,GAAG,WACF,yBAAGA,GAAG,cACF,4BACIkK,EADJ,g4CAEIlK,GAAG,iBChBnC,IAAM0rB,WAAuC,SAAvCA,WAAwC,MAAkB,IAAhBzlB,UAAgB,KAAhBA,UACtCyH,KAAM5B,EAAAA,IAAAA,UAAZ,cAEA,OACI,2BAAKC,UAAW2B,IAAIG,OAChB,2BAAK9B,UAAW2B,IAAAA,QAAAA,SACZ,sCAFR,OAII,+BACI,0EAAiBzH,UAAAA,OAAjB,oBAA6CA,UAAAA,OADjD,YAEI,gEAAcA,UAAAA,OAP1B,QAaJ,uC,kmBCdM0lB,kCAA8D,SAA9DA,kCAA+D,MAA2C,IAAzCC,iBAAyC,KAAzCA,iBAAkBC,iBAAuB,KAAvBA,iBAC/ElgB,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,IAAAA,UAAZ,qCAEA,OACI,0BAAIC,UAAW2B,IAAIG,OACd+d,iBAAA,KAAqB,kBAClB,OACI,0BACI7f,UAAW2B,IAAAA,QADf,eAEI9M,IAAG,UAAKkrB,QAAL,aAAoBA,QAAAA,YAApB,YAA8CA,QAAAA,YAA9C,MAEH,gEACKD,kBACK5f,EAAAA,IAAAA,WAAUN,KAAM,wDAAyD,CACrE0O,KAAM0R,mBAAAA,QAAkBD,QAAlBC,KAAAA,SAEV9f,EAAAA,IAAAA,WAAUN,KAAM,uDAAwD,CACpE0O,KAAM0R,mBAAAA,QAAkBD,QAAlBC,KAAAA,SAGpB,iEACKpW,EAAAA,IAAAA,YAAWmW,QAAAA,YADhB,YAC6CnW,EAAAA,IAAAA,YAAWmW,QAAAA,YAfhE,YAwBhB,wG,k7BC9BA,IAsBME,eAAiB,SAAjBA,eAAkB7mB,MACpB,OAAO+kB,EAAAA,KAAAA,IAAAA,QAA6BpS,EAAAA,KAAAA,IAApC,OAGEmU,6BAAyD,SAAzDA,6BAA0D,MAA4C,IAA1CtmB,8BAA0C,KAA1CA,8BAA+BR,KAAW,KAAXA,KACvFwG,MAAOC,EAAAA,QAAAA,KACLsgB,cAAoCvmB,8BAA5C,cAAuBkmB,iBAAqBlmB,8BAA5C,iBAEMwmB,8BA9B+B,SAAnCC,iCAAoC,oBAAD,gCAKrC,IAAIC,UAAJ,EAcA,OAZAR,iBAAAA,SAAyB,sBACjBS,EAAAA,IAAAA,4BAA2BC,WAAD,YAA9B,uBACIF,UAAAA,MAIRH,cAAAA,SAAsB,sBACdI,EAAAA,IAAAA,4BAA2BE,WAAD,YAA9B,uBACIH,UAAAA,MAIR,SAWsCD,EADV/U,EAAAA,UAAAA,GAA5B,MACsE,iBAAtE,eAMA,OACI,wCACI,mDAAoBjV,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,gDACtChG,8BAAAA,kBACKsG,EAAAA,IAAAA,WAAUN,KADfhG,qDADL,KAII,qFACIimB,iBAAkBjmB,8BADtB,iBAEIkmB,kBAAkB,KAI1B,mDAAoBzpB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,+CACtChG,8BAAAA,kBACKsG,EAAAA,IAAAA,WAAUN,KADfhG,oDADL,KAII,qFACIimB,iBAAkBjmB,8BADtB,cAEIkmB,kBAAkB,KAI1B,mDACIzpB,MACI4pB,eAAAA,OACM/f,EAAAA,IAAAA,WAAUN,KADhBqgB,kEAEM/f,EAAAA,IAAAA,WAAUN,KAAM,6DAG1B,gEACI,+BAAkB3L,GAAImsB,8BAAgC,KAAO,YAOjF,8F,84BCtFA,sB,2DAAYM,uBAAAA,sBAAAA,wBAAAA,0B,CAAAA,wBAAAA,sBAAAA,KAQZ,IAAMC,0B,8JAAkD,CAAH,GAChDD,sBADgD,wBACArZ,sBAAAA,QAAAA,YAGxCuZ,6BAA+B,SAA/BA,+BACT,kCAGSC,4BAA6Bpb,EAAAA,sBAAAA,0BCf7Bqb,gCAAkC,SAAlCA,gCAAmClhB,MAAD,OAAqB,gBAChE,QAAI9K,MACA,OAAOoL,EAAAA,IAAAA,WAAUN,KAAjB,kE,oYCWFmhB,qBAAiD,SAAjDA,qBAAkD,MAAqB,IAAnB7S,aAAmB,KAAnBA,aAChDtO,MAAOC,EAAAA,QAAAA,KACL9G,KAAkBmV,aAA1B,KAAcY,QAAYZ,aAA1B,QACA,GAAInV,OAAS4U,aAAAA,EAAAA,gBAAkC,CAC3C,IAAMqT,qBAAN,aACA,OACI,wCACI,mDAAoB3qB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,iDACvC,gEAAcohB,qBAFtB,mBAII,mDAAoB3qB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,iDACvC,gEAAcogB,mBAAAA,QAAkBgB,qBAAlBhB,KAN1B,SAWJ,GACIjnB,OAAS4U,aAAAA,EAAAA,cACT5U,OAAS4U,aAAAA,EAAAA,YACT5U,OAAS4U,aAAAA,EAAAA,mBACX,CAUE,OACI,mDAAoBtX,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,sDACrCkP,SAAD,YAAuB,oBAAoBmS,EAAAA,aAAAA,IAApB,MAAvB,SAXkC,SAArCC,qCACF,OAAOpS,QAAA,QACK,oBAAoBmS,EAAAA,aAAAA,IAApB,MADL,KAEE,oBAAGnqB,IAAH,UAAQ7C,GAAR,SAAY2C,SAAZ,sBACD,qCAAOwL,KAAP,IAAmBvN,IAAnB,GAA4Bc,OAAO,UADlC,aASDurB,GAEA,0DAAanoB,KAAK,UACbmH,EAAAA,IAAAA,WAAUN,KAN3B,uDAYJ,aAGJ,6E,krBC/CA,IAAMuhB,gBAA4C,SAA5CA,gBAA6C,MAAa,IAAXC,KAAW,KAAXA,KACjD,OACI,0BAAIphB,UAAU,sBACTohB,KAAA,KAAS,mBACN,0BAAIvsB,IAAKwsB,EAAT,IAAgBrhB,UAAU,+BACtB,2BAAKA,UAAU,wCACX,4DAAUqhB,EADd,eAEI,2BAAKrhB,UAAU,mBACX,gEAAcqhB,EAJ1B,eAOKA,EAAAA,SAAa,2BAAKrhB,UAAU,wCAAwCqhB,EARnE,eAetB,mE,gvBCrBA,IAAMC,2BAAgD,SAAhDA,6BACF,IAAM1hB,MAAOC,EAAAA,QAAAA,KACb,kBAEIiG,EAAAA,UAAAA,KAFJ,MACa+S,8BADb,+CAC4CG,yBAD5C,0CAIA,OAAKH,+BAAL,yBASI,mDAAoBxiB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,uCACvC,kEACIwhB,KAAMpI,yBAAA,KAA6B,6BAAmB,CAClDnkB,IAAKqZ,aAAAA,KAAoBA,aADyB,YAElDqT,eAAerhB,EAAAA,IAAAA,WAAUN,KAAM,gBAAP,OAAuBsO,aAAAA,KAFG,gBAGlDsT,aAAathB,EAAAA,IAAAA,WAAUN,KAAM,gBAAiB,CAC1ChE,KAAKgO,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgBzO,aAAAA,YADU,MAE1CpS,IAAKoS,aAAAA,SAAAA,YAECtE,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgBzO,aAAAA,YAAjB,QAEpBuT,QAAS,uEAAsBvT,sBAlBvC,mDAAoB7X,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,uCACvC,iEAAcM,EAAAA,IAAAA,WAAUN,KAFhC,yDA0BR,yF,ooBCnCA,IAAM8hB,oBAAyC,SAAzCA,sBACF,IAAM9hB,MAAOC,EAAAA,QAAAA,KACb,kBAEIiG,EAAAA,UAAAA,KAFJ,MACawS,mBADb,oCACiCQ,8BADjC,+CAIA,IAAKR,qBAAL,8BACI,OACI,mDAAoBjiB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,gCACvC,iEAAcM,EAAAA,IAAAA,WAAUN,KAFhC,sCAMJ,IACI2Y,SAKAD,mBANJ,SAEIE,0BAIAF,mBANJ,0BAGII,iBAGAJ,mBANJ,iBAIIG,0CAEAH,mBANJ,0CAKIK,2CACAL,mBANJ,2CAQA,OACI,wCACI,mDAAoBjiB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,iCAC3C,mDAAoBvJ,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,uCACvC,iEAAcgK,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAHjC,aAKI,mDAAoBtmB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,0CACvC,gEAAc4Y,2BAA4BtY,EAAAA,IAAAA,WAAUN,KAAb,OAA2BM,EAAAA,IAAAA,WAAUN,KANpF,SAQI,mDAAoBvJ,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,0CACvC,gEAAc8Y,kBAAmBxY,EAAAA,IAAAA,WAAUN,KAAb,OAA2BM,EAAAA,IAAAA,WAAUN,KAT3E,SAWI,mDACIvJ,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,0EAEvB,+BAAOsC,SAAP,0CAA4DpD,OAAO,QAC/D,iEACKoB,EAAAA,IAAAA,WAAU,KALvB,wFAWI,+BAAOgC,QAAP,0CAA2DpD,OAAO,QAC9D,kEACIsiB,KAAMzI,2CAAA,KACF,mBAAGjK,mBAAH,wBAAuB/S,YAAvB,iBAAoCgT,SAApC,oBAAoD,CAChD9Z,IAAK6Z,mBAD2C,YAEhD6S,cAFgD,mBAGhDC,aAAathB,EAAAA,IAAAA,WAAUN,KAAM,gBAAiB,CAC1ChE,KAAKgO,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgBhhB,YADU,MAE1CG,IAAK6S,SAAW,YAAa/E,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgBhhB,YAAjB,kBAW3E,2E,8jBCqDA,sBAhHkD,SAA5CgmB,gBAA6C,MAAe,IAAbrQ,OAAa,KAAbA,OAC3C1R,MAAOC,EAAAA,QAAAA,KAETsT,aAUA7B,OAXJ,aAEI8B,oBASA9B,OAXJ,oBAGIgC,eAQAhC,OAXJ,eAIIM,iBAOAN,OAXJ,iBAKI+B,gBAMA/B,OAXJ,gBAMIgB,uDAKAhB,OAXJ,uDAOIe,iDAIAf,OAXJ,iDAQIsB,mCAGAtB,OAXJ,mCASIiB,kBAEAjB,OAXJ,kBAUIuB,eACAvB,OAXJ,eAaA,OACI,wCACI,mDAAoBjb,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,wDACvC,gEACKuT,aAAA,KACQ,6BAAiBjT,EAAAA,IAAAA,WAAUN,KAAM,eAAP,OAAsBgiB,YAAhD,mBADR,KAHb,QAQKxO,qBACG,mDAAoB/c,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,kDACvC,gEAVZ,sBAaK0T,gBACG,mDAAoBjd,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,2DACvC,gEAfZ,iBAkBKgS,kBACIyB,iBACG,mDACIhd,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,2DAEvB,gEACKgS,iBAAmB,QAAUoO,mBAAAA,QAAAA,gBAxBlD,QA4BK1N,wDACG,mDACIjc,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,oEAEvB,gEACKyS,kDACKnS,EAAAA,IAAAA,WAAUN,KADiC,OAE3CM,EAAAA,IAAAA,WAAUN,KAnChC,UAuCKyS,IAAAA,kDACG,wCACI,mDACIhc,OAAO6J,EAAAA,IAAAA,WAAU,KAAD,2EAKhB,iEACK0J,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgB/J,MAAAA,wCAAD,EAACA,mCARxC,SAWI,mDACIvc,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,uEAEvB,gEAAcgT,mCAdtB,6BAgBI,mDAAoBvc,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,uDACvC,gEAAcgT,mCAzD9B,eA6DKL,IAAAA,mBAAAA,gBACG,wCACI,mDACIlc,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,+DAEvB,gEAAciT,eAJtB,OAMI,mDACIxc,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,8DAEvB,gEAAciT,eATtB,gBAWI,mDACIxc,OAAO6J,EAAAA,IAAAA,WAAU,KAAD,8EAKhB,gEACK2S,eAAAA,uBAAuC3S,EAAAA,IAAAA,WAAUN,KAAjDiT,OAA+D3S,EAAAA,IAAAA,WAAUN,KAhF9F,WAqFK2S,IAAAA,mBACG,mDAAoBlc,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,2DACvC,iEACKM,EAAAA,IAAAA,WAAUN,KAzF/B,qE,smBCeJ,6CAjCkE,SAA5DiiB,yCACF,IAAMjiB,MAAOC,EAAAA,QAAAA,KACb,kBAEIiG,EAAAA,UAAAA,KAFJ,MACamT,sCADb,uDACoDF,iDADpD,kEAIA,OAAKE,uCAAL,iDAWI,mDAAoB5iB,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,mDACvC,kEACIwhB,KAAMnI,sCAAA,KAA0C,uBAAa,CACzDpkB,IAAKyc,OAAAA,eAAwBA,OAD4B,YAEzDiQ,cAAejQ,OAF0C,eAGzDkQ,aAAathB,EAAAA,IAAAA,WAAUN,KAAM,gBAAiB,CAC1ChE,KAAKgO,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgBrL,OAAAA,YADU,MAE1CxV,IAAKwV,OAAAA,SAAAA,YAA+B1H,EAAAA,IAAAA,aAAW+S,EAAAA,sBAAAA,iBAAgBrL,OAAAA,YAAjB,QAElDmQ,QAAS,qCAAiBnQ,gBAlBlC,mDAAoBjb,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,mDACvC,iEACKM,EAAAA,IAAAA,WAAUN,KAHvB,6E,ovBCNR,IAAMkiB,2CAAgE,SAAhEA,6CACF,IAAMliB,MAAOC,EAAAA,QAAAA,KACLoE,gBAAmBF,EAAAA,aAAAA,KAA3B,eACMkN,uBAAoBhN,IAAAA,gBAAgCA,eAAAA,OAA1D,EAEA,OACI,wCACI,mDAAoB5N,OAAO6J,EAAAA,IAAAA,WAAUN,KAAM,mDACvC,6CAAuBqR,oBACvB,yCAAmBA,kBAAsChN,kBAE7D,qEALJ,MAMI,2DANJ,MAOI,4EARR,QAaJ,yH,oyBC0EA,gCA5EqB,SAAf8d,eACF,IAAMniB,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,IAAAA,UAAZ,gBACA,YAAsE+F,EAAAA,UAAAA,KAA9D1M,KAAR,gBAAcK,cAAd,yBAA6BE,MAA7B,iBAAoCC,8BAApC,yCACMM,WAAY6J,EAAAA,aAAAA,KAIZkC,eAAgBC,EAAAA,iBAAAA,IAFO,SAAvBC,uBAAuB,WAEgCE,OAAAA,EAAAA,iBACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACI,oBAACiV,2BAA2Bva,cAA5B,CACIC,cAAeqa,+BACfpa,SAFJ,cAGIC,WAAY,sBACR,OACI,oBAACoa,2BAA2Bna,KAA5B,CAAiCC,gBAAgB,GAC7C,8BACIqF,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIqM,cAAcC,EAAAA,YAAAA,GAFlB,gBAGIC,aAHJ,eAIIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAJzB,uBAKIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KALzB,uBAMI0M,SANJ,eAOIC,gBAAiB,wCACjBC,MARJ,cASInU,SAAS,GAET,+BAAO0J,UAAU,KACb,6CAAeoH,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BAAkBpV,GAAG,4BAG7B,+BAAO8N,UAAU,KACb,2BAAK/B,UAAW2B,IAAIG,OAChB,+BAAOC,UAAU,KACb,2CAAY7H,aAEhB,mDAAoB7D,MAAM,aACtB,wDAAkB+C,QAEtB,mDAAoB/C,MAAM,wBACtB,2EAA2BoD,cAA8BE,SAE7D,mDAAoBtD,MAAM,oBACtB,gFACIuD,8BACAR,QAGR,mDAAoB/C,MAAM,0CACtB,4FAlChB,SAsCI,+BAAO0L,UAAU,KACb,oBAAC8e,2BAA2B9Z,qBAA5B,CACIzO,KAAMooB,sBAAsBsB,wBAC5BzpB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,wCAGIoH,SAAU8Z,gCAAgClhB,SAGlD,+BAAOmC,UAAU,KACb,2BAAK7N,MAAO,CAAEyQ,UAAW,WACrB,6DAjDpB,2B,wqCCpBhB,4BACItO,MADW,qBAEXC,UAFW,0BAGXvC,WAAY,CAACoZ,WAAD,iDAQhB,IAAM5W,SAAyB,SAAzBA,SAA0B,MAA2B,IAAzBsC,QAAyB,KAAzBA,QAASqB,UAAgB,KAAhBA,UACvC,OACI,+CAAyBpB,OAAzB,QAA0CoB,WACtC,8CAFR,QAOS/C,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QADW,wBAEXqB,UAAAA,2BAGG,IAAM+nB,iBAAmB1rB,SAAAA,KAAzB,IACP0rB,iBAAAA,KAAwB,CACpBppB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDqC,iBAAiB,IAErBzB,cAAe,CACXY,QADW,QAEXC,UAFW,WAGXF,IAHW,aAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,UAAAA,2BAGG,IAAMgoB,gBAAkB3rB,SAAAA,KAAxB,IACP2rB,gBAAAA,KAAuB,CACnBrpB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFI,eAAgB,cAAF,iBACPJ,wBAAAA,UAAAA,mBADO,IAEVK,UAAW,aAEfE,KAAM,CACFL,KADE,kBAEFO,WAFE,EAGF2iB,cAHE,aAIF5iB,cAAe,kBAI3Ba,UAAAA,2BAGG,IAAMioB,oBAAsB5rB,SAAAA,KAA5B,IACP4rB,oBAAAA,KAA2B,CACvBtpB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFe,8BAA+B,CAC3BwoB,kBAD2B,EAE3BC,kBAF2B,EAG3BlC,cAAe,CACX,CACI7R,KADJ,KAEI3S,YAAa,CACTC,IADS,aAETE,IAAK,gBAIjBgkB,iBAAkB,CACd,CACIxR,KADJ,KAEI3S,YAAa,CACTC,IADS,aAETE,IAAK,qBAO7B5B,UAAAA,2BAGG,IAAMooB,kCAAoC/rB,SAAAA,KAA1C,IACP+rB,kCAAAA,KAAyC,CACrCzpB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDigB,+BAFC,EAGDR,mBAAoB,CAChBE,2BADgB,EAEhBD,SAFgB,aAGhBE,2CAHgB,EAIhBE,2CAA4C,UAK5Dze,UAAW,CACPP,MAAO,cAAF,iBACEO,0BAAAA,UADF,IAED+J,eAAgB,CACZ,CACImV,eADJ,IAEIC,mBAFJ,QAGIxK,iBAHJ,wBAIIrT,iBAJJ,GAKII,IAAK,cAET,CACIwd,eADJ,IAEIC,mBAFJ,QAGIxK,iBAHJ,eAIIrT,iBAJJ,GAKII,IALJ,aAMIE,IAAK,mBAOlB,IAAMymB,qDAAuDhsB,SAAAA,KAA7D,IACPgsB,qDAAAA,KAA4D,CACxD1pB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDigB,+BAFC,EAGDR,mBAAoB,CAChBE,2BADgB,EAEhBD,SAFgB,aAGhBE,2CAHgB,EAIhBE,2CAA4C,CACxC,CACIjK,mBADJ,wBAEIC,UAFJ,EAGIhT,YAAa,CACTC,IAAK,eAGb,CACI8S,mBADJ,eAEIC,UAFJ,EAGIhT,YAAa,CACTC,IADS,aAETE,IAAK,uBAQjC5B,UAAAA,2BAGG,IAAMsoB,8BAAgCjsB,SAAAA,KAAtC,IACPisB,8BAAAA,KAAqC,CACjC3pB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDkgB,kDAFC,EAGDE,sCAAuC,CACnC,CACI9G,eADJ,QAEIxD,UAFJ,EAGIhT,YAAa,CACTC,IADS,aAETE,IAAK,cAETqX,aAAc,CAAC8B,OAAAA,EAAAA,QACf7B,oBARJ,MASIE,eATJ,IAUI1B,kBAVJ,EAWIU,wDAXJ,EAYID,kDAZJ,EAaIO,mCAAoC,CAChCjJ,KADgC,aAEhCoJ,2BAFgC,IAGhCD,WAAY,qBAEhBP,mBAlBJ,EAmBIM,eAAgB,CACZvJ,KADY,iBAEZ2J,cAFY,UAGZC,uBAAuB,WAO/ChZ,UAAAA,2BAGG,IAAMuoB,yCAA2ClsB,SAAAA,KAAjD,IACPksB,yCAAAA,KAAgD,CAC5C5pB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDkgB,kDAFC,EAGDE,sCAAuC,CACnC,CACI9G,eADJ,QAEIxD,UAFJ,EAGIhT,YAAa,CACTC,IADS,aAETE,IAAK,cAETqX,aAAc,CAAC8B,OAAAA,EAAAA,QACf5B,gBARJ,KASIf,wDATJ,EAUID,kDAVJ,EAWIE,mBAAmB,UAMvCrY,UAAAA,2BAGG,IAAMwoB,+BAAiCnsB,SAAAA,KAAvC,IACPmsB,+BAAAA,KAAsC,CAClC7pB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDggB,+BAFC,EAGDG,yBAA0B,CACtB,CACIjgB,KAAM4U,aAAAA,EAAAA,gBACNgB,UAFJ,EAGIhT,YAAa,CACTC,IADS,aAETE,IAAK,cAET+S,iBAPJ,UAQIP,KAAM,aAM1BpU,UAAAA,2BAGG,IAAMyoB,iCAAmCpsB,SAAAA,KAAzC,IACPosB,iCAAAA,KAAwC,CACpC9pB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDggB,+BAFC,EAGDG,yBAA0B,CACtB,CACIjgB,KAAM4U,aAAAA,EAAAA,mBACNgB,UAFJ,EAGIhT,YAAa,CACTC,IADS,aAETE,IAAK,cAETgT,QAAS,CACL,CACI7a,GADJ,IAEI6C,IAFJ,kBAGIF,SAAU,oBAQtCsD,UAAAA,2BAKJ/C,QAAAA,WAAAA,cAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,mNAAuNqB,QAArQA,YACA8qB,iBAAAA,WAAAA,cAAAA,CAAgC/qB,YAAa,CAAEpB,OAAQ,mNAAuNmsB,iBAA9QA,YACAC,gBAAAA,WAAAA,cAAAA,CAA+BhrB,YAAa,CAAEpB,OAAQ,mNAAuNosB,gBAA7QA,YACAC,oBAAAA,WAAAA,cAAAA,CAAmCjrB,YAAa,CAAEpB,OAAQ,mNAAuNqsB,oBAAjRA,YACAG,kCAAAA,WAAAA,cAAAA,CAAiDprB,YAAa,CAAEpB,OAAQ,mNAAuNwsB,kCAA/RA,YACAC,qDAAAA,WAAAA,cAAAA,CAAoErrB,YAAa,CAAEpB,OAAQ,mNAAuNysB,qDAAlTA,YACAC,8BAAAA,WAAAA,cAAAA,CAA6CtrB,YAAa,CAAEpB,OAAQ,mNAAuN0sB,8BAA3RA,YACAC,yCAAAA,WAAAA,cAAAA,CAAwDvrB,YAAa,CAAEpB,OAAQ,mNAAuN2sB,yCAAtSA,YACAC,+BAAAA,WAAAA,cAAAA,CAA8CxrB,YAAa,CAAEpB,OAAQ,mNAAuN4sB,+BAA5RA,YACAC,iCAAAA,WAAAA,cAAAA,CAAgDzrB,YAAa,CAAEpB,OAAQ,mNAAuN6sB,iCAA9RA,a,84BCnVA,wB,6jBAAYC,yBAAAA,wBAAAA,UAAAA,YAAAA,wBAAAA,MAAAA,Q,CAAAA,0BAAAA,wBAAAA,KAUZ,IAAMC,6BAAmD,yCACpDD,wBADoD,oDAEpDA,wBAFoD,UAAzD,uBAKaE,+BAAiC,SAAjCA,+BAAkCC,aAC3C,OAAIrb,EAAAA,IAAAA,UAASqb,YAATrb,SAA+BA,EAAAA,IAAAA,UAASqb,YAA5C,WACW,CACH5pB,MAAO4pB,YADJ,MAEH7pB,UAAW6pB,YAAY7pB,WAI/B,6BAGS8pB,8BAA+Bvd,EAAAA,sBAAAA,0BCvBtCwd,UAAsC,SAAtCA,UAAuC,MAAc,IAAZ1oB,MAAY,KAAZA,MACrCqF,MAAOC,EAAAA,QAAAA,KAEb,YAAItF,MACA,KAIA,+BAAOuE,OAAO,MACV,oBAACkkB,6BAA6BpT,gBAA9B,CACItX,KAAMsqB,wBAAwBzpB,MAC9B0W,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,kCAEI9K,MAAO,OAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,qCAEI9K,MAAO,WAGf2nB,eAZJ,EAaI9kB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,iCAMxC,qC,2yBC7BA,IAAMsjB,0BAAiG,sEAClGN,wBAAwB1pB,UAAY,CACjCoP,WAAY,gCACZD,WAAY,8BAAGnP,UAAH,sBAAmBwO,EAAAA,IAAAA,UAAnB,cAHmF,mEAKlGkb,wBAAwBzpB,MAAQ,CAC7BmP,WAAY,yDACZD,WAAY,+BAAGlP,MAAH,mBAAeuO,EAAAA,IAAAA,UAAf,QACZkB,iBAAkB,qCAAG1P,UAAH,uBAAmBwO,EAAAA,IAAAA,UAAnB,cAR1B,uBAgBA,qCAJsCsB,EAAAA,+BAAAA,IAAtC,0BChBO,I,s+BC2FP,qBAtEuD,SAAjDma,eAAkD,MAAc,IAAZ5oB,MAAY,KAAZA,MAChDqF,MAAOC,EAAAA,QAAAA,KACP/G,QAASgN,EAAAA,UAAAA,KACT5L,WAAY6J,EAAAA,aAAAA,KAOZkC,eAAgBC,EAAAA,iBAAAA,IALO,SAAvBC,qBAAwBlE,QAC1B,IAAMhJ,eD3BkC,SAAnCmqB,iCAAoCC,UAC7C,MAAO,CACHnqB,UAAWmqB,SADR,UAEHlqB,OAAOuO,EAAAA,IAAAA,UAAS2b,SAAT3b,OAA2B2b,SAA3B3b,MAA6C,OCwB7B0b,CAAvB,QACA,MAAO,CAAChd,cAAAA,EAAAA,qBAAR,mBAGyDC,OAAAA,EAAAA,WACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACI,oBAACoX,6BAA6B1c,cAA9B,CACIC,cAAeuc,+BAA+BhqB,OADlD,gBAEI0N,SAFJ,cAGIC,WAAY,2BAA4B,IAAjBoF,WAAiB,MAAzB5J,OACL0I,WAAa,0FAEf2Y,WAAYppB,UAAAA,OAAiBK,SAE3BgpB,qBAAuB5Y,WAA7B,0BACA,OACI,8BACIqB,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIuM,aAFJ,iBAGIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAHzB,yBAIIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KAJzB,yBAKI0M,SALJ,eAMIC,gBAAiB,wCACjBC,MAPJ,cAQInU,SAAS,GAET,oBAAC2qB,6BAA6Btc,KAA9B,CAAmCC,gBAAgB,GAC/C,+BACI,+BAAO7H,OAAO,MACV,oBAACkkB,6BAA6BpT,gBAA9B,CACItX,KAAMsqB,wBAAwB1pB,UAC9B2W,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,qCAEI9K,MAAO,UAEX,CACIyD,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,uCAEI9K,MAAO,aAGf2nB,eAZJ,EAaI9kB,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,oCAGhC,+BAAOsC,QAASyI,WAAAA,UAAqBiY,wBAAwBzpB,OAAQ2F,OAAO,MACxE,0CAAWvE,SAEdgpB,sBACG,+BAAOzkB,OAAP,KAAmBoO,iBAAiB,GAChC,8DAAahN,EAAAA,IAAAA,WAAUN,KAnC/C,4B,qxDC3BhB,8BACIvJ,MADW,uBAEXC,UAFW,eAGXvC,WAAY,CAACoZ,WAAD,iDAShB,IAAM5W,SAAyB,SAAzBA,SAA0B,MAAkC,IAAhCsC,QAAgC,KAAhCA,QAASqB,UAAuB,KAAvBA,UAAWK,MAAY,KAAZA,MAClD,OACI,+CAAyBzB,OAAzB,QAA0CoB,WACtC,oCAAgBK,UAKfpD,QAAUZ,SAAAA,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QADW,wBAEXqB,UAFW,0BAGXK,MAAO,KAGJ,IAAMipB,IAAMjtB,SAAAA,KAAZ,IACPitB,IAAAA,KAAW,CACP3qB,QADO,wBAEPqB,UAAW,CACPP,MAAO,oCAAF,sEAEDY,MAAO,OAGfA,MAAO,KAKXpD,QAAAA,WAAAA,oCAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,0OAA8OqB,QAA5RA,YACAqsB,IAAAA,WAAAA,oCAAAA,CAAmBtsB,YAAa,CAAEpB,OAAQ,0OAA8O0tB,IAAxRA,a,mrCC5DA,2B,wPAAYC,4BAAAA,2BAAAA,wBAAAA,0BAAAA,2BAAAA,2BAAAA,6BAAAA,2BAAAA,uBAAAA,yBAAAA,2BAAAA,2BAAAA,6B,CAAAA,6BAAAA,2BAAAA,KAcL,I,sBAAMC,iCAAyD,yCACjED,2BADiE,wBACZpc,sBAAAA,QAAAA,YADY,sCAEjEoc,2BAFiE,qEAGjEA,2BAHiE,uBAGbpc,sBAAAA,QAAAA,YAHa,sCAIjEoc,2BAJiE,+BAA/D,uBAOME,gCAAiCle,EAAAA,sBAAAA,0B,6bCpB9C,ICiBKme,uBDjBCC,4BAAgG,sEACjGJ,2BAA2BK,wBAA0B,CAClDzb,WAAY,gEAA6DhB,sBAAAA,QAAAA,YACzEiB,WAAY,gCACZM,iBAAkB,uEAA2DvB,sBAAAA,QAAAA,cAJiB,mEAMjGoc,2BAA2BM,2BAA6B,CACrD1b,WAAY,mEAAoC0b,OAApC,GACZxb,WAAY,gCACZD,WAAY,kEAA6DjB,sBAAAA,QAAAA,MATqB,mEAWjGoc,2BAA2BO,uBAAyB,CACjD3b,WAAY,iEAA2DhB,sBAAAA,QAAAA,YACvEiB,WAAY,kCAbkF,mEAejGmb,2BAA2BQ,2BAA6B,CACrD5b,WAAY,mEAAoC4b,OAApC,GACZ1b,WAAY,gCACZD,WAAY,iEAA2DjB,sBAAAA,QAAAA,MAlB/E,uBAsBa6c,+BAAgClb,EAAAA,+BAAAA,IAAtC,4B,0kCCLF4a,wBAAAA,uBAAAA,IAAAA,MAAAA,uBAAAA,IAAAA,MAAAA,uBAAAA,SAAAA,W,CAAAA,yBAAAA,uBAAAA,KAYL,IAAMld,MAAOjB,EAAAA,sBAAAA,0BAEP0e,sBAAwB,SAAxBA,sBAAyBC,QAC3B,MAAO,CACHxoB,IAAKwoB,OADF,IAEHtoB,IAAKsoB,OAFF,IAGHC,SAAUD,OAAOC,WAInBC,iBAAmD,SAAnDA,iBAAoD,MAOpD,IANFrU,QAME,KANFA,QACAhD,QAKE,KALFA,QACAmX,OAIE,KAJFA,OACA5d,SAGE,KAHFA,SACA8F,SAEE,KAFFA,SACAiY,mBACE,KADFA,mBAEM3kB,MAAOC,EAAAA,QAAAA,KAeb,OACI,oBAAC6G,KAAD,eACIH,cAAe6d,OAASD,sBAAH,QADzB,GAEI3d,SAjBe,SAAjBge,eAAkB3Y,YACpB,IAAM4Y,cAAuC,cAAH,6BAEtC7oB,IAAKiQ,WAFiC,IAGtC/P,IAAK+P,WAHiC,IAItCwY,SAAUxY,WAAWwY,WAEzB,ICpD2B,SAAtBK,oBAAuBN,QAChC,IAAQxoB,IAAuBwoB,OAA/B,IAAaC,SAAkBD,OAA/B,SAAuBtoB,IAAQsoB,OAA/B,IACA,YAAOxoB,IAAAA,UAAAA,IAAqByoB,eAA5B,IAAsDvoB,IDkD9C4oB,CAAJ,eAGI,MAAM,IAAIC,MAAV,uEAFAne,SAAAA,gBAUAC,WAAY,2BAAgB,IAAbxE,OAAa,MAAbA,OACX,OACI,oBAACyE,KAAD,MAAW4F,UACP,6DAActK,IAAI,MACd,+BAAkB/N,GAAI,qDAE1B,mCACI,oBAACyS,KAAD,oBACI/O,QAAQuI,EAAAA,IAAAA,WAAUN,KADtB,oDAEIglB,oBAAqB,CACjBtsB,KAAMsrB,uBADW,IAEjBrrB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFA,qDAGjBmQ,mBAHiB,EAIjBD,YAJiB,aAKjB7C,QACAgD,SAAS0M,EAAAA,sBAAAA,iBAAgB1a,OAAhB0a,MANQ,QAOjB3V,SAAU,gCACN6d,UAAAA,GAAAA,wBAAAA,MAEIlI,EAAAA,sBAAAA,iBAFJkI,OAAAA,QAAAA,QAAAA,2CAMIlI,EAAAA,sBAAAA,iBAAgB1a,OAPd,QAUd6iB,kBAAmB,CACfxsB,KAAMsrB,uBADS,IAEfrrB,OAAO2H,EAAAA,IAAAA,WAAUN,KAFF,qDAGfmQ,mBAHe,EAIfD,YAJe,aAKf7C,SAAS0P,EAAAA,sBAAAA,iBAAgB1a,OAAhB0a,MALM,QAMf1M,QACAjJ,SAAU,gCACN6d,UAAAA,GAAAA,sBAAAA,MAEIlI,EAAAA,sBAAAA,iBAFJkI,OAAAA,QAAAA,QAAAA,6CAMIlI,EAAAA,sBAAAA,iBAAgB1a,OAPd,WAYtB,+BAAOnD,OAAO,MACV,oBAAC4H,KAAD,eACIpO,KAAMsrB,uBADV,SAEIrrB,MACIgsB,oBACMrkB,EAAAA,IAAAA,WAAU,KADE,2EAKZA,EAAAA,IAAAA,WAAU,KARxB,2EAaI8G,SAAU,kCACN+d,EAAAA,IAAAA,uBAAsB,SAElB7kB,EAAAA,IAAAA,WAAU,KAENqkB,mBAAkB,wDALpB,4DAWVrZ,eAAe,UAU/C,kE,gsCEtIMvJ,KAAM5B,EAAAA,IAAAA,UAAZ,oBAEMilB,iBAAmD,SAAnDA,iBAAoD,MAAmC,IAAjCC,SAAiC,KAAjCA,SAAUvoB,SAAuB,KAAvBA,SAAUF,OAAa,KAAbA,OACtEoD,MAAOC,EAAAA,QAAAA,KAiBb,OACI,kCACIqlB,UAAW,mCAA2BnF,QAA3B,IACXoF,aAAc,sCAA2BC,EAAAA,sBAAAA,gBAAerF,QAAD,SAAmBngB,KAA5D,SACdlD,SACAF,OACA6oB,cAtBwB,SAA1BC,wBAA2BvF,SAC7B,IAAMzW,MAAO8b,EAAAA,sBAAAA,gBAAerF,QAAD,SAAmBngB,KAA9C,QACA,OACI,2BAAKI,UAAW2B,IAAAA,QAAAA,UACZ,4BAAM3B,UAAW2B,IAAAA,QAAAA,SACZnF,QAAU,oCAAYS,QAAS,0BAAMT,OAAN,WADpC,OAEMA,QAAU,gCAHpB,OAKI,4BAAMwD,UAAW2B,IAAAA,QAAAA,UACZ4jB,EAAAA,IAAAA,oBAAmB1pB,mBAAAA,CAAMkkB,QAANlkB,KADxB,oBAEK0pB,EAAAA,IAAAA,oBAAmB1pB,mBAAAA,CAAMkkB,QAANlkB,KARhC,aAqBI2pB,MAAOP,YAKnB,kE,41BChCA,SAASQ,0BAAT,MAOsB,IANlBntB,KAMkB,KANlBA,KACA2U,QAKkB,KALlBA,QACAgD,QAIkB,KAJlBA,QACAjJ,SAGkB,KAHlBA,SACA0e,OAEkB,KAFlBA,OACAnB,mBACkB,KADlBA,mBAEA,OACI,kEACIjsB,KACAotB,OACA1e,SACA2e,YAJJ,SAKIC,SALJ,mBAMIC,aAAc,iCAAGrf,SAAH,eAAa8F,SAAb,eAAuBwZ,KAAvB,kBACV,gEACI1B,OADJ,KAEInX,QACAgD,QACAzJ,SACA8F,SACAiY,sBAGRwB,aAAc,iCAAGP,MAAH,YAAUhpB,OAAV,aAAkBE,SAAlB,sBACV,gEAAmBuoB,SAAnB,MAAoCzoB,OAAgBE,cAMpE,oF,o2EC1CA,IAAMspB,mCAAqC,SAArCA,mCAAsCjG,SAAD,MAA8C,CACrFnkB,IAAKmkB,QAAAA,YADgF,IAErFjkB,IAAKikB,QAAAA,YAFgF,IAGrFsE,SAAUtE,QAAQzR,OAGT2X,0CAA4C,SAA5CA,0CAA6C,MAGtD,6HAEInC,yBAAyB9b,EAAAA,UAAAA,GAAmCke,KAFhE,kBAGIlC,wBAAwBhc,EAAAA,UAAAA,GAAmCke,KAH/D,kBAIIjC,2BAA4BiC,KAAAA,cAAAA,IAJhC,oCAKInC,2BAA4BmC,KAAAA,iBAAAA,IAAAA,uCAI9BC,kCAAoC,SAApCA,kCAAqCC,cACvC,OAAOA,aAAA,KAAiB,uBAAa,CACjC9X,KAAM8V,OAD2B,SAEjCzoB,YAAa,CACTC,IAAKwoB,OADI,IAETtoB,IAAKsoB,OAAOtoB,U,kCCjBXuqB,mCACT,SADSA,mCACRzmB,MAAD,OACA,2BACI,OAAIigB,iBAAAA,OACA,OAAO3f,EAAAA,IAAAA,WAAUN,KAAjB,kEAGJ,IAAM0mB,WAAazG,iBAAA,KAAqB,kBAAQ,CAAE0G,KAAM1qB,mBAAAA,CAAM2qB,EAAN3qB,KAAR,SAA+B4qB,GAAI5qB,mBAAAA,CAAM2qB,EAAN3qB,KAAAA,aAEnF,OAAI6qB,EAAAA,IAAAA,mBAAJ,aACWxmB,EAAAA,IAAAA,WAAUN,KAAjB,8CAGA+mB,EAAAA,IAAAA,wBAAuBL,WAAY,CAAEC,KAAM,IAAR,KAAoBE,GAAIG,IAAAA,oBACpD1mB,EAAAA,IAAAA,WAAUN,KAAjB,uDADJ,IAOKinB,mCACT,SADSA,mCACRjnB,MAAD,OACA,2BACI,OAAIigB,iBAAAA,OACA,OAAO3f,EAAAA,IAAAA,WAAUN,KAAjB,kEAGJ,IAAM0mB,WAAazG,iBAAA,KAAqB,kBAAQ,CAAE0G,KAAM1qB,mBAAAA,CAAM2qB,EAAN3qB,KAAR,SAA+B4qB,GAAI5qB,mBAAAA,CAAM2qB,EAAN3qB,KAAAA,aAEnF,OAAI6qB,EAAAA,IAAAA,mBAAJ,aACWxmB,EAAAA,IAAAA,WAAUN,KAAjB,8CAGA+mB,EAAAA,IAAAA,wBAAuBL,WAAY,CAAEC,KAAF,iBAAsBE,GAAI,IAAIK,QAC1D5mB,EAAAA,IAAAA,WAAUN,KAAjB,uDADJ,ICbFmnB,iBAA4C,SAA5CA,mBACF,IAAMnnB,MAAOC,EAAAA,QAAAA,KACLjG,+BAAkCkM,EAAAA,UAAAA,KAA1C,8BAOMG,eAAgBC,EAAAA,iBAAAA,IALO,SAAvBC,qBAAwBlE,QAC1B,IAAM4d,iBFHoC,SAArCmH,mCAAsC,YAG/C,IAAQlD,wBACJjY,WADJ,wBAAiCmY,uBAC7BnY,WADJ,uBAAyDoY,2BACrDpY,WADJ,2BAAqFkY,2BACjFlY,WADJ,2BAGA,MAAO,CACHwW,kBAAkBza,EAAAA,UAAAA,GADf,yBAEHwa,kBAAkBxa,EAAAA,UAAAA,GAFf,wBAGHuY,cACI6D,yBAA2B3c,sBAAAA,QAAAA,GAAa8e,kCAAxCnC,4BAJD,GAKHlE,iBACIgE,0BAA4Bzc,sBAAAA,QAAAA,GACtB8e,kCADNrC,4BAEM,IEXekD,CAAzB,QACA,MAAO,CAAC5gB,cAAAA,EAAAA,iCAAR,qBAGyDC,OAAAA,EAAAA,qBACvDsF,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACI,oBAAC+X,+BAA+Brd,cAAhC,CACIC,cAAe0f,0CADnB,+BAEIzf,SAFJ,cAGIC,WAAY,0BAA4B,IAAjBoF,WAAiB,KAAzB5J,OACL0I,WAAauZ,8BAA8BpY,aAAjD,YAEA,OACI,8BACIE,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIuM,aAFJ,mBAGIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAHzB,2BAIIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KAJzB,2BAKIqM,cAAcC,EAAAA,YAAAA,GALlB,oBAMII,SANJ,eAOIC,gBAAiB,wCACjBC,MARJ,cASInU,SAAS,GAET,oBAACsrB,+BAA+Bjd,KAAhC,CAAqCC,gBAArC,EAA4DkG,0BAA0B,GAClF,+BACI3K,QAASyI,WAAAA,UAAqB8Y,2BAA2BO,wBACzDjiB,UAAU,KAEV,oBAAC4hB,+BAA+B7W,gBAAhC,CACInV,QAAQuI,EAAAA,IAAAA,WAAUN,KADtB,4CAEItH,KAAMmrB,2BAA2BO,uBACjCjX,YACI,4CACIpK,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,wDAKnBA,EAAAA,IAAAA,WAAUN,KAVvB,6CAaI8lB,OAAQ,CACJuB,KAAK/mB,EAAAA,IAAAA,WAAU,KADX,mEAKJgnB,IAAIhnB,EAAAA,IAAAA,WAAU,KAAD,uEAKjB8G,SAAU,iDACNmgB,EAAAA,IAAAA,2BAA0B,uBADpB,4DAQlB,+BACIplB,UADJ,IAEIG,QAASyI,WAAAA,UAAqB8Y,2BAA2BQ,6BAEzD,yEACI3rB,KAAMmrB,2BAA2BQ,2BACjChX,QAFJ,cAGIgD,QAHJ,qBAIIyV,OAAQ,CACJ0B,UAAUlnB,EAAAA,IAAAA,WAAUN,KADhB,sCAEJynB,WAAY,qCAEhB9C,oBARJ,EASIvd,SAAUqf,mCAAmCzmB,SAGrD,+BACImC,UADJ,IAEIG,QAASyI,WAAAA,UAAqB8Y,2BAA2BK,0BAEzD,oBAACH,+BAA+B7W,gBAAhC,CACInV,QAAQuI,EAAAA,IAAAA,WAAUN,KADtB,4CAEItH,KAAMmrB,2BAA2BK,wBACjC/W,YACI,4CACIpK,WAAWzC,EAAAA,IAAAA,WAAU,KAAD,wDAKnBA,EAAAA,IAAAA,WAAUN,KAVvB,6CAaI8lB,OAAQ,CACJuB,KAAK/mB,EAAAA,IAAAA,WAAU,KADX,mEAKJgnB,IAAIhnB,EAAAA,IAAAA,WAAU,KAAD,uEAKjB8G,SAAU,kDACNmgB,EAAAA,IAAAA,2BAA0B,wBADpB,6DAQlB,+BACIplB,UADJ,IAEIG,QAASyI,WAAAA,UAAqB8Y,2BAA2BM,6BAEzD,yEACI9W,QADJ,iBAEIgD,QAFJ,cAGI3X,KAAMmrB,2BAA2BM,2BACjC2B,OAAQ,CACJ0B,UAAUlnB,EAAAA,IAAAA,WAAUN,KADhB,sCAEJynB,WAAY,qCAEhB9C,oBARJ,EASIvd,SAAU6f,mCAAmCjnB,SAGrD,+BAAOsC,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KApHvC,2BA8HhB,yD,6pCC7JA,gCACIvJ,MADW,yBAEXC,UAFW,kCAGXvC,WAAY,CAACoZ,WAAD,iDAQhB,IAQahW,QARkB,SAAzBZ,SAA0B,MAA2B,IAAzBsC,QAAyB,KAAzBA,QAASqB,UAAgB,KAAhBA,UACvC,OACI,+CAAyBpB,OAAzB,QAA0CoB,WACtC,sDAFR,QAOmB3D,KAAhB,IACPY,QAAAA,KAAe,CACX0B,QADW,wBAEXqB,UAAAA,2BAKJ/C,QAAAA,W,4iBAAAA,CAAAA,CAAuBD,YAAa,CAAEpB,OAAQ,uNAA2NqB,QAAzQA,a,ktEClBA,2CACId,MADW,oDAEXC,UAFW,iBAGXvC,WAAY,CAACoZ,WAAD,iDAGhB,IAkBama,0CAlBmC,SAA1C/wB,SAA2CC,MAM7C,OACI,iCAAWsO,KANE,SAAXC,SAAYC,SACdA,QAAAA,MAXR,2BAWQA,UAAAA,IAAAA,IACAA,QAAAA,MAXR,oBAWQA,UAAAA,IAA+CxO,KAA/CwO,iBACAA,QAAAA,MAZR,oBAYQA,UAAAA,IAA+CxO,KAA/CwO,kBAII,+CACIlM,OAAQtC,KADZ,QAEI0D,UAAW1D,KAAK0D,WAEhB,qCANZ,SAYqD3D,KAAlD,IACP+wB,0CAAAA,KAAiD,CAC7CC,gBAD6C,yBAE7CC,eAF6C,wBAG7C3uB,QAH6C,wBAI7CqB,UAAAA,2BAKJotB,0CAAAA,W,0cAAAA,CAAAA,CAAyDpwB,YAAa,CAAEpB,OAAQ,mqBAAuqBwxB,0CAAvvBA,a,25FCjCA,+CACIjxB,MADW,wDAEXC,UAFW,kCAGXvC,WAAY,CAACoZ,WAAD,iDAGhB,IAAM5W,SAA0C,SAA1CA,SAA2CC,MAM7C,OACI,iCAAWsO,KANE,SAAXC,SAAYC,SACdA,QAAAA,MAXR,2BAWQA,UAAAA,IAAAA,IACAA,QAAAA,MAXR,oBAWQA,UAAAA,IAA+CxO,KAA/CwO,iBACAA,QAAAA,MAZR,oBAYQA,UAAAA,IAA+CxO,KAA/CwO,kBAII,+CACIlM,OAAQtC,KADZ,QAEI0D,UAAW1D,KAAK0D,WAEhB,qCANZ,SAYSutB,4CAA8ClxB,SAAAA,KAApD,IACPkxB,4CAAAA,KAAmD,CAC/CF,gBAD+C,8CAE/CC,eAF+C,6CAG/C3uB,QAH+C,gCAI/CqB,UAAWwtB,mCAGR,IAAMC,uDAAyDpxB,SAAAA,KAA/D,IACPoxB,uDAAAA,KAA8D,CAC1DJ,gBAD0D,8CAE1DC,eAF0D,6CAG1D3uB,QAAS,cAAF,sDAEHC,OAAQ,cAAF,iBACC8uB,gCAAAA,WADD,IAEFnuB,cAAe,cAAF,iBACNmuB,gCAAAA,UAAAA,eADM,IAETjgB,QAAQ,QAIpBzN,UAAWwtB,mCAKfD,4CAAAA,WAAAA,cAAAA,CAA2DvwB,YAAa,CAAEpB,OAAQ,mqBAAuqB2xB,4CAAzvBA,YACAE,uDAAAA,WAAAA,cAAAA,CAAsEzwB,YAAa,CAAEpB,OAAQ,mqBAAuqB6xB,uDAApwBA,a,glHCjDA,8BACItxB,MADW,uCAEXC,UAFW,iBAGXvC,WAAY,CAACoZ,WAAD,iDAGhB,IAAM5W,SAA0C,SAA1CA,SAA2CC,MAM7C,OACI,iCAAWsO,KANE,SAAXC,SAAYC,SACdA,QAAAA,MAXR,2BAWQA,UAAAA,IAAAA,IACAA,QAAAA,MAXR,oBAWQA,UAAAA,IAA+CxO,KAA/CwO,iBACAA,QAAAA,MAZR,oBAYQA,UAAAA,IAA+CxO,KAA/CwO,kBAII,+CACIlM,OAAQtC,KADZ,QAEI0D,UAAW1D,KAAK0D,WAEhB,qCANZ,SAYS2tB,yBAA2BtxB,SAAAA,KAAjC,IACPsxB,yBAAAA,KAAgC,CAC5BN,gBAD4B,gBAE5BC,eAF4B,eAG5B3uB,QAH4B,gCAI5BqB,UAAW4tB,mCAGR,IAAMC,kCAAoCxxB,SAAAA,KAA1C,IACPwxB,kCAAAA,KAAyC,CACrCR,gBADqC,yBAErCC,eAFqC,wBAGrC3uB,QAAS,cAAF,sDAEHC,OAAQ,cAAF,iBACCkvB,gCAAAA,WADD,IAEFruB,MAAO,cAAF,iBACEquB,gCAAAA,UAAAA,UADF,IAED9sB,iBAAiB,IAErBzB,cAAe,CACXY,QADW,QAEXC,UAFW,WAGXF,IAHW,aAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,UAAW4tB,mCAGR,IAAMG,kCAAoC1xB,SAAAA,KAA1C,IACP0xB,kCAAAA,KAAyC,CACrCV,gBADqC,yBAErCC,eAFqC,wBAGrC3uB,QAAS,cAAF,sDAEHC,OAAQ,cAAF,iBACC8uB,gCAAAA,WADD,IAEFjuB,MAAO,cAAF,iBACEiuB,gCAAAA,UAAAA,UADF,IAED1sB,iBAAiB,IAErBzB,cAAe,CACXY,QADW,aAEXC,UAFW,OAGXF,IAHW,cAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,UAAWwtB,mCAKfG,yBAAAA,WAAAA,cAAAA,CAAwC3wB,YAAa,CAAEpB,OAAQ,mqBAAuqB+xB,yBAAtuBA,YACAE,kCAAAA,WAAAA,cAAAA,CAAiD7wB,YAAa,CAAEpB,OAAQ,mqBAAuqBiyB,kCAA/uBA,YACAE,kCAAAA,WAAAA,cAAAA,CAAiD/wB,YAAa,CAAEpB,OAAQ,mqBAAuqBmyB,kCAA/uBA,a,o0GClFA,yBACI5xB,MADW,kCAEXC,UAFW,iBAGXvC,WAAY,CAACoZ,WAAD,iDAGhB,IAAM5W,SAA0C,SAA1CA,SAA2CC,MAO7C,OACI,iCAAWsO,KAPE,SAAXC,SAAYC,SACdA,QAAAA,MAXR,2BAWQA,UAAAA,IAAAA,IACAA,QAAAA,MAXR,oBAWQA,UAAAA,IAA+CxO,KAA/CwO,iBACAA,QAAAA,MAZR,oBAYQA,UAAAA,IAA+CxO,KAA/CwO,kBAKI,+CACIlM,OAAQtC,KADZ,QAEI0D,UAAW1D,KAAK0D,WAEhB,qCANZ,SAYS2tB,yBAA2BtxB,SAAAA,KAAjC,IACPsxB,yBAAAA,KAAgC,CAC5BN,gBAD4B,gBAE5BC,eAF4B,eAG5B3uB,QAH4B,wBAI5BqB,UAAAA,2BAGG,IAAMguB,4BAA8B3xB,SAAAA,KAApC,IACP2xB,4BAAAA,KAAmC,CAC/BX,gBAD+B,4CAE/BC,eAF+B,2CAG/B3uB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFO,KAAM,cAAF,iBACGP,wBAAAA,UAAAA,MADH,IAEAQ,cAAe,CAFf,cAGAgkB,WAAY,mBAIxBnjB,UAAAA,2BAGG,IAAMiuB,uBAAyB5xB,SAAAA,KAA/B,IACP4xB,uBAAAA,KAA8B,CAC1BZ,gBAD0B,yBAE1BC,eAF0B,wBAG1B3uB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDqC,iBAAiB,IAErBzB,cAAe,CACXY,QADW,QAEXC,UAFW,WAGXF,IAHW,aAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,UAAAA,2BAGG,IAAMkuB,qCAAuC7xB,SAAAA,KAA7C,IACP6xB,qCAAAA,KAA4C,CACxCb,gBADwC,6CAExCC,eAFwC,4CAGxC3uB,QAAS,cAAF,8CAEHC,OAAQ,cAAF,iBACCD,wBAAAA,WADD,IAEFc,MAAO,cAAF,iBACEd,wBAAAA,UAAAA,UADF,IAEDqC,iBAAiB,IAErB9B,KAAM,cAAF,iBACGP,wBAAAA,UAAAA,MADH,IAEAS,WAAY,MAEhBG,cAAe,CACXY,QADW,QAEXC,UAFW,WAGXF,IAHW,aAIXe,yBAJW,EAKXzB,eAAe,OAI3BQ,UAAAA,2BAKJ2tB,yBAAAA,WAAAA,cAAAA,CAAwC3wB,YAAa,CAAEpB,OAAQ,uqBAA2qB+xB,yBAA1uBA,YACAK,4BAAAA,WAAAA,cAAAA,CAA2ChxB,YAAa,CAAEpB,OAAQ,uqBAA2qBoyB,4BAA7uBA,YACAC,uBAAAA,WAAAA,cAAAA,CAAsCjxB,YAAa,CAAEpB,OAAQ,uqBAA2qBqyB,uBAAxuBA,YACAC,qCAAAA,WAAAA,cAAAA,CAAoDlxB,YAAa,CAAEpB,OAAQ,uqBAA2qBsyB,qCAAtvBA,a,2FC/IKC,c,4EAAAA,eAAAA,cAAAA,wBAAAA,sCAAAA,cAAAA,YAAAA,uBAAAA,cAAAA,eAAAA,0B,CAAAA,gBAAAA,cAAAA,KAOL,sC,8JCSA,sBAdoB,SAAdC,cAAoB,SAChBC,YAAe30B,OAArB,YACA,6BACIC,aAAc00B,YADlB,aAEIz0B,cAAey0B,YAFnB,cAGIC,UAAWD,YAHf,UAIIE,YAAaF,YAJjB,YAKIG,QAASH,YAAYG,SACpBL,kBAAAA,YAA4BE,YAAYF,kBAAAA,cAN7C,qBAOKA,kBAAAA,eAA+BE,YAAYF,kBAAAA,iBAPhD,qBAQKA,kBAAAA,wBAAwCE,YAAYF,kBAAAA,0BARzD,KAYJ,I,iLCdA,S,kMAAY3jB,UAAAA,SAAAA,UAAAA,YAAAA,SAAAA,UAAAA,YAAAA,SAAAA,kBAAAA,mBAAAA,SAAAA,iBAAAA,qBAAAA,SAAAA,cAAAA,iBAAAA,SAAAA,iBAAAA,oBAAAA,SAAAA,iBAAAA,oBAAAA,SAAAA,WAAAA,aAAAA,SAAAA,eAAAA,kBAAAA,SAAAA,iBAAAA,mBAAAA,SAAAA,aAAAA,eAAAA,SAAAA,eAAAA,eAAAA,SAAAA,QAAAA,U,CAAAA,WAAAA,SAAAA,KAgBL,IAYMJ,kBAAoB,SAApBA,kBAAqBqkB,UAAD,WAAiE,IAA5BC,mBAA4B,yDAC9F,iBAEQxyB,QAAAA,IAAY,CAAEuyB,UAAWE,YAKjCC,YAAW,WACP,IACI,qDACIC,oDAAAA,cAAAA,SAAAA,UAAAA,WAEN,MAAOC,OACL5yB,QAAAA,MAAAA,a,q6CClCZ,ICVA,gBDUM6yB,gBAA2B,CAC7B/zB,OAD6B,GAE7Bg0B,aAAa,GAGJC,WAAa,SAAbA,WAAa,KAAwD,IAAvCC,QAAuC,uDAApBH,gBAC1D,WAAwBplB,EAAAA,MAAAA,YAAxB,uCAAOuJ,KAAP,cAAaic,QAAb,cACA,YAA0BxlB,EAAAA,MAAAA,UAA1B,8CAAOmlB,MAAP,cAAcM,SAAd,cACMC,cAAgBH,QAAAA,KAAcI,EAAAA,eAAAA,GAAiBJ,QAA/BA,MAA8CI,EAAAA,eAAAA,KAepE,OAbAtlB,EAAAA,MAAAA,YAAU,WACDklB,QAAL,aACIG,cAAAA,IAAAA,IACcH,QADdG,QAAAA,MAEU,cACFF,QAAQI,IAARJ,SAHRE,OAKW,cACHD,SAAAA,UAGb,CAACF,QAAD,gBAXHllB,gBAaO,CAAEkJ,KAAM4b,Q,8GE9BNU,6BAA+B,SAA/BA,6BAAgCC,KAAD,OACxC,OAAIjgB,EAAAA,IAAAA,iBAAJ,OACI,OAECuQ,MAAAA,QAAD,QAAyB2P,gBAAAA,CAAO90B,MAAO,CAAC80B,iBAAAA,UAAAA,KAAT,6BAANA,GAA7B,UACW,IAAI9C,KAAX,OAEJ,OAES+C,cAAgB,SAAhBA,cAAiBC,iBAC1B,mBACI,OAAO10B,KAAAA,MAAAA,gBAAP,+B,sGDdI20B,iBAAAA,gBAAAA,mBAAAA,kBAAAA,gBAAAA,+BAAAA,8BAAAA,gBAAAA,QAAAA,UAAAA,gBAAAA,MAAAA,Q,CAAAA,kBAAAA,gBAAAA,K,IEAZ,oB,qIAAYC,qBAAAA,oBAAAA,UAAAA,YAAAA,oBAAAA,WAAAA,UAAAA,oBAAAA,cAAAA,gBAAAA,oBAAAA,mBAAAA,qB,CAAAA,sBAAAA,oBAAAA,K,ICAZ,oB,kDAAYC,qBAAAA,oBAAAA,SAAAA,SAAAA,oBAAAA,mBAAAA,SAAAA,oBAAAA,UAAAA,QAAAA,oBAAAA,KAAAA,O,CAAAA,sBAAAA,oBAAAA,KCEL,ICFP,cDEaC,uBAAyB,SAAzBA,uBAA0B1vB,YAAD,YAClC,gBAAIA,YACOyvB,oBAAAA,eAEA5M,IAAAA,WAA2B4M,oBAAoBE,KAAOF,oBAAoBG,U,mUCN7EC,eAAAA,cAAAA,OAAAA,SAAAA,cAAAA,UAAAA,YAAAA,cAAAA,yBAAAA,WAAAA,cAAAA,wBAAAA,YAAAA,cAAAA,aAAAA,gBAAAA,cAAAA,QAAAA,UAAAA,cAAAA,kBAAAA,sBAAAA,cAAAA,SAAAA,Q,CAAAA,gBAAAA,cAAAA,K,uoEC8BZ,IAAMC,eAAiB,SAAjBA,eAAkBjP,SACpB,OAAOkP,EAAAA,SAAAA,GAAAA,SAAAA,uBAAP,GAGEC,qBAAuB,SAAvBA,qBAAwBnP,SAC1B,OAAOoP,EAAAA,aAAAA,IAAmBpP,QAA1B,cA0CEqP,sCAAwC,SAAxCA,sCAAyCrP,SAC3C,yBAAqBA,QAArB,YAAQzf,IAAR,yBAAaE,IAAb,yBACM6uB,OAAQC,EAAAA,YAAAA,GAAd,KACMC,OAAQD,EAAAA,YAAAA,GAAd,KACA,OAAID,OAAJ,MACI,QAUA,2CATQA,OAAL,OAQKA,OAAL,MACH,CAEIhvB,YAAa,CACTC,KAAKkvB,EAAAA,YAAAA,GAAAA,KADI,QAEThvB,MAIR,CAEIH,YAAa,CACTC,IACAE,KAAKgvB,EAAAA,YAAAA,GAAAA,KAAAA,YApBb,CAEInvB,YAAa,CACTC,KAAKkvB,EAAAA,YAAAA,GAAAA,KADI,QAEThvB,KAAKgvB,EAAAA,YAAAA,GAAAA,KAAAA,cAsBfC,sBAAwB,SAAxBA,sBAAyBC,YAAD,uBAC1B,OAAIA,YAAJ,iBACWC,sBAAwBC,SAAAA,EAAAA,IAAeA,SAAAA,EAAAA,UAE3CD,sBAAwBC,SAAAA,EAAAA,UAAqBA,SAAAA,EAAAA,KAkBlDC,4BAA8B,SAA9BA,4BAA+B,YAAD,sCAKhC,mBACWC,YAAP,WAGJ,kBACWC,mBAAP,gBADJ,GAsHEC,uCAAyC,SAAzCA,uCAA0C,YAAD,qCAK3C,IAAMC,iBAAkBC,EAAAA,UAAAA,IAAoCR,YAA5D,SAEA,GAAIA,YAAAA,uBAAqCA,YAAAA,sBAAoChB,oBAAAA,WACzE,MAAO,CACHjxB,KAAMuC,QAAAA,GAAAA,KACNmwB,SAAUC,gBAAAA,EAAAA,oBACVz3B,IAAIwO,EAAAA,0BAAAA,QACJkpB,MAAOX,YAJJ,sBAKHrvB,YALG,gBAMHiwB,SAAUb,sBAAsBC,YAN7B,kBAOHa,aAPG,EAQHC,aAAcd,YARX,oBASHe,iBAAiB,GAIzB,IAkBA,8BAlBMC,eACFC,IAAAA,qBACCA,mBAAA,MACG,oBACIC,EAAAA,aAAAA,KAAaV,EAAAA,UAAAA,IAAoCW,GAAjDD,UAAAA,MAAAA,kBACAC,GAAAA,OAAYnB,YAFhB,QAIFW,MA1K6B,SAAjCS,+BAAkCpB,aACpC,OAAQA,YAAR,kBACI,KAAKlwB,iBAAAA,EAAAA,WACD,OAAOuxB,iBAAAA,EAAAA,6BACX,KAAKvxB,iBAAAA,EAAAA,cACD,OAAOuxB,iBAAAA,EAAAA,gCACX,KAAKvxB,iBAAAA,EAAAA,cACD,OAAOuxB,iBAAAA,EAAAA,gCACX,KAAKvxB,iBAAAA,EAAAA,2BACD,OAAOuxB,iBAAAA,EAAAA,gCACX,QACI,QA+JMD,CAAd,aACM7wB,aAAUyvB,IAAAA,YAAAA,oBAA+CA,YAA/CA,mBAEVsB,mCACF,IAAAL,mBACMA,mBAAA,MACI,oBACIC,EAAAA,aAAAA,KAAaV,EAAAA,UAAAA,IAAoCW,GAAjDD,UAAAA,MAAAA,kBACAC,GAAAA,OAAYnB,YAFhB,aAHd,EAUA,gCACIuB,8BAAgCD,8BAAhCC,uBAGJ,IAAMC,sBAAwBrB,4BAC1BH,YADqD,oDAGrDA,YAHJ,oBAMA,MAAO,CACHjyB,KAAMuC,QAAAA,GAAAA,KACNmwB,SAAUC,gBAAAA,EAAAA,eACVz3B,IAAIwO,EAAAA,0BAAAA,QACJkpB,MACAhwB,YALG,gBAMHiwB,SAAUb,sBAAsBC,YAN7B,kBAOHa,aAPG,EAQHC,aAAcd,YARX,oBASHzvB,QACAE,yBAVG,IAUkB+wB,sBACrB9wB,qBAXG,sBAYHF,iBAAkBD,QAAUyvB,YAAAA,kBAAH,gBAZtB,EAaHe,gBAAiBC,YAkBnBS,0BAA4B,SAA5BA,0BAA6B,YAAD,8CAM9B,OAAIzB,YAAJ,iBACWM,uCAAuCN,YAAa0B,iBAA3D,oBAIA1B,YAAAA,sBAAoChB,oBAAAA,YAClCgB,YAAD,oBAFL,IAEwCA,YAAAA,wBAMpCA,IAAAA,YAAAA,uBACEA,YAAD,oBAFL,IAEwCA,YAAAA,wBAKxC,IAAIA,YAAAA,kBAtCqC,SAAvC2B,qCAAwC,YAAD,kBAIzC,MAAO,CACH14B,IAAIwO,EAAAA,0BAAAA,QACJmpB,SAAUb,sBAAsBC,YAF7B,kBAGHnwB,MAAOmwB,YAHJ,iBAIHrvB,aAAa6vB,EAAAA,UAAAA,IAAoCR,YAJ9C,SAKHjyB,KAAMuC,QAAAA,GAAAA,cACNqwB,MAAOX,YAAY4B,mBA6BZD,CAAqC3B,YAA5C,kBA1NuC,SAAlC6B,gCAAmC,YAAD,8CAM3C,IAAMtxB,aAAUyvB,IAAAA,YAAAA,oBAA+CA,YAA/CA,mBACVO,iBAAkBC,EAAAA,UAAAA,IAAoCR,YAA5D,SAEA,GAAIA,YAAJ,iBACI,OAAOM,uCAAuCN,YAAa0B,iBAA3D,oBAGJ,IAKA,8BALMJ,8BAAyDL,mBAAA,MAC3D,oBACIC,EAAAA,aAAAA,KAAaV,EAAAA,UAAAA,IAAoCW,GAAjDD,UAAAA,MAAAA,kBACAC,GAAAA,OAAYnB,YAFhB,QAMJ,gCACIuB,8BAAgCD,8BAAhCC,uBAGJ,IAMA,MANM7wB,qBAAuByvB,4BACzBH,YADoD,oDAGpDA,YAHJ,oBAOIA,YAAAA,gBAA8BX,cAAAA,WAC9BxvB,MAAQC,iBAAAA,EAAAA,oBAGZ,IAAQuiB,WAAqDyP,SAA7D,WAAoBtyB,YAAyCsyB,SAA7D,YAAiCC,wBAA4BD,SAA7D,wBAEME,qBAAsBC,EAAAA,UAAAA,IAA+B5P,WAAY7iB,YAAvE,yBA0BA,MAxBqC,CACjCvG,IAAIwO,EAAAA,0BAAAA,QACJ1J,KAAMuC,QAAAA,GAAAA,MACNT,WAAOA,IAAAA,MAAAA,MAA8BmwB,YAHJ,iBAIjCrvB,YAJiC,gBAKjCiwB,SAAUb,sBAAsBC,YALC,kBAMjCvvB,yBANiC,IAMZC,qBACrBH,QACAG,qBACAwxB,qBAAsBlC,YATW,eAUjCxvB,iBAAkBD,QAAUyvB,YAAAA,kBAAH,gBAVQ,EAWjCmC,cAAe5xB,QACTyvB,YAAA,qBAAgC,yBAAaoC,mCAAb,iBAZL,EAcjCC,SAAU9xB,QAAU,CAACyvB,YAAAA,iBAAJ,SAdgB,EAejCsC,uBAAwBtC,YAfS,cAgBjCuC,eACIb,kBACC1B,YADD0B,iBAEA7wB,mBAAAA,CAAMmvB,YAAAA,QAANnvB,KAAAA,SAAwCA,mBAAAA,CAAAA,qBAAAA,IAAAA,EAFxC6wB,iBAIMvqB,GAiKP0qB,CAAgC7B,YAAa8B,SAAUb,mBAA9D,kBA3JwC,SAAtCuB,oCAAuCxC,YAAD,kBACxC,GAAIA,YAAJ,iBACI,OAAOM,uCAAuCN,YAA9C,kBAGJ,IAAMyC,mBAAyC,CAC3Cx5B,IAAIwO,EAAAA,0BAAAA,QACJ1J,KAAMuC,QAAAA,GAAAA,WACNqwB,MAAOX,YAHoC,sBAI3CrvB,aAAa6vB,EAAAA,UAAAA,IAAoCR,YAJN,SAK3CY,SAAUb,sBAAsBC,YALW,kBAM3C0C,gBAN2C,EAO3CJ,uBAAwBtC,YAAY2C,eAGxC,GAAIF,mBAAAA,QAA6BG,oBAAAA,EAAAA,OAA4B,CACzD,IAAMT,cAAgBnC,YAAA,qBAAgC,yBAAaoC,mCAAb,YAChDS,UAAY7C,YAAAA,iBAAlB,GAEA,8DAEImC,cACAE,SAAUF,cAAAA,SAAuBW,QAAAA,GAAAA,cAA4B,CAAnDX,gBAHd,EAIIO,iBAAgBG,YAIxB,0BAyHWL,CAAoCxC,YAA3C,kBAtHqC,SAAvC+C,qCAAwC/C,YAAD,kBAYzC,MAXuC,CACnC/2B,IAAIwO,EAAAA,0BAAAA,QACJ1J,KAAMuC,QAAAA,GAAAA,KACNmwB,SAAUC,gBAAAA,EAAAA,kBACV/vB,aAAa6vB,EAAAA,UAAAA,IAAoCR,YAJd,SAKnCgD,mBAAoBhD,YAAAA,sBAAoC1vB,QAAAA,GAAAA,WAAyBA,QAAAA,GAAAA,MACjF2yB,aAAcjD,YANqB,iBAOnCY,SAAUb,sBAAsBC,YAPG,kBAQnCa,aARmC,EASnCE,iBAAiB,GAqGVgC,CAAqC/C,YAA5C,mBAiBFkD,oBAAsB,SAAtBA,oBAAuBlD,aACzB,OAAIA,YAAAA,sBAAoChB,oBAAoBmE,YAIxDnD,YAAAA,sBAAoChB,oBAAAA,YAA+BgB,YAAAA,mBAAvE,GAKIA,YAAAA,sBAAoChB,oBAAAA,iBAApCgB,IACAA,YAAAA,uBACAA,YAAAA,wBAAsC4C,oBAAAA,EAAAA,oBA+B9C,6CAvByC,SAAnCQ,iCAAoC,aAAD,8DAMrC,IAAMnC,mBAAqBoC,aAAAA,OAA3B,qBAcA,OAtX0B,SAAxBC,sBAAyBC,UAC3B,GAAIA,SAAAA,QAAJ,EACI,gBAGJ,IAAMC,YAAN,GACMC,aAAeF,SAAA,QAAgB,mBAAOrT,EAAAA,QAAAA,IAAP,MAC/BwT,iBAAmBH,SAAA,QAAgB,oBAAQrT,EAAAA,QAAAA,IAAR,MACnCyT,IAAiB,GAAH,+DAApB,eACIC,eAAsC,cAAH,GAAQD,IAA/C,IA2BA,OAzBAA,IAAAA,SAAY,wBACR,IAAIE,aAIJ,IAAID,gBAMArE,EAAAA,SAAAA,GAAAA,gBAAAA,MAAAA,SAAAA,GAAAA,KACAA,EAAAA,SAAAA,GAAAA,gBAAAA,iBAFJ,SAIIqE,eAAAA,YAAAA,IAAiCvT,QAAAA,YAAjCuT,KAGAJ,YAAAA,KAAAA,gBAGJI,eAAAA,SAdIA,eAAAA,YAiBRJ,YAAAA,KAAAA,gBAEOA,YAAAA,KAAP,cAyUwCF,CAJvBrC,mBAAA,KAAuB,yBACpCQ,0BAA0BpR,QAASyR,SAAUb,mBADT,qBAKpCsC,KAAAA,UAAAA,IAAAA,OAAAA,gBAAAA,IAAAA,uCAAAA,OAAAA,sBAAAA,OADJ,kB,mwDClYG,IAAMnB,mCAAqC,SAArCA,mCAAsC0B,aAC/C,oBACI,KAAK/E,gBAAAA,+BACD,OAAO+D,QAAAA,GAAAA,8BACX,KAAK/D,gBAAgBgF,QACjB,OAAOjB,QAAAA,GAAAA,QACX,QACI,OAAOA,QAAAA,GAAAA,eAIbkB,wCAA0C,SAA1CA,wCAA2CrD,OAC7C,cACI,KAAKU,iBAAAA,EAAAA,6BACD,OAAOvxB,iBAAAA,EAAAA,WACX,KAAKuxB,iBAAAA,EAAAA,gCACD,OAAOvxB,iBAAAA,EAAAA,cACX,KAAKuxB,iBAAAA,EAAAA,gCACD,OAAOvxB,iBAAAA,EAAAA,cACX,KAAKuxB,iBAAAA,EAAAA,gCACD,OAAOvxB,iBAAAA,EAAAA,2BACX,QACI,SAINm0B,6BAA+B,SAA/BA,6BAAgCj0B,iBAClC,0BAEIA,gBAFJ,SACgBk0B,yBADhB,+CAC0CC,iBAD1C,uCAC4DC,mBAD5D,yCACgFC,WADhF,iCAGA,OAAIH,2BAAAA,qBAAAA,IAAkDC,mBAAtD,IAAoFE,YAMlFC,sBAAwB,SAAxBA,sBAAyBrU,GAC3B,IAAQsU,cAAoCtU,EAA5C,cAAuBuU,iBAAqBvU,EAA5C,iBAEMwU,cAA6B,kCAAH,4CAE5BhtB,MAAMA,EAAAA,0BAAAA,UAcV,YAXI8sB,IAAAA,gBAAJ,IAAmCC,mBAC/BC,cAAAA,kBAAAA,EACAA,cAAAA,iBAAiCT,wCAAjCS,qBAGAF,IAAAA,eAAJ,mBACIE,cAAAA,kBAAAA,EACAA,cAAAA,mBAAAA,EACAA,cAAAA,iBAAiCT,wCAAjCS,gBAGJ,eAGEC,uBAAyB,SAAzBA,uBAA0B1E,aAAD,OAC3BA,YAAAA,sBAAoChB,oBAAoBmE,WAEtDwB,0DAA4D,SAA5DA,0DAA6D,QAAD,qBAK9D,IAAMC,aAAevB,aAAA,QACjB,0BACIhT,QAAAA,OAAiBwU,SAAjBxU,OACA6Q,EAAAA,aAAAA,KAAaV,EAAAA,UAAAA,IAAoCnQ,QAAjD6Q,UAAAA,OACIV,EAAAA,UAAAA,IAAoCqE,SAFxCxU,WAIAA,QAAAA,mBAA6BwU,SALjC,oBAQJ,OAAID,aAAAA,OACA,SAGJ,IAAM3D,mBAAqB2D,aAAAA,OAA3B,wBAEA,SAAIF,IAAAA,uBAAAA,UAA6CzD,mBAAAA,OAAjD,IAOE6D,iDAAmD,SAAnDA,iDAAoD,iBAAD,6BAMrD,GAAIC,8BAA8B1B,aAAlC,SAA0D,CACtD,GAAIhT,QAAAA,oBAA8BA,QAAAA,kBAAlC,EAGI,OAFA2U,iBAAAA,KAAAA,SAEA,iBAGJ,IAAK3U,QAAD,qBAAgC0U,8BAA8BC,iBAAlE,SAGI,OAFAA,iBAAAA,KAAAA,SAEA,iBAGJ,IAAK3U,QAAD,oBAA+B0U,8BAA8BC,iBAAjE,SAA6F,CACzF,IAAMC,oBAAsB5B,aAAA,MACxB,mBACInC,EAAAA,aAAAA,KAAaV,EAAAA,UAAAA,IAAoC0E,EAAjDhE,UAAAA,OACIV,EAAAA,UAAAA,IAAoCnQ,QADxC6Q,WAGAgE,EAAAA,mBAAuB7U,QAHvB6Q,kBAIAgE,EAAAA,OAAW7U,QALf,QAOE8U,YAAc9U,QAAAA,gBAApB,GAQA,YANI8U,IAAAA,kBAAJ,IAAiCF,sBACxBA,oBAAAA,gBAAAA,SAAL,cACIA,oBAAAA,gBAAAA,KAAAA,cAIR,iBAGJ,wBAKJ,OAFAD,iBAAAA,KAAAA,SAEA,kBAGED,8BAAgC,SAAhCA,8BAAiC1B,aAAD,aAClC,WAAIA,aAAAA,QAIGA,aAAA,MACH,mBACInC,EAAAA,aAAAA,KAAaV,EAAAA,UAAAA,IAAoC0E,EAAjDhE,UAAAA,OACIV,EAAAA,UAAAA,IAAoCR,YADxCkB,WAGAgE,EAAAA,mBAAuBlF,YAHvBkB,kBAIAgE,EAAAA,OAAWlF,YALf,SASKoF,0BAA4B,SAA5BA,0BAA6B,gBAAD,kCAKrC,YAAIp1B,gBAAJ,CAIA,2BAUIA,gBAVJ,SAEQlB,aAFR,oCAGQujB,WAHR,kCAIQ7iB,YAJR,mCAKQuyB,wBALR,+CAOWsD,cAPX,yGASI9B,SACAvzB,gBAVJ,SAYM8xB,SAAyB,kCAAH,uDAExBwD,YAAarB,6BAFW,iBAGxB7R,kBAHwB,IAGV5iB,YACdV,aAAcA,MAAAA,aAAuBy2B,aAAAA,EAAAA,eAA8BA,aAAAA,EAAAA,gBACnEvD,qBAAqBC,EAAAA,UAAAA,IAA+B5P,WAAY7iB,YALxC,yBAMxBg2B,oBAAqBtG,uBAAuB1vB,YANpB,YAOxB6iB,WACA7iB,YACAuyB,0BAGEsB,aAAeE,SAAAA,IAAAA,uBAAAA,OAAAA,2DAAAA,OAAAA,iDAArB,IAOA,MAAO,CACHlzB,gBACAyxB,SACAuB,aACAt0B,WANeq0B,uCAAiCC,aAAcvB,SAAUJ,kBAA5E,MChLE+D,iCAAmC,SAAnCA,iCAAoC9mB,KAAD,YACrC,YAAOA,IAAAA,MAAqB+mB,EAAAA,UAAAA,IAAa/mB,KAAlCA,iBAAP,GAGEgnB,aAAerI,YAAAA,EAAAA,cAqKrB,UAdY,CACRsI,YA3IgB,SAAdA,cACF,iBAAwBzH,WAAU,gBAAyB,CAAE/uB,IAAF,MAAclF,OAAQ,CAAE27B,iBAAiB,KAEpG,MAAO,CACHC,UAHJ,kBAIIC,WAJJ,qBA2IAC,oBAxEwB,SAAtBA,oBAAuBC,QACzB,IACI33B,WAUA23B,OAXJ,WAEIC,WASAD,OAXJ,WAGI5B,WAQA4B,OAXJ,WAIIn3B,aAOAm3B,OAXJ,aAKIz2B,YAMAy2B,OAXJ,YAMI5T,WAKA4T,OAXJ,WAOIlE,wBAIAkE,OAXJ,wBAQIE,kBAGAF,OAXJ,kBASIG,kBAEAH,OAXJ,kBAUII,eACAJ,OAXJ,eAeMK,UAAY,CACdJ,WACA7B,WACA8B,kBAAmBA,oBAHL,EAIdC,kBAAmBA,oBAJL,EAKdt3B,aACAR,WACAkB,YAAai2B,iCAAiCj2B,YATlD,YAUI6iB,WAAYoT,iCAAiCpT,WAVjD,YAWIkU,uBAAwBd,iCAAiC1D,wBAX7D,YAYIsE,eAAgBZ,iCAAiCY,eAZrD,aAeA,aAAwBlI,WAAU,iCAA0D,CACxFj0B,OAAQ,CACJs8B,QAAS,KACTP,OAFI,UAGJJ,iBAAiB,GAErB3H,aAAa,IAGjB,MAAO,CACHuI,gCAVJ,kBAWIC,iCAXJ,qBA4CAC,cAhGkB,SAAhBA,cAAiBC,OACnB,IAAQ94B,OAAkD84B,MAA1D,OAAgB53B,QAA0C43B,MAA1D,QAAyB33B,aAAiC23B,MAA1D,aAAuCC,eAAmBD,MAA1D,eACA,OAAO,2CAEH,CAAE94B,OAAQkB,QAASC,aAAc43B,gBACjC,CAAEhB,iBAAiB,KA4FvBiB,qBAxFyB,SAAvBA,uBACF,OAAO,6CAA2C,CAAEjB,iBAAiB,KAwFrEkB,sBArF0B,SAAxBA,sBAAyB,kBAAD,KAI1B,OAAO,qFAAoF,CACvFlB,iBADuF,EAEvFW,QAAS,QAgFbQ,4BA3HgC,SAA9BA,4BAA+BC,SAAD,+BAChC,iBAAwB9I,WAAU,0BAAgD,CAC9E/uB,IAD8E,SAE9ElF,OAAQ,CAAE+7B,OAAQ,CAAEiB,UAAWC,cAAgBtB,iBAAiB,GAChE3H,aAAaiJ,eAAAA,mBAHT/kB,KAAR,kBAAc4b,MAAd,mBAMA,MAAO,CACHoJ,6BAA8BhC,0BAA0BhjB,KAAMsf,kBAD3D,GAEH2F,8BAA+BrJ,QAmHnCsJ,kBA/GsB,SAApBA,oBACF,iBAAwBnJ,WAAU,WAA8C,CAC5Ej0B,OAAQ,CAAEq9B,kBAAF,cAAoC1B,iBAAiB,KAGjE,MAAO,CACH2B,YALJ,kBAMIC,aANJ,qBA+GA1uB,aA3JiB,SAAfA,eACF,gBAAwBolB,WAAU,aAA6B,CAAEj0B,OAAQ,CAAE27B,iBAAiB,KAE5F,MAAO,CACH6B,cAHJ,iBAIIC,eAJJ,oBA2JAC,sBA1I0B,SAAxBA,sBAAyBC,YAC3B,iBAAwB1J,WAAU,qBAA2C,CACzE/uB,IADyE,MAEzElF,OAAQ,CAAE27B,iBAAF,EAAyBI,OAAQ4B,cAG7C,MAAO,CACHC,oBANJ,kBAOIC,qBAPJ,uB,2UCrDEC,W,2BAAa1K,EAAAA,aAEb2K,cAAgB,oDAAa,CAAEC,QAASF,aA0B9C,iCAxByB,SAAnBxJ,iBAAoBpvB,KAqBtB,OApBA64B,cAAAA,aAAAA,QAAAA,KAAuC,iBAMnC,OALA/9B,OAAAA,QAAiB,IAEjB,MACIA,OAAAA,QAAAA,IAAAA,KAEJ,UAGJ+9B,cAAAA,aAAAA,SAAAA,KACI,mBACI,mBAEJ,mBAGI,OAFI5uB,SAAAA,UAAqBA,SAAAA,SAAAA,OAElB8uB,QAAAA,OAAP,aAIR,gB,+eC1BJ,IAAMC,cAAgB,SAAhBA,cAAiBlyB,OAAD,OAClB,iEAAKtD,UAAL,QAAuBC,KAAvB,eAA2CE,MAA3C,GAAsDC,OAAQ,IAA9D,OACI,sDAAGC,KAAH,OAAeC,SAAS,WACpB,yDACID,KADJ,UAEIE,EAAE,gGAEN,yDACIF,KADJ,OAEIE,EAAE,oIAMlB,+C,moBCXMk1B,eAAiD,SAAjDA,eAAkD,MAAD,IAAGhqB,sBAAH,kCACnD,wDAAKxL,KAAL,eAAyBD,UAAzB,QAA2CE,QAA3C,cAAiE4hB,WAAW,gCACxE,8DADJ,gBAEI,6DACI,2DAAQzrB,GAAR,kBAA6BmK,GAA7B,KAAqCC,GAArC,KAA6CC,EAAE,OAC/C,yDACIH,EADJ,skBAEIlK,GAAG,oBAEP,yDACIkK,EADJ,ggBAEIlK,GAAG,qBAGX,sDAAGoN,OAAH,OAAiBC,YAAjB,IAAiCrD,KAAjC,OAA6CC,SAAS,YACjDmL,IAAAA,uBACG,wDAAKrJ,UAAL,sBAAqC/B,KAArC,UAAoDsD,UAAU,qBAElE,sDAAGvB,UAAH,OAAoBwB,UAAU,mCAC1B,wDAAKxB,UAAL,OAAsB/B,KAAtB,UAAqCsD,UAAU,qBAC/C,yDACIpD,EADJ,kOAEIF,KAAK,YAET,yDACIE,EADJ,+5BAEIF,KAAK,YAET,sDAAGuD,UAAH,kCAA+CvD,KAAK,WAChD,yDACIE,EADJ,wSAEI6B,UAAU,QAEd,yDACI7B,EADJ,sSAEI6B,UAAU,SAGlB,yDACI7B,EADJ,mrBAEIF,KAFJ,UAGIC,SAHJ,UAII8B,UAAU,SAEd,yDACI7B,EADJ,+jCAEI6B,UAFJ,cAGI/B,KAHJ,UAIIC,SAAS,YAEb,yDACIC,EADJ,+lBAEI6B,UAFJ,eAGI/B,KAHJ,UAIIC,SAAS,YAEb,yDACIC,EADJ,8GAEI6B,UAFJ,iBAGIqB,OAHJ,UAIIC,YAJJ,aAKIgyB,cAAc,WAGtB,wDAAKr1B,KAAL,UAAoBsD,UAAU,qBAC9B,sDAAGC,UAAU,oCACT,yDACIrD,EADJ,2VAEIF,KAAK,YAET,yDACIE,EADJ,gSAEIF,KAAK,YAET,4DACIA,KADJ,UAEIs1B,OAAO,0FAEX,4DACIt1B,KADJ,UAEIs1B,OAAO,yFAEX,4DACIt1B,KADJ,UAEIs1B,OAAO,0FAEX,yDACIp1B,EADJ,ijBAEIF,KAAK,YAET,yDACIE,EADJ,sgBAEIF,KAAK,YAET,yDACIE,EADJ,8iBAEIF,KAAK,YAET,yDACIE,EADJ,4PAEIF,KAAK,YAET,yDACIE,EADJ,2TAEIF,KAAK,YAET,yDACIE,EADJ,6TAEIF,KAAK,YAET,yDACIE,EADJ,unBAEIF,KAAK,YAET,yDACIE,EADJ,iYAEIF,KAAK,YAET,4DACIA,KADJ,UAEIs1B,OAAO,kGAO3B,gD,6iDClHA,IAAMC,WAA6C,SAA7CA,WAA8C,MAA2C,IAAzC98B,WAAyC,KAAzCA,WAAYY,aAA6B,KAA7BA,aAAcoF,SAAe,KAAfA,SACtEkD,MAAOC,EAAAA,wCAAAA,KACP8B,KAAM5B,EAAAA,+CAAAA,UAAZ,cACMD,IAAM2zB,iDAAAA,CAAW9xB,IAAD,M,8JAAA,IACjBA,IAAAA,SADiB,WACSjL,WAD/B,UAIA,OACI,wDAAKsJ,UAAWF,KACXpJ,WAAAA,SACG,wDAAKsJ,UAAW2B,IAAAA,QAAAA,YACZ,8GAAoB5I,KAAK,OAGjC,6GAAaiH,UAAW2B,IAAAA,QAAxB,QAA6C5D,MAA7C,GAAwDC,OAAQ,KAChE,wDAAKgC,UAAW2B,IAAAA,QAAAA,aACXjL,WAAAA,IACG,6GAAO0L,KAAM1L,WAAb,IAA6Bf,OAAO,UAC/Be,WAFRA,UAKG,6DAAOA,WANf,UAQKY,cAAgB,6DAAMo8B,EAAAA,kDAAAA,IAAYh9B,WAf3C,YAiBKgG,UACG,yDAAMsD,UAAW2B,IAAAA,QAAAA,iBACb,4GACI1E,QAAS,0BAAMP,SAAN,aACTi3B,WAAWzzB,EAAAA,+CAAAA,WAAUN,KAAM,0BAA2B,CAAE0J,KAAM5S,WAAWE,gBAQjG,4C,kqCC5CMg9B,eAAiD,SAAjDA,eAAkD1yB,OACpD,IAAQ9J,YAAwC8J,MAAhD,YAAqB5J,aAA2B4J,MAAhD,aAAmCxE,SAAawE,MAAhD,SACA,OACI,uDAAIlB,UAAU,kBACV,4GACK5I,YAAA,KAAgB,kCACb,wGAAey8B,WAAf,iBAA2CrC,QAA3C,IAAyD38B,IAAKg6B,OAC1D,2DACI,6FACIn4B,WACAgG,SACApF,uBAShC,gD,giDCQA,iCA/BoB,SAAdw8B,cACF,IAAMl0B,MAAOC,EAAAA,wCAAAA,KACP8B,KAAM5B,EAAAA,+CAAAA,UAAZ,eAEA,OACI,oHAAoB4C,UAAU,uBAC1B,4DAAS3C,UAAU,wBACf,uDAAIA,UAAW2B,IAAIG,OACf,2DACI,uHAAc5B,EAAAA,+CAAAA,WAAUN,KAFhC,0CAII,2DACI,sHACI,4FACI3L,GADJ,uCAEIgO,OAAQ,CACJ8xB,KACI,6GAAO3xB,KAAMU,6CAAAA,EAAAA,YAAmBnN,OAAO,UACnC,4FAAkB1B,GAAG,yD,oXCjB3D+/B,WAA6C,SAA7CA,WAA8C,MAA+B,IAA7Bv8B,MAA6B,KAA7BA,MAAOX,IAAsB,KAAtBA,IAAKS,WAAiB,KAAjBA,WACxDqI,MAAOC,EAAAA,wCAAAA,KACb,OACI,6DACKpI,QAASyI,EAAAA,+CAAAA,WAAUN,KADxB,OAEI,sDAAGwC,KAAH,IAAcpC,UAAd,QAAgC6X,IAAhC,aAAiDliB,OAAjD,SAAiEzB,MAAO,CAAE+/B,WAAY,IAAtF,WAEI,6DALZ,SAWEC,YAAc,SAAdA,cAAc,OAChB,wDACIl0B,UADJ,cAEIjC,MAFJ,OAGIC,OAHJ,OAIIF,QAJJ,YAKI9D,QALJ,MAMImH,MANJ,6BAOIue,WAAW,gCAEX,8DATJ,iBAUI,sDAAGre,OAAH,OAAiBC,YAAjB,KAAkCrD,KAAlC,OAA8CC,SAAS,WACnD,yDACIC,EADJ,81BAEIF,KAAK,YAET,yDACIE,EADJ,+UAEIF,KAAK,YAET,yDACIE,EADJ,mXAEIF,KAAK,eAMrB,4C,+4BC3CMvG,SAA2C,SAA3CA,SAA4C,MAAoC,IAAlCC,OAAkC,KAAlCA,OAAQqI,UAA0B,KAA1BA,UAAW7C,SAAe,KAAfA,SACnE,OACI,6DACI6C,UACA9L,MAAO,CAAEurB,QAAF,OAAmB0U,cAAnB,SAA4CpxB,OAA5C,OAA4D5O,QAA5D,IAA0E2K,OAAQ,MAEzF,2DAAQ5K,MAAO,CAAE4K,OAAQ,iBAJ7B,QADJ,WAWJ,0C,ytDCUA,+BAhB8C,SAAxCs1B,YAAyC,MAAoD,IAAlDC,QAAkD,KAAlDA,QAASr2B,OAAyC,KAAzCA,OAAQD,MAAiC,KAAjCA,MAAOiC,UAA0B,KAA1BA,UAAcs0B,MAAY,yCACzFx2B,QAAU,CAAE,WAAYu2B,QAAQv2B,SACtC,OACI,oCACIF,UADJ,QAEIC,KAFJ,eAGImC,UACAhC,OACAD,OALJ,eASI,2BAAKwD,UAAS,WAAM8yB,QAAN,Q,2xBCZ1B,IAAM1yB,KAAM5B,EAAAA,IAAAA,UAAZ,eAEMnI,YAA8C,SAA9CA,YAA+C,MAA+C,IAA7CC,UAA6C,KAA7CA,UAAWE,UAAkC,KAAlCA,UAAWE,QAAuB,KAAvBA,QAASI,QAAc,KAAdA,QAC5Ek8B,SAAW5gC,oBAAAA,MAAAA,CAAO,sBAAPA,SAAAA,QACX6gC,UAAYz8B,UAAYpE,oBAAAA,MAAAA,CAAO,sBAAPA,SAAAA,aAA9B,EAEA,OACI,2BAAKkK,KAAL,eAAyBmC,UAAW2B,IAAAA,WAAeA,IAAfA,MAA0BA,IAAAA,oBAAAA,UAA1BA,WAChC,8BACI3B,UAAW2B,IAAAA,QADf,eAEIyH,IAFJ,SAGIqrB,YAAyB,8BAAZx8B,UAEhBu8B,WACG,wCACKv8B,SAAAA,qBAAWA,SAAkC,4BAAM+H,UAAW2B,IAAAA,QAAAA,qBAC/D,8BACI3B,UAAW2B,IAAAA,QADf,gBAEIyH,IAFJ,UAGIqrB,YAAyB,6BAAZx8B,aAQ/BizB,SAAW,SAAXA,SAAY,OAA4F,IAA1FlrB,UAA0F,MAA1FA,UAAWoJ,IAA+E,MAA/EA,IAAKqrB,YAA0E,MAA1EA,YAUhC,OARI,8CACIz0B,UAAW2B,IAAAA,WAAAA,UAA0BA,IAAAA,oBAAAA,cADzC,cAEI0yB,QAFJ,IAGIt2B,MAHJ,GAIIC,OAAQ,MAOpB,0C,mqDC/BA,oBAFsB,CAAE02B,eAjBxB,SAASA,eAAeh+B,YACpB,IAQM2sB,SAAW,IAAjB,SACAA,SAAAA,OAAAA,KAAsB3sB,WAAtB2sB,IACAA,SAAAA,OAAAA,UAA2B3sB,WAA3B2sB,KAA4C3sB,WAA5C2sB,UAEA,IAAMvsB,IAAM,GAAH,OAAMwxB,YAAAA,EAAAA,aAAf,oBACA,OAAOkB,EAAAA,eAAAA,KAAAA,KAAAA,IAAAA,SAbQ,CACXqH,iBADW,EAEXW,QAAS,KACTmD,QAAS,CACL,eAAgB,2B,8kFCkB5B,IAAMC,iBAAmB,CAAC,OAAQ,QAAS,OAA3C,QAmBMC,oBAAsB,SAAtBA,oBAAuB,eAAD,gBAKxB,OAAOC,eAAA,QAAsB,kBACzB,IAAMC,SAXe,SAAvBC,qBAAwBp+B,UAC1B,IAAMq+B,IAAMr+B,SAAAA,MAAAA,KAAZ,MACA,OAAOg+B,iBAAAA,SAAAA,IAAAA,OAA8BK,IAArC,gBASqBD,CAAqBlmB,QAAtC,UAMA,OALA,UACIomB,WAAU,0BACNC,SAAA,QAAgBj1B,EAAAA,IAAAA,WAAUN,KAAM,mCAAoC,CAAEhJ,SAAUkY,QAAQlY,eAGhG,aAIFw+B,eAAiB,SAAjBA,eAAkB,eAAD,6DAQnBN,eAAAA,QAAAA,WAAAA,IAAAA,K,qVAAAA,CAAAA,mBAAAA,MAAuB,kMAEQO,cAAAA,eAFR,gBAEThxB,SAFS,cAGfyK,QAAAA,SAAAA,EACAA,QAAAA,IAAczK,SAAAA,QAAdyK,SACAA,QAAAA,UAAAA,EACAA,QAAAA,KAAezK,SAAfyK,KACAwmB,UAAUC,0BAAD,MAATD,SAPe,8EASfE,SAASD,0BAATC,OACAN,WAAU,0BACNC,SAAA,QACIj1B,EAAAA,IAAAA,WAAUN,KAAM,wCAAyC,CAAEhJ,SAAUkY,QAAQlY,eAZtE,uEAAvBk+B,OAAAA,SAAAA,GAAAA,KAAAA,OAAAA,KAAAA,MAAAA,KAAAA,YAAAA,KAmBEW,mBAAqD,SAArDA,mBAAsD,OAOtD,IANFr+B,YAME,MANFA,YACAkB,KAKE,MALFA,KACAo9B,iBAIE,MAJFA,iBACAl9B,eAGE,MAHFA,eACAE,aAEE,MAFFA,aACGi9B,WACD,0CACI/1B,MAAOC,EAAAA,QAAAA,KACLwe,eAAkBuX,EAAAA,WAAAA,oBAA1B,cACA,2BAA4B/xB,EAAAA,MAAAA,UAA5B,OAAOgyB,OAAP,cAAeX,UAAf,cAEA,OACI,wCACI,+BAAOnzB,UAAU,KACb,wDACIzJ,KACAw9B,mBAAoBlB,iBAAAA,KAFxB,MAGImB,cAAe,oCAA4D,IAA1CC,KAA0C,MAA1CA,KAAMC,QAAoC,MAApCA,QAASC,OAA2B,MAA3BA,OACtCpB,eA/EI,SAA5BqB,0BAA6B,MAAD,6BAK9B,OAAOC,MAAA,KAAU,cACb,IAAMC,aAAcC,EAAAA,aAAAA,IAAiBC,IAAK/9B,eAA1C,cAEA,OADA69B,YAAAA,SAAAA,EACA,eAuEuCF,CAA0BK,MAAOh+B,eAAxD,cACMi+B,sBAAwB5B,oBAAoBC,eAAgBI,UAAlE,MACAuB,sBAAAA,SAA8B,6BAAiBT,KAAjB,gBAC9BZ,eAAeqB,sBAAuBR,QAASC,OAAQhB,UAAW99B,YAApD,OAAdg+B,OAEJn4B,QATJ,iBAUIy5B,KACIb,OAAA,SACMA,OAAA,KAAW,uBAAW,4DAAahhC,IAAKm0B,OAA7B,eACX7mB,GAftB,cAoBI,+BAAOJ,UAAP,IAAqBG,QAAS9K,YAAAA,OAAqB,GAC/C,sCACIA,YAAaA,YAAA,QAAmB,oBAAQ6pB,EAAAA,aAAAA,IAAR,MAChC3pB,cAFJ,EAGIoF,SAAU,wBACN2hB,cAAc/lB,MAAMq+B,EAAAA,WAAAA,IAAiBv/B,YAArCinB,WAIZ,mCACI,4CAAoB1b,WAAWzC,EAAAA,IAAAA,WAAUN,KAAM,kCAC3C,6CAhChB,UAuCJ,iE,08DCpIA,qB,2NAAYg3B,sBAAAA,qBAAAA,SAAAA,WAAAA,qBAAAA,QAAAA,UAAAA,qBAAAA,QAAAA,UAAAA,qBAAAA,YAAAA,cAAAA,qBAAAA,SAAAA,WAAAA,qBAAAA,YAAAA,c,CAAAA,uBAAAA,qBAAAA,KCJL,I,uCCWDC,gBAAkD,SAAlDA,gBAAmD,MAAiC,IAA/B39B,UAA+B,KAA/BA,UAAW49B,cAAoB,KAApBA,cAC5DtzB,KDoB6B,SAA1BuzB,wBAA2B79B,WACpC,kBACI,KAAK09B,qBAAqBI,SACtB,MAAO,CACHC,IADG,OAEHC,UAAW,QAEnB,KAAKN,qBAAqBO,QACtB,MAAO,CACHF,IADG,OAEHC,UAFG,OAGHj/B,QAAS,6BAEjB,KAAK2+B,qBAAqBQ,QACtB,MAAO,CACHH,IADG,OAEHC,UAFG,OAGHj/B,QAAS,4BAEjB,KAAK2+B,qBAAqBS,YACtB,MAAO,CACHJ,IADG,OAEHC,UAFG,OAGHj/B,QAAS,oBAEjB,KAAK2+B,qBAAqBU,YACtB,MAAO,CACHL,IADG,UAEHC,UAAW,WAEnB,KAAKN,qBAAqBW,SACtB,MAAO,CACHN,IADG,OAEHC,UAAW,SCrDVH,CAAb,WACMp1B,KAAM5B,EAAAA,IAAAA,UAAZ,mBAEA,OACI,2BAAKC,UAAW2B,IAAIG,OAChB,2BAAK9B,UAAW2B,IAAAA,QAAAA,SACZ,mCAAalD,SAAS,QACjB,IDEsB,SAA9B+4B,4BAA+Bt+B,WACxC,kBACI,KAAK09B,qBAAqBS,YAC1B,KAAKT,qBAAqBO,QAC1B,KAAKP,qBAAqBQ,QACtB,SACJ,QACI,UCTSI,CAAA,0BACG,mCAAa3/B,UAAWi/B,gBAAkB5L,SAAAA,EAAAA,IAAe1nB,KAAjCszB,IAA4CtzB,KAAK0zB,YAEzE,mCACIr/B,UAAW2L,KADf,IAEIzL,UAAWyL,KAFf,UAGIvL,QAASuL,KAHb,QAIInL,SAAS,QASrC,uD,2oDC7BMo/B,wBAA0B,SAA1BA,wBAA2BC,KAAD,YAC5BA,IAAAA,MAD4B,IACP7c,MAAM8c,WAAN9c,OAEnB+c,gBAAkB,SAAlBA,gBAAmBF,KACrB,YAAIA,IAAJ,CAIA,IAAMG,IAAMF,WAAZ,KACA,IAAI9c,MAAJ,KAGA,OAAIxG,KAAAA,MAAAA,OAAJ,IACWA,KAAAA,MAAP,KAEJ,MAGSyjB,oBAAsB,SAAtBA,oBAAuBl4B,KAAD,sBAC/B,SACA,cACI,KAAK9E,iBAAAA,EAAAA,cACDwO,KAAOyuB,eAAPzuB,IACA,MACJ,KAAKxO,iBAAAA,EAAAA,WACDwO,KAAOyuB,eAAPzuB,UACA,MACJ,QACIA,UAAAA,EAER,YACW1J,KAAA,cACH,CAAE3L,GAAI,uCACN,CAAEqV,MAAM0uB,EAAAA,YAAAA,IAAuB1uB,KAAM1J,KAAP,UAG/BA,KAAA,cAAmB,CAAE3L,GAAI,oBAAF,iBAGrBgkC,qCAAuC,SAAvCA,qCAAwC,aAAD,kBAIhD,0BAGA,aACW,IAAP,kBADJ,IAiCSC,gBAAkB,SAAlBA,gBAAmBtM,SAAD,gBAC3B,OAAImM,eAAJ,UACWnM,WAAaV,SAAAA,EAAAA,IAAe6M,eAA5BnM,IAAiDmM,eAAxD,UAEGnM,WAAaV,SAAAA,EAAAA,IAAe6M,eAA5BnM,IAAP,UAGSuM,iBAAmB,SAAnBA,iBAAoBv4B,KAAD,wBAC5B,OAAQyb,QAAR,MACI,KAAK/f,QAAAA,GAAAA,MACD,IAAMU,OAAS87B,oBAAoBl4B,KAAMyb,QAAP,MAAlC,gBACA,OACKA,QAAAA,SAAmBoc,wBAAwBpc,QAA5C,mBACCA,QAAAA,qBAA+Boc,wBAAwBpc,QAF5D,sBAII,8BAAoBnb,EAAAA,IAAAA,WAAUN,KAAM,oBAAqB,CACrDpE,iBAAkBy8B,qCACdL,gBAAgBvc,QADkC,kBAElDA,QAAAA,qBAA+Buc,gBAAgBvc,QAA/CA,2BAFkD,MAO9D,OAEJ,KAAK/f,QAAAA,GAAAA,cACD,OAAOw8B,oBAAoBl4B,KAAMyb,QAAP,MAA1B,gBACJ,KAAK/f,QAAAA,GAAAA,WACD,OAAI+f,QAAJ,OACWnb,EAAAA,IAAAA,WAAUN,KAAM,gCAAiC,CACpD+rB,OAAOzrB,EAAAA,IAAAA,WAAUN,KAAM,oBAAP,OAA2Byb,QAA3B,WAGjBnb,EAAAA,IAAAA,WAAUN,KAAjB,wCACJ,KAAKtE,QAAAA,GAAAA,QACD,OA9DwB,SAAvB88B,qBAAwB,KAAD,0BAMhC,OAAOC,OACDn4B,EAAAA,IAAAA,WAAUN,KAAM,sCAAP,cAAsD,CAAE04B,gBACjEp4B,EAAAA,IAAAA,WAAUN,KAAM,sCAAP,cAAsD,CAAE04B,eAsDxDF,CAAqB,KAExB/c,QAFuB,MAGvB6c,gBAAgB7c,QAAD,SAHQ,gBAA3B,QAIIA,QAAAA,UAER,KAAK/f,QAAAA,GAAAA,KACD,OAAO4E,EAAAA,IAAAA,WAAUN,KAAjB,2BACJ,KAAKtE,QAAAA,GAAAA,KACD,OAAQ+f,QAAR,UACI,KAAKqQ,gBAAAA,EAAAA,eACD,OAAOoM,oBAAoBl4B,KA9DC,SAAnC24B,iCAAoC5M,OAC7C,OAAIA,QAAUU,iBAAAA,EAAAA,6BACHvxB,iBAAAA,EAAAA,WAGP6wB,QAAUU,iBAAAA,EAAAA,gCACHvxB,iBAAAA,EAAAA,cAGP6wB,QAAUU,iBAAAA,EAAAA,gCACHvxB,iBAAAA,EAAAA,cAGJA,iBAAAA,EAAAA,2BAiD0Cy9B,CAAiCld,QAAxC,OAA1B,gBACJ,KAAKqQ,gBAAAA,EAAAA,oBACD,OAAOxrB,EAAAA,IAAAA,WAAUN,KAAM,+BAAP,OAAsCyb,QAAtC,OAAuD,CACnE/R,KAAM4uB,gBAAgB7c,QAAD,2BAE7B,QACI,OAAOnb,EAAAA,IAAAA,WAAUN,KAAM,oBAAP,OAA2Byb,QAA3C,cC1Hdmd,yBAAqD,SAArDA,yBAAsD,MAItD,IAHFC,iBAGE,KAHFA,iBACAC,kBAEE,KAFFA,kBACAX,eACE,KADFA,eAEMn4B,MAAOC,EAAAA,QAAAA,KAEP8B,KAAM5B,EAAAA,IAAAA,UAAZ,4BAEA,OACI,2BAAKC,UAAW2B,IAAIG,OACf42B,mBACG,gEACI,+BACIzkC,GADJ,uCAEIgO,OAAQ,CACJqH,MAAM0uB,EAAAA,YAAAA,IAAuBU,kBAAmB94B,KAApB,YAK5C,0BAAII,UAAW2B,IAAAA,QAAAA,SACV82B,iBAAA,KAAqB,kBAClB,OACI,0BAAI5jC,KAAK4N,EAAAA,0BAAAA,SACL,2BAAKzC,UAAW2B,IAAAA,QAAAA,aACZ,wDAAS3B,UAAW2B,IAAAA,QAAAA,qBACf+uB,EAAAA,UAAAA,IAAarV,QAAAA,YAAD,IArB7C,gBAoB4B,UAEKqV,EAAAA,UAAAA,IAAarV,QAAAA,YAAD,IAtB7C,gBAmBwB,KAKI,gEAAc8c,iBAAiBv4B,KAAMyb,QAPjD,yBAiBpB,8E,24BCkJA,qBAtJuD,SAAjDsd,eAAkD,MAIlD,IAoCF,iBAvCA/9B,4BAGE,KAHFA,4BACAI,gBAEE,KAFFA,gBACAN,oBACE,KADFA,oBAEMiH,KAAM5B,EAAAA,IAAAA,UAAZ,kBACMH,MAAOC,EAAAA,QAAAA,KACP3F,WAAY6J,EAAAA,aAAAA,KACZjL,QAASgN,EAAAA,UAAAA,KAEPrM,cAAyBX,OAAjC,cAAuBa,MAAUb,OAAjC,MACQkL,OAAW9J,UAAnB,OACMiC,MAAOy8B,EAAAA,eAAAA,IAAb,6BACMC,oBAAqBC,EAAAA,YAAAA,IAA3B,eACMpM,kBAAmB5jB,EAAAA,iBAAAA,GAAiBhQ,OAAAA,eAA1C,OACMoQ,mBAAoBnB,EAAAA,cAAAA,GAAAA,eAAwCtO,cAAxCsO,QAA1B,GACMuoB,eAAcvoB,EAAAA,cAAAA,GAAAA,kBAA0CtO,cAA1CsO,wBACd7M,gBAAkBvB,MAAxB,gBACMy1B,oBAAqB2J,EAAAA,YAAAA,KAAqB,iCAAhD,eACM7J,0BAA2B8J,EAAAA,YAAAA,IAA4BtM,iBAAkBxxB,gBAA/E,eACQpB,aAAiBhB,OAAzB,aACMI,UJxE6B,SAA1B+/B,wBAA2B,WAAD,4EAOnC,mBACQ3V,aAAJ,mBACWsT,qBAAqBI,SAEzB1T,MAAAA,WAAqBsT,qBAAqBW,SAAWX,qBAAqBU,YAEjF,MAAIhU,WACO8L,mBAAqBwH,qBAAqBS,YAAcT,qBAAqBQ,QAE7ElI,yBAA2B0H,qBAAqBS,YAAcT,qBAAqBO,QIwDhF8B,CACdj1B,OADqC,wDAAzC,0BAOMk1B,uBAAwBxxB,EAAAA,IAAAA,UAAAA,oBAAAA,kBAA9B,YAEMyxB,uBAAyB7I,iBAAcnuB,EAAYuqB,iBAAmBxB,SAAAA,EAAAA,UAAqBA,SAAAA,EAAAA,IAE3FkO,KAjDM,SAAVC,QAAW,KAAD,2DAMZ,OAAI/I,kBAAJ,IAAmBgJ,kBACRC,6BACDr5B,EAAAA,IAAAA,WAAUN,KAAM,4EAA6E,CACzF0J,KAAMgwB,qBAEVp5B,EAAAA,IAAAA,WAAUN,KAAM,6CAA8C,CAAE0J,KAAMgwB,qBAGzEp5B,EAAAA,IAAAA,WAAUN,KAAjB,+CAmCay5B,CAAQ,KAAD,gCAIhBr+B,iBAAkBA,gBAAH,iBAEb+8B,gBAAiByB,EAAAA,YAAAA,IAAkBx1B,OAAQvK,cAAjD,kBAGA,kBACIggC,iBAAmBz+B,gBAAAA,YACb0+B,EAAAA,UAAAA,IAAU1+B,gBAAV0+B,YADa1+B,4BAAnBy+B,GAIJ,IAAME,mCACF3+B,iBAAmBA,gBAAnBA,YAAAA,kBACM8vB,EAAAA,YAAAA,GAAY2O,iBAAAA,YAAZ3O,KADN9vB,aADJ,EAKM4+B,qBAAsB5B,EAAAA,YAAAA,IAAuB9uB,kBAAmBtJ,KAAtE,QAEMi6B,kBACF7+B,IAAAA,gBAAgCA,gBAAAA,WAAAA,OAAhCA,QAAAA,IADJ,GAGM8+B,aAAuBp/B,oBAAmB,gDAAhD,yCAIMq/B,eACF/+B,iBACAA,gBADAA,YAEAA,gBAAA,mBAAkC,mBAAOigB,EAAAA,OAAW3f,QAAAA,GAAAA,QAExD,OACI,+BAAOyG,UAAP,IAAqB/B,UAAW2B,IAAIG,OAChC,8CACI9F,QAAQkE,EAAAA,IAAAA,WAAUN,KAAM,0BAAP,OAAiC0wB,YAAc,YADpE,gBAEIp0B,eAAgB,CACZ,sDAAiBrH,IAAjB,YAAiCqE,UAAsB49B,cAAeqC,yBACtE,kCAAYtkC,IAAZ,OAAuBsH,SAG3B,gEACI,+BACIlI,GADJ,6BAEIgO,OAAQ,CACJ9F,KAAM,mCAAS69B,EAAAA,UAAAA,IAAiB,EAAC79B,KAD7B,OAEJrC,aAAc,kCAFV,cAGJwP,KAAM8vB,SAIjBF,wBAAyBxxB,EAAAA,IAAAA,UAAzBwxB,oBAAAA,oCACG,gEACI,+BACIjlC,GADJ,8CAEIgO,OAAQ,CACJ0H,MAAM+mB,EAAAA,UAAAA,IAAaiJ,mCADf,gBAEJrwB,KAFI,kBAGJ2wB,EAAG,uBAAc,6BAAd,UAMlBf,wBACGxxB,EAAAA,IAAAA,UADHwxB,yBAAAA,IAEGW,cACAA,aAAAA,OAHHX,GAIO,4CACIv2B,WAAWzC,EAAAA,IAAAA,WAAUN,KAAMk6B,aAAc,CACrCxwB,KAAMswB,uBAGV,oEACInB,iBADJ,aAEIC,kBAFJ,kBAGIX,mBAKnBmB,4BAAAA,IAAyBa,gBAAgCA,eAAAA,OAAzDb,GACG,8CACIl9B,QAAQkE,EAAAA,IAAAA,WAAUN,KADtB,qDAEI1D,eAFJ,GAGIG,UACI,IAAA3B,oBACI,wCACI,iEADJ,iCAEI,4CAAoBiI,UAAU,yCAA9B,yDAEI,oEACI81B,iBADJ,eAEIV,wBAIZ51B,IAIhB,gEACI,+BACIlO,GADJ,gCAEIgO,OAAQ,CACJS,EAAG,uBACC,yBAAGN,KAAMU,MAAAA,EAAAA,eAAsB9C,UAA/B,QAAiD6X,IAAjD,aAAkEliB,OAAO,UAD1E,Y,w0CC/L3B,IAAMukC,qBAAuB,SAAvBA,qBAAwBh5B,OAAD,OACzB,oCAAKtD,UAAL,QAAuBC,KAAvB,eAA2CE,MAA3C,GAAsDC,OAAQ,IAA9D,OACI,yBAAGC,KAAH,OAAeC,SAAS,WACpB,4BAAMC,EAAN,gDAAwDF,KAAxD,OAAoEoD,OAApE,UAAqFC,YAAY,MACjG,4BACInD,EADJ,oIAEIF,KAAK,eAMrB,uD,geCJA,IAAMk8B,uBAAyD,SAAzDA,uBAA0D,MAAa,IAAXh+B,KAAW,KAAXA,KACxDwF,KAAM5B,EAAAA,IAAAA,UAAZ,0BACA,OACI,2BAAKC,UAAW2B,IAAAA,WAAeA,IAAfA,MAA0BA,IAAAA,oBAAAA,SAAkCxF,KAA5DwF,MACZ,2BAAK3B,UAAW2B,IAAAA,QAAAA,SACZ,gDAFR,OAII,2BAAK3B,UAAW2B,IAAAA,QAAAA,SALxB,QAUJ,2E,2wBCXMy4B,WAA6C,SAA7CA,WAA8C,MAAa,IAAXj+B,KAAW,KAAXA,KAC5CwF,KAAM5B,EAAAA,IAAAA,UAAZ,cAEA,OACI,2BAAKC,UAAW2B,IAAIG,OAChB,2BAAK9B,UAAW2B,IAAAA,QAAAA,SACZ,mCAAalD,SAAS,QAClB,mEAAwBtC,WAO5C,wC,47BCbMJ,uBAAyD,SAAzDA,uBAA0D,MAAmD,IAAjDC,OAAiD,KAAjDA,OAAQE,eAAyC,KAAzCA,eAAgBG,SAAyB,KAAzBA,SAAUc,SAAe,KAAfA,SAC1FwE,KAAM5B,EAAAA,+CAAAA,UAAZ,0BAEA,OACI,wDACIC,UAAW2B,IAAAA,WACPA,IADOA,MAEPA,IAAAA,oBAAAA,yBAFOA,IAEsCzF,kBAGjD,wDAAK8D,UAAW2B,IAAAA,QAAAA,mBACZ,wDAAK3B,UAAW2B,IAAAA,QAAAA,kBACZ,+DACI,mHAAcK,IAAd,KAAuBhC,UAAW2B,IAAAA,QAAAA,WADtC,aAIKtF,IAAAA,UANb,WASI,wDAAK2D,UAAW2B,IAAAA,QAAAA,YAfxB,WAiBKzF,gBACG,wDAAK8D,UAAW2B,IAAAA,QAAhB,kBAA+C9D,KAA/C,eAAmEw8B,eAAa,GAC3E,gEAAmC,2BAChC,wDAAKr6B,UAAW2B,IAAAA,QAAhB,gBAA6C9M,IAAKg6B,OADlB,WAWxD,wD,grCC3BA,sCAjBe,SAATyL,SACF,OACI,2BAAKv8B,MAAL,GAAgBC,OAAhB,GAA4BF,QAA5B,YAAgDqD,MAAM,8BAClD,iCADJ,WAEI,4BACIhD,EADJ,kOAEIkD,OAFJ,UAGIC,YAHJ,GAIIrD,KAJJ,OAKIC,SALJ,UAMIo1B,cANJ,QAOIiH,eAAe,Y,0DCMzBj+B,uBAAmD,SAAnDA,uBAAoD,MASpD,IARFjG,MAQE,KARFA,MACAkG,KAOE,KAPFA,KACAI,eAME,KANFA,eACAE,qBAKE,KALFA,qBACAD,mBAIE,KAJFA,mBACAG,qBAGE,KAHFA,qBACAL,SAEE,KAFFA,SACAF,OACE,KADFA,OAEMmF,KAAM5B,EAAAA,IAAAA,UAAZ,0BAEA,OACI,0BAAIC,UAAW2B,IAAIG,OACf,2BAAK9B,UAAW2B,IAAAA,QAAAA,QACZ,2CAAa3B,UAAU,SAD3B,OAEI,8BACIjH,KADJ,SAEIiH,UAAW2B,IAAAA,QAFf,cAGI1E,QAHJ,OAII0G,aAAY/G,oBAEZ,oDATZ,QAYI,2CAAaoD,UAAW2B,IAAAA,QAAAA,SAZ5B,MAaI,2BAAK3B,UAAW2B,IAAAA,QAAAA,WACX5E,sBAAwB,iEAD7B,yBAEI,8BACIiD,UAAW2B,IAAAA,QADf,gBAEI1E,QAFJ,SAGIlE,KAHJ,SAII4K,aAAY9G,sBApB5B,mBA6BJ,6E,opDClDMG,WAA6C,SAA7CA,WAA8C,MAAsB,IAApBT,KAAoB,KAApBA,KAAMU,SAAc,KAAdA,QACxD,OACI,2DACI+C,UADJ,mBAEI/C,QAAS,oBACLoF,EAAAA,iBACApF,aAGJ,sHARR,QAaJ,4C,o9BCVMC,WAA6C,SAA7CA,WAA8C,MAA8D,IAA5DlB,OAA4D,KAA5DA,OAAQmB,SAAoD,KAApDA,SAAUE,KAA0C,KAA1CA,KAAME,UAAoC,KAApCA,UAAoC,qBAAzBE,WAAAA,gBAAyB,oBAAZ,MAAY,gBACxGkE,KAAM5B,EAAAA,+CAAAA,UAAZ,cAEA,OACI,wDACIC,UAAW2B,IAAAA,WACPA,IADOA,MAEPA,IAAAA,oBAAAA,aAFOA,IAE8BpE,WACrCoE,IAAAA,SAAAA,UAAAA,OAHOA,eAMVtE,MAAQ,wDAAK2C,UAAW2B,IAAAA,QAAAA,SAP7B,MAQI,wDAAK3B,UAAW2B,IAAAA,QAAAA,YACX3F,QAAU,kHAAagE,UAAU,UADtC,QAEI,wDAAKA,UAAW2B,IAAAA,QAAAA,UAX5B,aAgBJ,4C,moCCrBMpD,YAA8C,SAA9CA,YAA+C,MAAgD,IAA9CM,MAA8C,KAA9CA,MAAOJ,SAAuC,KAAvCA,SAAuC,gBAA7BC,MAAAA,WAA6B,2BAAfvB,SAAe,KAAfA,SAC5EwE,KAAM5B,EAAAA,+CAAAA,UAAZ,eACM7L,MAAgC,CAClCuc,gBAAiB5R,OAQrB,OALA,WACI3K,MAAAA,MAAAA,SACAA,MAAAA,OAAAA,UAIA,wDAAK8L,UAAW2B,IAAAA,WAAeA,IAAfA,MAA0BA,IAAAA,oBAAAA,WAA1C,IAA6EjD,QAAmBxK,OAC5F,wDAAK8L,UAAW2B,IAAAA,QAAAA,YAFxB,YAOJ,6C,m3CC8FA,gCArHwD,SAAlD64B,gBAAmD,MAAD,IAAGC,SAAH,qBACpD,oCACI58B,KADJ,eAEID,UAFJ,QAGIE,QAHJ,YAII4hB,WAAW,gCAJf,UAOI,iCAPJ,gBAQI,gCACI,4BACIvhB,EADJ,8NAEIlK,GAAG,uBAEP,4BACIkK,EADJ,wOAEIlK,GAAG,wBAGX,yBAAGgK,KAAH,OAAeC,SAAS,WACpB,8BAAQ8B,UAAR,sBAAwC/B,KAAxC,UAAuDG,GAAvD,GAA+DC,GAA/D,GAAuEC,EAAG,KAC1E,yBAAG0B,UAAH,OAAoBwB,UAAU,mBAC1B,2BAAKxB,UAAL,OAAsB/B,KAAtB,UAAqCsD,UAAU,wBAC/C,4BACIpD,EADJ,mLAEIF,KAAK,YAET,4BACIE,EADJ,4aAEIF,KAAK,YAET,yBAAGuD,UAAH,0BAAuCvD,KAAK,WACxC,4BACIE,EADJ,sIAEI6B,UAAU,QAEd,4BACI7B,EADJ,6IAEI6B,UAAU,SAGlB,4BACI7B,EADJ,kSAEI6B,UAFJ,OAGI/B,KAHJ,UAIIC,SAAS,YAEb,4BACIC,EADJ,ucAEI6B,UAFJ,cAGI/B,KAHJ,UAIIC,SAAS,YAEb,4BACIC,EADJ,kPAEI6B,UAFJ,eAGI/B,KAHJ,UAIIC,SAAS,YAEb,4BACIC,EADJ,iDAEI6B,UAFJ,iBAGIqB,OAHJ,UAIIiyB,cAAc,WAGtB,2BAAKr1B,KAAL,UAAoBsD,UAAU,wBAC9B,yBAAGC,UAAU,0BACT,4BACIrD,EADJ,4JAEIF,KAAK,YAET,4BACIE,EADJ,6IAEIF,KAAK,SAET,4BAAMA,KAAN,OAAkBE,EAAE,sCACpB,4BAAMF,KAAN,OAAkBE,EAAE,sCACpB,4BAAMF,KAAN,OAAkBE,EAAE,wCACpB,4BACIA,EADJ,8LAEIF,KAAK,YAET,4BACIE,EADJ,gLAEIF,KAAK,YAET,4BACIE,EADJ,0MAEIF,KAAK,YAET,4BACIE,EADJ,4FAEIF,KAAK,YAET,4BACIE,EADJ,0HAEIF,KAAK,YAET,4BACIE,EADJ,oHAEIF,KAAK,YAET,4BACIE,EADJ,wOAEIF,KAAK,YAET,4BACIE,EADJ,mIAEIF,KAAK,YAET,4BAAMA,KAAN,UAAqBE,EAAE,mC,gyEC9FvC,IAAMu8B,SAAW,SAAXA,SAAYx5B,OACoFA,MAAlG,2BAAkGA,MAAlG,MAAmBrC,WAAnB,oDAAkGqC,MAAlG,OAAoClC,YAApC,mDAAkGkC,MAAlG,KAAqD5B,UAArD,mDAAkG4B,MAAlG,OAAsElD,YAAtE,sCAEMy8B,SAAW,cAAH,iBAFd,2CAEc,IAEV18B,MAFU,MAGVC,OACAgC,UAAWyzB,oBAAAA,CAAW,WAAD,2FAKjBvyB,MALiB,aASzB,MAAO,YAAA5B,KACH,+CAAiBm7B,SAAoBpxB,sBAAiC,gBAAVxK,QAE5D,sCAAgBwK,sBAAiC,gBAAVxK,SAI/C,iC,oqCC/BA,iCATwB,CACpB87B,2BARJ,EASIC,uBARJ,GASIC,+BARJ,GASIC,oCARJ,EASIC,sCARJ,EASIC,2CARJ,K,2OCaaC,gCAAmE,CAC5EjhC,QAD4E,EAE5EC,a,2BAAcoM,EAAAA,UACdvN,OAAQ,CACJC,KADI,iBAEJC,mBAFI,EAGJC,eAAgB,CACZE,MADY,GAEZD,UAAW,IAEfE,UAPI,EAQJK,cAAe,CACXC,eAAe,GAEnBC,MAAO,CACHkf,mCADG,EAEHC,mCAFG,EAGHC,sDAHG,EAIH7d,qBAJG,EAKH0d,UAAW,MAEfhf,8BAA+B,CAC3BwoB,sBAD2B,EAE3BC,sBAF2B,EAG3BvC,iBAH2B,GAI3BK,cAAe,IAEnBtmB,kBAxBI,EAyBJC,kBAzBI,EA0BJC,WAAY,IAEhBG,eA/B4E,EAgC5EC,MAhC4E,GAiC5E03B,oBAAgB1vB,G,q/BC9CpB,IAAM+4B,kBAAoB,SAApBA,kBAAqBniC,KAAD,aACtB,IAAMoiC,cAAgBC,YAAA,QAAmB,mBAAOjlC,EAAAA,OAAP,QACzC,OAAOglC,cAAAA,OAAAA,EAAAA,mBAAP,GAsHJ,iCAnHmC,SAA7BE,2BAA8B,MAAD,QAI/B,OAAQC,OAAR,MACI,KAAKC,cAAAA,EAAAA,yBACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEF54B,kBAAmBsiC,OAAOE,YAGtC,KAAKD,cAAAA,EAAAA,sBACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEF34B,eAAgBqiC,OAAOE,YAGnC,KAAKD,cAAAA,EAAAA,aACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEFx4B,KAAM,cAAF,GACGkiC,OADH,aAKhB,KAAKC,cAAAA,EAAAA,kBACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEFn4B,cAAe6hC,OAAOE,YAGlC,KAAKD,cAAAA,EAAAA,oCACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEFh4B,8BAA+B,cAAF,iBACtBg4B,MAAAA,OADsB,+BAEtB0J,OAFsB,aAMzC,KAAKC,cAAAA,EAAAA,iBACD,iDAEIziC,OAAQ,cAAF,GACCmiC,gCAAAA,WAEPpJ,oBAAgB1vB,IAExB,KAAKo5B,cAAAA,EAAAA,qBACD,iDAEIthC,aAAcqhC,OAAOE,UAE7B,KAAKD,cAAAA,EAAAA,mBACD,6CAEOD,OAFP,SAIJ,KAAKC,cAAAA,EAAAA,iBACD,iDAEIrhC,UAAW,cAAF,GAAOohC,OAAP,WAEjB,KAAKC,cAAAA,EAAAA,aACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEFj4B,MAAO,cAAF,GACE2hC,OADF,aAKjB,KAAKC,cAAAA,EAAAA,oBACD,iDAEI1J,eAAgB,cAAF,GAAOyJ,OAAP,WAEtB,KAAKC,cAAAA,EAAAA,iBACD,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEF93B,aAAcwhC,OAAOxhC,iBAGjC,KAAKyhC,cAAAA,EAAAA,YAED,iDAEIziC,OAAQ,cAAF,iBACC84B,MADD,YAEFx4B,KAAM,cAAF,iBACGw4B,MAAAA,OADH,UAEAp4B,2BACI0hC,kBAAkBziC,eAAAA,EAAAA,YAA4B6iC,OAA9CJ,UACAtJ,MAAAA,OAAAA,KAAkBp4B,iCAItC,QACI,e,wsCC/GL,IAAMiiC,4BAA6BC,EAAAA,MAAAA,eAAnC,MAgBP,iCAVqE,SAA/DC,mCAAgE,MAAiB,IAAfx+B,SAAe,KAAfA,SACpE,6BAA0By+B,EAAAA,MAAAA,YAAW,2BAArC,oCAAOhK,MAAP,gBAAciK,SAAd,gBAEMC,cAAeC,EAAAA,MAAAA,UAAQ,WACzB,MAAO,CAAEnK,MAAOiK,YACjB,CAACjK,MAFJ,WAIA,OAAO,oBAAC6J,2BAAD,UAAqC3mC,MAAOgnC,cAAnD,W,+mBCVJ,yC,kIAAYP,sCAAAA,qCAAAA,yBAAAA,eAAAA,qCAAAA,sBAAAA,oBAAAA,qCAAAA,aAAAA,cAAAA,qCAAAA,iBAAAA,eAAAA,qCAAAA,qBAAAA,qBAAAA,qCAAAA,mBAAAA,mBAAAA,qCAAAA,kBAAAA,mBAAAA,qCAAAA,iBAAAA,eAAAA,qCAAAA,aAAAA,WAAAA,qCAAAA,oCAAAA,mCAAAA,qCAAAA,mCAAAA,iCAAAA,qCAAAA,UAAAA,WAAAA,qCAAAA,oBAAAA,oBAAAA,qCAAAA,iBAAAA,kBAAAA,qCAAAA,YAAAA,a,CAAAA,uCAAAA,qCAAAA,KA8KZ,kCACIS,aAxJiB,SAAfA,aAAgBR,SAAD,MAAqC,CACtDziC,KAAMwiC,qCADgD,sBAEtDC,UAuJAS,kBA/IsB,SAApBA,kBAAqBT,SAAD,MAAiD,CACvEziC,KAAMwiC,qCADiE,mBAEvEC,UA8IAU,YAtIgB,SAAdA,YAAeV,SAAD,MAAiC,CACjDziC,KAAMwiC,qCAD2C,aAEjDC,UAqIAW,aA9HiB,SAAfA,eAAe,MAAqB,CACtCpjC,KAAMwiC,qCAAqCa,gBA8H3CC,mBAtHuB,SAArBA,mBAAsBb,SAAD,MAAgD,CACvEziC,KAAMwiC,qCADiE,qBAEvEC,UAqHAc,iBA7GqB,SAAnBA,iBAAoBd,SAAD,MAAiE,CACtFziC,KAAMwiC,qCADgF,mBAEtFC,UA4GAe,iBApGqB,SAAnBA,iBAAoBf,SAAD,MAA+C,CACpEziC,KAAMwiC,qCAD8D,kBAEpEC,UAmGAgB,aA3FiB,SAAfA,aAAgBhB,SAAD,MAAuC,CACxDziC,KAAMwiC,qCADkD,cAExDC,UA0FAiB,SAlFa,SAAXA,SAAYjB,SAAD,MAA+B,CAC5CziC,KAAMwiC,qCADsC,UAE5CC,UAiFAkB,iCAzEqC,SAAnCA,iCAAoC,SAAD,MAED,CACpC3jC,KAAMwiC,qCAD8B,oCAEpCC,UAsEAmB,SA9Da,SAAXA,SAAYnB,SAAD,MAA+B,CAC5CziC,KAAMwiC,qCADsC,UAE5CC,UA6DAoB,kBArDsB,SAApBA,kBAAqBpB,SAAD,MAAiD,CACvEziC,KAAMwiC,qCADiE,oBAEvEC,UAoDAqB,gBA5CoB,SAAlBA,gBAAmB/iC,cAAD,MAAkD,CACtEf,KAAMwiC,qCADgE,iBAEtEzhC,eA2CAgjC,WAnCe,SAAbA,WAAchuB,SAAD,MAAwC,CACvD/V,KAAMwiC,qCADiD,YAEvDzsB,Y,8TCrKSiuB,8BAAgC,SAAhCA,gCAAgC,OAAMC,EAAAA,mCAAAA,YAAN,8D,iMCiBtC,IAAMj1B,uBAAyB,SAAzBA,uBAA0BtO,eACnC,WAAOA,cAAAA,eAGE0O,2BAA6B,SAA7BA,2BAA8B1O,eACvC,WAAOA,cAAAA,gB,sFCtBX,qB,6EAAYkU,kBAAAA,iBAAAA,WAAAA,uBAAAA,iBAAAA,mBAAAA,8BAAAA,iBAAAA,aAAAA,uBAAAA,iBAAAA,gBAAAA,kB,CAAAA,mBAAAA,iBAAAA,M,uFCDZ,a,qLAAYiR,UAAAA,SAAAA,QAAAA,OAAAA,SAAAA,SAAAA,QAAAA,SAAAA,iBAAAA,kBAAAA,SAAAA,oBAAAA,oBAAAA,SAAAA,YAAAA,a,CAAAA,WAAAA,SAAAA,KA+CL,IAAMX,WAAa,SAAbA,WAAc7kB,MACvB,OAAOA,KAAAA,OAAcwlB,SAArB,MAGSV,YAAc,SAAdA,YAAe9kB,MACxB,OAAOA,KAAAA,OAAcwlB,SAArB,OAGSqe,eAAiB,SAAjBA,eAAkB7jC,MAC3B,OAAOA,KAAAA,OAAcwlB,SAAdxlB,kBAA2CA,KAAAA,OAAcwlB,SAAhE,qBAGS7S,kBAAoB,SAApBA,kBAAqB3S,MAC9B,OAAOA,KAAAA,OAAcwlB,SAArB,kBAGST,oBAAsB,SAAtBA,oBAAuB/kB,MAChC,OAAOA,KAAAA,OAAcwlB,SAArB,sB,uFChEJ,gB,wEAAY3J,aAAAA,YAAAA,OAAAA,QAAAA,YAAAA,SAAAA,oBAAAA,YAAAA,SAAAA,WAAAA,YAAAA,MAAAA,Q,CAAAA,cAAAA,YAAAA,M,qKCFZ,kCACIioB,SADW,oDAEXC,YAFW,6BAGXC,gBAHW,2DAIXC,YAJW,gFAKXC,eALW,2DAMXC,mBANW,+EAOXC,aAPW,0GASXC,OATW,gCAUXC,mBAVW,2CAWXC,kBAXW,yLAaXC,wBAbW,8FAeXC,aAfW,yCAgBXC,QAhBW,0BAiBXC,cAjBW,6DAkBXC,4BAlBW,oHAoBXC,aAAc,oG,gtBCLZC,4BAA8B,SAA9BA,4BAA+Bh9B,OACjC,IAAMtB,MAAOC,EAAAA,wCAAAA,KACP8B,KAAM5B,EAAAA,+CAAAA,UAAZ,+BAEA,OACI,4GACIL,OAAQwB,MADZ,OAEId,eAAgB,iCAAMc,MAAN,kBAChBf,aAHJ,EAIIH,UAAW2B,IAJf,MAKI1B,cAAcC,EAAAA,+CAAAA,WAAUN,KAAM,oDAE9B,4DAASI,UAAU,mDACf,uGAAO+B,UAAU,KACb,mHAAcC,IAAd,KAAuBhC,UAAU,kCAC5BE,EAAAA,+CAAAA,WAAUN,KAHvB,qDAMI,uGAAOmC,UAAU,KACb,sHACI,4FACI9N,GADJ,mDAEIgO,OAAQ,CACJS,EAAG,uBACC,sDACIN,KADJ,oCAEIpC,UAFJ,QAGI6X,IAHJ,aAIIliB,OAAO,UALZ,WAcnB,uGAAOoM,UAAU,KACb,kHACI,4FAAkB9N,GAAG,gEAEzB,sHACI,4FAAkBA,GAAG,8DAEzB,2DACI,2DACI,sHACI,4FAAkBA,GAAG,iEAG7B,2DACI,sHACI,4FAAkBA,GAAG,iEAG7B,2DACI,sHACI,4FAAkBA,GAAG,iEAG7B,2DACI,sHACI,4FAAkBA,GAAG,kEAIjC,sHACI,4FAAkBA,GAAG,+DAG7B,uGAAO8N,UAAU,KACb,kHACI,4FAAkB9N,GAAG,0EAEzB,sHACI,4FAAkBA,GAAG,wEAEzB,2DACI,2DACI,sHACI,4FAAkBA,GAAG,2EAG7B,2DACI,sHACI,4FAAkBA,GAAG,2EAG7B,2DACI,sHACI,4FAAkBA,GAAG,2EAG7B,2DACI,sHACI,4FAAkBA,GAAG,2EAG7B,2DACI,sHACI,4FAAkBA,GAAG,6EAKrC,uGAAO8N,UAAU,KACb,kHACI,4FAAkB9N,GAAG,oEAEzB,sHACI,4FAAkBA,GAAG,kEAEzB,2DACI,2DACI,sHACI,4FAAkBA,GAAG,qEAG7B,2DACI,sHACI,4FAAkBA,GAAG,qEAG7B,2DACI,sHACI,4FAAkBA,GAAG,uEAKrC,uGAAO8N,UAAU,KACb,8GAASC,IAAI,MACT,4FAAkB/N,GAAG,2EAEzB,sHACI,4FACIA,GADJ,sEAEIgO,OAAQ,CACJS,EAAG,uBACC,sDACI1C,UADJ,QAEIrK,OAFJ,SAGIkiB,IAHJ,aAIIzV,KAAK,6IALV,cAmBnC,6D,u1BC5KKiE,a,uFAAAA,cAAAA,aAAAA,UAAAA,IAAAA,aAAAA,kBAAAA,yBAAAA,aAAAA,UAAAA,oBAAAA,aAAAA,eAAAA,yBAAAA,aAAAA,gBAAAA,0BAAAA,aAAAA,WAAAA,qBAAAA,aAAAA,iBAAAA,2BAAAA,aAAAA,oBAAAA,8BAAAA,aAAAA,kBAAAA,4BAAAA,aAAAA,aAAAA,uBAAAA,aAAAA,gBAAAA,uB,CAAAA,eAAAA,aAAAA,KAcL,+C,mcCHM8S,kBAA8C,SAA9CA,kBAA+C,MAAiD,IAA/ClV,eAA+C,KAA/CA,eAAgBgN,kBAA+B,KAA/BA,kBAC7DrR,MAAOC,EAAAA,wCAAAA,KAEb,sBACI,YAGJ,IAAM8B,KAAM5B,EAAAA,+CAAAA,UAAZ,yBAEA,OACI,uDAAIC,UAAU,sBACTiE,eAAA,KAAmB,4BAChB,uDAAIpP,IAAKspC,WAAW/kB,gBAChB,wDAAKpZ,UAAW2B,IAAIG,OAChB,wDAAK9B,UAAW2B,IAAAA,QAAAA,WACXw8B,UAAAA,WAAAA,oBACG,uHACKj+B,EAAAA,+CAAAA,WAAUN,KAAM,yDAA0D,CACvEwT,oBAAqB+qB,WAAW/kB,kBAI5C,kHAAapZ,UAAW2B,IAAAA,QAAAA,sBACnBzB,EAAAA,+CAAAA,WAAUN,KAAM,sDAAuD,CACpEpE,iBAAkB2iC,WAAW3iC,qBAIzC,kHACK2iC,UAAAA,WAAAA,mBACKA,WADLA,kBAEKj+B,EAAAA,+CAAAA,WAAUN,KAlBxB,iBAoBI,uHACKM,EAAAA,+CAAAA,WAAUN,KAAM,6CAA8C,CAC3DhE,KAAKgO,EAAAA,+CAAAA,YAAWu0B,WAD2C,KAE3DriC,IAAKqiC,WAAAA,KAAiBv0B,EAAAA,+CAAAA,YAAWu0B,WAA5BA,MAA8Cj+B,EAAAA,+CAAAA,WAAUN,KAAM,sBASnG,mD,2tCC/CMw+B,sBAAkD,SAAlDA,sBAAmD,MAA0B,IAAxBntB,kBAAwB,KAAxBA,kBACjDrR,MAAOC,EAAAA,wCAAAA,KAEb,yBACI,KAIA,wDAAKG,UAAL,wBAAuC9L,MAAO,CAAEwc,aAAc,SAC1D,mHAAUxQ,EAAAA,+CAAAA,WAAUN,KAF5B,wEAOJ,uD,69BCwDasM,oBAAsB,SAAtBA,oBAAuBjY,IAChC,SACA,WACI,eACImO,KAAAA,yBACA,MACJ,oBACIA,KAAAA,oBACA,MACJ,qBACIA,KAAAA,yBACA,MACJ,iBACIA,KAAAA,0BACA,MACJ,uBACIA,KAAAA,qBACA,MACJ,0BACIA,KAAAA,2BACA,MACJ,oBACIA,KAAAA,wBACA,MACJ,mBACIA,KAAAA,8BACA,MACJ,QACI,OAAOi8B,EAAAA,kDAAAA,IAAP,IAER,aAEJ,iCAhFiC,CAC7B,CACIpqC,GADJ,iBAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,WAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,gBAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,iBAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,aAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,mBAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,sBAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,gBAEI46B,MAFJ,EAGIt2B,MAAO,iCAEX,CACItE,GADJ,eAEI46B,MAFJ,EAGIt2B,MAAO,mC,6KCzEf,qC,woBAAY+lC,sCAAAA,qCAAAA,aAAAA,eAAAA,qCAAAA,aAAAA,eAAAA,qCAAAA,uBAAAA,sBAAAA,qCAAAA,wBAAAA,0BAAAA,qCAAAA,yBAAAA,2B,CAAAA,uCAAAA,qCAAAA,KAgBL,I,sBAAMC,2CAA4C94B,EAAAA,sBAAAA,0B,k6BCXzD,I,sBAAM+4B,0CAA6E,yCAC9EF,qCAAqCxkC,aADyC,0CAE9EwkC,qCAAqCG,aAFyC,0CAG9EH,qCAAAA,uBAH8E,0CAI9EA,qCAAqCI,wBAJyC,2CAK9EJ,qCAAqCK,yBALyC,KAAnF,uBAQaC,sCAAwC,SAAxCA,sCAAyC,QAGlD,MAAO,CACHD,yBAA0B18B,OADvB,yBAEHy8B,wBAAyBz8B,OAFtB,wBAGH48B,oBAAqB58B,OAHlB,oBAIHw8B,aAAcx8B,OAAOw8B,eAIhBK,4CAA8C,SAA9CA,4CAA+C,MAAD,cAIvD,aAIA,6EAEIH,yBAA0B/M,MAF9B,yBAGI8M,wBAAyB9M,MAH7B,wBAII6M,aAAc7M,MAJlB,aAKIiN,oBAAqBjN,MALzB,oBAMI93B,eATA,0C,ybCxBR,IAAMilC,uCAGL,mFACIT,qCAAqCxkC,aAAe,CACjDwO,WAAY,gCACZD,WAAY,8BAAGvO,aAAH,yBAAsB4N,EAAAA,IAAAA,UAAtB,iBAHnB,gFAKI42B,qCAAqCG,aAAe,CACjDn2B,WAAY,gCACZD,WAAY,+BAAGo2B,aAAH,0BAAsB/2B,EAAAA,IAAAA,UAAtB,eACZkB,iBAAkB,qCAAG9O,aAAH,0BAAsB4N,EAAAA,IAAAA,UAAtB,iBARzB,gFAUI42B,qCAAAA,uBAA2D,CACxDh2B,WAAY,+BAAGm2B,aAAH,0BAAsB/2B,EAAAA,IAAAA,UAAtB,eACZW,WAAY,+BAAGw2B,oBAAH,iCAA6Bn3B,EAAAA,IAAAA,UAA7B,wBAZnB,gFAcI42B,qCAAqCK,yBAA2B,CAC7Dr2B,WAAY,+BAAGu2B,oBAAH,iCAA6Bn3B,EAAAA,IAAAA,UAA7B,sBACZW,WAAY,+BAAGs2B,yBAAH,sCAAkCj3B,EAAAA,IAAAA,UAAlC,6BAhBnB,gFAkBI42B,qCAAqCI,wBAA0B,CAC5Dp2B,WAAY,+BAAGu2B,oBAAH,iCAA6Bn3B,EAAAA,IAAAA,UAA7B,sBACZW,WAAY,+BAAGq2B,wBAAH,qCAAiCh3B,EAAAA,IAAAA,UAAjC,4BAvBpB,uBAgCA,kDALmDsB,EAAAA,+BAAAA,IAAnD,uC,2DCEA,2BAvBuD,SAAjDg2B,qBAAkD,MAKlD,IAJFC,eAIE,KAJFA,eACAC,UAGE,KAHFA,UACAC,qBAEE,KAFFA,qBACAC,QACE,KADFA,QAEMx/B,MAAOC,EAAAA,QAAAA,KAEPoQ,SAAU0M,EAAAA,sBAAAA,iBAAgB0iB,4BAAAA,EAAAA,mBAAAA,sBAAhC,SACMpyB,SAAU0P,EAAAA,sBAAAA,iBAAgB0iB,4BAAAA,EAAAA,mBAAAA,sBAAhC,SAEA,OACI,oBAACJ,eAAD,YACI3mC,KADJ,UAEIC,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,4CAA6C,CAAEw/B,UACtEnvB,QACAhD,QACA+C,kBALJ,EAMIsvB,gBAAgB,K,ijCCqC5B,0BAnDsD,SAAhDC,oBAAiD,MAOjD,IANFN,eAME,KANFA,eACAC,UAKE,KALFA,UACAC,qBAIE,KAJFA,qBACAV,aAGE,KAHFA,aACApgB,cAEE,KAFFA,cACA+gB,QACE,KADFA,QAEMx/B,MAAOC,EAAAA,QAAAA,KAEPoQ,SAAU0M,EAAAA,sBAAAA,iBACZ0iB,4BAAAA,EAAAA,4BAAAA,sBADJ,SAGMpyB,SAAU0P,EAAAA,sBAAAA,iBACZ0iB,4BAAAA,EAAAA,4BAAAA,sBADJ,SAIA,OACI,wCACI,+BAAOt9B,UAAU,KACb,oBAACk9B,eAAD,YACI3mC,KADJ,UAEIC,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,sDAGIqQ,QACAhD,QACA+C,kBALJ,EAMIsvB,gBAAgB,KAGxB,kCACI/iC,KACI,+BACItI,GADJ,6EAEIgO,OAAQ,CACJqH,KADI,QAEJK,MAAMC,EAAAA,IAAAA,aAAWkhB,EAAAA,YAAAA,GAAAA,cAAD,YAI5B7tB,QAAS,mBACL,IAAMuiC,sBAA4Cf,cAC5C5f,EAAAA,sBAAAA,kBAAgBiM,EAAAA,YAAAA,GAAAA,cADwC,cAA9D,EAIAzM,cAAc6gB,UAAd7gB,4B,uuGCvDCohB,UAAAA,SAAAA,mB,kuBACjB,SAAAC,iBACI,OACI,4BACIvhC,EADJ,ksBAEIlK,GAFJ,QAGIgK,KAAK,c,6BAKjB,SAAA0hC,kBACI,OACI,4BACIxhC,EADJ,qTAEIlK,GAFJ,QAGIgK,KAAK,c,oBAKjB,SAAAud,SACI,IACMokB,KAAO7mC,UADI8mC,KAAjB,WACgCA,KAAnB9mC,kBAA4C8mC,KAAzD,iBAEA,OACI,2BACIjiC,UADJ,QAEIC,KAFJ,eAGIE,MAHJ,OAIIC,OAJJ,OAKIF,QALJ,YAMIkC,UAAU,aAEV,yBAAG/L,GAAH,yBAA+BoN,OAA/B,OAA6CC,YAA7C,IAA6DrD,KAA7D,OAAyEC,SAAS,WAT1F,W,UAzBauhC,CAAkBhgC,MAAAA,W,6vBCAnCqgC,UAAJ,EACIC,YAAJ,EACIC,YAAJ,EAEe,SAASC,qBAAqBC,OAEzC,KAAIA,MAAAA,QAAAA,OAAJ,IAIA,IAAMC,OAAQ,IAAIrZ,MAAlB,UACMsZ,SAAWD,MAAjB,UACA,gBAA6BD,MAAAA,QAA7B,GAAQG,QAAR,wBAAiBC,QAAjB,wBACMC,MAAQlsB,KAAAA,IAAS0rB,YAAvB,SACMS,MAAQnsB,KAAAA,IAAS2rB,YAAvB,SACIO,MAlBR,IAkBqCC,MAlBrC,IAkBQD,IAA0DL,MAAAA,QAAAA,QAA8BE,SApBhG,MAqBQF,MAD0G,iBAGzGA,MAAD,gBAEJH,YAAAA,QACAC,YAAAA,QACAF,UAAAA,OCjBJ,IAAMW,SAAmD,SAAnDA,SAAoD,MAA0B,IAAxBxsC,GAAwB,KAAxBA,GAAIkJ,SAAoB,KAApBA,SACtDujC,QAD0E,KAAV1+B,KACtE,OACA,OAAO,4BAA6B,CAAE/N,GAAI+L,UAAW,WAArD,WAEJ,oC,qoBCcA,IAAM2gC,YAAyD,SAAzDA,YAA0D,MAS1D,IARF1jC,SAQE,KARFA,QACA02B,UAOE,KAPFA,UACAt2B,KAME,KANFA,KACAwJ,OAKE,KALFA,OACAkE,SAIE,KAJFA,SAIE,eAHFzL,KAAAA,UAGE,cAHK,OAGL,yBAFF3B,KAAAA,UAEE,cAFK,SAEL,UADFijC,sBACE,KADFA,sBAEMC,SAAUp+B,EAAAA,0BAAAA,QAChB,OACI,8BACIvO,MAAO,CAAE4sC,KAAMF,uBACf7nC,KAFJ,SAGIkE,QAAS,0BAAMA,YACf8jC,aAJJ,qBAKIC,kBALJ,QAMIhhC,UAAWyzB,oBAAAA,CAAW,cAAD,0DAAgE,CACjF,uBAAwB5sB,QAAUA,OAD+C,QAEjF,wBAAyBkE,WAE7BA,SACAk2B,eAAcp6B,OAASA,OAAH,aAAoB1E,GAExC,4BAAMnC,UAAN,oBAAoCnC,KAAK,gBAb7C,MAgBI,0CAAU5J,GAAI4sC,SAjBtB,aAsBJ,0C,2pDCsGA,sDAvFkF,SAA5EK,gDAA6E,MAQ7E,IAPFjC,eAOE,KAPFA,eACAkC,cAME,KANFA,cACAC,eAKE,KALFA,eACAC,YAIE,KAJFA,YACAC,WAGE,KAHFA,WACAjjB,cAEE,KAFFA,cACAkjB,qBACE,KADFA,qBAEM5/B,KAAM5B,EAAAA,IAAAA,UAAZ,mDACMH,MAAOC,EAAAA,QAAAA,KAEb,OACI,0DACIlI,OACI,4DACI,+BAAkB1D,GAAG,yCAG7B8Y,YACI,4CAAoBpK,WAAWzC,EAAAA,IAAAA,WAAUN,KAAM,2CAC3C,+BAAkB3L,GAAG,8CAI7B,2BAAK+L,UAAW2B,IAAIG,OAChB,2BAAK9B,UAAW2B,IAAAA,QAAAA,YACZ,2BAAK3B,UAAW2B,IAAAA,QAAAA,SACZ,6CACIrC,KADJ,OAEIq0B,UAFJ,8BAGIt2B,KAAM,+BAAWtE,KAAK,UACtBgS,SAAUiI,IAAAA,SAASsuB,WAATtuB,IACV/V,QAAS,0BAAMohB,cAAc8iB,cA3ErC,SAAdK,YAAeC,cAAD,KAChB,IAAMC,QAASttB,EAAAA,sBAAAA,+BAAf,eAEA,YAAIstB,IAAAA,QAAwBrtB,KAAAA,MAAAA,UAA5B,OACI,cAGAqtB,OAAAA,EAAJ,IACWC,IAAP,YAGID,OAAD,GAAP,WAgEoEF,CAAYF,WAA/C,QAGjB,oBAACrC,eAAD,aACIj/B,UAAW2B,IAAAA,QADf,QAEIigC,cAFJ,EAGItpC,KAHJ,cAIIC,MAJJ,OAKIspC,OALJ,KAMIC,KAAK,MAET,2BAAK9hC,UAAW2B,IAAAA,QAAAA,SACZ,6CACIrC,KADJ,OAEIq0B,UAFJ,4BAGIt2B,KAAM,+BAAWtE,KAAK,SACtBgS,SAAUiI,SAASsuB,WAATtuB,KAAAA,qBACV/V,QAAS,0BAAMohB,cAAc8iB,cA1GtC,SAAbY,WAAcN,cAAD,KACf,IAAMC,QAASttB,EAAAA,sBAAAA,+BAAf,eAEA,YAAIstB,IAAAA,QAAwBrtB,KAAAA,MAAAA,UAA5B,OACI,cAGAqtB,OAAAA,EAAJ,IACWM,IAAP,YAGIN,OAAD,GAAP,WA+FoEK,CAAWT,WAA9C,4BAIrB,2BAAKthC,UAAW2B,IAAAA,QAAAA,YACZ,2BAAK3B,UAAW2B,IAAAA,QAAAA,SACZ,6CACIrC,KADJ,OAEIq0B,UAFJ,+BAGIt2B,KAAM,+BAAWtE,KAAK,UACtBkE,QAAS,0BAAMohB,cAAc+iB,eA1ErC,SAAda,YAAeR,cAAD,KAChB,IAAMC,QAASttB,EAAAA,sBAAAA,+BAAf,eAEA,YAAIstB,IAAAA,QAAwBrtB,KAAAA,MAAAA,UAA5B,OACI,cAGAqtB,OAAAA,EAAJ,IACWC,IAAP,YAGID,OAAD,GAAP,WA+DqEO,CAAYZ,YAAhD,KACTt2B,SAAUiI,IAAAA,SAASquB,YAATruB,OAGlB,oBAACisB,eAAD,aACIj/B,UAAW2B,IAAAA,QADf,QAEIigC,cAFJ,EAGItpC,KAHJ,eAIIC,MAJJ,QAKIspC,OALJ,KAMIC,KAAK,MAET,2BAAK9hC,UAAW2B,IAAAA,QAAAA,SACZ,6CACIrC,KADJ,OAEIq0B,UAFJ,6BAGIt2B,KAAM,+BAAWtE,KAAK,SACtBkE,QAAS,0BAAMohB,cAAc+iB,eAzGtC,SAAbc,WAAcT,cAAD,KACf,IAAMC,QAASttB,EAAAA,sBAAAA,+BAAf,eAEA,YAAIstB,IAAAA,QAAwBrtB,KAAAA,MAAAA,UAA5B,OACI,cAGAqtB,OAAAA,EAAJ,IACWM,IAAP,YAGIN,OAAD,GAAP,WA8FqEQ,CAAWb,YAA/C,KACTt2B,SAAUiI,IAAAA,SAASquB,YAATruB,W,knDCzJ/B,IAAMmvB,aAAe,SAAfA,aAAgB1oC,cAAD,kBACxB,UAAIsO,EAAAA,cAAAA,GAAAA,iBAAJ,qBACatO,cAAT,Q,iWCmMR,kCAxJ+E,SAAzE2oC,6CAA0E,MAI1E,IAHFC,kCAGE,KAHFA,kCACAC,iCAEE,KAFFA,iCACAC,yBACE,KADFA,yBAEM3iC,MAAOC,EAAAA,QAAAA,KACb,YAA8DiG,EAAAA,UAAAA,KAAtDrM,cAAR,yBAAuBR,eAAvB,0BAAuCG,KAAvC,gBAA6CU,aAA7C,wBACQkK,QAAWD,EAAAA,aAAAA,KAAnB,OACM2oB,kBAAmB5jB,EAAAA,iBAAAA,GAAiB7P,eAA1C,OACMupC,SAAN,WAAiBvpC,eAAAA,UACXwpC,wBAAuB16B,EAAAA,cAAAA,GAAAA,kBACrBtO,cADqBsO,wBAGvB26B,sBAAuBC,EAAAA,kBAAAA,KASvB18B,eAAgBC,EAAAA,iBAAAA,IAPO,SAAvBC,qBAAwBlE,QAC1B,MAAO,CACHmE,cAAAA,EAAAA,kBAAgCw4B,sCAD7B,SAEHx4B,cAAAA,EAAAA,iBAA8Bw8B,EAAAA,0BAAAA,GAA0B3gC,OAF5D,kBAMyDoE,OAAAA,EAAAA,YAG7D,KAFqBqmB,kBAAAA,UAAAA,2BAArB,IAA6E6V,0BAGzE,YAGJ,IAAMM,QAAUnW,iBACV1oB,OAD0B,SAE1B+D,EAAAA,cAAAA,GAAAA,eACAtO,cADAsO,QAFN,GAKMo3B,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MACM8zB,QAAU1S,mBAAoB3kB,EAAAA,cAAAA,GAApB2kB,eAA4DjzB,cAA5DizB,QAAoF1oB,OAApG,QAEMiE,UAAYk6B,aAAa1oC,cAA/B,kBACMmB,6BAA8BkoC,EAAAA,kBAAAA,GAAsC,iCAAD,uDAAzE,WAOA,OACI,oBAACvE,0CAA0Cj4B,cAA3C,CACIC,cAAeu4B,4CAA4C4D,qBAD/D,cAEIl8B,SAFJ,cAGIC,WAAY,2BAA2C,IAAhCoF,WAAgC,MAAxC5J,OAAoBoc,cAAoB,MAApBA,cACzB1T,WAAao4B,2CAAAA,aAAnB,YAEMC,kBAAoBpoC,4BAA4BiR,WAAtD,cACMo3B,mBAAqBD,mBACrBE,EAAAA,wBAAAA,GAAsBF,mBAAmB,EAAO9X,SAAAA,EAAAA,gBADtD,EAIA,OACI,oBAACqT,0CAA0C73B,KAA3C,CACIC,gBADJ,EAEIkG,0BAA0B,GAE1B,+BAAO9K,UAAU,KACb,6CAAeoH,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,sDAEIgO,OAAQ,CACJqH,MAAMvB,EAAAA,cAAAA,GAAAA,gBACAiwB,EAAAA,YAAAA,IAAuBv+B,cAAD,QAAwBmG,KAD9CmI,QAEA,QAKtB,+BAAOhG,UAAU,KACb,4CACIohC,cADJ,0CAEIC,qBAAsB9E,qCAAqCxkC,aAC3Dc,+BAGR,+BAAOsH,QAAqC,KAA5B2J,WAAAA,cACXo3B,oBACG,8CACI3S,aADJ,EAEI5D,kBAFJ,EAGI2W,cAHJ,QAIIjE,QACA6D,sBAIZ,+BAAOlhC,UAAP,IAAqBG,QAASwqB,kBAAgD,KAA5B7gB,WAAAA,cAC9C,6CAAezC,IAAK,sCAAgBC,uBAAuB,KACvD,+BACIpV,GADJ,mFAEIgO,OAAQ,CAAEm9B,aAItB,+BACIr9B,UADJ,IAEIG,QAASyI,WAAAA,UAAqB2zB,qCAAqCG,eAEnE,0CACIQ,eADJ,0CAEIC,UAAWZ,qCAAqCG,aAChDW,QACAD,wBAGR,+BACIp9B,UADJ,IAEIG,QAASyI,WAAAA,UAAqB2zB,qCAAAA,yBAE9B,yCACIW,eADJ,0CAEIC,UAAWZ,qCAAAA,uBACXa,qBACA9gB,cACAogB,cAAc9hB,EAAAA,sBAAAA,iBAAgB9Q,WALlC,cAMIuzB,WAGR,+BACIr9B,UADJ,IAEIG,QAASyI,WAAAA,UACL2zB,qCAAqCK,2BAGxCsE,oBACG,qEACIhE,eADJ,0CAEIkC,cAAe7C,qCAAqCI,wBACpD0C,eAAgB9C,qCAAqCK,yBACrD0C,YAAax1B,WAJjB,yBAKIy1B,WAAYz1B,WALhB,wBAMIwS,cACAkjB,qBAAsB0B,mBAAAA,YAAiC,KAInE,+BAAO/gC,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KAtFnC,0B,yoCCtGhB,mB,mMCEa0jC,kB,sDAAmB,SAAnBA,iBAAoBxpC,aAAD,YAC5B,WAAIR,WACIQ,eAAiBy2B,aAAAA,EAAAA,eACjB,GAEA,GAGAz2B,eAAiBy2B,aAAAA,EAAAA,eACjB,GAEA,M,SDbAgT,oBAAAA,mBAAAA,aAAAA,eAAAA,mBAAAA,mBAAAA,qBAAAA,mBAAAA,4BAAAA,2BAAAA,mBAAAA,qBAAAA,uB,CAAAA,qBAAAA,mBAAAA,KAcL,I,sBAAMC,yBAA0B/9B,EAAAA,sBAAAA,0B,iiCEXvC,IAAMg+B,wBAAyC,uDAC1CF,mBAAmBzpC,aADuB,wDAE1CypC,mBAAmBG,mBAFuB,wDAG1CH,mBAAAA,6BAH0C,uDAI1CA,mBAAmBI,0BAJuB,GAA/C,uBAOaC,wBAA0B,SAA1BA,wBAA2B3hC,QACpC,MAAO,CACHyhC,mBAAoBzhC,OADjB,mBAEH4hC,yBAA0B5hC,OAFvB,yBAGH0hC,qBAAsB1hC,OAAO0hC,uBAIxBG,0BAA4B,SAA5BA,0BAA6B,0BAAD,mCAKrC,4BACI,qHAEKP,mBAAmBzpC,aAFxB,eAMJ,uHAEKypC,mBAAmBG,oBAAqB7kB,EAAAA,sBAAAA,iBAF7C,8B,kFCvBSklB,iCACT,SADSA,iCACRnkC,KAAD,qDAAmF,6BAC/E,UAAM8jC,IAAAA,oBAAN,2BACSh6B,EAAAA,mBAAAA,iBAAL,qBACI,OAAOxJ,EAAAA,IAAAA,WAAUN,KAAjB,gEAIR,QAAI8jC,IAAAA,oBAAJ,yBACI,OAAOxjC,EAAAA,IAAAA,WAAUN,KAAjB,qDAGJ,QAAI8jC,IAAAA,sBAAqC5Y,EAAAA,YAAAA,IAAYnO,EAAAA,sBAAAA,iBAAZmO,qBAAzC,cACI,OAAO5qB,EAAAA,IAAAA,WAAUN,KAAjB,gDAGJ,6BAA+B,CAC3B,IAAMokC,cAAgB3E,4BAAAA,EAAAA,uBAA+CxgB,EAAAA,sBAAAA,iBAArE,sBACA,GACImlB,cAAAA,SACAA,cADAA,SAEAnoC,mBAAAA,CAAAA,oBAAAA,cAAwCmoC,cAAxCnoC,QAFAmoC,QAGAnoC,mBAAAA,CAAAA,oBAAAA,eAAyCmoC,cAAzCnoC,QAJJ,OAMI,OAAOqE,EAAAA,IAAAA,WAAUN,KAAM,+DAAgE,CACnFzD,KAAM8nC,UAAAA,EAAAA,mD,yECCpBC,2BAA6D,SAA7DA,2BAA8D,MAO9D,IANFC,UAME,KANFA,UACA9C,YAKE,KALFA,YACA+C,8BAIE,KAJFA,8BACAP,yBAGE,KAHFA,yBACAQ,sBAEE,KAFFA,sBACAC,WACE,KADFA,WAEM1kC,MAAOC,EAAAA,QAAAA,KAEP0kC,iBAAmBJ,WAzBiB,SAAjCK,+BAAkC,UAAD,uBAI1C,YAAIL,UAGJ,YAAIrZ,EAAAA,YAAAA,GAAAA,WAAAA,cACA,WACOuZ,uBAAyBxoC,mBAAAA,CAAAA,WAAAA,SAA7B,uBACH,iBADG,EAgB+B2oC,CAA+BL,UAArE,uBAEMM,IAAM,eAAc,WACtB,OAAIF,kBAAJ,sBACW,cAAAA,kBACDrkC,EAAAA,IAAAA,WAAUN,KAAM,6CAA8C,CAC1D+J,MAAM+mB,EAAAA,UAAAA,IAAa2T,0BAEvBnkC,EAAAA,IAAAA,WAAUN,KAJhB,oCAMJ,mBAGA,IAAIikC,yBACO,+BAAkB5vC,GAAG,iEACrBotC,YAAJ,8BAEC,+BACIptC,GADJ,qEAEIgO,OAAQ,CACJyiC,UAAU1K,EAAAA,UAAAA,IAAkBoK,8BAAD,qBAIhC/C,YAAJ,8BAEC,+BACIptC,GADJ,kEAEIgO,OAAQ,CACJyiC,UAAU1K,EAAAA,UAAAA,IAAkBqH,YAAD,4CALpC,IAWR,CAAC,iBAAD,8FAjCH,aA2CMsD,mBAAN,IAAsBJ,iBAEtB,OACI,+BAAOzlC,OAAP,OAAqBoD,aAAiBC,IAARsiC,KAC1B,6CAAer7B,IAAK,gCAAUvK,MAAV,QAAwBG,OAAQ2lC,cAAgB,WAAhD,OAAqErlC,KAAK,aAFtG,OASJ,uE,yzCClFA,IAgBMslC,sBAAkD,SAAlDA,sBAAmD,MAAqD,IAAnDlB,mBAAmD,KAAnDA,mBAAoBG,yBAA+B,KAA/BA,yBACrEjkC,MAAOC,EAAAA,QAAAA,KACLzG,MAAS0M,EAAAA,UAAAA,KAAjB,KACMnE,KAAM5B,EAAAA,IAAAA,UAAZ,aAEM8kC,YAAa5mB,EAAAA,KAAAA,IAAnB,MACM6mB,YAAcD,YACd3kC,EAAAA,IAAAA,WAAUN,KADc,kEAExBM,EAAAA,IAAAA,WAAUN,KAFhB,oDAIMmlC,kBAAoBF,YACpB3kC,EAAAA,IAAAA,WAAUN,KADoB,kFAE9BM,EAAAA,IAAAA,WAAUN,KAFhB,oEAIMu/B,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MACM05B,yBAA2BnpC,mBAAAA,CAAAA,sBAAjC,SACMopC,yBAA0Bna,EAAAA,YAAAA,GAAAA,0BAAhC,UACMnvB,aAAcupC,EAAAA,aAAAA,IAAoB,CACpCtpC,KAAK+gB,EAAAA,sBAAAA,iBAD+B,oBAEpC7gB,IAAKmpC,0BAEH5D,YAAc1lC,aAAcuwB,EAAAA,aAAAA,IAAAA,aAAH,uBAA/B,EACMkY,8BAAN,EAAsCH,UAAAA,EAAAA,yCAChCkB,YAAc9D,cAApB,8BAEM+D,kBAAoB/F,4BAAAA,EAAAA,sBAA1B,sBACM8E,WAAYN,IAAAA,yBAAAA,wBAAlB,EAEMwB,UAAWva,EAAAA,YAAAA,GAAAA,0BAAjB,UAEA,OACI,wCACI,+BAAO/oB,UAAU,KACb,2BAAK/B,UAAW2B,IAAIG,OAChB,oBAAC0hC,wBAAwBx2B,WAAzB,CACI1U,KAAMirC,mBAAmBG,mBACzBnrC,MAFJ,YAGIwS,SAHJ,yBAIIkF,QAJJ,SAKIq1B,eAAgB,CACZC,cAAc5oB,EAAAA,sBAAAA,iBAAAA,qBAAuCqoB,0BAEzDh+B,SAAU+8B,iCAAiC,KAAD,yBAR9C,0BAaIzE,gBAAc,IAElB,2BAAKt/B,UAAW2B,IAAAA,QAAAA,YAjEJ,SAA1B6jC,wBAA2BnE,YAAD,0BAC5BA,YAAA,EACMoE,cACIvlC,EAAAA,IAAAA,WAAUN,KAAM,mEAAoE,CAChF8kC,UAAU1K,EAAAA,UAAAA,IAAkBqH,YAAazhC,SAE7CM,EAAAA,IAAAA,WAAUN,KAAM,sDAAuD,CACnE8kC,UAAU1K,EAAAA,UAAAA,IAAkBqH,YAAazhC,aAP3B,EAkEP4lC,CAAwBnE,YAAawD,WAnBtD,SAuBI,+BAAO9iC,UAAWojC,YAAc,IAAM,KAClC,oBAAC3B,wBAAwBx4B,SAAzB,CACI1S,KAAMirC,mBAAAA,4BACNhrC,MAFJ,kBAGIgmB,aAAa,SAGrB,+BAAOxc,UAAWojC,YAAc,IAAhC,IAA2CjjC,QAASijC,aAChD,2DACIhB,WAAWxnB,EAAAA,sBAAAA,iBADf,WAEI0kB,YACAwC,0BAHJ,IAG8BA,yBAC1BO,8BACAC,sBAAuBe,kBAAAA,QAA4B,IAAIte,KAAKse,kBAArCA,cAAkEjjC,OAO7G,6D,28BC9FMujC,aAA+C,SAA/CA,aAAgD,MAAD,IAAGC,UAAH,eAAc1oC,SAAd,aAAuB1E,MAAvB,WAA8BwS,SAA9B,qBACjD,6CACIzL,KADJ,OAEIrC,QAAS,0BAAMA,YACf02B,UAHJ,MAII5oB,SACA1N,KAAM,aAAAsoC,UAA2B,+BAAW5sC,KAAK,UAAa,+BAAWA,KAAK,YAItF,4C,wjICoBA,IAAM6sC,0BAAuD,SAAvDA,0BAAwDxc,SAAD,OACzD,2BAAKppB,UAAU,2BACX,2BAAKA,UAAU,iCAAiCopB,QADpD,KAEI,2BAAKppB,UAAU,kCAAkCopB,QAHI,OAOvDyc,6BAA0D,SAA1DA,6BAA2Dzc,SAAD,OAC5D,2BAAKppB,UAAU,6BACX,4BAAMA,UAAU,oBAAoBopB,QAAAA,IAAcA,QAFM,OAM1D0c,WAAAA,SAAAA,mB,qbAGF,2BAA0B,iB,wJAAA,6EACtB,+BADsB,YAFS,MAI/B,iBAAkB,uDAAlB,QACA,kBAAmB,wDAAnB,QACA,0BAA2B,gEAA3B,QACA,YAAa,CACTC,QAAQ,GANU,M,+QAS1B,SAAAC,WAAA,IAAiD,gBACxCnG,KAAL,WAGA/W,YAAW,kBAAM,OAAN,wBAAXA,K,yBAEJ,SAAAmd,YAAA,IACIpG,KAAA,SAAc,CACVkG,QAAQ,M,iCAGhB,SAAAG,sBAEQrG,KAAKsG,WACLvyC,OAAAA,SADA,gBAECisC,KAAKsG,UAAUC,SAASxyC,OAAAA,SAH7B,gBAKIisC,KAAA,SAAc,CACVkG,QAAQ,M,oBAIpB,SAAAvqB,SAAS,gBACL,YAYIqkB,KAZJ,MACItnC,MADJ,kBAEI8tC,YAFJ,wBAGIC,cAHJ,0BAIIC,QAJJ,oBAKIC,mBALJ,+BAMIC,SANJ,qBAOIC,wBAPJ,oCAQIC,sBARJ,kCASIC,qBATJ,uFAUIC,yBAVJ,wDAWO5jC,KAXP,gDAcA,aAAsC48B,KAAtC,MAAQ/qC,MAAR,mBAAe6sC,IAAf,iBAAoBK,IAApB,iBAAyB8E,UAAzB,sBACM7yC,GAAKsyC,UAAW9jC,EAAAA,0BAAAA,QAChB4iB,cAAgBmhB,oBAAtB,0BACMO,YAAc,GAAH,UAAjB,UACMC,eAAiBL,uBAAvB,6BAEMM,YAAalnC,EAAAA,IAAAA,UAAnB,qBACMmnC,eAAgBnnC,EAAAA,IAAAA,UAAtB,cACMonC,YAAapnC,EAAAA,IAAAA,UAAnB,uBAEA,OACI,2BAAKC,UAAWinC,WAAWnlC,OACvB,gCACInK,OACI,wCACI,4DADJ,OAEI,4CAAoBgL,UAAWikC,sBAJ3C,cAOI5mC,UAAW,iBAEX,2BAAKonC,YAAU,UACVP,UAAAA,qBAAmCxhB,cAAc,CAAEvwB,MAAO6sC,IAAKK,OAEpE,2BACIhiC,UAAWyzB,oBAAAA,CAAWyT,cAAD,mCAChBA,cAAAA,SADgB,qBADzB,IAEkDT,WAE9CY,IAAK,uBAAQ,iBAAR,GACLC,OAAQzH,KALZ,WAMI0H,QAAS1H,KAAKoG,aAEbQ,UACG,2BAAKzmC,UAAS,UAAKmnC,WAAL,kBAAyBA,WAAAA,SAAzB,cACV,8CACIxB,UADJ,WAEI1oC,QAAS,0BAAOnI,MAAAA,IAAcgyC,UAAShyC,MAAvBA,GAAP,MACTyD,MAAOkuC,SAAWA,SAAH,YAA0B,YAIrD,2BAAKzmC,UAAWknC,cAAAA,QAAAA,UACZ,0CAAUjzC,GAAI8yC,aADlB,eAEI,8CAEI9yC,GACA+sC,kBAHJ,YAIIhhC,UAJJ,2BAKIjH,KALJ,QAMI+tC,SAAU,4BAAOA,UAAS9zB,SAAS3Q,EAAAA,OAAD,MAAxB,SAEd,2BAAKxE,KAAL,QAAkBupC,YAAlB,YAAwCpnC,UAAU,WAC7C0mC,yBAA2B7G,KAAKjO,MAAhC8U,OACKA,wBADLA,YA5Bb,IAiCKD,UACG,2BAAKzmC,UAAS,UAAKmnC,WAAL,kBAAyBA,WAAAA,SAAzB,UACV,8CACIxB,UADJ,OAEI1oC,QAAS,0BAAOnI,MAAAA,IAAcgyC,UAAShyC,MAAvBA,GAAP,MACTyD,MAAOkuC,SAAWA,SAAH,cAA4B,UAK3D,2BAAKW,YAAU,UACVP,UAAAA,qBAAmCxhB,cAAc,CAAEvwB,MAAO6sC,IAAKK,OAEnEgF,eAAe,CAAElyC,MAAO6sC,IAAKK,Y,WAvH5C8D,CAAmBrmC,MAAAA,WA8HzB,wC,wpECpEA,qCA3F0E,SAApE+nC,+BAAqE,MAOrE,IANFnpB,cAME,KANFA,cACAopB,0BAKE,KALFA,0BACAC,8BAIE,KAJFA,8BACAzQ,IAGE,KAHFA,IACAC,UAEE,KAFFA,UACA8L,kBACE,KADFA,kBAEMpjC,MAAOC,EAAAA,QAAAA,KAEP8jC,qBACF8D,4BAAAA,kBAAAA,0BAEMpzB,KAAAA,QAAYszB,EAAAA,eAAAA,IAAAA,oBAAD,GAHrB,GASA,IAJAzjC,EAAAA,MAAAA,YAAU,WACNma,cAAc,uBAAdA,wBADJna,KAIA,kBACI,YAGJ,IAAM0jC,kBAAoBvzB,KAAAA,OAAWszB,EAAAA,eAAAA,IAArC,oBACME,sBAAuBC,EAAAA,eAAAA,IAA7B,mBACMC,sBAAuBC,EAAAA,eAAAA,IAA7B,mBAEMC,WAAY/nC,EAAAA,IAAAA,WAAUN,KAAM,sCAAuC,CACrEsoC,iBADqE,qBAErEC,iBAFqE,qBAGrEC,cAHqE,IAIrEC,cAAenR,YAGboR,mBAAqBZ,8BAAgCxQ,UAA3D,IACA,OACI,4CACI3+B,OAAO2H,EAAAA,IAAAA,WAAUN,KADrB,qCAEIymC,YACI,4DAAarkC,IAAI,OACb,+BAAOD,UAAU,KADrB,WAEI,qCAAOK,KAAMmmC,MAAAA,EAAAA,mBAA2B5yC,OAAO,UAC3C,+BAAkB1B,GAAG,qDAIjC2yC,sBAAsB1mC,EAAAA,IAAAA,WAAUN,KAVpC,4DAWI0mC,eAAepmC,EAAAA,IAAAA,WAAUN,KAX7B,qCAYI9K,MAZJ,qBAaI6sC,IAbJ,EAcIK,IAdJ,kBAeI8E,SAAU,+CAA0BzoB,cAAc,uBAAxC,uBACVooB,SAAU,CACN+B,YAAa5oC,KAAA,cAAmB,CAAE3L,GAAI,6CACtCw0C,cAAe7oC,KAAA,cAAmB,CAAE3L,GAAI,yCAE5CyyC,wBAAyB,+CACrB9mC,KAAA,cACI,CAAE3L,GAAI,uCACN,CACIy0C,aADJ,MAEIC,WAFJ,kBAGIC,aAAc3R,KAAOr3B,KAAA,cAAmB,CAAE3L,GAAI,sBAI1DuyC,mBAAoB,4CAChB,wDAASxkC,IAAT,IAAiBhC,UAAU,oDACvB,+BACI/L,GADJ,sCAEIgO,OAAQ,CACJymC,aAActf,QADV,MAEJuf,WAAYvf,QAFR,IAGJwf,aAAc3R,KAAOr3B,KAAA,cAAmB,CAAE3L,GAAI,wBAK9D4yC,oBA1CJ,QA2CIF,sBAAuB,+CACnB,4DAAa3mC,UAAU,uDACnB,+BACI/L,GADJ,uDAEIgO,OAAQ,CAAEqmC,mBAAoBhH,WAAYlY,QAAAA,IAAcA,QAAQt0B,c,kmDCnGxF,IAAM+zC,qBAAkF,gEACnFtF,mBAAmBzpC,aAAe,CAC/BuO,WAAY,8BAAGvO,aAAH,yBAAsB4N,EAAAA,IAAAA,UAAtB,eACZY,WAAY,kCAHoE,6DAKnFi7B,mBAAmBG,mBAAqB,CACrCr7B,WAAY,+BAAGq7B,mBAAH,gCAA4Bh8B,EAAAA,IAAAA,UAA5B,qBACZY,WAAY,gCACZM,iBAAkB,qCAAG9O,aAAH,0BAAsB4N,EAAAA,IAAAA,UAAtB,iBAR8D,6DAUnF67B,mBAAAA,4BAA8C,CAC3Cl7B,WAAY,+BAAGw7B,yBAAH,sCAAkCn8B,EAAAA,IAAAA,UAAlC,2BACZY,WAAY,gCACZM,iBAAkB,qCAAG9O,aAAH,0BAAsB4N,EAAAA,IAAAA,UAAtB,iBAb8D,6DAenF67B,mBAAmBI,qBAAuB,CACvCt7B,WAAY,+BAAGs7B,qBAAH,kCAA8Bj8B,EAAAA,IAAAA,UAA9B,uBACZY,WAAY,+BAAGnN,wBAAH,8BAA4BD,gBAA5B,8BACR,0BADQ,IACqBA,iBACjC0N,iBAAkB,qCAAG9O,aAAH,mBAAiB4pC,mBAAjB,yBAAqCG,yBAArC,sCACdn8B,EAAAA,IAAAA,UAAAA,iBAA2BA,EAAAA,IAAAA,UAAAA,sBADb,IAC6Cm8B,6BApBvE,sBAwBaiF,0BAA2B9/B,EAAAA,+BAAAA,IAAjC,qB,29BCmMP,gBA7K4C,SAAtC+/B,UAAuC,MAGvC,IAFF1G,kCAEE,KAFFA,kCACAC,iCACE,KADFA,iCAEM1iC,MAAOC,EAAAA,QAAAA,KACb,YAMIiG,EAAAA,UAAAA,KALArM,cADJ,yBAEIR,eAFJ,0BAGIG,KAHJ,gBAIa8B,gBAJb,iCAKIpB,aALJ,wBAOA,sBAEIiK,EAAAA,aAAAA,KAFJ,OACc1J,QADd,6BACuB2uC,WADvB,gCACmC1uC,UADnC,+BAGMooC,sBAAuBC,EAAAA,kBAAAA,KAEvBtK,QAASvvB,EAAAA,iBAAAA,GAAiB7P,eAAhC,OACMupC,SAAN,WAAiBvpC,eAAAA,UAEXgwC,aAAe5Q,OAArB,SASMpyB,eAAgBC,EAAAA,iBAAAA,IAPO,SAAvBC,qBAAwBlE,QAC1B,MAAO,CACHmE,cAAAA,EAAAA,kBAAgCw9B,wBAD7B,SAEHx9B,cAAAA,EAAAA,iBAA8Bw8B,EAAAA,0BAAAA,GAA0B3gC,OAF5D,kBAMyDoE,OAAAA,EAAAA,YAE7D,iBACI,YAGJ,IAAM/M,WAAa0Z,SAAS5Z,KAAD,WAA3B,IAEMoB,aAAcyjB,EAAAA,KAAAA,IAAAA,OAAmBtB,EAAAA,sBAAAA,iBAAgBvjB,KAAAA,cAAnC6kB,SAApB,EACMZ,YAAaY,EAAAA,KAAAA,IAAAA,OAAmBtB,EAAAA,sBAAAA,iBAAgBvjB,KAAnC6kB,iBAAnB,EACMirB,sBACFjwC,WAAAA,eAAAA,WA1D2B,SAA7BkwC,2BAA8B3uC,YAAD,YAC/B,QAAIA,IAAAA,kBAAJ,IAAiC6iB,WAC7B,SAGJ,IAAM+rB,mCAAqCvtC,mBAAAA,CAAAA,aAAAA,cAAiCA,mBAAAA,CAAM,IAAIirB,KAAtF,gBAEA,OACIjrB,mBAAAA,CAAAA,aAAAA,IAAAA,EAAAA,SAAAA,IAAAA,EAAAA,QAAAA,SAA2DA,mBAAAA,CAA3DA,cADJ,mCAmD4CstC,CAA2B3uC,YAAnEvB,YACEowC,iCAAmCH,uBACnC,EAAAhd,aAAA,IAAa,CAAEtwB,IAAF,YAAqBE,IAAKuhB,aAAvC,uBADwD,OAA9D,EAIMisB,sBAAuBvhC,EAAAA,cAAAA,GAAAA,eAAAA,mBAA7B,EACME,YAAcqhC,MAAAA,uBAAAA,qBAApB,QACMC,qBAAuBD,MAAAA,0BAAH,EAAGA,qBAA7B,QACMnuC,0BAA4BmuC,MAAAA,uBAAAA,qBAAlC,yBACMjG,cAAgBiG,sBAChBl+B,EAAAA,YAAAA,IAAak+B,qBAAD,QAA+BA,qBADP,WAA1C,GAIMlK,SAAUh0B,EAAAA,YAAAA,IAAa/Q,QAASC,UAAtC,YACM6kC,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MACMk+B,iBAAkB1e,EAAAA,YAAAA,IAAYnO,EAAAA,sBAAAA,iBAAZmO,uBAAxB,kBACM2e,2BAA4B3e,EAAAA,YAAAA,GAAAA,iBAAAA,SAAlC,EACImZ,UAAAA,EAAAA,0CAGE3T,eAAcvoB,EAAAA,cAAAA,GAAAA,kBAA0CtO,cAA1CsO,wBAEdnN,6BAA8BkoC,EAAAA,kBAAAA,GAAsC,iCAAD,uDAAzE,WAOA,OACI,oBAACU,wBAAwBl9B,cAAzB,CACIC,cAAeu9B,0BAA0B2F,0BAA2B/G,qBADxE,cAEIl8B,SAFJ,cAGIC,WAAY,2BAA2C,IAAhCoF,WAAgC,MAAxC5J,OAAoBoc,cAAoB,MAApBA,cACzB1T,WAAam+B,yBAAyBh9B,aAAa,uBAAtC,0CAEf3Q,wBACAD,mBAGE8nC,kBAAoBpoC,4BAA4BiR,WAAtD,cAEA,OACI,oBAAC23B,wBAAwB98B,KAAzB,CAA8BC,gBAA9B,EAAqDkG,0BAA0B,GAC3E,+BAAO9K,UAAU,KACb,4CACIohC,cADJ,wBAEIC,qBAAsBG,mBAAmBzpC,aACzCc,+BAGR,+BAAOmH,UAAP,IAAqBG,QAASyI,WAAAA,WAAsB44B,mBAAmBzpC,eAClEkpC,mBACG,8CACI1S,YACA5D,kBAFJ,EAGI2W,cACAjE,QACA6D,oBAAoBC,EAAAA,wBAAAA,GAAsB,mBAAD,EAGrChY,SAAAA,EAAAA,cAKhB,+BAAOnpB,UAAP,IAAqBG,SAAmC,IAA1BgnC,uBAC1B,6CAAe//B,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,kDAEIgO,OAAQ,CACJynC,mBAAoBr1B,KAAAA,MAAWg1B,iCAD3B,GAEJM,oBAAqBN,iCAAoC,OAKzE,+BAAOnnC,QAASyI,WAAAA,WAAsB44B,mBAAmBzpC,eACrD,sDACI4pC,mBAAoB73B,WADxB,mBAEIg4B,yBAA0Bh4B,WAAWg4B,4BAG7C,+BACI3hC,SACIhH,IAAAA,iBAAAA,yBAEAyP,WAAAA,WAAsB44B,mBAAmBzpC,eAG7C,+BACIiI,UADJ,IAEIG,QACI5I,WAAAA,SACCuS,IAAAA,WAAAA,qBADDvS,IAEIuS,WAAAA,2BAGR,6CAAe1C,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,+CAEIgO,OAAQ,CACJ9F,KAAMmnC,iBAAiBz3B,WAAD,aADlB,YAEJg3B,QAFI,cAGJzD,aAKhB,+BACIr9B,UADJ,IAEIG,QAASyI,WAAAA,UAAqB44B,mBAAmBI,uBAEjD,oDACItlB,cACA2kB,kBACAyE,0BAA2B57B,WAH/B,qBAIIorB,IAJJ,QAKIC,UALJ,cAMIwQ,8BAA+BrE,gBAAkBkG,yBAI7D,+BAAOrnC,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KAlFnC,0B,uxBCzIXgqC,uB,SAAAA,uBAAAA,sBAAAA,QAAAA,UAAAA,sBAAAA,mBAAAA,qBAAAA,sBAAAA,MAAAA,Q,CAAAA,wBAAAA,sBAAAA,KAmBL,kDChBA,6B,SAAYC,yBAAAA,wBAAAA,0BAAAA,yBAAAA,wBAAAA,aAAAA,eAAAA,wBAAAA,sBAAAA,wBAAAA,wBAAAA,uBAAAA,yBAAAA,wBAAAA,aAAAA,eAAAA,wBAAAA,uBAAAA,sBAAAA,wBAAAA,wBAAAA,0BAAAA,wBAAAA,yBAAAA,2BAAAA,wBAAAA,qBAAAA,uB,CAAAA,0BAAAA,wBAAAA,KAwBL,I,sBAAMC,8BAA+BrkC,EAAAA,sBAAAA,0B,uhCCrB5C,I,sBAAMskC,6BAAmD,4DACpDF,wBAAAA,0BAAiDxiC,sBAAAA,QAAAA,YADG,yDAEpDwiC,wBAAwB/vC,aAF4B,6DAGpD+vC,wBAAwBG,2BAH4B,4DAIpDH,wBAAwBI,uBAJ4B,6DAKpDJ,wBAAwBpL,aAL4B,6DAMpDoL,wBAAAA,uBANoD,6DAOpDA,wBAAwBnL,wBAP4B,8DAQpDmL,wBAAwBlL,yBAR4B,8DASpDkL,wBAAwBlG,0BAT4B,GAAzD,uBAYauG,6BAA+B,SAA/BA,6BAAgCjoC,QACzC,MAAO,CACHkoC,uBAAwBloC,OADrB,uBAEH+nC,sBAAuB/nC,OAFpB,sBAGHgoC,uBAAwBhoC,OAHrB,uBAIHw8B,aAAcx8B,OAJX,aAKH48B,oBAAqB58B,OALlB,oBAMHy8B,wBAAyBz8B,OANtB,wBAOH08B,yBAA0B18B,OAPvB,yBAQH0hC,qBAAsB1hC,OAAO0hC,uBAIxByG,+BAAiC,SAAjCA,+BAAkC,qBAAD,cAIhB,mBAA1B,4BACI,oJAEKP,wBAAwB/vC,aAF7B,gEAGK+vC,wBAAwBG,sBFjCb,SAAXK,SAAYC,MACrB,OAAIA,OAASV,sBAAb,QACWA,sBAAP,QAEAU,OAASV,sBAAb,mBACWA,sBAAP,mBAEAU,OAASV,sBAAb,MACWA,sBAAP,WADJ,EE0ByDS,CAAS3H,qBAH9D,0EAIKmH,wBAAAA,0BAAiDnH,qBAAAA,uBAC5Cr7B,sBAAAA,QAAAA,IACAA,sBAAAA,QAAAA,IANV,iBAUJ,6B,2LCnCJ,IAAMkjC,0BAAiG,sEAClGV,wBAAAA,0BAAiD,CAC9CxhC,WAAY,8BAAG8hC,uBAAH,mCAAgCziC,EAAAA,IAAAA,UAAhC,yBACZY,WAAY,iFAHmF,mEAKlGuhC,wBAAwB/vC,aAAe,CACpCuO,WAAY,+BAAGvO,aAAH,0BAAsB4N,EAAAA,IAAAA,UAAtB,eACZY,WAAY,+BAAG6hC,uBAAH,6BAA2BK,qCAA3B,kDACRL,yBAA2B9iC,sBAAAA,QAAAA,aADnB,wCAPmF,mEAUlGwiC,wBAAwBG,sBAAwB,CAC7C3hC,WAAY,+BAAG2hC,sBAAH,mCAA+BtiC,EAAAA,IAAAA,UAA/B,wBACZY,WAAY,+BAAGxO,aAAH,mBAAiBqwC,uBAAjB,oCACRziC,EAAAA,IAAAA,UAAAA,eAA0ByiC,yBAA2B9iC,sBAAAA,QAAAA,OAbsC,mEAelGwiC,wBAAwBI,uBAAyB,CAC9C5hC,WAAY,+BAAG4hC,uBAAH,oCAAgCviC,EAAAA,IAAAA,UAAhC,yBACZY,WAAY,+BAAGxO,aAAH,mBAAiBqwC,uBAAjB,kEACkBP,sBAAAA,QAC1BliC,EAAAA,IAAAA,UADAsiC,eAEAG,yBAA2B9iC,sBAAAA,QAAAA,OApBgE,mEAsBlGwiC,wBAAwBpL,aAAe,CACpCp2B,WAAY,+BAAGo2B,aAAH,0BAAsB/2B,EAAAA,IAAAA,UAAtB,eACZY,WAAY,gCAAGxO,aAAH,oBAAiBqwC,uBAAjB,qCACRziC,EAAAA,IAAAA,UAAAA,eAA0ByiC,yBAA2B9iC,sBAAAA,QAAAA,OAzBsC,mEA2BlGwiC,wBAAAA,uBAA8C,CAC3CxhC,WAAY,gCAAGw2B,oBAAH,kCAA6Bn3B,EAAAA,IAAAA,UAA7B,sBACZY,WAAY,gCAAGm2B,aAAH,oBAAiB0L,uBAAjB,qCACRziC,EAAAA,IAAAA,UAAAA,eAA0ByiC,yBAA2B9iC,sBAAAA,QAAAA,OA9BsC,mEAgClGwiC,wBAAwBlL,yBAA2B,CAChDt2B,WAAY,gCAAGs2B,yBAAH,uCAAkCj3B,EAAAA,IAAAA,UAAlC,2BACZY,WAAY,gCAAGu2B,oBAAH,kCAA6Bn3B,EAAAA,IAAAA,UAA7B,wBAlCmF,mEAoClGmiC,wBAAwBnL,wBAA0B,CAC/Cr2B,WAAY,gCAAGq2B,wBAAH,sCAAiCh3B,EAAAA,IAAAA,UAAjC,0BACZY,WAAY,gCAAGu2B,oBAAH,kCAA6Bn3B,EAAAA,IAAAA,UAA7B,wBAtCmF,mEAwClGmiC,wBAAwBlG,qBAAuB,CAC5Ct7B,WAAY,gCAAGs7B,qBAAH,mCAA8Bj8B,EAAAA,IAAAA,UAA9B,uBACZY,WAAY,gCACR0hC,sBADQ,6BAERG,uBAFQ,8BAGRK,qCAHQ,4CAIRtvC,gBAJQ,mCAMR8uC,IAAAA,uBACAG,yBAA2B9iC,sBAAAA,QAAAA,OAD3B2iC,uCANQ,IASR9uC,mBAnDZ,uBAuDauvC,+BAAgCzhC,EAAAA,+BAAAA,IAAtC,0BC9DM0hC,uCAAyC,SAAzCA,uCAA0C9qC,MAAD,OAAqB,iCACvE,KAAK8J,EAAAA,mBAAAA,iBAAL,wBACI,OAAOxJ,EAAAA,IAAAA,WAAUN,KAAjB,2ECQK+qC,sBAAwB,SAAxBA,sBAAyB,sBAAD,kDAMjC,OAAIX,wBAA0BJ,sBAAAA,QAC1B,YAEAI,wBAA0BJ,sBAAAA,mBAC1B,cAEJ,wBAGEgB,uBAAyB,SAAzBA,uBAA0BC,mBAC5B,qBAIA,OAAOA,kBAAA,KAAsB,kBAAQ,CACjCtkB,MAAM5J,EAAAA,sBAAAA,iBAAgBre,EADW,MAEjCmoB,IAAI9J,EAAAA,sBAAAA,iBAAgBre,EAAD,SAQrBwsC,kBAA8C,SAA9CA,kBAA+C,MAA+B,IAA7BC,uBAA6B,KAA7BA,uBAC7CnrC,MAAOC,EAAAA,QAAAA,KACLzG,MAAS0M,EAAAA,UAAAA,KAAjB,KACMq5B,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MAEMuE,OAAN,IACIsO,EAAAA,KAAAA,IAAAA,OAA6B/kB,KAAjC,aACIyW,OAAAA,KAAY,CACRtX,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,sDAAuD,CAC1E+J,MAAMqhC,EAAAA,UAAAA,KAAoBruB,EAAAA,sBAAAA,iBAAgBvjB,KAAjB,gBAE7BtE,MAAO80C,sBAAAA,WAIX3M,EAAAA,KAAAA,IAAJ,OACIptB,OAAAA,KAAY,CACRtX,OAAO2H,EAAAA,IAAAA,WAAUN,KAAM,iEAAkE,CACrF+J,MAAMqhC,EAAAA,UAAAA,KAAoBruB,EAAAA,sBAAAA,iBAAgBvjB,KAAjB,kBAE7BtE,MAAO80C,sBAAAA,qBAIf/5B,OAAAA,KAAY,CACRtX,OAAO2H,EAAAA,IAAAA,WAAUN,KADT,qDAER9K,MAAO80C,sBAAAA,QAGX,IAAMxE,kBAAoB/F,4BAAAA,EAAAA,2BAA1B,sBAEA,OACI,wCACI,+BAAOt9B,UAAU,KACb,oBAAC+nC,6BAA6Bl6B,gBAA9B,CACItX,KAAMuxC,wBAAwBG,sBAC9Bn6B,OACAlY,QAAQuI,EAAAA,IAAAA,WAAUN,KAHtB,6CAII6c,eAAe,KAGvB,+BAAO1a,UAAP,IAAqBG,QAAS6oC,yBAA2BnB,sBAAAA,OACrD,oBAACE,6BAA6B98B,WAA9B,CACI1U,KAAMuxC,wBAAwBI,uBAC9B1xC,OAAO2H,EAAAA,IAAAA,WAAUN,KAFrB,uDAGIqN,QAASm4B,kBAAAA,SAA4BzoB,EAAAA,sBAAAA,iBAAgByoB,kBAA5CA,cAHb,EAIIn1B,QAASm1B,kBAAAA,SAA4BzoB,EAAAA,sBAAAA,iBAAgByoB,kBAA5CA,cAJb,EAKI6F,mBAAoBL,uBAAuBxF,kBAL/C,mBAMI9F,eAAgB8F,kBANpB,sBAOIp+B,SAAU0jC,uCAAuC9qC,WAOrE,2D,wuDCtDA,IAAMsrC,eAA2C,SAA3CA,eAA4C,MAG5C,IAFF5I,iCAEE,KAFFA,iCACAD,kCACE,KADFA,kCAEMziC,MAAOC,EAAAA,QAAAA,KACb,YAMIiG,EAAAA,UAAAA,KALA7M,eADJ,0BAEIQ,cAFJ,yBAGIL,KAHJ,gBAIa8B,gBAJb,iCAKIpB,aALJ,wBAOA,sBAEIiK,EAAAA,aAAAA,KAFJ,OACc1J,QADd,6BACuB2uC,WADvB,gCACmC1uC,UADnC,+BAGMooC,sBAAuBC,EAAAA,kBAAAA,KAEvBwI,WAAN,aAAmBlyC,eAAAA,UACbmyC,uBAAN,gBACMC,yCAAwCtjC,EAAAA,cAAAA,GAAAA,qBAAAA,IACxCtO,cAAAA,wBAGAwvC,aACFkC,aAAeE,uCAAyC5xC,cAAzC4xC,eADnB,sBAUMplC,eAAgBC,EAAAA,iBAAAA,IAPO,SAAvBC,qBAAwBlE,QAC1B,MAAO,CACHmE,cAAAA,EAAAA,kBAAgC8jC,6BAD7B,SAEH9jC,cAAAA,EAAAA,iBAA8Bw8B,EAAAA,0BAAAA,GAA0B3gC,OAF5D,kBAMyDoE,OAAAA,EAAAA,YAE7D,IAAK4iC,gBAAiBhM,EAAAA,KAAAA,IAAtB,MACI,YAGJ,IAAMqO,WAAN,QAAmBryC,eAAAA,MACbkmC,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MAEMg+B,sBAAuBvhC,EAAAA,cAAAA,GAAAA,eAAAA,mBAA7B,EACMyiC,uCAAyClB,MAAAA,uBAAAA,qBAA/C,yBACMiC,qBAAuBjC,MAAAA,0BAAH,EAAGA,qBAA7B,QACMkC,kBAAoBlC,MAAAA,uBAAAA,qBAA1B,QACMmC,cAAgBnC,sBAChBl+B,EAAAA,YAAAA,IAAak+B,qBAAD,QAA+BA,qBADP,WAA1C,GAIMhZ,eAAcvoB,EAAAA,cAAAA,GAAAA,kBAA0CtO,cAA1CsO,wBACdE,WAAYqjC,YAAlB,gBAEMI,WAAYtgC,EAAAA,YAAAA,IAAa/Q,QAASC,UAAxC,YACM8kC,QAAUkM,WAAaI,UAA7B,cACMrI,cAAgBiI,WAAaG,cAAnC,UAEME,uBAAsBxtB,EAAAA,KAAAA,IAAAA,OAA4B/kB,KAA5B+kB,kBACtBtB,aAAcsB,EAAAA,KAAAA,IAAAA,MAA4B/kB,KAA5B+kB,iBAApB,EACMytB,gBAAkB/uB,aAAcF,EAAAA,sBAAAA,iBAAH,kBAAnC,EACMrjB,WAAa0Z,SAAS5Z,KAAD,WAA3B,IACMyyC,mBAAoBlvB,EAAAA,sBAAAA,iBAAgBvjB,KAA1C,eACM0yC,gBACF,IAAAF,sBAAA,IAAiCC,mBAC3BhtB,EAAAA,sBAAAA,kBAAgBktB,EAAAA,UAAAA,IAAe,CAACH,gBADtC,qBAEMxyC,KAHV,cAKMwB,6BAA8BkoC,EAAAA,kBAAAA,GAAsC,iCAAD,uDAAzE,WAOA,OACI,oBAACgH,6BAA6BxjC,cAA9B,CACIC,cAAe6jC,+BAA+B1H,qBADlD,cAEIl8B,SAFJ,cAGIC,WAAY,2BAA2C,IAAhCoF,WAAgC,MAAxC5J,OAAoBoc,cAAoB,MAApBA,cACzB1T,WAAa8/B,8BAA8B3+B,aAAa,4BAA3C,+CAEf0+B,qCACAtvC,mBAGE8nC,kBAAoBpoC,4BAA4BiR,WAAtD,cAEMo3B,mBAAqBD,mBACrBE,EAAAA,wBAAAA,GAAsBF,mBAAmB,EAAO9X,SAAAA,EAAAA,gBADtD,EAIA,OACI,oBAAC4e,6BAA6BpjC,KAA9B,CAAmCC,gBAAnC,EAA0DkG,0BAA0B,GAChF,+BACI9K,UADJ,IAEIG,QAASyI,WAAAA,WAAsBk/B,wBAAAA,4BAE/B,oBAACC,6BAA6Bh9B,gBAA9B,CACIxU,KAAMuxC,wBAAAA,0BACNlyC,QAAQuI,EAAAA,IAAAA,WAAUN,KAAM,uDAAwD,CAC5E05B,kBAAmBiS,0BAI9B1/B,WAAAA,yBAAsCxE,sBAAAA,QAAAA,KACnC,+BAAOtF,UAAU,KACb,6CAAeoH,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,8CAEIgO,OAAQ,CACJqH,MAAM0uB,EAAAA,YAAAA,IAAuBuT,qBAAuB3rC,KAAxB,aAMhD,+BAAOmC,UAAP,IAAqBG,QAASyI,WAAAA,WAAsBk/B,wBAAwB/vC,eACxE,4CACIqpC,cADJ,6BAEIC,qBAAsByG,wBAAwB/vC,aAC9Cc,+BAGR,+BAAOmH,UAAP,IAAqBG,QAASyI,WAAAA,WAAsBk/B,wBAAwB/vC,eACvEmpC,oBACG,8CACI3S,YACA5D,kBAFJ,WAGI2W,cACAjE,QACA6D,sBAIZ,+BAAO/gC,QAASyI,WAAAA,WAAsBk/B,wBAAwBG,wBAC1D,wDAAmBe,uBAAwBl/B,WAAWm+B,yBAE1D,+BAAOjoC,UAAP,IAAqBG,QAASyI,WAAAA,WAAsBk/B,wBAAwBpL,eACxE,0CACIQ,eADJ,6BAEIC,UAAW2K,wBAAwBpL,aACnCW,QACAD,wBAGR,+BACIp9B,UADJ,IAEIG,QAASyI,WAAAA,WAAsBk/B,wBAAAA,yBAE/B,yCACI5K,eADJ,6BAEIC,UAAW2K,wBAAAA,uBACX1K,qBACA9gB,cACAogB,cAAc9hB,EAAAA,sBAAAA,iBAAgB9Q,WALlC,cAMIuzB,WAGR,+BACIr9B,UADJ,IAEIG,QACIyI,WAAAA,WAAsBk/B,wBAAAA,2BACrBmC,EAAAA,UAAAA,KACGrvB,EAAAA,sBAAAA,iBAAgB9Q,WADF,eAEd8Q,EAAAA,sBAAAA,iBAAgB9Q,WAHpBlB,uBAKAkB,WAAAA,yBAAsCxE,sBAAAA,QAAAA,KAGzC47B,oBACG,qEACIhE,eADJ,6BAEIkC,cAAe0I,wBAAwBnL,wBACvC0C,eAAgByI,wBAAwBlL,yBACxC0C,YAAax1B,WAJjB,yBAKIy1B,WAAYz1B,WALhB,wBAMIwS,cACAkjB,qBAAsB0B,mBAAAA,YAAiC,KAInE,+BACIlhC,UADJ,IAEIG,aACI2J,IAAAA,WAAAA,uBACAhQ,mBAAAA,EAAM8gB,EAAAA,sBAAAA,iBAAN9gB,aAAAA,SACIA,mBAAAA,CACI8uC,sBACI9+B,WADiB,sBAEjBA,WAFiB,uBAGjBzS,KAHiB,cAH7ByS,kBAWCE,EAAAA,KAAAA,IAAkB3S,OAGvB,6CAAe+P,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,IACI03C,IAAAA,oBAAAA,4CAEM,4CAKtB,+BAAOzpC,SAAShH,IAAAA,iBAA6BsvC,sCACzC,+BACIzoC,UADJ,IAEIG,QACI5I,WAAAA,QAAAA,IACAuS,WAAAA,uBACAA,WAAAA,yBAAsCxE,sBAAAA,QAAAA,KAG1C,6CAAe8B,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,+CAEIgO,OAAQ,CACJ9F,KAAMmnC,iBAAiBz3B,WAAD,aADlB,YAEJg3B,QAFI,cAGJzD,aAKhB,+BACIr9B,UADJ,IAEIG,QAASyI,WAAAA,WAAsBk/B,wBAAwBlG,uBAEvD,oDACItlB,cACA2kB,kBACAyE,0BAA2B57B,WAH/B,qBAIIorB,IAJJ,QAKIC,UALJ,cAMIwQ,+BAAgC4D,eAI5C,+BAAOppC,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KAxJnC,0BAiKhB,qD,y1BCxSA,yC,SAAYqsC,qCAAAA,oCAAAA,aAAAA,eAAAA,oCAAAA,6BAAAA,4BAAAA,oCAAAA,eAAAA,iB,CAAAA,sCAAAA,oCAAAA,KAYL,I,sBAAMC,0CAA2CzmC,EAAAA,sBAAAA,0B,uMCNxD,IAAM0mC,sCAGL,kFACIF,oCAAoCnyC,aAAe,CAChDwO,WAAY,gCACZD,WAAY,8BAAGvO,aAAH,yBAAsB4N,EAAAA,IAAAA,UAAtB,iBAHnB,+EAKIukC,oCAAAA,6BAAgE,CAC7D3jC,WAAY,gCACZD,WAAY,oEAAiEhB,sBAAAA,QAAAA,YAC7EuB,iBAAkB,qCAAG9O,aAAH,0BAAsB4N,EAAAA,IAAAA,UAAtB,iBARzB,+EAUIukC,oCAAoC5a,eAAiB,CAClD/oB,WAAY,oEAAiEjB,sBAAAA,QAAAA,IAC7EgB,WAAY,+BAAGgpB,eAAH,4BAAwB3pB,EAAAA,IAAAA,UAAxB,iBACZkB,iBAAkB,0EAAiEvB,sBAAAA,QAAAA,MAhB3F,uBAyBA,iDALkD2B,EAAAA,+BAAAA,IAAlD,sC,uNCnBA,IAAMojC,yCAA2E,wEAC5EH,oCAAoCnyC,aADwC,yEAE5EmyC,oCAAAA,6BAAgE5kC,sBAAAA,QAAAA,YAFY,qEAG5E4kC,oCAAoC5a,eAHwC,IAAjF,uBAiBagb,2CAA6C,SAA7CA,2CAA8C,qBAAD,mCAKtD,wBAA0B,CACtB,IAAMC,4BAA8BzwC,mBAAAA,CAAM6mC,qBAAN7mC,gBAAAA,OAChCA,mBAAAA,CADJ,uBAIA,MAAO,CACH/B,aACAyyC,0BAA2BD,4BAA8BjlC,sBAAAA,QAAAA,IAAcA,sBAAAA,QAAAA,GACvEgqB,eAAgBib,4BAA8B,GAAK5J,qBAAqBrR,gBAIhF,gDCtCSmb,iDACT,SADSA,iDACR5sC,KAAD,6BAAmD,yBAC/C,OAAK8H,EAAAA,IAAAA,UAAL,iBAIKgC,EAAAA,mBAAAA,iBAAL,iBAOIwF,EAAAA,UAAAA,IAAmBmiB,eAAvB,uBACWnxB,EAAAA,IAAAA,WAAU,KAAD,qGAGZ,CAAEi/B,sBAAsBv1B,EAAAA,IAAAA,YAAWu1B,6BAJ3C,GANWj/B,EAAAA,IAAAA,WAAU,KAAjB,wFAJOA,EAAAA,IAAAA,WAAUN,KAAjB,sFCoKZ,iCAnI6D,SAAvD6sC,2BAAwD,MAGxD,IAFFpK,kCAEE,KAFFA,kCACAC,iCACE,KADFA,iCAEA,YAAqEx8B,EAAAA,UAAAA,KAA7D7M,eAAR,0BAAwBU,MAAxB,iBAA+BF,cAA/B,yBAA8CL,KAA9C,gBAAoDU,aAApD,wBACQkK,QAAWD,EAAAA,aAAAA,KAAnB,OACM2oB,kBAAmB5jB,EAAAA,iBAAAA,GAAiB7P,eAA1C,OACMkmC,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MACM1L,MAAOC,EAAAA,QAAAA,KAEP2iC,SAAN,WAAiBvpC,eAAAA,UACXypC,sBAAuBC,EAAAA,kBAAAA,KAavB18B,eAAgBC,EAAAA,iBAAAA,IAXO,SAAvBC,qBAAwBlE,QAC1B,IAAM4vB,eFxC0C,SAA3C6a,yCAA4C,OAAD,sBAIpD,MAAO,CACH/I,0BADG,EAEHtS,eACIpvB,OAAAA,4BAAqCoF,sBAAAA,QAAAA,IAArCpF,qBAA0EA,OAAOovB,gBEiCpBqb,CAAyC,OAA1G,sBAIA,MAAO,CACHtmC,cAAAA,EAAAA,kBADG,gBAEHA,cAAAA,EAAAA,iBAA8Bw8B,EAAAA,0BAAAA,GAA0B3gC,OAF5D,kBAMyDoE,OAAAA,EAAAA,YAI7D,KAFqBm8B,UAAAA,qBAAmC7oC,MAAF,iBAA2BF,cAAjF,gBAGI,YAGJ,IAAMopC,QAAUnW,iBACV1oB,OAD0B,SAE1B+D,EAAAA,cAAAA,GAAAA,eACAtO,cADAsO,QAFN,GAMME,UAAYk6B,aAAa1oC,cAA/B,kBACMmB,6BAA8BkoC,EAAAA,kBAAAA,GAAsC,iCAAD,uDAAzE,WAOA,OACI,oBAACoJ,yCAAyC5lC,cAA1C,CACIC,cAAe8lC,2CAA2C,qBAAD,qBAD7D,cAMI7lC,SANJ,cAOIC,WAAY,2BAA4B,IAAjBoF,WAAiB,MAAzB5J,OACL0I,WAAagiC,0CAAAA,aAAnB,YAEM3J,kBAAoBpoC,4BAA4BiR,WAAtD,cAEA,OACI,oBAACqgC,yCAAyCxlC,KAA1C,CACIC,gBADJ,EAEIkG,0BAA0B,GAE1B,+BACI9K,UADJ,MAEIG,QAASyI,WAAAA,UAAqBshC,oCAAoCnyC,eAElE,4CACIqpC,cADJ,yCAEIC,qBAAsB6I,oCAAoCnyC,aAC1Dc,+BAGR,+BAAOsH,QAAqC,KAA5B2J,WAAAA,cACXm3B,mBACG,8CACI1S,aADJ,EAEI5D,kBAFJ,EAGI2W,cAHJ,QAIIjE,QAJJ,GAKI6D,oBAAoBC,EAAAA,wBAAAA,GAAsB,mBAAD,EAGrChY,SAAAA,EAAAA,cAKhB,+BACInpB,UADJ,IAEIG,QAASyI,WAAAA,UACLshC,oCAAAA,+BAGJ,oBAACC,yCAAyCp/B,gBAA1C,CACIxU,KAAM2zC,oCAAAA,6BACNt0C,QAAQuI,EAAAA,IAAAA,WAAUN,KAFtB,yDAGI8lB,OAAQ,CACJuB,KAAK/mB,EAAAA,IAAAA,WAAU,KAAD,iEAGV,CACIyJ,MAAMqhC,EAAAA,UAAAA,KAAoBruB,EAAAA,sBAAAA,iBAAD,yBAGjCuK,IAAIhnB,EAAAA,IAAAA,WAAUN,KAAM,8DAIhC,+BACImC,UADJ,IAEIG,QAASyI,WAAAA,UAAqBshC,oCAAoC5a,iBAElE,oBAAC6a,yCAAyCl/B,WAA1C,CACI1U,KAAM2zC,oCAAoC5a,eAC1C94B,MAFJ,YAGIyO,SAAUwlC,iDAAiD5sC,KAH/D,sBAIIqN,SAAS0P,EAAAA,sBAAAA,iBAAgBwiB,yBAGjC,+BAAOj9B,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KA/DnC,0B,u+BClGhB,gD,+GAAYgtC,iDAAAA,gDAAAA,mBAAAA,qB,CAAAA,kDAAAA,gDAAAA,KAQL,IAAMC,sDAAuDpnC,EAAAA,sBAAAA,0BCHpE,IAAMqnC,iD,mNAGF,CAAH,GACIF,gDAAgDlJ,mBAAqB,CAClEp7B,WAAY,gCACZD,WAAY,8BAAGq7B,mBAAH,+BAA4Bh8B,EAAAA,IAAAA,UAA5B,uBAIPqlC,uDAAwD/jC,EAAAA,+BAAAA,IAA9D,kDCdMgkC,uDAAyD,SAAzDA,uDAA0D,OAGnE,aAMO,CACHtJ,mBAAoB9R,MAAM8R,oBANnB,CACHA,mBAAoB,KC0GhC,6CA/EyE,SAAnEuJ,uCAAoE,MAIpE,IAHF5K,kCAGE,KAHFA,kCACAC,iCAEE,KAFFA,iCACAC,yBACE,KADFA,yBAEMzpC,QAASgN,EAAAA,UAAAA,KACTlG,MAAOC,EAAAA,QAAAA,KACLzG,KAAwCN,OAAhD,KAAcG,eAAkCH,OAAhD,eAA8BW,cAAkBX,OAAhD,cACM4zB,kBAAmB5jB,EAAAA,iBAAAA,GAAiB7P,eAA1C,OACMypC,sBAAuBC,EAAAA,kBAAAA,KAUvB18B,eAAgBC,EAAAA,iBAAAA,IARO,SAAvBC,qBAAwBlE,QAC1B,IAAM4vB,eAAuE,CACzE6R,mBAAoBzhC,OAAOyhC,oBAG/B,MAAO,CAACt9B,cAAAA,EAAAA,kBAAD,gBAAkDA,cAAAA,EAAAA,gBAA8B0mB,SAAvF,iBAGyDzmB,OAAAA,EAAAA,YAE7D,IAAKk8B,2BAAL,iBACI,YAGJ,IAAM14B,qBAAsByB,EAAAA,UAAAA,GAA5B,MACMrD,UAAYk6B,aAAa1oC,cAA/B,kBACM2lC,SAAUr3B,EAAAA,cAAAA,GAAAA,eAAwCtO,cAAxCsO,QAAhB,GACQ+kB,SAAyByV,yBAAjC,SAEM9D,aAF2B8D,yBAAjC,WACqB,QAAkB,mBAAOrnB,EAAAA,QAAAA,IAAAA,IAAoBD,EAAAA,WAAeiQ,SAAAA,EAAAA,OAC5DgiB,UAAAA,GAAAA,YAArB,IAEMtyC,6BAA8BkoC,EAAAA,kBAAAA,GAAsC,iCAAD,sDAAzE,WAOA,OACI,oBAAC+J,qDAAqDvmC,cAAtD,CACIC,cAAeymC,uDADnB,sBAEIxmC,SAFJ,cAGIC,WAAY,2BAA2C,IAAhCoF,WAAgC,MAAxC5J,OAAoBoc,cAAoB,MAApBA,cACzB1T,WAAaoiC,sDAAsDjhC,aAAzE,YACMqhC,wBAA0BvyC,4BAA4BkyB,SAA5D,cAEA,OACI,oBAAC+f,qDAAqDnmC,KAAtD,CACIC,gBADJ,EAEIkG,0BAA0B,GAE1B,+BAAO9K,UAAU,KACb,sCACI/G,gBADJ,yBAEIN,qBAFJ,EAGIE,4BAA6BuyC,2BAGrC,+BAAOprC,UAAU,KACb,yCACIk9B,eADJ,qDAEIC,UAAW0N,gDAAgDlJ,mBAC3DvE,qBAHJ,oBAII9gB,cACAogB,aACAW,WAGR,+BAAOl9B,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,IAAAA,WAAUN,KAvBnC,0B,+vCClEhB,IAAMwtC,wBAAoD,SAApDA,wBAAqD,MAIrD,IAHF/K,kCAGE,KAHFA,kCACAC,iCAEE,KAFFA,iCACAC,yBACE,KADFA,yBAEA,OACI,wCACI,iDACIF,kCACAC,iCACAC,2BAEJ,+BACIF,kCACAC,mCAEJ,qDACID,kCACAC,mCAEJ,gDACID,kCACAC,mCAEJ,uDACID,kCACAC,mCAEJ,4DACID,kCACAC,iCACAC,6BAMhB,iE,+gCC7CA,IAAM8K,cAAgB,SAAhBA,cAAiBC,YAAD,eAClB,wBAIIvlC,EAAAA,cAAAA,GAAJ,kBACatO,cAAT,yBAMF8zC,cAAgB,SAAhBA,cAAiBD,YAAD,eAClB,uBAIIvlC,EAAAA,cAAAA,GAAJ,kBACatO,cAAT,yBA4BR,4BAtB8B,SAAxB+zC,sBAAyB,aAAD,mCAM1B,IAAMF,aAAcxkC,EAAAA,iBAAAA,GAAiB7P,eAArC,OAEA,MAAO,CACHK,WAAYF,KADT,WAEHi4B,gBAAgB/lB,EAAAA,UAAAA,GAFb,MAGHxR,aACAo3B,WAAYmc,cAAcC,YAJvB,eAKHje,WAAYke,cAAcD,YALvB,eAMHnc,mBAAoBmc,kBANjB,IAMgCl0C,KAAAA,mBACnCg4B,kBAAmBkc,kBAPhB,IAO+Bl0C,KAAAA,mBAClCoB,aAAayjB,EAAAA,KAAAA,IAAAA,MAAmB7kB,KAAAA,cAAnB6kB,QARV,EASH8O,yBAAyB5O,EAAAA,KAAAA,IAAAA,QAA6BpS,EAAAA,KAAAA,IAA7BoS,MAAuD/kB,KAAvD+kB,mBATtB,EAUHd,YAAYY,EAAAA,KAAAA,IAAAA,QAAoBC,EAAAA,KAAAA,IAApBD,MAAwC7kB,KAAxC6kB,gBAA0D9b,I,sFCsB9E,qCAzDuB,SAAjBsrC,iBAAuB,0BACnB7tC,MAAOC,EAAAA,QAAAA,KAEP3F,WAAY6J,EAAAA,aAAAA,KACZjL,QAASgN,EAAAA,UAAAA,KAEP1M,KAAwCN,OAAhD,KAAcW,cAAkCX,OAAhD,cAA6BG,eAAmBH,OAAhD,eACQ4kB,gBAAoBxjB,UAA5B,gBACMwyB,kBAAmB5jB,EAAAA,iBAAAA,GAAiB7P,eAA1C,OAEMiP,gBAAiBqD,EAAAA,UAAAA,GAA6BnS,KAApD,iBAEQg5B,6BAAiCjuB,IAAAA,EAAAA,4BACrCjK,UAAAA,OADqCiK,IAAAA,iBAGrC+D,MAAAA,gBAHqC/D,QAAAA,sBAGrC+D,eAHqC/D,qBAAAA,IAAAA,2BAAAA,EAGrC+D,sBAHJ,kCAKyCwlC,kBAAsBvpC,IAAAA,EAAAA,oBAC3DqpC,sBAAsBjd,aAAAA,EAAAA,eAAD,mBADzB,iDAGyCod,iBAAqBxpC,IAAAA,EAAAA,oBAC1DqpC,sBAAsBjd,aAAAA,EAAAA,gBAAD,mBADzB,iDAGM5kB,gBAAiBC,EAAAA,gBAAAA,KAEvB,OACK8hC,oBAAD,kBAEC,+CAHL,iBAMQ,2BAAKx5C,MAAO,CAAEyQ,UAAF,SAAuBxQ,QAAS,YACxC,uCAAoB4E,KAAK,SAMjC,8BACIiT,aAAa9L,EAAAA,IAAAA,WAAUN,KAD3B,sBAEIqM,cAAcC,EAAAA,YAAAA,GAFlB,kBAGIC,aAHJ,iBAIIC,WAAWlM,EAAAA,IAAAA,WAAUN,KAJzB,yBAKIyM,WAAWnM,EAAAA,IAAAA,WAAUN,KALzB,yBAMI0M,SANJ,eAOIE,MAPJ,cAQInU,SAAS,GAET,wDACIgqC,kCADJ,kBAEIC,iCAFJ,iBAGIC,yBAA0BnQ,kC,8KChE1C,yC,wOAAYwb,0CAAAA,yCAAAA,aAAAA,eAAAA,yCAAAA,mBAAAA,qB,CAAAA,2CAAAA,yCAAAA,KAUL,I,sBAAMC,+CAAgDpoC,EAAAA,IAAAA,0B,+8BCL7D,I,sBAAMqoC,8CAAqF,yCACtFF,yCAAyC9zC,aAD6C,0CAEtF8zC,yCAAyClK,mBAF6C,IAA3F,uBAKaqK,8CAAgD,SAAhDA,8CAAiD,QAG1D,MAAO,CACHrK,mBAAoBzhC,OAAOyhC,qBAItBsK,gDAAkD,SAAlDA,gDAAmD,aAAD,sBAI3D,4BACI,2EAEKJ,yCAAyC9zC,aAF9C,eAMJ,8C,yhBCpBJ,IAAMm0C,2CAGL,uFACIL,yCAAyC9zC,aAAe,CACrDuO,WAAY,8BAAGvO,aAAH,yBAAsB4N,EAAAA,cAAAA,UAAtB,eACZY,WAAY,kCAHnB,oFAKIslC,yCAAyClK,mBAAqB,CAC3Dr7B,WAAY,+BAAGq7B,mBAAH,gCAA4Bh8B,EAAAA,cAAAA,UAA5B,qBACZY,WAAY,+BAAGxO,aAAH,mBAAiBmO,UAAjB,uBAAiCP,EAAAA,cAAAA,UAAAA,eAAjC,aAVpB,uBAcawmC,gDAAiDllC,EAAAA,+BAAAA,IAAvD,2C,ssBCnBMmlC,2BAA6B,SAA7BA,2BAA8BvuC,MAAD,OAAqB,6BAC3D,OAAK8J,EAAAA,mBAAAA,iBAAL,qBAGKohB,EAAAA,YAAAA,IAAYnO,EAAAA,IAAAA,iBAAZmO,qBAAL,sBACW5qB,EAAAA,cAAAA,WAAUN,KAAjB,iDAHOM,EAAAA,cAAAA,WAAUN,KAAjB,kE,osCCmCR,IAaMgrC,uBAAyB,SAAzBA,uBAA0BC,mBAC5B,qBAIA,OAAOA,kBAAA,KAAsB,kBAAQ,CACjCtkB,MAAM5J,EAAAA,IAAAA,iBAAgBre,EADW,MAEjCmoB,IAAI9J,EAAAA,IAAAA,iBAAgBre,EAAD,SAoJ3B,sCA3IkE,SAA5D8vC,gCAA6D,MAG7D,IAFF9L,iCAEE,KAFFA,iCACAD,kCACE,KADFA,kCAEMziC,MAAOC,EAAAA,QAAAA,KACb,YAA8DiG,EAAAA,UAAAA,KAAtD7M,eAAR,0BAAwBQ,cAAxB,yBAAuCL,KAAvC,gBAA6CU,aAA7C,wBACA,sBAEIiK,EAAAA,aAAAA,KAFJ,OACc1J,QADd,6BACuB2uC,WADvB,gCACmC1uC,UADnC,+BAGMooC,sBAAuBC,EAAAA,kBAAAA,KAEvBjW,kBAAmB5jB,EAAAA,iBAAAA,GAAiB7P,eAA1C,OACMupC,SAAN,WAAiBvpC,eAAAA,UACXo1C,4BAA2BtmC,EAAAA,cAAAA,GAAAA,iBAAAA,IAC3BtO,cAAAA,wBAUAwM,eAAgBC,EAAAA,iBAAAA,IAPO,SAAvBC,qBAAwBlE,QAC1B,MAAO,CACHmE,cAAAA,EAAAA,kBAAgC2nC,8CAD7B,SAEH3nC,cAAAA,EAAAA,iBAA8Bw8B,EAAAA,0BAAAA,GAA0B3gC,OAF5D,kBAMyDoE,OAAAA,EAAAA,YAI7D,KAFqBqmB,kBAAAA,UAArB,0BAGI,YAGJ,IAAM4D,eAAcvoB,EAAAA,cAAAA,GAAAA,kBAA0CtO,cAA1CsO,wBAEdE,aAAYF,EAAAA,cAAAA,GAAAA,kBAA0CtO,cAA1CsO,OACZq3B,SAAUr3B,EAAAA,cAAAA,GAAAA,gBACVqD,EAAAA,YAAAA,IAAa3R,cAAD,QAAwBA,cAD1BsO,WAAhB,GAGMs7B,eAAgBj4B,EAAAA,YAAAA,IAAa/Q,QAASC,UAA5C,YAEM6kC,sBAAuB7zB,EAAAA,UAAAA,GAA7B,MACMk+B,iBAAkB1e,EAAAA,YAAAA,IAAYnO,EAAAA,IAAAA,iBAAZmO,uBAAxB,kBACMwjB,iBAAmBjP,4BAAAA,EAAAA,6BAAwDxgB,EAAAA,IAAAA,iBAAjF,kBAEMrkB,aAAcyjB,EAAAA,KAAAA,IAAAA,OAAmBtB,EAAAA,IAAAA,iBAAgBvjB,KAAAA,cAAnC6kB,SAApB,EACMZ,YAAaY,EAAAA,KAAAA,IAAAA,OAAmBtB,EAAAA,IAAAA,iBAAgBvjB,KAAnC6kB,iBAAnB,EACMirB,sBACFjwC,WAAAA,eAAAA,WA5E2B,SAA7BkwC,2BAA8B3uC,YAAD,YAC/B,QAAIA,IAAAA,kBAAJ,IAAiC6iB,WAC7B,SAGJ,IAAM+rB,mCAAqCvtC,mBAAAA,CAAAA,aAAAA,cAAiCA,mBAAAA,CAAM,IAAIirB,KAAtF,gBAEA,OACIjrB,mBAAAA,CAAAA,aAAAA,IAAAA,EAAAA,SAAAA,IAAAA,EAAAA,QAAAA,SAA2DA,mBAAAA,CAA3DA,cADJ,mCAqE4CstC,CAA2B3uC,YAAnEvB,YACEowC,iCAAmCH,uBACnC,EAAAhd,aAAA,IAAa,CAAEtwB,IAAF,YAAqBE,IAAKuhB,aAAvC,uBADwD,OAA9D,EAIMziB,6BAA8BkoC,EAAAA,kBAAAA,GAAsC,iCAAD,uDAAzE,WAOA,OACI,oBAAC+K,8CAA8CvnC,cAA/C,CACIC,cAAeynC,gDAAgDl0C,aADnE,sBAEI0M,SAFJ,cAGIC,WAAY,2BAA4B,IAAjBoF,WAAiB,MAAzB5J,OACL0I,WAAaujC,+CAA+CpiC,aAAa,6CAA5D,gEAEf7D,aAGE+6B,kBAAoBpoC,4BAA4BiR,WAAtD,cAEA,OACI,oBAACgiC,8CAA8CnnC,KAA/C,CACIC,gBADJ,EAEIkG,0BAA0B,GAE1B,yCACI9K,UADJ,IAEIG,QAASyI,WAAAA,WAAsBijC,yCAAyC9zC,eAExE,4CACIqpC,cADJ,8CAEIC,qBAAsBwK,yCAAyC9zC,aAC/Dc,+BAGR,yCACImH,UADJ,IAEIG,QAASyI,WAAAA,WAAsBijC,yCAAyC9zC,eAEvEkpC,mBACG,8CACI1S,YACA5D,kBAFJ,EAGI2W,cACAjE,QACA6D,oBAAoBC,EAAAA,wBAAAA,GAAsB,kBAAD,YAGrChY,SAAAA,EAAAA,cAKhB,yCAAOnpB,UAAP,IAAqBG,SAAmC,IAA1BgnC,uBAC1B,6CAAe//B,UAAf,SAAkCC,IAAK,sCAAgBC,uBAAuB,KAC1E,+BACIpV,GADJ,kDAEIgO,OAAQ,CACJynC,mBAAoBr1B,KAAAA,MAAWg1B,iCAD3B,GAEJM,oBAAqBN,iCAAoC,OAKzE,yCACItnC,UADJ,IAEIG,QAASyI,WAAAA,WAAsBijC,yCAAyClK,qBAExE,oBAACmK,8CAA8C7gC,WAA/C,CACI1U,KAAMs1C,yCAAyClK,mBAC/CnrC,OAAO2H,EAAAA,cAAAA,WAAUN,KAFrB,6DAGIqN,SAAS0P,EAAAA,IAAAA,iBAAgB2xB,iBAH7B,SAIIr+B,SAAS0M,EAAAA,IAAAA,iBAAgB2xB,iBAJ7B,SAKIrD,mBAAoBL,uBAAuB0D,iBAL/C,mBAMIhP,eAAgBgP,iBANpB,sBAOItnC,SAAUmnC,2BAA2BvuC,SAG7C,yCAAOsC,QAASyI,WAAhB,0BAAsDuC,iBAAiB,GACnE,8DAAahN,EAAAA,cAAAA,WAAUN,KA3DnC,0B,mlDC1FhB,iCApCuD,SAAjD2uC,qBAAkD,MAIlD,IAHFpL,cAGE,KAHFA,cACAC,qBAEE,KAFFA,qBACAxoC,4BACE,KADFA,4BAEMgF,MAAOC,EAAAA,wCAAAA,KAEb,OACI,iDAACsjC,cAAD,iBACI7qC,KADJ,qBAEIuX,OAAQ,CACJ,CACItX,OAAO2H,EAAAA,+CAAAA,WAAUN,KAAM,wBAAyB,CAC5C0hC,YAAY1I,EAAAA,4EAAAA,IAAch+B,4BAA4B21B,oDAAAA,EAAAA,mBAE1Dz7B,MAAOy7B,oDAAAA,EAAAA,gBAEX,CACIh4B,OAAO2H,EAAAA,+CAAAA,WAAUN,KAAM,wBAAyB,CAC5C0hC,YAAY1I,EAAAA,4EAAAA,IAAch+B,4BAA4B21B,oDAAAA,EAAAA,oBAE1Dz7B,MAAOy7B,oDAAAA,EAAAA,kBAGf54B,QAAQuI,EAAAA,+CAAAA,WAAUN,KAhBtB,+CAiBImN,YACI,oHAAoBpK,UAAU,+CAlBtC,yHAuBI8Z,eAAe,K,gqCChD3B,mB,gOAAY+xB,oBAAAA,mBAAAA,MAAAA,UAAAA,mBAAAA,KAAAA,UAAAA,mBAAAA,MAAAA,UAAAA,mBAAAA,OAAAA,UAAAA,mBAAAA,KAAAA,UAAAA,mBAAAA,UAAAA,UAAAA,mBAAAA,IAAAA,U,CAAAA,qBAAAA,mBAAAA,K,28BCmBZ,IAAMC,YAAc,SAAdA,YAAe,MAA4D,IAA1D1wC,MAA0D,KAA1DA,MAAO2wC,MAAmD,KAAnDA,MAAOC,OAA4C,KAA5CA,OACjC,MAAO,CACH5wC,MAAO,GAAF,aADF,KAEH6wC,WAAYD,OAAS,oCAAH,8CAAqED,QAIzFG,SAA2C,SAA3CA,SAA4C,OAAkD,IAAhDC,QAAgD,MAAhDA,QAASC,SAAuC,MAAvCA,SAAUC,UAA6B,MAA7BA,UAAWC,YAAkB,MAAlBA,YACxEttC,KAAM5B,EAAAA,cAAAA,UAAZ,YAEA,OACI,2BAAKC,UAAW2B,IAAIG,OAChB,2BAAK9B,UAAW2B,IAAAA,QAAAA,SACXmtC,SAAWA,QAAAA,MAAXA,GACG,2BAAK9uC,UAAW2B,IAAAA,QAAAA,MAAhB,QAA4CzN,MAAOu6C,YAAYK,UAC1DA,SAAWA,QAHxB,MAMKE,WACG,2BACIhvC,UAAW2B,IAAAA,QAAAA,MADf,UAEIzN,MAAK,+BAAOu6C,YAAP,gBAA+B3N,KAAMgO,QAAU,GAAH,OAAMA,QAAN,gBAAyB3sC,KAEzE6sC,WAAaA,UAX1B,MAcKD,UAAYA,SAAAA,MAAZA,GACG,2BAAK/uC,UAAW2B,IAAAA,QAAAA,MAAhB,SAA6CzN,MAAOu6C,YAAYM,WAC3DA,UAAYA,SAjB7B,OAqBI,2BAAK/uC,UAAW2B,IAAAA,QAAhB,cAA2CzN,MAAO,CAAE+6C,iBAKhE,iC,q4BCXMC,eAAiD,SAAjDA,eAAkD,MAKlD,IAJFjM,mBAIE,KAJFA,mBACAI,cAGE,KAHFA,cACAjE,QAEE,KAFFA,QACA1S,iBACE,KADFA,iBAEM9sB,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,cAAAA,UAAZ,0BACMovC,UAhC+B,SAA5BC,0BAA6B,mBAAD,iCAQrC,IAAMC,iBACF,KAAOC,gCAAkCrM,mBAAH,YAAoCA,mBAD9E,kBAGMsM,OACFF,iBAAmBpM,mBAAnBoM,UACCC,gCAAkCrM,mBAAH,6BAFpC,GAGMuM,aAAeH,iBAAmBpM,mBAAxC,eAGA,MAAO,CACHsM,OACAC,aACAC,UALc,IAAMF,OAAxB,cAiBkBH,CAA0BnM,oBAA5C,GACMyM,OACFzM,mBAAA,yCACSA,mBAAAA,6BADT,gBACkEA,mBAAAA,SADlE,eACqG/iC,EAAAA,cAAAA,WAAU,KAAD,OAGpG,CAAE/D,KAAM,OAEZ69B,EAAAA,UAAAA,IAAkBiJ,mBAAD,SAP3B,MAQA,OACI,2BAAKjjC,UAAW2B,IAAAA,WAAeA,IAAfA,MAA0BA,IAAAA,SAA1BA,mBACZ,2BAAK3B,UAAW2B,IAAAA,QAAAA,SACZ,2BAAK3B,UAAW2B,IAAAA,QAAhB,aAA0CzN,MAAO,CAAE6J,MAAO,GAAF,OAAKoxC,UAAL,cACpD,2BAAKnvC,UAAW2B,IAAAA,QAAAA,aACZ,kCAAYlE,WAAW,UACnB,+BACIxJ,GADJ,oCAEIgO,OAAQ,CAAE0tC,cAAc3X,EAAAA,YAAAA,IAAuBoH,QAASx/B,KAAV,aAI1D,uCACIqvC,YAAaT,mBAAmBoB,KAChCd,QAAS,CACLJ,MAAOF,mBAAmBqB,MAC1B9xC,MAFK,IAGLxB,KAAM,2BAAKyD,UAAW2B,IAAAA,QAAAA,aAAhB,YAIlB,2BAAK3B,UAAW2B,IAAAA,QAAhB,UAAuCzN,MAAO,CAAE6J,MAAO,GAAF,OAAKoxC,UAAL,iBACjD,2BAAKnvC,UAAW2B,IAAAA,QAAAA,aACZ,+BAAkB1N,GAAG,0CAEzB,uCACIg7C,YAAaT,mBAAmBoB,KAChCd,QAAS,CACLJ,MAAOF,mBAAmBqB,MAC1BlB,OAAQH,mBAAmBsB,KAC3B/xC,MAHK,IAILxB,KACI,2BAAKyD,UAAW2B,IAAAA,QAAAA,cACXq4B,EAAAA,UAAAA,IAAkBiJ,mBAAD,YADtB,WAOfI,eACG,2BAAKrjC,UAAW2B,IAAAA,QAAhB,aAA0CzN,MAAO,CAAE6J,MAAO,GAAF,OAAKoxC,UAAL,oBACpD,2BAAKnvC,UAAW2B,IAAAA,QAAAA,aACZ,kCAAYpE,WAAZ,EAA6BE,WAAW,UACpC,+BACIxJ,GADJ,oCAEIgO,OAAQ,CACJ0tC,cAAc3X,EAAAA,YAAAA,IAAuBqL,cAAezjC,KAAhB,aAKpD,uCACIqvC,YAAaT,mBAAmBoB,KAChCd,QAAS,CACLJ,MAAOF,mBAAmBsB,KAC1B/xC,MAFK,IAGLxB,KACI,2BAAKyD,UAAW2B,IAAAA,QAAAA,cACXq4B,EAAAA,UAAAA,IAAkBiJ,mBAAD,eADtB,aAStBvW,kBAAoBuW,mBAAAA,6BAArB,GACG,2BAAK/uC,MAAO,CAAE67C,WAAY,aACtB,qCACI,+BAAkB97C,GAAlB,4CAAiEgO,OAAQ,CAAEqH,KAAM81B,aAI5F1S,kBAAoBuW,mBAAAA,6BAApBvW,GACG,2BAAKx4B,MAAO,CAAE67C,WAAY,aACtB,qCACI,+BACI97C,GADJ,qDAEIgO,OAAQ,CAAEqH,KAAM81B,eAStC4Q,gBAAkD,SAAlDA,gBAAmD,OAA6C,IAA3C/M,mBAA2C,MAA3CA,mBAAoBvW,iBAAuB,MAAvBA,iBACrE9sB,MAAOC,EAAAA,QAAAA,KACP8B,KAAM5B,EAAAA,cAAAA,UAAZ,0BACMkwC,IACFhN,mBAAAA,6BAAAA,EAAAA,GAAAA,OACSA,mBAAAA,6BADTA,EAAAA,OAAAA,OAEUA,mBAAAA,oBAFVA,EAAAA,UAIMjJ,EAAAA,UAAAA,IAAkBiJ,mBAAD,iBAL3B,MAMA,OACI,2BAAKjjC,UAAW2B,IAAIG,OAChB,2BAAK5N,MAAO,CAAEg8C,SAAU,aACpB,2BAAKlwC,UAAW2B,IAAAA,QAAAA,aACZ,qCACI,+BAAkB1N,GAAG,uDAIjC,uCACIg7C,YAAaT,mBAAmBoB,KAChCd,QAAS,CACLJ,MAAOhiB,iBAAmB8hB,mBAAmBsB,KAAOtB,mBAAmBqB,MACvE9xC,MAFK,IAGLxB,KAAM,2BAAKyD,UAAW2B,IAAAA,QAAAA,aAAhB,SAGZ+qB,kBAAoBuW,mBAAAA,6BAArB,GACG,2BAAK/uC,MAAO,CAAE67C,WAAY,aACtB,qCACI,+BAAkB97C,GAAG,+DAQvCk8C,uBAAyD,SAAzDA,uBAA0DjvC,OAC5D,OAAOA,MAAAA,YAAoB,mCAApBA,OAAoD,oCAA3D,QAGJ,2E,i7CCzLakvC,0BAA4B,SAA5BA,0BAA6BC,SACtC,OAAOA,QAAA,QAAe,6BAAkBx1C,MAAAA,MAAlB,QAAtB,IAoBEy1C,iBAAmB,SAAnBA,iBAAoBz1C,OACtB,OAAOA,MAAAA,QAAgBC,+DAAAA,EAAAA,4BAGrBy1C,mBAAqB,SAArBA,mBAAsB11C,OACxB,OAAOA,MAAAA,QAAgBC,+DAAAA,EAAAA,4BAGdooC,sBAAwB,SAAxBA,sBAAyB,QAAD,oCAKjC,IAAMsN,mBAAqBH,QAAAA,OAA3B,oBAEMI,YAAcL,0BAApB,SACMM,6BAA+BN,0BAA0BC,QAAAA,OAA/D,mBACMM,iBAAmBP,0BAAzB,oBACMQ,oBAAsBR,0BA7BA,SAA1BS,wBAA2BR,SAAD,OAC5BA,QAAA,QAAe,uBAAWx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,kBA4BY+1C,CAAtD,qBACMC,SAAWV,0BApCS,SAAxBW,sBAAyBV,SAAD,OAC1BA,QAAA,QAAe,uBAAWx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,iBAmCCi2C,CAA3C,qBACMC,SAAWZ,0BAlCS,SAAxBa,sBAAyBZ,SAAD,OAC1BA,QAAA,QAAe,uBAAWx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,cAiCCm2C,CAA3C,qBACMC,YAAcd,0BA1BQ,SAA1Be,wBAA2Bd,SAAD,OAC5BA,QAAA,QACI,uBAAWx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,eAAkCD,MAAAA,QAAgBC,+DAAAA,EAAAA,kBAwBnCq2C,CAA9C,qBACMC,eAAiBhB,0BA9BD,SAApBiB,kBAAqBhB,SAAD,OACtBA,QAAA,QAAe,uBAAWx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,kBA6BOu2C,CAAjD,qBAEMC,gBAAiBhhB,IAAAA,aAAyB6I,yBAA2BjO,gDAAAA,EAAAA,IAM3E,MAAO,CACHulB,YACAC,6BACAC,iBACAC,oBACAE,SACAS,eANG,SAOHL,YACAE,eACAI,cAdmBlhB,IAAAA,aAAyB6I,yBAA2BjO,gDAAAA,EAAAA,UAErC0lB,oBAAsBI,SAA5D,YAaIS,aAZiBH,eAAiBV,oBAAH,6BAAwDE,SAA3F,YAaIY,eAAgBrB,W,6pEC7DjB,IAAM9lB,SAAW,SAAXA,SAAYlP,SAAD,MAAuB,CAC3Cs2B,aAAc,kCAgElB,SAASC,aAAav2B,QAAtB,KACI,IAAQ1f,YAAgB0f,QAAxB,YAEA,mDAEI1f,aAAa,iDAAa,CACtBC,IAAKD,YADiB,IAEtBG,IAAKH,YAAYG,MAFR,oBArEY81C,CAAav2B,QAA5B,MACdw2B,eAAgB,4CACXx2B,QAAAA,aAAsBy2B,EAAAA,2CAAAA,IAAez2B,QAAAA,YAAD,IADzB,cAEhB02B,qBAAsB,uCAAM7lB,EAAAA,2CAAAA,IAAa7Q,QAAb6Q,aAAN,wBACtB8lB,kBAAmB,oCAAM9lB,EAAAA,2CAAAA,IAAa7Q,QAAb6Q,aAAN,qBACnB+lB,MAAO,6BAAoBC,oBAApB,wDAAiDC,oBAAjD,+DACHC,eAAe/2B,QAASwU,SAAUqiB,oBAD/B,sBAEPG,iBAAkB,2CAOtB,SAASC,yBAAyBC,GAAlC,IACI,IAAMC,mBAAoB1nB,EAAAA,0CAAAA,GAAYjvB,4CAAAA,CAAM02C,GAAAA,YAAN12C,KAAZivB,UAA1B,QACM2nB,YAAcC,GAAAA,YAApB,IACA,OAAO72C,4CAAAA,CAAAA,mBAAAA,OAAAA,YAAP,OAVyCy2C,CAAyBj3B,QAAhD,WAClBs3B,mBAAoB,qCAAMzmB,EAAAA,2CAAAA,IAAa7Q,QAAb6Q,aAAAA,oBAAN,GACpB0mB,WAAY,iCAAgB/2C,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,SAAAA,KAAhB,QACZg3C,aAAc,mCAAgBh3C,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,QAAAA,KAAhB,QACdi3C,0BAA2B,gDAAgBj3C,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,cAAAA,KAAhB,UAS/B,SAASu2C,eAAeG,GAAxB,IAA4G,IAA1DL,oBAA0D,wDAA7BC,oBAA6B,wDACxG,GAAII,GAAAA,OAAYG,GAAhB,KACI,SAEJ,IAAIP,IAAAA,sBAAkCI,GAAAA,OAAYj3C,sDAAAA,GAAAA,YAA0Bo3C,GAAAA,OAAYp3C,sDAAAA,GAAAA,YACpF,SAEJ,GAAIi3C,GAAAA,OAAYj3C,sDAAAA,GAAAA,MAAoBo3C,GAAAA,OAAYp3C,sDAAAA,GAAAA,KAC5C,SAEJ,IAAIy3C,EAAAA,sDAAAA,IAAAA,MAA8CA,EAAAA,sDAAAA,IAAlD,IAA8F,CAC1F,IAAMC,KAAOC,oBAAoB,cAAD,yBACnBpP,yBAA0B0O,GAAAA,2BAA+B,IADtE,qBAIMW,KAAOD,oBAAoB,cAAD,yBACnBpP,yBAA0B6O,GAAAA,2BAA+B,IADtE,qBAIA,OAAOM,OAAP,KAEJ,IAAMG,GAAKF,oBAAoBV,GAA/B,qBACMa,GAAKH,oBAAoBP,GAA/B,qBACA,OAAOS,KAAP,GAGJ,SAASF,oBAAoB53B,SAA+C,IAA7B62B,oBAA6B,wDAChEv2C,YAA6B0f,QAArC,YAA4BpY,MAASoY,QAArC,gDACMg4B,cAAN,GAaA,OAZA7+C,OAAAA,KAAAA,MAAAA,OAAAA,QAEY,8BAASyO,KAAAA,QAFrBzO,SAGa,cACL6+C,cAAAA,KAAqBpwC,KAArBowC,QAEJnB,qBAAJ,cACImB,cAAAA,YAA4B,CACxBz3C,IAAKD,YAAAA,KAAkB23C,EAAAA,iDAAAA,IAAoB33C,YAAtCA,UADmB,EAExBG,IAAKH,YAAAA,KAAkB23C,EAAAA,iDAAAA,IAAoB33C,YAAtCA,UAAyDwG,IAG/D/M,KAAAA,UAAAA,cAAAA,GAAP,kB,4mDC3CG,IAAMskC,UAAY,SAAZA,UAAanL,UAAD,MAA0B,CAC/CglB,WAAY,+BAkDhB,SAAS,YAAT,aACI,OAAOhlB,SAAA,MAAc,mBAAOtT,EAAAA,KAAP,MAnDOs4B,CAAWhlB,SAA3B,KACZilB,WAAY,6BAiFhB,SAAS,YAAT,UACI,OAAOjlB,SAAA,QAAgB,yBAAaklB,EAAAA,sDAAAA,IAAb,YAlFLD,CAAN,WACZE,SAAU,2BAoDd,SAASC,kBAAkBplB,UACvB,OAAOA,SAAA,QAAgB,yBAAaqlB,EAAAA,sDAAAA,IAAb,YArDPD,CAAN,WACVE,gBAAiB,kCA+DrB,SAAS,iBAAT,UACI,OAAOtlB,SAAA,QAAgB,yBAAaulB,EAAAA,sDAAAA,GAAb,YAhEAD,CAAN,WACjBE,QAAS,0BAkEb,SAAS,SAAT,UACI,OAAOxlB,SAAA,QAAgB,yBAAaylB,EAAAA,sDAAAA,IAAb,YAnERD,CAAN,WACTE,cAAe,gCAqEnB,SAAS,eAAT,UACI,OAAO1lB,SAAA,QAAgB,yBAAaylB,EAAAA,sDAAAA,IAAAA,WAAmB94B,EAAAA,sDAAAA,IAAhC,YAtEF+4B,CAAN,WACfC,gBAAiB,kCAwErB,SAAS,iBAAT,UACI,OAAO3lB,SAAA,QAAgB,yBAAarT,EAAAA,sDAAAA,IAAb,YAzEAg5B,CAAN,WACjBC,eAAgB,iCAmDpB,SAAS,gBAAT,UACI,OAAO5lB,SAAA,QAAgB,yBAAa6lB,EAAAA,sDAAAA,IAAb,YApDDD,CAAN,WAChBE,qCAAsC,2DAAgBA,sCAAqC9lB,SAArD,OACtC+lB,mCAAoC,yDA2LxC,SAAS,oCAAT,+BACI,OAAO/lB,SAAA,QACH,yBACIwkB,EAAAA,sDAAAA,IAAAA,WACCtoB,EAAAA,2CAAAA,IAAmBpP,QAAnBoP,cACG5uB,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,SAAAA,qBAHR,UA7LgDy4C,CAAmC/lB,SAAnD,OACpCgmB,iCAAkC,mDAoNtC,SAASC,gCAAgCjmB,UACrC,OAAOA,SAAA,QACH,yBACI9D,KAAAA,EAAAA,2CAAAA,IAAmBpP,QAAnBoP,eADJ,KAEIsoB,EAAAA,sDAAAA,IAAAA,YAxNgCyB,CAAN,WAClCC,+BAAgC,yDA8PpC,SAAS,gCAAT,mBACI,OAAOlmB,SAAA,QAAgB,yBAAammB,6BAA6Br5B,QAA1C,aA/PiCo5B,CAA+BlmB,SAAvD,WAChComB,2CAA4C,iEA0MhD,SAASC,0CAA0C,SAAnD,sBAII,IAAMC,iBAAmBR,sCAAqC9lB,SAArC8lB,sBAAAA,KAAzB,gBACA,OAAOQ,iBAAAA,OAAAA,EAA8BA,iBAA9BA,QAAP,EA9MID,CAA0CrmB,SADF,OAE5CumB,2BAA4B,6CA+PhC,SAAS,4BAAT,UACI,IAAMz5B,QAA+BkT,SAAA,MACjC,mBAAOqlB,EAAAA,sDAAAA,IAAAA,IAAsB34B,EAAAA,QAAYngB,+DAAAA,EAAAA,8BAE7C,OAAOugB,cAAP,EAnQkCy5B,CAAN,WAC5BC,mBAAoB,qCAuNxB,SAAS,oBAAT,UACI,IAAMC,cAAgBzmB,SAAA,QACV,4BAAOtT,EAAAA,YAAAA,OADG,qBAAtB,QAIA,iBACI,OAAO+5B,cAAAA,YAAP,IAEJ,OA/N0BD,CAAN,WACpBE,oCAAqC,sDAoQzC,SAAS,qCAAT,UACI,OAAI1mB,SAAAA,OACA,OAEJ,OAAOzD,EAAAA,0CAAAA,GAAYyD,SAASA,SAAAA,OAATA,GAAAA,YAAZzD,KAAP,QAxQ2CmqB,CAAN,WACrCC,uCAAwC,yDAgO5C,SAAS,wCAAT,UACI,IAAMF,cAAgBzmB,SAAA,QACV,wBAAOtT,IAAAA,EAAAA,YAAAA,OAAoCC,EAAAA,sDAAAA,IAA3C,MADU,qBAAtB,QAIA,iBACI,OAAO85B,cAAAA,YAAP,IAEJ,OAxO8CE,CAAN,WACxCnD,qBAAsB,uCA0O1B,SAAS,sBAAT,UACI,OAAOxjB,SAAA,QAAgB,wBACnB,OAAOxzB,OAAQwvB,EAAAA,uCAAAA,GAAAA,SAAf,yBADJ,GA3O4BwnB,CAAN,WACtBoD,oBAAqB,8CA+OzB,SAAS,qBAAT,mBACI,OArMJ,SAASC,oBAAoB7mB,UACzB,OAAOA,SAAA,QAAgB,yBAAa8mB,EAAAA,sDAAAA,IAAb,YAoMhBD,CAAA,kBACK,oBAAQ3qB,EAAAA,2CAAAA,IAAmBxP,EAAnBwP,eAAAA,UAAgDxP,EAAAA,WAAhDwP,YADb,KAEE,mBAAOyB,EAAAA,2CAAAA,IAAajR,EAAbiR,aAAP,0BAFF,QAGK,uHAHZ,GAhP8CipB,CAAoB5mB,SAA7C,WACrB+mB,yBAA0B,kDAkE9B,SAAS,0BAAT,kBACI,OAAO/mB,SAAA,QAAgB,YACnB,GAAItT,EAAAA,KAASI,QAATJ,MAAwBwP,EAAAA,2CAAAA,IAAmBpP,QAA/C,aACI,SAEJ,mBAAqBJ,EAArB,YAAQrf,IAAR,mBAAaE,IAAb,mBACA,IAAKF,MAAL,IACI,SAEJ,IAAM25C,kCACFC,EAAAA,2CAAAA,IAA0B55C,IAAKyf,QAA/Bm6B,eAAuDA,EAAAA,2CAAAA,IAA0B15C,IAAKuf,QAD1F,aAGMo6B,2BACF55C,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,cAAAA,IAAAA,QACAA,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,eAAAA,IAFJ,OAIA,OAAO05C,kCAAP,8BAlF4CD,CAAyB/mB,SAA/C,UAC1BmnB,mBAAoB,yCAqFxB,SAAS,oBAAT,eACI,OAAOnnB,SAAA,MAAc,kBACjB,OAAO1yB,4CAAAA,CAAAA,MAAAA,UAAsBwf,QAAAA,YAAtBxf,IAA+Cwf,QAAAA,YAA/Cxf,IAAAA,MAAP,SAvFgC65C,CAAmBnnB,SAAnC,OACpBonB,2BAA4B,iDA0FhC,SAAS,4BAAT,eACI,OAAOpnB,SAAA,MAAc,kBACjB,OAAO1yB,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,QAAAA,KAAP,UA5FwC85C,CAA2BpnB,SAA3C,OAC5BqnB,2BAA4B,oDAAsBC,uBAAuBtnB,SAA7C,UAC5BunB,2BAA4B,oDAAsBC,yBAAyBxnB,SAA/C,UAC5BynB,0BAA2B,mDAqG/B,SAASC,mBAAmB1nB,SAA5B,SACI,IAAM2nB,mBAAqBL,uBAAuBtnB,SAAlD,SACA,GAAI2nB,mBAAAA,OAAJ,EACI,OAAOA,mBAAP,MAEJ,OA1GiDD,CAAmB1nB,SAAzC,UAC3B4nB,sBAAuB,+CA2G3B,SAAS,uBAAT,kBACI,IAAMC,mBAAqBL,yBAAyBxnB,SAApD,SACA,GAAI6nB,mBAAAA,OAAJ,EACI,OAAOA,mBAAP,GAEJ,OAhH6CD,CAAsB5nB,SAA5C,UACvB8nB,gBAAiB,6CAiHrB,SAAS,iBAAT,sBACI,IAAIC,mBAAJ,YAEA,OAAO/nB,SAAA,QAAgB,yBACnB,IAAI6lB,EAAAA,sDAAAA,IAAJ,SAAmC,CAC/BmC,OAAAA,KAAAA,SAEA,IAAMC,gBAAiBjsB,EAAAA,uCAAAA,GAAAA,SAAvB,uBAQA,OANIisB,gBAAJ,mBACIF,mBAAAA,EAEAA,oBAAAA,eAGJ,OAGJ,IAAIp7B,EAAAA,sDAAAA,IAAAA,WAA0Bu4B,EAAAA,sDAAAA,IAA9B,SAA0D,CACtD,IAAM+C,iBAAiBjsB,EAAAA,uCAAAA,GAAAA,SAAvB,uBAEA,GAAIisB,gBAAJ,mBAAyC,CACrC,IAAMC,oBAAqB3rB,EAAAA,0CAAAA,IAAYA,EAAAA,0CAAAA,GAAYzP,QAAAA,YAAZyP,KAAZA,mBAAAA,QAA3B,oBAGM4rB,eAA0B,cAAH,8BAEzB/6C,YAAa,CACTC,IADS,mBAETE,IAAKuf,QAAAA,YAAoBvf,OAOjC,OAHAw6C,mBAAAA,EAEAC,OAAAA,KAAAA,gBACA,OACG,OAAIC,kBAAJ,oBACHF,mBAAAA,EACA,SAEAA,oBAAAA,gBACA,QAKR,OADAC,OAAAA,KAKR,SAASI,eAAet7B,QAAxB,aACI,IAAMo7B,oBAAqB3rB,EAAAA,0CAAAA,IAAYA,EAAAA,0CAAAA,GAAYzP,QAAAA,YAAZyP,KAAZA,mBAAAA,QAA3B,aACA,OAAOP,EAAAA,uCAAAA,GAAAA,SAAAA,aAAP,oBAPgBosB,CAAet7B,QAA3Bk7B,qBACA,SA5CJ,IApH0CF,CAAgB9nB,SAAzC,cACjBqoB,KAAM,uBAAMroB,SAAAA,KAAN,iBACNsoB,qBAAsB,uCAkQ1B,SAAS,sBAAT,UACI,OAAOtoB,SAAA,QACK,mBAAOrT,EAAAA,sDAAAA,IAAP,MADL,+BAAP,GAnQ4B27B,CAAN,aAGnB,SAASC,eAAevE,GAAxB,IACH,OAAI9nB,KAAAA,EAAAA,2CAAAA,IAAmB8nB,GAAnB9nB,eAAJ,KAAoDA,EAAAA,2CAAAA,IAAmBioB,GAAnBjoB,cAC5CsoB,EAAAA,sDAAAA,IAAAA,KAA8CR,GAAlD,2BAGO9nB,EAAAA,2CAAAA,IAAmB8nB,GAAnB9nB,cAFH,EAEJ,EAEA5uB,4CAAAA,CAAM02C,GAAAA,YAAN12C,KAAAA,OAAiC62C,GAAAA,YAAjC72C,IAAJ,QACWqf,EAAAA,sDAAAA,IAAAA,KAAAA,EAAP,GAGAgR,EAAAA,2CAAAA,IAAawmB,GAAbxmB,aAAAA,cAA2CqmB,GAA/C,aACI,EAGG12C,4CAAAA,CAAM02C,GAAAA,YAAN12C,KAAAA,SAAmC62C,GAAAA,YAAnC72C,IAAAA,QAAAA,EAAP,EAuEJ,SAASg6C,uBAAuBtnB,SAAhC,SACI,OAAOA,SAAA,QAAgB,mBAAO1yB,4CAAAA,CAAMof,EAAAA,YAANpf,KAAAA,SAAkCwf,QAAAA,YAAlCxf,IAAP,UAG3B,SAASk6C,yBAAyBxnB,SAAlC,SACI,OAAOA,SAAA,QAAgB,mBAAO1yB,4CAAAA,CAAMof,EAAAA,YAANpf,KAAAA,QAAiCwf,QAAAA,YAAjCxf,IAAP,UAkF3B,SAAS,sCAAT,+BACI,OAAO0yB,SAAA,QACH,yBACI9D,EAAAA,2CAAAA,IAAmBpP,QAAnBoP,cACA5uB,4CAAAA,CAAMwf,QAAAA,YAANxf,KAAAA,cAAAA,qBADA4uB,SADJ,KAGIsoB,EAAAA,sDAAAA,IAAAA,YAyEL,IAAM2B,6BAA+B,SAA/BA,6BAAgCr5B,QAAD,UACxC,OAAOg6B,EAAAA,sDAAAA,IAAAA,UAAiCh6B,QAAAA,WAAxC,W,s2CClTJ,IAAM07B,SAAW,I,0BAAI,GAAJ,CAAjB,MAEaC,sBAAwB,SAAxBA,sBAAyBr7C,aAClC,IAAMs7C,MAAQt7C,YAAAA,IAAd,cACMu7C,MAAQv7C,YAAAA,IAAd,cACIw7C,KAAJ,GACA,GAAIF,QAAJ,MACIE,KAAOJ,SAAAA,YAAPI,YAGA,IADA,IAAI1sC,GAAJ,MACOA,IAAP,OACI0sC,KAAO,GAAH,mDAAgBJ,SAAAA,YAApBI,MACA1sC,KAGR,IAAM2sC,MAAQv7C,mBAAAA,CAAMF,YAANE,KAAAA,SAAAA,GAAd,SACMw7C,MAAQx7C,mBAAAA,CAAMF,YAANE,KAAAA,IAAAA,GAAd,SACA,OAAOs7C,KAAA,QACK,6BAAOh5C,EAAAA,QADZ,QAEK,mBAAOtC,mBAAAA,CAAMsC,EAANtC,MAAAA,QAAAA,MAAAA,QAAuCA,mBAAAA,CAAMsC,EAANtC,MAAAA,SAAAA,MAA9C,W,WAaQm7C,sBAAsB,CAC1Cp7C,IAAK,IAAIkrB,KAAKjrB,mBAAAA,GAAAA,SAAAA,EAAAA,SAD4B,UAE1CC,IAAK,IAAIgrB,KAAKjrB,mBAAAA,GAAAA,IAAAA,EAAAA,SAAT,Y,mEC9BIqwB,aAAe,SAAfA,aAAgBvwB,aAAD,MAAmC,CAC3Ds2C,MAAO,oCAgGJ,SAASqF,mBAAmBC,GAA5B,IACH,GAAI9sB,mBAAAA,KAA0BA,mBAA9B,IACI,OAAO5uB,mBAAAA,CAAM07C,GAAN17C,KAAAA,OAAqB27C,GAArB37C,IAAAA,QAAuCA,mBAAAA,CAAM07C,GAAN17C,KAAAA,OAAqB27C,GAArB37C,IAA9C,OAEJ,OAAOzG,KAAAA,UAAAA,MAAuBA,KAAAA,UAA9B,IApG0CkiD,CAAmB37C,YAAtD,eACP87C,cAAe,4CAsGnB,SAASC,oCAAoCC,aAA7C,cACI,GAAIltB,mBAAAA,eAAoCA,mBAAxC,cACI,OACIuhB,EAAAA,UAAAA,IAAkB2L,aAAD,IAAmBC,aAApC5L,OACA6L,EAAAA,UAAAA,IAAmBF,aAAD,IAAmBC,aAFzC,KAKJ,SA7GkDF,CAAoC/7C,YAAvE,eACfm8C,UAAW,wCA+Gf,SAASC,gCAAgCJ,aAAzC,cACI,GAAIltB,mBAAAA,eAAoCA,mBAAxC,cACI,OACI5uB,mBAAAA,CAAM87C,aAAN97C,KAAAA,QAAgC+7C,aAAhC/7C,IAAAA,QACAA,mBAAAA,CAAM87C,aAAN97C,KAAAA,SAAiC+7C,aAAjC/7C,IAFJ,OAKJ,SAtH8Ck8C,CAAgCp8C,YAAnE,eACXo2C,qBAAsB,uCAAMiG,iCAAN,cACtBhG,kBAAmB,oCAiFvB,SAASiG,4BAA4Bt8C,aACjC,OAAO8uB,mBAAA,aACDusB,sBAAA,qBAA0C,qBAASlsB,EAAAA,YAAAA,GAAY,IAAIhE,KAAKoxB,IAArBptB,OAAT,iBADhD,GAlFyBmtB,CAAAA,aAAN,QACnBtG,aAAc,kCAAgBlnB,mBAAAA,aAsFlC,SAAS0tB,iBAAiBx8C,YAA1B,KACI,IAAMy8C,YAAcJ,iCAApB,aACA,OAAOlG,eAAel2C,IAAtB,aAxFgEu8C,CAAiBx8C,YAAnD8uB,KAAhB,aACdonB,eAAgB,4CACZl2C,YAAAA,IAAkBm2C,eAAen2C,YAAD,IAAhCA,aADY,aAEhB08C,eAAgB,qCAmHpB,SAASC,oBAAoB38C,YAA7B,MACI,IAAQC,IAAaD,YAArB,IAAaG,IAAQH,YAArB,IACA,GAAIC,KAAAA,KAAcC,mBAAAA,CAAAA,KAAAA,OAAAA,IAAlB,OACI,OAAOmvC,EAAAA,UAAAA,IAAoBpvC,KAA3B,KAEJ,OAAOgE,KAAA,cACH,CAAE3L,GAAI,eACN,CACI2H,IAAKA,KAAMovC,EAAAA,UAAAA,IAAH,KADZ,GAEIlvC,IAAKA,KAAMkvC,EAAAA,UAAAA,IAAH,KAA8B,KA5HTsN,CAAoB38C,YAAzC,OAChB48C,mBAAoB,yCAgIxB,SAASC,wBAAwB78C,YAAjC,MACI,IAAQC,IAAaD,YAArB,IAAaG,IAAQH,YAArB,IACA,GAAIC,KAAAA,KAAcC,mBAAAA,CAAAA,KAAAA,OAAAA,IAAlB,OACI,OAAOmvC,EAAAA,UAAAA,IAAoBpvC,KAA3B,KAEJ,OAAOgE,KAAA,cACH,CAAE3L,GAAI,oBACN,CACI2H,IAAKA,KAAMovC,EAAAA,UAAAA,IAAH,KADZ,GAEIlvC,IAAKA,KAAMkvC,EAAAA,UAAAA,IAAH,KAA8B,KAzILwN,CAAwB78C,YAA7C,OACpB88C,oBAAqB,0CAAgBC,+BAA+B/8C,YAA/C,OACrBg9C,UAAW,oCAAgBD,+BAA+B/8C,YAA/B+8C,OAC3BE,eAAgB,qCAGpB,SAASC,0BAA0Bl9C,YAAnC,MACI,IAAKA,YAAD,MAAqBA,YAAzB,IACI,SAGJ,OAAOE,mBAAAA,CAAAA,MAAAA,UAAsBF,YAAtBE,IAAuCF,YAAvCE,IAAAA,OAAP,MARgCg9C,CAA0Bl9C,YAA1C,SAWb,SAAS8uB,mBAAmB9uB,aAC/B,YACIA,IAAAA,YAAAA,UAAAA,IACAA,YAAAA,KACAE,mBAAAA,CAAMF,YAANE,KAAAA,eAAsCF,YAAtCE,IAHJ,OAiBG,SAASqpC,oBAAoBvpC,aAChC,YAAIA,YAGJ,OAAI8uB,mBAAJ,aACI,iBADJ,EAMG,SAASqnB,eAAel2C,IAAxB,aACH,KAAKkvB,EAAAA,YAAAA,GAAAA,KAAL,cACI,MAAM,IAAInG,MAAV,4BAEJ,MAAO,CACH/oB,IACAE,KAAKgvB,EAAAA,YAAAA,GAAAA,KAAAA,QAAyBstB,YAAzBttB,IAIN,SAAS0qB,0BAA0B7rC,KAAnC,aACH,IAAQ/N,IAAaD,YAArB,IAAaG,IAAQH,YAArB,IACA,SAAKC,MAAL,MAGOC,mBAAAA,CAAAA,MAAAA,UAAAA,IAAAA,IAAAA,OAAP,MAGJ,SAASm8C,iCAAiCr8C,aACtC,IAAK8uB,mBAAL,aACI,SAKJ,IAHA,IAAI7uB,IAAMC,mBAAAA,CAAMF,YAAhB,KACMG,IAAMD,mBAAAA,CAAMF,YAAlB,KACIm9C,OAAJ,EACOl9C,IAAAA,eAAAA,IAAP,SACQkvB,EAAAA,YAAAA,GAAYlvB,IAAZkvB,UAAJ,eACIguB,SAEJl9C,IAAMA,IAAAA,IAAAA,GAANA,SAEJ,cAqEJ,IAAM88C,+BAAiC,SAAjCA,+BAAkC/8C,YAAD,MACnC,YACIA,IAAAA,YAAAA,UAAAA,IACAA,YAAAA,KACAE,mBAAAA,CAAMF,YAANE,KAAAA,cAAAA,KAFAF,QAGAE,mBAAAA,CAAMF,YAANE,KAAAA,cAAAA,KAJJ,S,smBC7JJA,6CAAAA,OAAAA,6DAMO,IAAMivB,YAAc,SAAdA,YAAenhB,MAAD,MAAiB,CACxCihB,YAAa,8BAAeA,aAAf,OACbmuB,QAAS,0BAwBb,SAASC,oBAAoBrvC,MACzB,OAAOsvC,yBAAyBp9C,4CAAAA,CAAAA,MAAAA,SAAAA,GAAAA,SAAhC,UAzBqBm9C,CAAZ,OACTE,MAAO,wBA8CX,SAASC,sBAAsBxvC,MAC3B,OAAOyvC,yBAAyBv9C,4CAAAA,CAAAA,MAAAA,IAAAA,GAAAA,SAAhC,UA/CmBs9C,CAAZ,OACPE,gBAAiB,kCAAYD,yBAAZ,OACjBE,kBAAmB,oCAAYL,yBAAZ,OACnBM,0BAA2B,mDAoH/B,SAAS,2BAAT,SACI,GAAI19C,4CAAAA,CAAAA,KAAAA,OAAAA,IAAJ,OACI,SAEJ,GAAIA,4CAAAA,CAAAA,KAAAA,SAAAA,IAAJ,OACI,OAAO,iDAAa,CAAED,IAAKE,MAApB,uBAAP,EAEJ,OACK,IACA,iDAAa,CACVF,IADU,IAEVE,IAAKF,MAFR,uBAFL,GA3H8C29C,CAA0B5vC,KAA7C,UAC3B6vC,QAAS,8BACL,OAAIpB,YAAJ,EACWqB,wBAAwB9vC,KAA/B,aACOyuC,YAAJ,EA+Df,SAASsB,uBAAuB/vC,KAAhC,aACI,QAAIihB,aAAAA,MACA,MAAM,IAAIjG,MAAV,kDAEJ,IAAIg1B,OAAJ,KACIC,UAAJ,EACIC,iBAAJ,EACA,KAAOA,kBAAP,aAAwC,CACpC,IAAMC,WAAaj+C,4CAAAA,CAAAA,MAAAA,IAAAA,GACV+9C,YADU/9C,SAAnB,SAGI+uB,aAAJ,cACI+uB,OAAAA,WACAE,oBAGR,cA9EeH,CAAuB/vC,KAA9B,aAEJ,MAEJowC,SAAU,sCAA+BN,wBAAwB9vC,KAAvD,gBAGd,SAASqwC,UAAUrwC,MACf,OAAO9N,4CAAAA,CAAAA,MAAP,aAGG,SAAS,aAAT,MACH,OAAOm+C,IAAAA,UAAAA,OAAP,IAAgCA,UAAAA,MAWpC,SAASf,yBAAyBtvC,MAC9B,OAAQqwC,UAAR,OACI,OACI,OAAOn+C,4CAAAA,CAAAA,MAAAA,SAAAA,GAAAA,SAAP,SACJ,OACI,OAAOA,4CAAAA,CAAAA,MAAAA,SAAAA,GAAAA,SAAP,SACJ,QACI,aAgBZ,SAASu9C,yBAAyBzvC,MAC9B,OAAQqwC,UAAR,OACI,OACI,OAAOn+C,4CAAAA,CAAAA,MAAAA,IAAAA,GAAAA,SAAP,SACJ,OACI,OAAOA,4CAAAA,CAAAA,MAAAA,IAAAA,GAAAA,SAAP,SACJ,QACI,aAiCZ,SAAS49C,wBAAwB9vC,KAAjC,aACI,QAAIihB,aAAAA,MACA,MAAM,IAAIjG,MAAV,mDAKJ,IAHA,IAAIg1B,OAAJ,KACIC,UAAJ,EACIC,iBAAJ,EACOA,iBAAmBxlC,KAAAA,IAA1B,cAAiD,CAC7C,IAAMylC,WAAaj+C,4CAAAA,CAAAA,MAAAA,IAAAA,KACR+9C,UADQ/9C,SAAnB,SAGI+uB,aAAJ,cACI+uB,OAAAA,WACAE,oBAGR,gB,2gBCzG8B,yCAC7B/+C,+DAAAA,EAAAA,2BAD6B,yCAE7BA,+DAAAA,EAAAA,cAF6B,yCAG7BA,+DAAAA,EAAAA,WAH6B,yCAI7BA,+DAAAA,EAAAA,cAJ6B,yCAK7BA,+DAAAA,EAAAA,eAL6B,yCAM7BA,+DAAAA,EAAAA,eAN6B,yCAO7BA,+DAAAA,EAAAA,mBAP6B,GAf3B,IAyBM89B,cAAgB,SAAhBA,cAAiByX,SAC1B,OAAOA,QAAA,QACK,uBAAqCx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,kBAD1D,QAEK,2BAAkDm/C,IAAMp/C,MAAAA,MAAxD,IAFZ,IAKSmtC,wBAA0B,SAA1BA,wBAA2BqI,SACpC,OAAOA,QAAA,QACK,uBAAqCx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,iBAD1D,QAEK,2BAAkDm/C,IAAMp/C,MAAAA,MAAxD,IAFZ,IAKSitC,wBAA0B,SAA1BA,wBAA2BuI,SACpC,OAAOA,QAAA,QACK,uBAAqCx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,cAD1D,QAEK,2BAAkDm/C,IAAMp/C,MAAAA,MAAxD,IAFZ,IAKS8sC,2BAA6B,SAA7BA,2BAA8B0I,SACvC,OAAOA,QAAA,QACK,uBAAqCx1C,MAAAA,QAAgBC,+DAAAA,EAAAA,iBAD1D,QAEK,2BAAkDm/C,IAAMp/C,MAAAA,MAAxD,IAFZ,K,+8CCzCJ,SAASq/C,yBAAyBrwC,qBAC9B,IAAMswC,WAAYrvB,EAAAA,0CAAAA,GAAAA,qBAAlB,kBACA,OAAOA,EAAAA,0CAAAA,GACHjvB,4CAAAA,CAAAA,WAAAA,IAAqBooC,2CAAAA,EAAAA,8BAArBpoC,SADGivB,UAAP,kBAKJ,IAAMsvB,iCAAmC,SAAnCA,iCAAoCntC,QAAD,eAAmC,CACxEA,SAAS4R,EAAAA,2DAAAA,iBAD+D,SAExE5O,SAAS4O,EAAAA,2DAAAA,iBAAgB5O,WAGvBoqC,oCAAsC,SAAtCA,oCAAuClb,sBACzC,IAAMmb,SAAUxvB,EAAAA,0CAAAA,GAAAA,sBAAhB,kBACMua,SAAW6U,yBAAjB,sBACA,sCACOE,iCAAiCE,QADxC,eAEIC,uBAAuB,KA4DlBlb,4BAA8B,CACvCmb,mBAzDuB,SAArBA,mBAAsBrb,sBACxB,IAAMkG,UAAWva,EAAAA,0CAAAA,GAAYjvB,4CAAAA,CAAAA,sBAAZivB,UAAjB,UACMwvB,SAAUxvB,EAAAA,0CAAAA,GAAAA,UAAAA,SAA+BmZ,EAAAA,2CAAAA,EAAAA,8CAA/C,GACA,sCACOmW,iCAAiCE,QADxC,eAEIC,uBAAuB,KAqD3BE,mBAVuB,SAArBA,mBAAsBtb,sBACxB,OAAOkb,oCAAoCx+C,4CAAAA,CAAAA,sBAA3C,WAUA6+C,4BAPgC,SAA9BA,4BAA+Bvb,sBACjC,OAAOkb,oCAAoCx+C,4CAAAA,CAAAA,sBAA3C,WAOA8+C,2BAhB+B,SAA7BA,2BAA8Bxb,sBAChC,OAAOkb,oCAAoCx+C,4CAAAA,CAAAA,sBAA3C,WAgBA++C,uCA7B2C,SAAzCA,uCAA0C,mBAAD,sBAI3C,IAAMN,SAAUxvB,EAAAA,0CAAAA,GAAYjvB,4CAAAA,CAAAA,oBAAZivB,UAAhB,kBACMua,SAAW6U,yBAAyBr+C,4CAAAA,CAAAA,sBAA1C,UACA,sCACOu+C,iCAAiCE,QADxC,eAEIC,uBAAuB,KAsB3BM,+CArDmD,SAAjDA,+CAAkD1b,sBACpD,IAAMkG,UAAWva,EAAAA,0CAAAA,GAAYjvB,4CAAAA,CAAAA,sBAAZivB,UAAjB,UACMwvB,SAAUxvB,EAAAA,0CAAAA,GAAAA,UAAAA,SAA+BmZ,EAAAA,2CAAAA,EAAAA,yCAA/C,GACA,sCACOmW,iCAAiCE,QADxC,eAEIC,uBAAuB,KAiD3BO,qBA7CyB,SAAvBA,qBAAwB3b,sBAC1B,IAAM4b,mBAAoBjwB,EAAAA,0CAAAA,GAAYjvB,4CAAAA,CAAAA,sBAAZivB,UAA1B,UACMwvB,SAAUxvB,EAAAA,0CAAAA,GAAAA,mBAAAA,SACZmZ,EAAAA,2CAAAA,EAAAA,8CADJ,GAGMoB,UAAWva,EAAAA,0CAAAA,GAAAA,mBAAAA,SACbmZ,EAAAA,2CAAAA,EAAAA,yCADJ,GAGA,sCACOmW,iCAAiCE,QADxC,eAEIC,uBAAuB,O,uFCpD/B,oB,4EAAYpgC,iBAAAA,gBAAAA,YAAAA,c,CAAAA,kBAAAA,gBAAAA,M,uFCHZ,mB,2EAAY1hB,gBAAAA,eAAAA,mBAAAA,qBAAAA,eAAAA,gBAAAA,kBAAAA,eAAAA,kBAAAA,oBAAAA,eAAAA,iBAAAA,gBAAAA,eAAAA,cAAAA,4BAAAA,eAAAA,kBAAAA,6BAAAA,eAAAA,6BAAAA,6BAAAA,eAAAA,oBAAAA,iCAAAA,eAAAA,YAAAA,6BAAAA,eAAAA,YAAAA,aAAAA,eAAAA,aAAAA,WAAAA,eAAAA,WAAAA,Y,CAAAA,iBAAAA,eAAAA,M,uFCAZ,iB,yEAAY83B,cAAAA,aAAAA,gBAAAA,KAAAA,aAAAA,eAAAA,M,CAAAA,eAAAA,aAAAA,M,uFCAZ,a,qEAAYrF,UAAAA,SAAAA,IAAAA,MAAAA,SAAAA,UAAAA,Y,CAAAA,WAAAA,SAAAA,M,sFCAZ,iB,yEAAYvyB,cAAAA,aAAAA,MAAAA,UAAAA,aAAAA,yCAAAA,UAAAA,aAAAA,2BAAAA,UAAAA,aAAAA,wCAAAA,UAAAA,aAAAA,mBAAAA,UAAAA,aAAAA,sCAAAA,UAAAA,aAAAA,yCAAAA,UAAAA,aAAAA,gBAAAA,UAAAA,aAAAA,+BAAAA,UAAAA,aAAAA,iCAAAA,UAAAA,aAAAA,0BAAAA,UAAAA,aAAAA,iCAAAA,UAAAA,aAAAA,+CAAAA,UAAAA,aAAAA,wBAAAA,UAAAA,aAAAA,kBAAAA,UAAAA,aAAAA,aAAAA,UAAAA,aAAAA,WAAAA,U,CAAAA,eAAAA,aAAAA,M,0bCIC2S,uBAAyB,SAAzBA,uBAA0BlS,MACnC,OAAI6kB,EAAAA,oDAAAA,IAAJ,MACW7kB,KAAAA,cAAP,IAEA8kB,EAAAA,oDAAAA,IAAJ,MACW9kB,KAAP,WAGGA,KAAP,eAGSmS,6BAA+B,SAA/BA,6BAAgC,KAAD,iBAIxC,OAAOmS,gBAAA,WAA8BO,EAAAA,oDAAAA,IAA9B,MACDP,gBAAA,MAAqB,yBAAa7hB,4CAAAA,CAAMm/C,QAANn/C,aAAAA,OAAkCzC,KAAAA,cAA/C,YAD3B,I,miDCPJyC,6CAAAA,OAAAA,yDACAA,6CAAAA,OAAAA,+DACAA,6CAAAA,OAAAA,4DAEO,IAAMo/C,cAAgBp/C,4CAAAA,GAAAA,SAAAA,EAAAA,QAAAA,QAAAA,OAAtB,SAEM6X,sBAAwB,SAAxBA,sBAAyBwnC,YAClC,YAAIA,WAGJ,OAAIxxC,EAAAA,4CAAAA,iBAAJ,YACW,IAAIod,KAAX,iBADJ,GAUEq0B,oBAAsB,SAAtBA,oBAAuB,KAAD,gCAOxB,gBAAIC,KACA,WACWl7C,EAAAA,+CAAAA,WAAUN,KAAjB,4CAEGM,EAAAA,+CAAAA,WAAUN,KAAjB,2CAfkB,SAApBy7C,kBAAqBD,KAAD,iBACtB,OAAOv/C,4CAAAA,CAAAA,MAAAA,UAAAA,QAAAA,QAAAA,MAAP,MAiBKw/C,CAAkBD,KAAMnuC,QAA7B,gBACI,WACW/M,EAAAA,+CAAAA,WAAUN,KAAM,uCAAwC,CAC3DhE,KAAK2pB,EAAAA,+CAAAA,oBADsD,SAE3DzpB,KAAKypB,EAAAA,+CAAAA,oBAAmBtV,YAIzB/P,EAAAA,+CAAAA,WAAUN,KAAM,uCAAwC,CAC3DhE,KAAK2pB,EAAAA,+CAAAA,oBADsD,SAE3DzpB,KAAKypB,EAAAA,+CAAAA,oBAAmBtV,YAiDvB4U,oBAAsB,CAC/By2B,sBAtB0B,SAAxBA,sBAAyB,KAAD,wCAQ1B,IAAMtyB,MAAQmyB,oBAAoBv7C,KAAMw7C,KAAMnuC,QAASgD,SAAvD,GAEA,gBAAI+Y,MACA,MAGAuyB,UAAY1/C,4CAAAA,CAAAA,MAAAA,SAAAA,SAAhB,QACWqE,EAAAA,+CAAAA,WAAUN,KAAjB,eADJ,GASA47C,wBA5C4B,SAA1BA,wBAA2B,KAAD,sCAQ5B,IAAMxyB,MAAQmyB,oBAAoBv7C,KAAMw7C,KAAMnuC,QAASgD,SAAvD,GAEA,gBAAI+Y,MACA,MAGAyyB,QAAU5/C,4CAAAA,CAAAA,MAAAA,QAAAA,OAAd,QACWqE,EAAAA,+CAAAA,WAAUN,KAAjB,eADJ,IAiCSsP,mBAAqB,SAArBA,mBAAsBxM,EAAD,GAC9B,UAAKgF,EAAAA,+CAAAA,UAAD,KAAiBA,EAAAA,+CAAAA,UAAjB,KAAiCgC,EAAAA,4CAAAA,iBAAjC,KAAwDA,EAAAA,4CAAAA,iBAA5D,OAII7N,4CAAAA,CAAAA,GAAAA,SAAAA,EAAJ,QAOSoT,kBAAoB,SAApBA,kBAAqBmsC,MAC9B,QAAIv/C,4CAAAA,GAAAA,SAAJ,OAOS8iB,eAAiB,SAAjBA,eAAkBjB,gBAAD,YAC1B,IAAMg+B,aAAeh+B,gBAAA,QAAuB,yBAAaC,WAAAA,SAAoBq9B,QAAjC,QAE5C,OAAOU,aAAA,MAAkB,qBACrBxsC,oBAAmB2P,EAAAA,2DAAAA,iBAAgBnc,EAAjB,cAAkCmc,EAAAA,2DAAAA,iBAAgBob,EAApE/qB,cAAAA,GADqB,KAEvBwsC,aAAAA,OAFF,IAOSC,wBAA0B,SAA1BA,wBAA2B5gD,OACpC,IAAMoB,KAAOkY,KAAAA,MAAWtZ,MAAxB,GACA,MAAO,CACHA,MAAOA,MADJ,EACYoB,KACfA,OAIK69B,kBAAoB,SAApBA,kBAAqBqH,YAAD,MAAmF,IAA5Cua,OAA4C,uDAAnB,OAC7F,sBAAwBD,wBAAwBtnC,KAAAA,IAAhD,cAAQlY,KAAR,2BAAcpB,MAAd,4BACM8gD,SAAWj8C,KAAA,cACb,CAAE3L,GAAI,kBACN,CACI8G,QAGR,OAAIoB,KACA,gBAEJ,IAAM2/C,QAAUl8C,KAAA,cAAmB,CAAE3L,GAAI,iBAAmB,CAAEkI,OAC9D,OAAIpB,MAAJ,EACI,0BAAoB6E,KAAA,cAAmB,CACnC3L,GAAI,uBAAF,kBADN,iBAIJ,SAGSy8B,aAAe,SAAfA,aAAgB/mB,KAAD,YACxB,OAAO9N,6CAAAA,IAAAA,MAAAA,OAAuBkgD,YAA9B,sBAGS/Q,oBAAsB,SAAtBA,oBAAuBrhC,MAChC,OAAO9N,6CAAAA,IAAAA,MAAAA,OAAP,iBAKSg8C,mBAAqB,SAArBA,mBAAsBuD,KAAD,WAC9B,OAAIA,OAAJ,WACWv/C,4CAAAA,CAAAA,MAAAA,eAAAA,UAAP,QAIKmwC,kBAAoB,SAApBA,kBAAqBoP,KAAD,WAC7B,OAAIA,OAAJ,WACWv/C,4CAAAA,CAAAA,MAAAA,cAAAA,UAAP,QAKKy3C,oBAAsB,SAAtBA,oBAAuB3pC,MAChC,OAAO+mB,aAAa/mB,KAApB,eAGSoiC,eAAiB,SAAjBA,eAAkBiQ,WAC3B,GAAIA,UAAAA,OAAJ,EACI,OAAO,iDAAUA,UAAA,KAAc,sBAAgBngD,4CAAAA,CAAhB,UAA/B,UAKKwP,gBAAkB,SAAlBA,gBAAmB7Q,aAC5B,IAAMyhD,KAAOpgD,4CAAAA,GACP8N,KAAO9N,4CAAAA,CAAb,aAEM4O,GAAKwxC,KAAAA,KAAAA,KAAX,QACAtyC,KAAAA,IAAAA,GAAAA,SACA,IAAMuyC,QAAUD,KAAAA,KAAAA,KAAhB,UAIA,OAHAtyC,KAAAA,IAAAA,QAAAA,UAGO,CACHc,GACAyxC,QACAnhD,MALUkhD,KAAAA,KAAAA,KAAd,UASSzwB,oCAAsC,SAAtCA,oCAAuC7vB,aAChD,MAAO,CACHC,IAAKC,4CAAAA,CAAMF,YAANE,KADF,SAEHC,IAAKD,4CAAAA,CAAMF,YAANE,KAAAA,WAIAoxB,+BAAiC,SAAjCA,+BAAkC,WAAD,qCAK1C,gBAAIzyB,YACA,iBAEO6iB,IAAAA,WAAAA,WAAP,0B,gTCxOKrV,mCAAqC,SAArCA,mCAAsClT,OAC/C,WAAIA,MACOuS,2DAAAA,QAAAA,KAGX,IAAIvS,MACOuS,2DAAAA,QAAAA,GAGJA,2DAAAA,QAAAA,YAGEO,mCAAqC,SAArCA,mCAAsC9S,OAC/C,OAAIA,QAAUuS,2DAAAA,QAAAA,KAIVvS,QAAUuS,2DAAAA,QAAAA,iBAAd,I,uPCjBSu7B,0BAA4B,SAA5BA,0BAA6B9oC,cACtC,oBAIOA,eAAiBy2B,oDAAAA,EAAAA,eAA8BA,oDAAAA,EAAAA,eAA8BA,oDAAAA,EAAAA,gBAHzEA,oDAAAA,EAAAA,iB,+WCDF8N,kBAAoB,SAApBA,kBAAqB8d,IAC9B,MAAM,IAAIx3B,MAAV,6BAGS+O,YAAc,SAAdA,YAAejzB,OACxB,OAAO27C,4CAAAA,CAAM37C,MAAO,CAChB47C,cADgB,IAEhBC,mBAFgB,IAGhBC,cAHgB,EAIhBC,eAAe,KAIV7lB,iBAAmB,SAAnBA,iBAAoBv/B,YAAD,SAC5B,OAAOA,YAAA,QAAmB,qBAASqlD,MAAT,a,ioBCS9B,iCAnBwB,SAAlB7wC,kBACF,IAAM8wC,SAAUC,EAAAA,0CAAAA,MACR9gB,UAAakB,EAAAA,6EAAAA,KAArB,SAcA,OAZ4BvxB,EAAAA,mCAAAA,cAAY,YACpClH,EAAAA,qDAAAA,IAAkB,uBAAwB,CACtCC,IADsC,sBAEtCC,KAFsC,iBAGtCo4C,SAAU,YAGd/gB,SAASz1B,8DAAAA,EAAAA,mBACTjC,yCAAAA,EAAAA,uBACAu4C,QAAAA,KAAAA,OACD,CAACA,QAVJ,a,w0ECsBJ,iCAzByB,SAAnBx2C,iBAAmB,yBAIrB,2BAA4B62B,EAAAA,6EAAAA,KAApBlB,SAAR,+BAAkBjK,MAAlB,4BACM8qB,SAAUC,EAAAA,0CAAAA,MAChB,2BAAqC94C,EAAAA,mCAAAA,WAArC,MAAOg5C,aAAP,cAAqBC,aAArB,eAEA54C,EAAAA,mCAAAA,YAAU,WACN,eACIC,yCAAAA,EAAAA,cAAAA,OACAu4C,QAAAA,KAAAA,cAEL,CAACG,aAAcH,QAASK,UAL3B74C,QAcA,OAPiC,SAA3B84C,yBAA4B/6C,QAC9B,IAAMg7C,QAAUC,cAAhB,QACMC,oBACFJ,YAAc12C,+CAAAA,EAAAA,qBAAd02C,EAAsDlhB,SAASz1B,8DAAAA,EAAAA,mBADnE,YAEA+sB,QAAAA,IAAAA,CAAAA,qBAAAA,OAAAA,mBAAqC8pB,QAAA,KAAY,mBAAOphB,SAAP,SAAjD1I,MAA4E,kBAAM2pB,cAAN,S,iRCnBpF,iCALqB,SAAf/4C,eAEF,OADkBg5B,EAAAA,6EAAAA,KAAlB,MACA,Y,iRCGJ,iCALkB,SAAZj3B,YAEF,OADkBi3B,EAAAA,6EAAAA,KAAlB,MACA,S,iRCIJ,iCAN0B,SAApB4F,oBAGF,OAFkB5F,EAAAA,6EAAAA,KADmD,MAGrE,iB,qKCIJ,iCARyB,SAAnBj0B,iBAAoB3P,OACtB,MAAIA,QAAAA,OAAJ,WAAuBA,Q,iMCDrBikD,kBAAN,WAwBatpC,uBAAyB,SAAzBA,uBAA0BjC,OACnC,SAAKA,QAAD,IATQ,SAAVwrC,QAAWxrC,OACb,OAAOurC,kBAAAA,KAAAA,QAAP,IAAwCvrC,MAAAA,OAQ1BwrC,CAAAA,SAAV,IALiB,SAAnBC,iBAAoBzrC,OACtB,MAAOA,MAAAA,MAAAA,OAAAA,IAAP,MAAkCA,MAAAA,OAAAA,GAIQyrC,CAAAA,QAA1C,cAA+EzrC,QAvBlE,SAAX0rC,SAAYC,UAId,IAHA,IAAIC,SAAJ,EACIC,IAAJ,EAES9nD,EAAI4nD,SAAAA,OAAb,EAAkC5nD,GAAlC,MACI8nD,KAAO1qC,SAASwqC,SAAAA,OAAD,GAARxqC,IAAP0qC,WACMD,SAAN,IACIA,SAAAA,GAGR,IAAMlH,OAAS,GAAMmH,IAArB,GACA,OAAOnH,KAAAA,OAAAA,EAAP,OAeOgH,CAAAA,SAAoBvqC,SAASnB,MAAAA,OAAD,GAAnC,KAWiB8rC,OAArB,iB,iYCpCavyC,aAAe,SAAfA,aAAgB/Q,QAAD,sBACxB,OAAO2uC,WAAa,GAAH,2FAAjB,YAQShR,uBAAyB,SAAzBA,uBAA0B1uB,KAAD,QAClC,aAAI1D,OACA,KAPkB,SAApBg4C,kBAAqBt0C,MACvB,IAAMu0C,aAAev0C,KAAAA,OAAYA,KAAAA,OAAZA,GAArB,cACA,MAAOu0C,MAAAA,cAAAA,MAAwBA,cAA/B,MAAuDA,aAOnDD,CAAJ,MACI,oBAEJ,qBAGS9kB,gBAAkB,SAAlBA,gBAAmBr/B,eAC5B,IAAIsO,EAAAA,6DAAAA,GAAJ,eAA2C,CACvC,IAAQ3N,IAAQX,cAAhB,IAEA,QAAIW,IAAAA,OACA,OAEJ,OAAO4Y,SAAS5Y,IAAAA,OAAD,GAAR4Y,IAAAA,GAAAA,EAAAA,IAAP,MAMK+lB,sBAAwB,SAAxBA,sBAAyB,WAAD,oCAKjC,OAAO+kB,aAAe1S,uBAAtB,IAA8C3xC,cAAAA,gBAGrCu/B,4BAA8B,SAA9BA,4BAA+B,iBAAD,oCAKvC,OAAO+kB,mBAAqB3S,uBAA5B,IAAoD3xC,cAAAA,gBAG3C+/B,kBAAoB,SAApBA,kBAAqB,OAAD,gCAK7B,IAAMkS,UAAY1nC,OAAlB,QACMs1B,mBAAoBvxB,EAAAA,6DAAAA,GAAAA,eAAwCtO,cAAxCsO,QAA1B,GAIA,MAAO,CACHkvB,IAJYvK,iBAAmB4M,kBAAnC,UAKIpC,UAJkBxK,iBAAmBgf,UAAzC,qB,k6CCvDJ,IAQMsS,0BAA4B,SAA5BA,0BAA6B,QAAD,uCAM9B,QAAI/1C,UACA,eAGJ,IAAMg2C,WAAN,GACMC,sCAAN,EAnBwC,SAAtCC,oCAAuCrkD,aAAD,gBACxC,OAAIA,eAAiBy2B,oDAAAA,EAAAA,gBAGV10B,4CAAAA,CAAAA,gBAAAA,SAA+BA,4CAAAA,CAAM,IAAIirB,KAAK,KAAM,EAApDjrB,KAFP,GAEA,GAe0CsiD,CAAoCrkD,aAApCqkD,gBAK9C,OAHAF,WAAAA,KAAAA,cAAAA,cAAAA,GAAqB5N,QAArB4N,IAAAA,GAAAA,CAAiCljD,MAAOs1C,QAAAA,GAAAA,MAAmB6N,yCAC3DD,WAAAA,KAAgB,CAAEpjD,MAAOC,+DAAAA,EAAAA,mBAAqCC,MAAOmjD,wCAErE,YAGEE,yDAA2D,SAA3DA,yDAA4D,kBAAD,uCAM7D,IAAIxjD,4BAAJ,GAkBA,OAhBApG,OAAAA,KAAY6pD,kBAAZ7pD,SAAAA,QACY,uBAAmBqG,QAAUC,+DAAAA,EAAAA,kBADzCtG,SAEa,gBACLoG,4BAAAA,KAAiC,CAC7BC,MACAE,MAAOsjD,kBAAAA,QAAAA,YAInBzjD,4BAA8BojD,0BAA0B,4BAAD,4BAAvDpjD,YAUSkoC,sCAAwC,SAAxCA,sCAAyC,UAAD,2CAKhD,SACKwb,YAAcF,yDAAyD,UAEzE7tB,oDAAAA,EAAAA,gBAFwE,qBAA5E,WAMMguB,cAAgBH,yDAAyD,WAE3E7tB,oDAAAA,EAAAA,eAF0E,qBAA9E,WAMA,+BACKA,oDAAAA,EAAAA,gBADL,kCAEKA,oDAAAA,EAAAA,eAFL,sB,qaCzEEiuB,qBAAuB,SAAvBA,uBAAuB,MAAM,IAAIC,QAAOh8C,EAAAA,mDAAAA,QAAAA,QAAAA,KAAjB,MAEhB6zB,iBAAmB,SAAnBA,iBAAoB,KAAD,yCAKd,CACdriC,GAAIuqD,uBACJE,KACA9nD,SAAU8nD,KAHI,KAId1nD,SAAU0nD,KAJI,KAKdC,UALc,EAMdhoD,SANc,EAOdoC,KACAL,aACAkmD,kBAGS39B,sBAAwB,SAAxBA,sBAAyB,MAAD,IAAGtqB,QAAH,aAAYgoD,SAAZ,cAAsB3nD,SAAtB,qBAChCL,IAAAA,UAAD,IAAsBgoD,UADW,IACY3nD,UAEpCykB,sBAAwB,SAAxBA,sBAAyB1iB,KAAD,cACjC,OAAOu9B,iBAAiB,CAAEh+B,KAAF,GAAYqF,KAAM,IAAnB,kBAAoDwc,kDAAAA,EAAAA,cAGlEvN,yCAA2C,SAA3CA,yCAA4C,WAAD,aAKpD,WAAIiyC,WAAAA,OACO,CAACpjC,sBAAsB1iB,KAA9B,SAEJ,IAAI8lD,WAAAA,OACA,WAEGA,WAAA,QAAkB,qBAASC,IAAAA,kBAAwB3kC,kDAAAA,EAAAA,iB,uUCjC9D,iCANgD,SAA1C4kC,wCAA2C/qD,OAAD,OAC5C,6HACI,uDAFwC,Q,434GCShD41B,iBAAAA,OAAAA,MAEA,IAAMo1B,oBAAsB,SAAtBA,oBAAuBp5C,QACzB,aAAIA,OACA,sDAA2Bq5C,IAAAA,kBAAAA,IAE3B,sDAA2BA,IAAAA,kBAAAA,KAI7BC,aAA+C,SAA/CA,aAAgD,MAAyB,IAAvBt5C,OAAuB,KAAvBA,OAAQzI,SAAe,KAAfA,SAC5D,OACI,gCAAUyI,OAAgBu5C,SAAUH,oBAAAA,SAA+B,IADvE,WAMJ,qC,uhBCnBA,0BANyB,SAAnBI,iBAAoBprD,OAAD,OACrB,uCAAc4R,OAAO,MACjB,0BAFiB,Q,8qBCAnB82C,SAAU2C,E,2BAAAA,MAQhB,iCAN2B,SAArBC,mBAAsBtrD,OAAD,OACvB,mGAAQ0oD,SACJ,uDAFmB,Q,m5BCGrB13C,QAAU,gEAAgBwkB,EAAAA,qDAAAA,MAE1B+1B,UAAsC,SAAtCA,UAAuC,MAAuB,IAArBpiD,SAAqB,KAArBA,SAAU2H,KAAW,KAAXA,KAOrD,OANAZ,EAAAA,mCAAAA,YAAU,WAEN,OADAY,KAAAA,SACO,WACHE,QAAAA,YAGR,UAGJ,2C,g5BCyDA,sBAZmC,SAA7Bw6C,2BAA8BC,cAKhC,MAAO,CACHx7C,eAjEqC,SAAvCy7C,qCAAwC,gBAG1C,sBAIOz7C,eAAA,KAAmB,qBACtB,MAAO,CACHmV,eAAgB+kB,WADb,eAEH9kB,mBAAoB8kB,WAFjB,mBAGHtvB,iBAAkBsvB,WAHf,iBAIHviC,IAAKC,mBAAAA,CAAMsiC,WAANtiC,KAJF,SAKHL,iBAAkB2iC,WALf,iBAMHriC,IAAKqiC,WAAAA,IAAiBtiC,mBAAAA,CAAMsiC,WAANtiC,KAAjBsiC,cAAkDh8B,MAV3D,GAwDmBu9C,CAAqCD,aAAAA,MAA5D,gBAMIz7C,OA/C6B,SAA/B27C,6BAAgCC,WAClC,MAAO,CACHC,UAAUA,EAAAA,IAAAA,UAASD,UADhB,aAEHtlD,UAAWslD,UAFR,UAGHvlD,QAASulD,UAHN,QAIHxlD,IAAKwlD,UAJF,IAKHplD,YAAaqB,mBAAAA,CAAM+jD,UAAN/jD,aALV,SAMHpB,mBAAoBmlD,UANjB,mBAOHrlD,MAAOqlD,UAPJ,MAQH/6C,UAAW+6C,UAAU/6C,WAiCV86C,CAA6BF,aAA5C,OAMI/hC,gBAnCoC,SAAtCoiC,oCAAuCpiC,iBACzC,uBAIOA,gBAAA,KAAoB,eACvB,IAAQjkB,cAAkBL,KAA1B,cACMkwC,qBAA4D7vC,cAC5D,CACIa,UAAWb,cADf,UAEIW,IAAKX,cAFT,IAGIY,QAASZ,cAHb,QAIIe,YAAaqB,mBAAAA,CAAMpC,cAANoC,aAAAA,eALvB,EASA,MAAO,CACHvB,UAAWlB,KADR,UAEHgB,IAAKhB,KAFF,IAGHiB,QAASjB,KAHN,QAIHoB,YAAaqB,mBAAAA,CAAMzC,KAANyC,aAJV,SAKHtB,MAAOnB,KALJ,MAMHK,cAAe6vC,yBApBnB,GA4BoBwW,CAAoCL,aAAAA,MAA5D,Q,wsCCvCJ,oCAhB0D,SAApDM,wBAAqD,MAAoC,IAAlC5iD,SAAkC,KAAlCA,SAAUrE,OAAwB,KAAxBA,OAAQoB,UAAgB,KAAhBA,UAC3E,2BAA8B2J,EAAAA,MAAAA,WAA9B,MAAOe,SAAP,cAAiBo7C,UAAjB,cACQnkB,UAAakB,EAAAA,8BAAAA,KAArB,SAWA,OATA74B,EAAAA,MAAAA,YAAU,WACN,UACIivB,QAAAA,IAAY,CACR0I,SAASz1B,cAAAA,EAAAA,iBADD,SAERy1B,SAASz1B,cAAAA,EAAAA,gBAA2Bo5C,gBAFxCrsB,eAAAA,MAGQ,kBAAM6sB,WAAN,QAEb,CAACnkB,SAAU/iC,OAAQoB,UAPtBgK,WASOU,SAAWzH,SAAlB,O,uFC3BJ,qB,6EAAYkvB,kBAAAA,iBAAAA,gCAAAA,+BAAAA,iBAAAA,6BAAAA,kCAAAA,iBAAAA,gCAAAA,kCAAAA,iBAAAA,gCAAAA,iDAAAA,iBAAAA,MAAAA,Q,CAAAA,mBAAAA,iBAAAA,M,kYCYZ,YASA,Y,uJAuHO,SAASunB,gBAAgBv4B,SAC5B,OAAOA,QAAAA,OAAiB/f,YAAxB,O,SAjIQA,aAAAA,YAAAA,MAAAA,QAAAA,YAAAA,WAAAA,aAAAA,YAAAA,QAAAA,UAAAA,YAAAA,cAAAA,aAAAA,YAAAA,KAAAA,oBAAAA,YAAAA,KAAAA,O,CAAAA,cAAAA,YAAAA,K,SASAwyB,aAAAA,YAAAA,aAAAA,eAAAA,YAAAA,QAAAA,UAAAA,YAAAA,8BAAAA,8B,CAAAA,cAAAA,YAAAA,KA2HL,IAAMilB,uCAAyC,SAAzCA,uCAA0C,SAGnD,OAAO13B,QAAAA,OAAiB/f,YAAjB+f,OAAsCA,QAAAA,QAAkBvgB,+CAAAA,EAAAA,4BAOtDs5C,qBAAuB,SAAvBA,qBAAwB/4B,SACjC,OAAOA,QAAAA,OAAiB/f,YAAxB,YAGS+5C,qBAAuB,SAAvBA,qBAAwBh6B,SACjC,OAAO+4B,qBAAAA,UAAiC/4B,QAAAA,QAAkBuS,kDAAAA,EAAAA,OAOjDkmB,qBAAuB,SAAvBA,qBAAwBz4B,SACjC,OAAOA,QAAAA,OAAiB/f,YAAxB,YAGSm4C,kBAAoB,SAApBA,kBAAqBp4B,SAC9B,OAAOA,QAAAA,OAAiB/f,YAAxB,SAGS4f,cAAgB,SAAhBA,cAAiBG,SAC1B,OAAOA,QAAAA,OAAiB/f,YAAjB+f,OAAP,IAA4CA,QAAAA,aAGnC24B,OAAS,SAATA,OAAU34B,SACnB,OAAOA,QAAAA,OAAiB/f,YAAxB,O,uFCnLJ,oB,4EAAYowB,iBAAAA,gBAAAA,kBAAAA,iBAAAA,gBAAAA,eAAAA,iBAAAA,gBAAAA,oBAAAA,sB,CAAAA,kBAAAA,gBAAAA,M,uFCAZ,qB,6EAAY5wB,kBAAAA,iBAAAA,cAAAA,aAAAA,iBAAAA,WAAAA,aAAAA,iBAAAA,cAAAA,gBAAAA,iBAAAA,eAAAA,iBAAAA,iBAAAA,2BAAAA,4BAAAA,iBAAAA,eAAAA,iBAAAA,iBAAAA,mBAAAA,sB,CAAAA,mBAAAA,iBAAAA,M,uFCAZ,wB,gFAAY8yB,qBAAAA,oBAAAA,MAAAA,QAAAA,oBAAAA,OAAAA,SAAAA,oBAAAA,OAAAA,eAAAA,oBAAAA,oBAAAA,gBAAAA,oBAAAA,kBAAAA,eAAAA,oBAAAA,YAAAA,YAAAA,oBAAAA,UAAAA,a,CAAAA,sBAAAA,oBAAAA,M,8DCAZ,IAAIqyB,IAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASC,eAAeC,KACvB,IAAIlsD,GAAKmsD,sBAAsBD,KAC/B,OAAOE,oBAAoBpsD,IAE5B,SAASmsD,sBAAsBD,KAC9B,IAAIE,oBAAoBC,EAAEL,IAAKE,KAAM,CACpC,IAAI99C,EAAI,IAAIsiB,MAAM,uBAAyBw7B,IAAM,KAEjD,MADA99C,EAAEk+C,KAAO,mBACHl+C,EAEP,OAAO49C,IAAIE,KAEZD,eAAe3rD,KAAO,SAASisD,qBAC9B,OAAOhsD,OAAOD,KAAK0rD,MAEpBC,eAAeO,QAAUL,sBACzBM,OAAOC,QAAUT,eACjBA,eAAejsD,GAAK,O,k1BCjShB2sD,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,OACN,IAAO,aACP,QAAW,YACX,QAAW,koFAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,OACN,IAAO,aACP,QAAW,YACX,QAAW,u8LAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,OACN,IAAO,aACP,QAAW,YACX,QAAW,y0MAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,OACN,IAAO,aACP,QAAW,YACX,QAAW,umFAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,UACN,IAAO,gBACP,QAAW,YACX,QAAW,y4EAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,UACN,IAAO,gBACP,QAAW,YACX,QAAW,m/HAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,OACN,IAAO,aACP,QAAW,YACX,QAAW,8pHAEA,2GAAWA,QACxB,yC,k1BCPIA,OAAS,IAAI,yFAAJ,CAAiB,CAC5B,GAAM,OACN,IAAO,aACP,QAAW,YACX,QAAW,ypHAEA,2GAAWA,QACxB,yC,8DCTA,IAAIX,IAAM,CACT,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,gBAAiB,MACjB,gBAAiB,MACjB,aAAc,MACd,aAAc,OAIf,SAASC,eAAeC,KACvB,IAAIlsD,GAAKmsD,sBAAsBD,KAC/B,OAAOE,oBAAoBpsD,IAE5B,SAASmsD,sBAAsBD,KAC9B,IAAIE,oBAAoBC,EAAEL,IAAKE,KAAM,CACpC,IAAI99C,EAAI,IAAIsiB,MAAM,uBAAyBw7B,IAAM,KAEjD,MADA99C,EAAEk+C,KAAO,mBACHl+C,EAEP,OAAO49C,IAAIE,KAEZD,eAAe3rD,KAAO,SAASisD,qBAC9B,OAAOhsD,OAAOD,KAAK0rD,MAEpBC,eAAeO,QAAUL,sBACzBM,OAAOC,QAAUT,eACjBA,eAAejsD,GAAK,O,8DC7BpB,IAAIgsD,IAAM,CACT,sCAAuC,MACvC,0CAA2C,KAC3C,uCAAwC,MACxC,sCAAuC,MACvC,oCAAqC,MACrC,uCAAwC,MACxC,8CAA+C,IAC/C,0CAA2C,MAC3C,kDAAmD,MACnD,kDAAmD,MACnD,sCAAuC,MACvC,sCAAuC,MACvC,uCAAwC,MACxC,oCAAqC,MACrC,uCAAwC,MACxC,kDAAmD,MACnD,kCAAmC,MACnC,gCAAiC,MACjC,mDAAoD,MACpD,8DAA+D,MAC/D,yDAA0D,MAC1D,yCAA0C,MAC1C,gDAAiD,MACjD,oDAAqD,KACrD,wDAAyD,MACzD,mGAAoG,KACpG,uGAAwG,MACxG,sEAAuE,KACvE,2DAA4D,OAI7D,SAASC,eAAeC,KACvB,IAAIlsD,GAAKmsD,sBAAsBD,KAC/B,OAAOE,oBAAoBpsD,IAE5B,SAASmsD,sBAAsBD,KAC9B,IAAIE,oBAAoBC,EAAEL,IAAKE,KAAM,CACpC,IAAI99C,EAAI,IAAIsiB,MAAM,uBAAyBw7B,IAAM,KAEjD,MADA99C,EAAEk+C,KAAO,mBACHl+C,EAEP,OAAO49C,IAAIE,KAEZD,eAAe3rD,KAAO,SAASisD,qBAC9B,OAAOhsD,OAAOD,KAAK0rD,MAEpBC,eAAeO,QAAUL,sBACzBM,OAAOC,QAAUT,eACjBA,eAAejsD,GAAK,O","sources":["webpack://foreldrepengesoknad/./.storybook/generated-stories-entry.js","webpack://foreldrepengesoknad/./.storybook/preview.js","webpack://foreldrepengesoknad/./.storybook/preview.js-generated-config-entry.js","webpack://foreldrepengesoknad/./src/storybook/stories/components/Attachment.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/AttachmentList.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/DinePlikter.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/EksternUrl.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/Fieldset.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/Foreldrepar.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/FormikFileUploader.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/InfoOmSøknaden.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/InnholdMedIllustrasjon.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/InteractiveListElement.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/LenkeKnapp.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/Personkort.stories.tsx","webpack://foreldrepengesoknad/./src/app/assets/PengerIkon.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/Sirkelmaske.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/components/Veileder.stories.tsx","webpack://foreldrepengesoknad/./src/app/pages/byttBrowserModal/ByttBrowserModal.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/pages/ByttBrowserModal.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/pages/DinePersonopplysningerModal.stories.tsx","webpack://foreldrepengesoknad/./src/app/utils/pdfUtils.ts","webpack://foreldrepengesoknad/./src/app/assets/SpotlightLetter.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/KvitteringHeader.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/KvitteringSuksess.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/StatusBoks.tsx","webpack://foreldrepengesoknad/./src/app/assets/CashIkon.tsx","webpack://foreldrepengesoknad/./src/app/assets/KalenderIkon.tsx","webpack://foreldrepengesoknad/./src/app/assets/KoffertIkon.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/SendSøknadIkon.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/SøknadSendtSectionHeader.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/SøknadSendtTittel.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/SøknadSendt.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/pages/SøknadSendt.stories.tsx","webpack://foreldrepengesoknad/./src/app/pages/velkommen/velkommenFormConfig.ts","webpack://foreldrepengesoknad/./src/app/pages/velkommen/validation/velkommenValidation.ts","webpack://foreldrepengesoknad/./src/app/pages/velkommen/Velkommen.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/pages/Velkommen.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/annenforelderFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/annenForelderFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/annenForelderQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/components/AvtaleAtFarTarUtForeldrepengerVeileder.tsx","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/components/FarDokumentasjonAleneomsorgVeileder.tsx","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/components/MåOrientereAnnenForelderVeileder.tsx","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/validation/annenForelderValidering.ts","webpack://foreldrepengesoknad/./src/app/utils/validation/fødselsnummer.ts","webpack://foreldrepengesoknad/./src/app/utils/validationUtil.ts","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/components/OppgiPersonalia.tsx","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/components/registrerte-personalia/RegistrertePersonalia.tsx","webpack://foreldrepengesoknad/./src/app/steps/annen-forelder/AnnenForelder.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/annen-forelder/AnnenForelder.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/inntektsinformasjonFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/AndreInntekterListe.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/modal/andreInntekterModalFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/modal/andreInntekterModalFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/modal/andreInntekterModalQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/validation/andreInntekterValidation.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/modal/AndreInntekterModal.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/andre-inntekter/AndreInntekter.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/EgenNæringListe.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/HvemKanDriveMedEgenNæring.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/egenNæringModalFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/egenNæringModalFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/egenNæringModalQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/validation/egenNæringValidation.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/components/OrgnummerEllerLand.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/components/Regnskapsfører.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/modal/EgenNæringModal.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/egen-næring/EgenNæring.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/validation/inntektsinformasjonValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/FrilansoppdragListe.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/HvemKanVæreFrilanser.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/modal/frilansoppdragModalFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/modal/frilansoppdragModalFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/modal/frilansoppdragModalQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/validation/frilansValidation.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/modal/FrilansoppdragModal.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/frilans/Frilans.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/info-til-fiskere/InfoTilFiskere.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/inntektsinformasjonFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/inntektsInformasjonQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/Inntektsinformasjon.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/inntektsinformasjon/Inntektsinformasjon.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/manglende-vedlegg/manglendeVedleggFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/manglende-vedlegg/manglendeVedleggQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/manglende-vedlegg/util.ts","webpack://foreldrepengesoknad/./src/app/steps/manglende-vedlegg/manglendeVedleggFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/manglende-vedlegg/ManglendeVedlegg.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/manglende-vedlegg/ManglendeVedlegg.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/omBarnetFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/validation/omBarnetValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/AdopsjonAnnetBarn.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/AdopsjonEktefellesBarn.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/BarnFødtEllerAdoptert.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/Fødsel.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/Termin.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/omBarnetQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/omBarnetUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/RegistrertBarn.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/OmBarnet.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/om-barnet/OmBarnet.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/OppsummeringsPunkt.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/annen-forelder-oppsummering/AnnenForelderOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/barn-oppsummering/BarnAdoptertIUtlandetDetaljer.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/barn-oppsummering/BarnOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/OppsummeringsPanel.tsx","webpack://foreldrepengesoknad/./src/app/assets/KvinneIkon.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/Personalia.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummeringListe.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/oppsummeringFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/validation/oppsummeringValidation.ts","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/AnnenInntektDetaljer.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/InntekterTabell.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/AndreInntekterOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/FrilansOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/Næringsdetaljer.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/SelvstendigNæringsdrivendeOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/components/andre-inntekter-oppsummering/ArbeidsforholdOgAndreInntekterOppsummering.tsx","webpack://foreldrepengesoknad/./src/app/steps/oppsummering/Oppsummering.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/oppsummering/Oppsummering.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/søkersituasjonFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/components/VelgRolle.tsx","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/søkersituasjonQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/søkersituasjonUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/Søkersituasjon.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/søkersituasjon/Søkersituasjon.stories.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdFormTypes.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdFormQuestions.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandForm.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/types.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandList.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandListAndDialog.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/Utenlandsopphold.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/utenlandsopphold/Utenlandsopphold.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/uttaksplan-info/far-medmor-fødsel-begge-har-rett/FarMedmorFødselBeggeHarRett.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/uttaksplan-info/førstegangssøknad-med-annen-part/FarMedmorFødselOgMorHarIkkeRett.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/uttaksplan-info/mor-far-adopsjon/MorFarAdopsjon.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/uttaksplan-info/mor-fødsel/MorFødsel.stories.tsx","webpack://foreldrepengesoknad/./src/app/FeatureToggle.ts","webpack://foreldrepengesoknad/./src/app/Environment.ts","webpack://foreldrepengesoknad/./src/app/amplitude/amplitude.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useRequest.ts","webpack://foreldrepengesoknad/./src/app/types/UttakArbeidType.ts","webpack://foreldrepengesoknad/./src/app/api/storageParser.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/PeriodeResultatType.ts","webpack://foreldrepengesoknad/./src/app/types/FamiliehendelseType.ts","webpack://foreldrepengesoknad/./src/app/utils/getFamiliehendelseType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/MorsAktivitet.ts","webpack://foreldrepengesoknad/./src/app/utils/mapSaksperioderTilUttaksperioder.ts","webpack://foreldrepengesoknad/./src/app/utils/eksisterendeSakUtils.ts","webpack://foreldrepengesoknad/./src/app/api/api.ts","webpack://foreldrepengesoknad/./src/app/api/apiInterceptor.ts","webpack://foreldrepengesoknad/./src/app/assets/CheckmarkIkon.tsx","webpack://foreldrepengesoknad/./src/app/assets/VeilederNormal.tsx","webpack://foreldrepengesoknad/./src/app/components/attachment/Attachment.tsx","webpack://foreldrepengesoknad/./src/app/components/attachment/AttachmentList.tsx","webpack://foreldrepengesoknad/./src/app/components/dine-plikter/DinePlikter.tsx","webpack://foreldrepengesoknad/./src/app/components/ekstern-url/EksternUrl.tsx","webpack://foreldrepengesoknad/./src/app/components/fieldset/Fieldset.tsx","webpack://foreldrepengesoknad/./src/app/components/flexible-svg/FlexibleSVG.tsx","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/Foreldrepar.tsx","webpack://foreldrepengesoknad/./src/app/api/attachmentApi.ts","webpack://foreldrepengesoknad/./src/app/components/formik-file-uploader/FormikFileUploader.tsx","webpack://foreldrepengesoknad/./src/app/types/ForeldreparSituasjonTypes.ts","webpack://foreldrepengesoknad/./src/app/utils/foreldreparSituasjonUtils.ts","webpack://foreldrepengesoknad/./src/app/components/info-eksisterende-sak/illustrasjoner/situasjon-sirkel/SituasjonSirkel.tsx","webpack://foreldrepengesoknad/./src/uttaksplan/utils/periodeUtils.ts","webpack://foreldrepengesoknad/./src/app/components/info-eksisterende-sak/InfoEksisterendePerioder.tsx","webpack://foreldrepengesoknad/./src/app/components/info-eksisterende-sak/InfoOmSøknaden.tsx","webpack://foreldrepengesoknad/./src/app/assets/KalenderBakgrunnIkon.tsx","webpack://foreldrepengesoknad/./src/app/components/info-eksisterende-sak/illustrasjoner/uker-sirkel/antallUkerKalenderIkon/AntallUkerKalenderIkon.tsx","webpack://foreldrepengesoknad/./src/app/components/info-eksisterende-sak/illustrasjoner/uker-sirkel/UkerSirkel.tsx","webpack://foreldrepengesoknad/./src/app/components/innhold-med-illustrasjon/InnholdMedIllustrasjon.tsx","webpack://foreldrepengesoknad/./src/app/components/interactive-list-element/Pencil.tsx","webpack://foreldrepengesoknad/./src/app/components/interactive-list-element/InteractiveListElement.tsx","webpack://foreldrepengesoknad/./src/app/components/lenke-knapp/LenkeKnapp.tsx","webpack://foreldrepengesoknad/./src/app/components/personkort/Personkort.tsx","webpack://foreldrepengesoknad/./src/app/components/sirkelmaske/Sirkelmaske.tsx","webpack://foreldrepengesoknad/./src/app/assets/VeilederKompaktSvg.tsx","webpack://foreldrepengesoknad/./src/app/components/veileder/Veileder.tsx","webpack://foreldrepengesoknad/./src/app/constants.ts","webpack://foreldrepengesoknad/./src/app/context/ForeldrepengesøknadContextConfig.ts","webpack://foreldrepengesoknad/./src/app/context/reducer/foreldrepengesøknadReducer.ts","webpack://foreldrepengesoknad/./src/app/context/ForeldrepengesøknadContext.tsx","webpack://foreldrepengesoknad/./src/app/context/action/actionCreator.ts","webpack://foreldrepengesoknad/./src/app/context/hooks/useForeldrepengesøknadContext.ts","webpack://foreldrepengesoknad/./src/app/context/types/AnnenForelder.ts","webpack://foreldrepengesoknad/./src/app/context/types/AnnenInntekt.ts","webpack://foreldrepengesoknad/./src/app/context/types/Barn.ts","webpack://foreldrepengesoknad/./src/app/context/types/Næring.ts","webpack://foreldrepengesoknad/./src/app/links/links.ts","webpack://foreldrepengesoknad/./src/app/pages/modaler/DinePersonopplysningerModal.tsx","webpack://foreldrepengesoknad/./src/app/routes/routes.ts","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarArbeidsforhold.tsx","webpack://foreldrepengesoknad/./src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarIkkeArbeidsforhold.tsx","webpack://foreldrepengesoknad/./src/app/steps/stepsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-begge-har-rett/farMedmorFødselBeggeHarRettFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-begge-har-rett/farMedmorFødselBeggeHarRettUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-begge-har-rett/farMedmorFødselBeggeHarRettQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/spørsmål/MorsSisteDagSpørsmål.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/spørsmål/FarMedmorsFørsteDag.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/range-input/RangeIcon.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/range-input/preventDoubleTapZoom.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/range-input/AriaText.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/range-input/sirkelknapp/Sirkelknapp.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/spørsmål/AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål.tsx","webpack://foreldrepengesoknad/./src/app/utils/annenForelderUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-begge-har-rett/FarMedmorFødselBeggeHarRett.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/morFødselFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/uttaksplanHarForMangeFlerbarnsuker.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/morFødselUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/validation/morFodselValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/VeilederStartdatoPermisjon.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/StartdatoPermisjonMor.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/range-input/RangeStepper.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/range-input/RangeInput.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/fordelingFellesperiode/FordelingFellesperiodeSpørsmål.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/morFødselQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-fodsel/MorFødsel.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/adopsjonStartdatoValg.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/morFarAdopsjonFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/morFarAdopsjonUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/morFarAdopsjonQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/validation/morFarAdopsjonValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/StartdatoAdopsjon.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/MorFarAdopsjon.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-aleneomsorg-fødsel/farMedmorAleneomsorgFødselFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-aleneomsorg-fødsel/farMedmorAleneomsorgFødselQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-aleneomsorg-fødsel/farMedmorAleneomsorgFødselUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-aleneomsorg-fødsel/validation/farMedmorAleneomsorgFødselValidation.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-aleneomsorg-fødsel/FarMedmorAleneomsorgFødsel.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/farMedmor-førstegangssøknad-med-annen-part/farMedmorFørstegangssøknadMedAnnenPartFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/farMedmor-førstegangssøknad-med-annen-part/farMedmorFørstegangssøknadMedAnnenPartQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/farMedmor-førstegangssøknad-med-annen-part/farMedmorFørstegangssøknadMedAnnenPartUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/farMedmor-førstegangssøknad-med-annen-part/FarMedmorFørstegangssøknadMedAnnenPart.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/UttaksplanInfoScenarios.tsx","webpack://foreldrepengesoknad/./src/app/api/getStønadskontoParams.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/UttaksplanInfo.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/farMedmorFødselOgMorHarIkkeRettFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/farMedmorFødselOgMorHarIkkeRettUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/farMedmorFødselOgMorHarIkkeRettQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/validation/farMedmorFødselOgMorHarIkkeRettValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/FarMedmorFødselOgMorHarIkkeRett.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/scenarios/spørsmål/DekningsgradSpørsmål.tsx","webpack://foreldrepengesoknad/./src/uttaksplan/types/UttaksplanHexFarge.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/tilgjengeligeDagerGraf/multibar/Multibar.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/tilgjengeligeDagerGraf/TilgjengeligeDagerGraf.tsx","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/components/tilgjengeligeDagerGraf/tilgjengeligeDagerUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Perioden.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Periodene.ts","webpack://foreldrepengesoknad/./src/app/utils/fridagerUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Tidsperioden.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Uttaksdagen.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/stønadskontoer.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger.ts","webpack://foreldrepengesoknad/./src/app/types/Attachment.ts","webpack://foreldrepengesoknad/./src/app/types/AttachmentType.ts","webpack://foreldrepengesoknad/./src/app/types/Dekningsgrad.ts","webpack://foreldrepengesoknad/./src/app/types/Forelder.ts","webpack://foreldrepengesoknad/./src/app/types/Skjemanummer.ts","webpack://foreldrepengesoknad/./src/app/utils/barnUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/dateUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/formUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/getDekningsgradFromString.ts","webpack://foreldrepengesoknad/./src/app/utils/globalUtil.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useAvbrytSøknad.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useOnValidSubmit.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useSøkerinfo.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useSøknad.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useUttaksplanInfo.ts","webpack://foreldrepengesoknad/./src/app/utils/isFarEllerMedmor.ts","webpack://foreldrepengesoknad/./src/app/utils/numberUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/personUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/stønadskontoUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/vedleggUtils.ts","webpack://foreldrepengesoknad/./src/storybook/decorators/withForeldrepengersøknadContext.tsx","webpack://foreldrepengesoknad/./src/app/intl/IntlProvider.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withIntl.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withRouter.tsx","webpack://foreldrepengesoknad/./src/storybook/utils/AxiosMock.tsx","webpack://foreldrepengesoknad/./src/app/utils/mapSøkerinfoDTO.ts","webpack://foreldrepengesoknad/./src/storybook/utils/ForeldrepengerStateMock.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/OppholdÅrsakType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/Periode.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/PeriodeInfoType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/StønadskontoType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/UtsettelseÅrsakType.ts","webpack://foreldrepengesoknad/./node_modules/moment/locale|sync|/^/.*$","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/far1.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/far2.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/far3.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/far4.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/medmor1.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/medmor2.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/mor1.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets/mor2.svg","webpack://foreldrepengesoknad/./src/app/components/foreldrepar/assets|sync|/^/.*/.svg$","webpack://foreldrepengesoknad/\\.)("],"sourcesContent":["\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/react\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('../src/storybook/stories', true, /^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(tsx))$/)], module, false);","import React from 'react';\r\nimport '../src/app/styles/app.less';\r\n\r\n//TODO Dette bør ikkje ligga her\r\nwindow.appSettings = {\r\n  REST_API_URL: '',\r\n  UTTAK_API_URL: 'uttak-url'\r\n};\r\n\r\nexport const decorators = [(Story) => <div  id=\"app\" style={{ padding: '40px' }}><Story/></div>];\r\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from 'C:/develop/foreldrepengesoknad/node_modules/@storybook/client-api';\nimport { logger } from 'C:/develop/foreldrepengesoknad/node_modules/@storybook/client-logger';\nimport * as config from 'C:/develop/foreldrepengesoknad/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n    case 'argTypes':\n      {\n        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport Attachment, { Props } from 'app/components/attachment/Attachment';\\r\\nimport { Attachment as AttachmentType } from 'app/types/Attachment';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/Attachment',\\r\\n    component: Attachment,\\r\\n    decorators: [withIntlProvider],\\r\\n};\\r\\n\\r\\nconst Template: Story<Props> = (args) => <Attachment {...args} />;\\r\\n\\r\\nexport const PendingVedleggUtenUrl = Template.bind({});\\r\\nPendingVedleggUtenUrl.args = {\\r\\n    attachment: {\\r\\n        id: '1',\\r\\n        pending: true,\\r\\n        filename: 'Dette er et filnavn',\\r\\n    } as AttachmentType,\\r\\n};\\r\\n\\r\\nexport const VedleggMedUrl = Template.bind({});\\r\\nVedleggMedUrl.args = {\\r\\n    attachment: {\\r\\n        id: '1',\\r\\n        pending: false,\\r\\n        url: 'www.test.no',\\r\\n        filename: 'Dette er et filnavn',\\r\\n    } as AttachmentType,\\r\\n};\\r\\n\\r\\nexport const Filstørrelse = Template.bind({});\\r\\nFilstørrelse.args = {\\r\\n    attachment: {\\r\\n        id: '1',\\r\\n        pending: false,\\r\\n        url: 'www.test.no',\\r\\n        filename: 'Dette er et filnavn',\\r\\n        filesize: 100,\\r\\n    } as AttachmentType,\\r\\n};\\r\\n\\r\\nexport const SlettKnapp = Template.bind({});\\r\\nSlettKnapp.args = {\\r\\n    attachment: {\\r\\n        id: '1',\\r\\n        pending: false,\\r\\n        url: 'www.test.no',\\r\\n        filename: 'Dette er et filnavn',\\r\\n        filesize: 100,\\r\\n    } as AttachmentType,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"PendingVedleggUtenUrl\":{\"startLoc\":{\"col\":31,\"line\":14},\"endLoc\":{\"col\":65,\"line\":14},\"startBody\":{\"col\":31,\"line\":14},\"endBody\":{\"col\":65,\"line\":14}},\"VedleggMedUrl\":{\"startLoc\":{\"col\":31,\"line\":14},\"endLoc\":{\"col\":65,\"line\":14},\"startBody\":{\"col\":31,\"line\":14},\"endBody\":{\"col\":65,\"line\":14}},\"Filstørrelse\":{\"startLoc\":{\"col\":31,\"line\":14},\"endLoc\":{\"col\":65,\"line\":14},\"startBody\":{\"col\":31,\"line\":14},\"endBody\":{\"col\":65,\"line\":14}},\"SlettKnapp\":{\"startLoc\":{\"col\":31,\"line\":14},\"endLoc\":{\"col\":65,\"line\":14},\"startBody\":{\"col\":31,\"line\":14},\"endBody\":{\"col\":65,\"line\":14}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport Attachment, { Props } from 'app/components/attachment/Attachment';\r\nimport { Attachment as AttachmentType } from 'app/types/Attachment';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\n\r\nexport default {\r\n    title: 'components/Attachment',\r\n    component: Attachment,\r\n    decorators: [withIntlProvider],\r\n};\r\n\r\nconst Template: Story<Props> = (args) => <Attachment {...args} />;\r\n\r\nexport const PendingVedleggUtenUrl = Template.bind({});;\r\nPendingVedleggUtenUrl.args = {\r\n    attachment: {\r\n        id: '1',\r\n        pending: true,\r\n        filename: 'Dette er et filnavn',\r\n    } as AttachmentType,\r\n};\r\n\r\nexport const VedleggMedUrl = Template.bind({});;\r\nVedleggMedUrl.args = {\r\n    attachment: {\r\n        id: '1',\r\n        pending: false,\r\n        url: 'www.test.no',\r\n        filename: 'Dette er et filnavn',\r\n    } as AttachmentType,\r\n};\r\n\r\nexport const Filstørrelse = Template.bind({});;\r\nFilstørrelse.args = {\r\n    attachment: {\r\n        id: '1',\r\n        pending: false,\r\n        url: 'www.test.no',\r\n        filename: 'Dette er et filnavn',\r\n        filesize: 100,\r\n    } as AttachmentType,\r\n};\r\n\r\nexport const SlettKnapp = Template.bind({});\r\nSlettKnapp.args = {\r\n    attachment: {\r\n        id: '1',\r\n        pending: false,\r\n        url: 'www.test.no',\r\n        filename: 'Dette er et filnavn',\r\n        filesize: 100,\r\n    } as AttachmentType,\r\n};\r\n\n\n\nPendingVedleggUtenUrl.parameters = { storySource: { source: \"(args) => <Attachment {...args} />\" }, ...PendingVedleggUtenUrl.parameters };\nVedleggMedUrl.parameters = { storySource: { source: \"(args) => <Attachment {...args} />\" }, ...VedleggMedUrl.parameters };\nFilstørrelse.parameters = { storySource: { source: \"(args) => <Attachment {...args} />\" }, ...Filstørrelse.parameters };\nSlettKnapp.parameters = { storySource: { source: \"(args) => <Attachment {...args} />\" }, ...SlettKnapp.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport AttachmentList from 'app/components/attachment/AttachmentList';\\r\\nimport { Attachment } from 'app/types/Attachment';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/AttachmentList',\\r\\n    component: AttachmentList,\\r\\n    decorators: [withIntlProvider],\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <AttachmentList {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    attachments: [\\r\\n        {\\r\\n            id: '1',\\r\\n            filename: 'Dette er et filnavn',\\r\\n            filesize: 123,\\r\\n            pending: true,\\r\\n        },\\r\\n        {\\r\\n            id: '2',\\r\\n            filename: 'Annet filnavn',\\r\\n            filesize: 456,\\r\\n            pending: false,\\r\\n        },\\r\\n    ] as Attachment[],\\r\\n};\\r\\n\\r\\nexport const VedleggListeMedFilstørrelse = Template.bind({});\\r\\nVedleggListeMedFilstørrelse.args = {\\r\\n    attachments: [\\r\\n        {\\r\\n            id: '1',\\r\\n            filename: 'Dette er et filnavn',\\r\\n            filesize: 123,\\r\\n            pending: true,\\r\\n        },\\r\\n        {\\r\\n            id: '2',\\r\\n            filename: 'Annet filnavn',\\r\\n            filesize: 456,\\r\\n            pending: false,\\r\\n        },\\r\\n    ] as Attachment[],\\r\\n    showFileSize: true,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":14},\"endLoc\":{\"col\":67,\"line\":14},\"startBody\":{\"col\":29,\"line\":14},\"endBody\":{\"col\":67,\"line\":14}},\"VedleggListeMedFilstørrelse\":{\"startLoc\":{\"col\":29,\"line\":14},\"endLoc\":{\"col\":67,\"line\":14},\"startBody\":{\"col\":29,\"line\":14},\"endBody\":{\"col\":67,\"line\":14}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport AttachmentList from 'app/components/attachment/AttachmentList';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\n\r\nexport default {\r\n    title: 'components/AttachmentList',\r\n    component: AttachmentList,\r\n    decorators: [withIntlProvider],\r\n};\r\n\r\nconst Template: Story<any> = (args) => <AttachmentList {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    attachments: [\r\n        {\r\n            id: '1',\r\n            filename: 'Dette er et filnavn',\r\n            filesize: 123,\r\n            pending: true,\r\n        },\r\n        {\r\n            id: '2',\r\n            filename: 'Annet filnavn',\r\n            filesize: 456,\r\n            pending: false,\r\n        },\r\n    ] as Attachment[],\r\n};\r\n\r\nexport const VedleggListeMedFilstørrelse = Template.bind({});\r\nVedleggListeMedFilstørrelse.args = {\r\n    attachments: [\r\n        {\r\n            id: '1',\r\n            filename: 'Dette er et filnavn',\r\n            filesize: 123,\r\n            pending: true,\r\n        },\r\n        {\r\n            id: '2',\r\n            filename: 'Annet filnavn',\r\n            filesize: 456,\r\n            pending: false,\r\n        },\r\n    ] as Attachment[],\r\n    showFileSize: true,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <AttachmentList {...args} />\" }, ...Default.parameters };\nVedleggListeMedFilstørrelse.parameters = { storySource: { source: \"(args) => <AttachmentList {...args} />\" }, ...VedleggListeMedFilstørrelse.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\n\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\nimport DinePlikter from '../../../app/components/dine-plikter/DinePlikter';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/DinePlikter',\\r\\n    component: DinePlikter,\\r\\n    decorators: [withIntlProvider],\\r\\n};\\r\\n\\r\\nexport const Default = () => <DinePlikter />;\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":12},\"endLoc\":{\"col\":44,\"line\":12},\"startBody\":{\"col\":23,\"line\":12},\"endBody\":{\"col\":44,\"line\":12}}};\n    \nimport React from 'react';\r\n\r\nimport withIntlProvider from '../../decorators/withIntl';\r\nimport DinePlikter from '../../../app/components/dine-plikter/DinePlikter';\r\n\r\nexport default {\r\n    title: 'components/DinePlikter',\r\n    component: DinePlikter,\r\n    decorators: [withIntlProvider],\r\n};\r\n\r\nexport const Default = () => <DinePlikter />;\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => <DinePlikter />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\nimport EksternUrl, { Props } from '../../../app/components/ekstern-url/EksternUrl';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/EksternUrl',\\r\\n    component: EksternUrl,\\r\\n    decorators: [withIntlProvider],\\r\\n};\\r\\n\\r\\nconst Template: Story<Props> = (args) => <EksternUrl {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    url: 'www.test.no',\\r\\n    lenkeTekst: 'Dette er en lenketekst',\\r\\n};\\r\\n\\r\\nexport const EkstraTekst = Template.bind({});\\r\\nEkstraTekst.args = {\\r\\n    url: 'www.test.no',\\r\\n    lenkeTekst: 'Dette er en lenketekst',\\r\\n    tekst: 'hjemmeside',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":13},\"endLoc\":{\"col\":65,\"line\":13},\"startBody\":{\"col\":31,\"line\":13},\"endBody\":{\"col\":65,\"line\":13}},\"EkstraTekst\":{\"startLoc\":{\"col\":31,\"line\":13},\"endLoc\":{\"col\":65,\"line\":13},\"startBody\":{\"col\":31,\"line\":13},\"endBody\":{\"col\":65,\"line\":13}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport withIntlProvider from '../../decorators/withIntl';\r\nimport EksternUrl, { Props } from '../../../app/components/ekstern-url/EksternUrl';\r\n\r\nexport default {\r\n    title: 'components/EksternUrl',\r\n    component: EksternUrl,\r\n    decorators: [withIntlProvider],\r\n};\r\n\r\nconst Template: Story<Props> = (args) => <EksternUrl {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    url: 'www.test.no',\r\n    lenkeTekst: 'Dette er en lenketekst',\r\n};\r\n\r\nexport const EkstraTekst = Template.bind({});\r\nEkstraTekst.args = {\r\n    url: 'www.test.no',\r\n    lenkeTekst: 'Dette er en lenketekst',\r\n    tekst: 'hjemmeside',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <EksternUrl {...args} />\" }, ...Default.parameters };\nEkstraTekst.parameters = { storySource: { source: \"(args) => <EksternUrl {...args} />\" }, ...EkstraTekst.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\n\\r\\nimport Fieldset from '../../../app/components/fieldset/Fieldset';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/Fieldset',\\r\\n    component: Fieldset,\\r\\n};\\r\\n\\r\\nexport const Default = () => (\\r\\n    <Fieldset legend=\\\"Dette er header\\\">\\r\\n        <div>Dette er innhold</div>\\r\\n    </Fieldset>\\r\\n);\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":10},\"endLoc\":{\"col\":1,\"line\":14},\"startBody\":{\"col\":23,\"line\":10},\"endBody\":{\"col\":1,\"line\":14}}};\n    \nimport React from 'react';\r\n\r\nimport Fieldset from '../../../app/components/fieldset/Fieldset';\r\n\r\nexport default {\r\n    title: 'components/Fieldset',\r\n    component: Fieldset,\r\n};\r\n\r\nexport const Default = () => (\r\n    <Fieldset legend=\"Dette er header\">\r\n        <div>Dette er innhold</div>\r\n    </Fieldset>\r\n);\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => (\\r\\n    <Fieldset legend=\\\"Dette er header\\\">\\r\\n        <div>Dette er innhold</div>\\r\\n    </Fieldset>\\r\\n)\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport Foreldrepar from '../../../app/components/foreldrepar/Foreldrepar';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/Foreldrepar',\\r\\n    component: Foreldrepar,\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <Foreldrepar {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    forelder1: 'mor1',\\r\\n};\\r\\n\\r\\nexport const MorOgFar = Template.bind({});\\r\\nMorOgFar.args = {\\r\\n    forelder1: 'mor1',\\r\\n    forelder2: 'far1',\\r\\n};\\r\\n\\r\\nexport const MorHalvtSynlig = Template.bind({});\\r\\nMorHalvtSynlig.args = {\\r\\n    forelder1: 'mor1',\\r\\n    forelder2: 'far1',\\r\\n    variant: 'førsteForelderHalvtSynlig',\\r\\n};\\r\\n\\r\\nexport const ForeldreSeparert = Template.bind({});\\r\\nForeldreSeparert.args = {\\r\\n    forelder1: 'mor1',\\r\\n    forelder2: 'far1',\\r\\n    variant: 'foreldreSeparert',\\r\\n};\\r\\n\\r\\nexport const ForeldreNærmere = Template.bind({});\\r\\nForeldreNærmere.args = {\\r\\n    forelder1: 'mor1',\\r\\n    forelder2: 'far1',\\r\\n    variant: 'foreldreNærmere',\\r\\n};\\r\\n\\r\\nexport const Kompakt = Template.bind({});\\r\\nKompakt.args = {\\r\\n    forelder1: 'mor1',\\r\\n    forelder2: 'far1',\\r\\n    variant: 'foreldreNærmere',\\r\\n    kompakt: true,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":10},\"endLoc\":{\"col\":64,\"line\":10},\"startBody\":{\"col\":29,\"line\":10},\"endBody\":{\"col\":64,\"line\":10}},\"MorOgFar\":{\"startLoc\":{\"col\":29,\"line\":10},\"endLoc\":{\"col\":64,\"line\":10},\"startBody\":{\"col\":29,\"line\":10},\"endBody\":{\"col\":64,\"line\":10}},\"MorHalvtSynlig\":{\"startLoc\":{\"col\":29,\"line\":10},\"endLoc\":{\"col\":64,\"line\":10},\"startBody\":{\"col\":29,\"line\":10},\"endBody\":{\"col\":64,\"line\":10}},\"ForeldreSeparert\":{\"startLoc\":{\"col\":29,\"line\":10},\"endLoc\":{\"col\":64,\"line\":10},\"startBody\":{\"col\":29,\"line\":10},\"endBody\":{\"col\":64,\"line\":10}},\"ForeldreNærmere\":{\"startLoc\":{\"col\":29,\"line\":10},\"endLoc\":{\"col\":64,\"line\":10},\"startBody\":{\"col\":29,\"line\":10},\"endBody\":{\"col\":64,\"line\":10}},\"Kompakt\":{\"startLoc\":{\"col\":29,\"line\":10},\"endLoc\":{\"col\":64,\"line\":10},\"startBody\":{\"col\":29,\"line\":10},\"endBody\":{\"col\":64,\"line\":10}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Foreldrepar from '../../../app/components/foreldrepar/Foreldrepar';\r\n\r\nexport default {\r\n    title: 'components/Foreldrepar',\r\n    component: Foreldrepar,\r\n};\r\n\r\nconst Template: Story<any> = (args) => <Foreldrepar {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    forelder1: 'mor1',\r\n};\r\n\r\nexport const MorOgFar = Template.bind({});;\r\nMorOgFar.args = {\r\n    forelder1: 'mor1',\r\n    forelder2: 'far1',\r\n};\r\n\r\nexport const MorHalvtSynlig = Template.bind({});;\r\nMorHalvtSynlig.args = {\r\n    forelder1: 'mor1',\r\n    forelder2: 'far1',\r\n    variant: 'førsteForelderHalvtSynlig',\r\n};\r\n\r\nexport const ForeldreSeparert = Template.bind({});;\r\nForeldreSeparert.args = {\r\n    forelder1: 'mor1',\r\n    forelder2: 'far1',\r\n    variant: 'foreldreSeparert',\r\n};\r\n\r\nexport const ForeldreNærmere = Template.bind({});;\r\nForeldreNærmere.args = {\r\n    forelder1: 'mor1',\r\n    forelder2: 'far1',\r\n    variant: 'foreldreNærmere',\r\n};\r\n\r\nexport const Kompakt = Template.bind({});\r\nKompakt.args = {\r\n    forelder1: 'mor1',\r\n    forelder2: 'far1',\r\n    variant: 'foreldreNærmere',\r\n    kompakt: true,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Foreldrepar {...args} />\" }, ...Default.parameters };\nMorOgFar.parameters = { storySource: { source: \"(args) => <Foreldrepar {...args} />\" }, ...MorOgFar.parameters };\nMorHalvtSynlig.parameters = { storySource: { source: \"(args) => <Foreldrepar {...args} />\" }, ...MorHalvtSynlig.parameters };\nForeldreSeparert.parameters = { storySource: { source: \"(args) => <Foreldrepar {...args} />\" }, ...ForeldreSeparert.parameters };\nForeldreNærmere.parameters = { storySource: { source: \"(args) => <Foreldrepar {...args} />\" }, ...ForeldreNærmere.parameters };\nKompakt.parameters = { storySource: { source: \"(args) => <Foreldrepar {...args} />\" }, ...Kompakt.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport withFormik from 'storybook-formik';\\r\\nimport { AttachmentType } from 'app/types/AttachmentType';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\nimport FormikFileUploader, { Props } from '../../../app/components/formik-file-uploader/FormikFileUploader';\\r\\nimport { Attachment } from '../../../app/types/Attachment';\\r\\nimport { Skjemanummer } from '../../../app/types/Skjemanummer';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/FormikFileUploader',\\r\\n    component: FormikFileUploader,\\r\\n    decorators: [withIntlProvider, withFormik],\\r\\n};\\r\\n\\r\\nconst Template: Story<Props> = (args) => <FormikFileUploader {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    attachments: [],\\r\\n    name: 'field_name',\\r\\n    label: 'Last opp vedlegg',\\r\\n    attachmentType: AttachmentType.ADOPSJONSVEDTAK,\\r\\n    skjemanummer: Skjemanummer.ANNET,\\r\\n};\\r\\n\\r\\nexport const FilSomErLastetOpp = Template.bind({});\\r\\nFilSomErLastetOpp.args = {\\r\\n    attachments: [\\r\\n        {\\r\\n            id: '1',\\r\\n            pending: false,\\r\\n            filename: 'Fil som er lastet opp',\\r\\n        },\\r\\n    ] as Attachment[],\\r\\n    name: 'field_name',\\r\\n    label: 'Last opp vedlegg',\\r\\n    attachmentType: AttachmentType.ADOPSJONSVEDTAK,\\r\\n    skjemanummer: Skjemanummer.ANNET,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":16},\"endLoc\":{\"col\":73,\"line\":16},\"startBody\":{\"col\":31,\"line\":16},\"endBody\":{\"col\":73,\"line\":16}},\"FilSomErLastetOpp\":{\"startLoc\":{\"col\":31,\"line\":16},\"endLoc\":{\"col\":73,\"line\":16},\"startBody\":{\"col\":31,\"line\":16},\"endBody\":{\"col\":73,\"line\":16}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport withFormik from 'storybook-formik';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\nimport FormikFileUploader, { Props } from '../../../app/components/formik-file-uploader/FormikFileUploader';\r\nimport { Attachment } from '../../../app/types/Attachment';\r\nimport { Skjemanummer } from '../../../app/types/Skjemanummer';\r\n\r\nexport default {\r\n    title: 'components/FormikFileUploader',\r\n    component: FormikFileUploader,\r\n    decorators: [withIntlProvider, withFormik],\r\n};\r\n\r\nconst Template: Story<Props> = (args) => <FormikFileUploader {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    attachments: [],\r\n    name: 'field_name',\r\n    label: 'Last opp vedlegg',\r\n    attachmentType: AttachmentType.ADOPSJONSVEDTAK,\r\n    skjemanummer: Skjemanummer.ANNET,\r\n};\r\n\r\nexport const FilSomErLastetOpp = Template.bind({});\r\nFilSomErLastetOpp.args = {\r\n    attachments: [\r\n        {\r\n            id: '1',\r\n            pending: false,\r\n            filename: 'Fil som er lastet opp',\r\n        },\r\n    ] as Attachment[],\r\n    name: 'field_name',\r\n    label: 'Last opp vedlegg',\r\n    attachmentType: AttachmentType.ADOPSJONSVEDTAK,\r\n    skjemanummer: Skjemanummer.ANNET,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <FormikFileUploader {...args} />\" }, ...Default.parameters };\nFilSomErLastetOpp.parameters = { storySource: { source: \"(args) => <FormikFileUploader {...args} />\" }, ...FilSomErLastetOpp.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport InfoOmSøknaden from 'app/components/info-eksisterende-sak/InfoOmSøknaden';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\nimport withRouter from '../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../utils/ForeldrepengerStateMock';\\r\\nimport Søker from 'app/context/types/Søker';\\r\\nimport InformasjonOmUtenlandsopphold from 'app/context/types/InformasjonOmUtenlandsopphold';\\r\\nimport { Søkerinfo } from 'app/types/Søkerinfo';\\r\\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\\r\\nimport dayjs from 'dayjs';\\r\\nimport { Periode, Periodetype } from 'uttaksplan/types/Periode';\\r\\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\\r\\n\\r\\nconst context = {\\r\\n    søknad: {\\r\\n        type: 'foreldrepenger',\\r\\n        harGodkjentVilkår: true,\\r\\n        søkersituasjon: {\\r\\n            situasjon: 'fødsel',\\r\\n            rolle: 'mor',\\r\\n        },\\r\\n        barn: {\\r\\n            type: 'født',\\r\\n            fødselsdatoer: ['2021-03-15'],\\r\\n            antallBarn: '1',\\r\\n            datoForAleneomsorg: '',\\r\\n            dokumentasjonAvAleneomsorg: [],\\r\\n        },\\r\\n        annenForelder: {\\r\\n            kanIkkeOppgis: true,\\r\\n        },\\r\\n        søker: {} as Søker,\\r\\n        informasjonOmUtenlandsopphold: {} as InformasjonOmUtenlandsopphold,\\r\\n        erEndringssøknad: false,\\r\\n        dekningsgrad: '100',\\r\\n        uttaksplan: {},\\r\\n    },\\r\\n    version: 2,\\r\\n    currentRoute: '/soknad/uttaksplan-info',\\r\\n    søkerinfo: {} as Søkerinfo,\\r\\n    saker: [],\\r\\n} as ForeldrepengesøknadContextState;\\r\\nconst søkerinfo = {\\r\\n    søker: {\\r\\n        fnr: '19047815714',\\r\\n        fornavn: 'TALENTFULL',\\r\\n        etternavn: 'MYGG',\\r\\n        kjønn: 'K',\\r\\n        fødselsdato: '1978-04-19',\\r\\n        ikkeNordiskEøsLand: false,\\r\\n        barn: [\\r\\n            {\\r\\n                fnr: '21091981146',\\r\\n                fødselsdato: '2021-03-15',\\r\\n                annenForelder: {\\r\\n                    fnr: '12038517080',\\r\\n                    fødselsdato: '1985-03-12',\\r\\n                    fornavn: 'LEALAUS',\\r\\n                    etternavn: 'BÆREPOSE',\\r\\n                },\\r\\n                fornavn: 'KLØKTIG',\\r\\n                etternavn: 'MIDTPUNKT',\\r\\n                kjønn: 'M',\\r\\n            },\\r\\n        ],\\r\\n    },\\r\\n} as SøkerinfoDTO;\\r\\n\\r\\nexport default {\\r\\n    title: 'components/InfoOmSøknaden',\\r\\n    component: InfoOmSøknaden,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n    erIUttaksplanenSteg: boolean;\\r\\n    ekisterendeSak?: EksisterendeSak;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo, erIUttaksplanenSteg = true, ekisterendeSak }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <InfoOmSøknaden\\r\\n                tilgjengeligeStønadskontoer={[\\r\\n                    {\\r\\n                        konto: StønadskontoType.Mødrekvote,\\r\\n                        dager: 50,\\r\\n                    },\\r\\n                ]}\\r\\n                eksisterendeSak={ekisterendeSak}\\r\\n                erIUttaksplanenSteg={erIUttaksplanenSteg}\\r\\n            />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const AnnenForelder = Template.bind({});\\r\\nAnnenForelder.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'Espen',\\r\\n                etternavn: 'Utvikler',\\r\\n                fnr: '1212121313',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const InfoOmMorsSak = Template.bind({});\\r\\nInfoOmMorsSak.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            søkersituasjon: {\\r\\n                situasjon: 'fødsel',\\r\\n                rolle: 'far',\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'Olga',\\r\\n                etternavn: 'Utvikler',\\r\\n                fnr: '1212121313',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n    ekisterendeSak: {\\r\\n        erAnnenPartsSak: true,\\r\\n        uttaksplan: [\\r\\n            {\\r\\n                type: Periodetype.Uttak,\\r\\n                gradert: true,\\r\\n                stillingsprosent: '100',\\r\\n                ønskerSamtidigUttak: true,\\r\\n                samtidigUttakProsent: '50',\\r\\n                tidsperiode: {\\r\\n                    fom: dayjs('2021-01-01').toDate(),\\r\\n                    tom: dayjs('2021-01-10').toDate(),\\r\\n                },\\r\\n            } as Periode,\\r\\n        ],\\r\\n    } as EksisterendeSak,\\r\\n    erIUttaksplanenSteg: false,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":87},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":31,\"line\":87},\"endBody\":{\"col\":1,\"line\":102}},\"AnnenForelder\":{\"startLoc\":{\"col\":31,\"line\":87},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":31,\"line\":87},\"endBody\":{\"col\":1,\"line\":102}},\"InfoOmMorsSak\":{\"startLoc\":{\"col\":31,\"line\":87},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":31,\"line\":87},\"endBody\":{\"col\":1,\"line\":102}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport InfoOmSøknaden from 'app/components/info-eksisterende-sak/InfoOmSøknaden';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\nimport withRouter from '../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../utils/ForeldrepengerStateMock';\r\nimport Søker from 'app/context/types/Søker';\r\nimport InformasjonOmUtenlandsopphold from 'app/context/types/InformasjonOmUtenlandsopphold';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\nimport dayjs from 'dayjs';\r\nimport { Periode, Periodetype } from 'uttaksplan/types/Periode';\r\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\r\n\r\nconst context = {\r\n    søknad: {\r\n        type: 'foreldrepenger',\r\n        harGodkjentVilkår: true,\r\n        søkersituasjon: {\r\n            situasjon: 'fødsel',\r\n            rolle: 'mor',\r\n        },\r\n        barn: {\r\n            type: 'født',\r\n            fødselsdatoer: ['2021-03-15'],\r\n            antallBarn: '1',\r\n            datoForAleneomsorg: '',\r\n            dokumentasjonAvAleneomsorg: [],\r\n        },\r\n        annenForelder: {\r\n            kanIkkeOppgis: true,\r\n        },\r\n        søker: {} as Søker,\r\n        informasjonOmUtenlandsopphold: {} as InformasjonOmUtenlandsopphold,\r\n        erEndringssøknad: false,\r\n        dekningsgrad: '100',\r\n        uttaksplan: {},\r\n    },\r\n    version: 2,\r\n    currentRoute: '/soknad/uttaksplan-info',\r\n    søkerinfo: {} as Søkerinfo,\r\n    saker: [],\r\n} as ForeldrepengesøknadContextState;\r\nconst søkerinfo = {\r\n    søker: {\r\n        fnr: '19047815714',\r\n        fornavn: 'TALENTFULL',\r\n        etternavn: 'MYGG',\r\n        kjønn: 'K',\r\n        fødselsdato: '1978-04-19',\r\n        ikkeNordiskEøsLand: false,\r\n        barn: [\r\n            {\r\n                fnr: '21091981146',\r\n                fødselsdato: '2021-03-15',\r\n                annenForelder: {\r\n                    fnr: '12038517080',\r\n                    fødselsdato: '1985-03-12',\r\n                    fornavn: 'LEALAUS',\r\n                    etternavn: 'BÆREPOSE',\r\n                },\r\n                fornavn: 'KLØKTIG',\r\n                etternavn: 'MIDTPUNKT',\r\n                kjønn: 'M',\r\n            },\r\n        ],\r\n    },\r\n} as SøkerinfoDTO;\r\n\r\nexport default {\r\n    title: 'components/InfoOmSøknaden',\r\n    component: InfoOmSøknaden,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n    erIUttaksplanenSteg: boolean;\r\n    ekisterendeSak?: EksisterendeSak;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo, erIUttaksplanenSteg = true, ekisterendeSak }) => {\r\n    return (\r\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n            <InfoOmSøknaden\r\n                tilgjengeligeStønadskontoer={[\r\n                    {\r\n                        konto: StønadskontoType.Mødrekvote,\r\n                        dager: 50,\r\n                    },\r\n                ]}\r\n                eksisterendeSak={ekisterendeSak}\r\n                erIUttaksplanenSteg={erIUttaksplanenSteg}\r\n            />\r\n        </ForeldrepengerStateMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n};\r\n\r\nexport const AnnenForelder = Template.bind({});;\r\nAnnenForelder.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'Espen',\r\n                etternavn: 'Utvikler',\r\n                fnr: '1212121313',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const InfoOmMorsSak = Template.bind({});\r\nInfoOmMorsSak.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            søkersituasjon: {\r\n                situasjon: 'fødsel',\r\n                rolle: 'far',\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'Olga',\r\n                etternavn: 'Utvikler',\r\n                fnr: '1212121313',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n    ekisterendeSak: {\r\n        erAnnenPartsSak: true,\r\n        uttaksplan: [\r\n            {\r\n                type: Periodetype.Uttak,\r\n                gradert: true,\r\n                stillingsprosent: '100',\r\n                ønskerSamtidigUttak: true,\r\n                samtidigUttakProsent: '50',\r\n                tidsperiode: {\r\n                    fom: dayjs('2021-01-01').toDate(),\r\n                    tom: dayjs('2021-01-10').toDate(),\r\n                },\r\n            } as Periode,\r\n        ],\r\n    } as EksisterendeSak,\r\n    erIUttaksplanenSteg: false,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo, erIUttaksplanenSteg = true, ekisterendeSak }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <InfoOmSøknaden\\r\\n                tilgjengeligeStønadskontoer={[\\r\\n                    {\\r\\n                        konto: StønadskontoType.Mødrekvote,\\r\\n                        dager: 50,\\r\\n                    },\\r\\n                ]}\\r\\n                eksisterendeSak={ekisterendeSak}\\r\\n                erIUttaksplanenSteg={erIUttaksplanenSteg}\\r\\n            />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nAnnenForelder.parameters = { storySource: { source: \"({ context, søkerinfo, erIUttaksplanenSteg = true, ekisterendeSak }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <InfoOmSøknaden\\r\\n                tilgjengeligeStønadskontoer={[\\r\\n                    {\\r\\n                        konto: StønadskontoType.Mødrekvote,\\r\\n                        dager: 50,\\r\\n                    },\\r\\n                ]}\\r\\n                eksisterendeSak={ekisterendeSak}\\r\\n                erIUttaksplanenSteg={erIUttaksplanenSteg}\\r\\n            />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...AnnenForelder.parameters };\nInfoOmMorsSak.parameters = { storySource: { source: \"({ context, søkerinfo, erIUttaksplanenSteg = true, ekisterendeSak }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <InfoOmSøknaden\\r\\n                tilgjengeligeStønadskontoer={[\\r\\n                    {\\r\\n                        konto: StønadskontoType.Mødrekvote,\\r\\n                        dager: 50,\\r\\n                    },\\r\\n                ]}\\r\\n                eksisterendeSak={ekisterendeSak}\\r\\n                erIUttaksplanenSteg={erIUttaksplanenSteg}\\r\\n            />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...InfoOmMorsSak.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport InnholdMedIllustrasjon from '../../../app/components/innhold-med-illustrasjon/InnholdMedIllustrasjon';\\r\\nimport UkerSirkel from '../../../app/components/info-eksisterende-sak/illustrasjoner/uker-sirkel/UkerSirkel';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/InnholdMedIllustrasjon',\\r\\n    component: InnholdMedIllustrasjon,\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <InnholdMedIllustrasjon {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n};\\r\\n\\r\\nexport const MedIllustrasjon = Template.bind({});\\r\\nMedIllustrasjon.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n    illustrasjoner: [<UkerSirkel key=\\\"uker\\\" uker={10} />],\\r\\n};\\r\\n\\r\\nexport const MedIllustrasjonOgInfoboks = Template.bind({});\\r\\nMedIllustrasjonOgInfoboks.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n    illustrasjoner: [<UkerSirkel key=\\\"uker\\\" uker={10} />],\\r\\n    infoboks: <div>Dette er en infoboks</div>,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":75,\"line\":11},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":75,\"line\":11}},\"MedIllustrasjon\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":75,\"line\":11},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":75,\"line\":11}},\"MedIllustrasjonOgInfoboks\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":75,\"line\":11},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":75,\"line\":11}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport InnholdMedIllustrasjon from '../../../app/components/innhold-med-illustrasjon/InnholdMedIllustrasjon';\r\nimport UkerSirkel from '../../../app/components/info-eksisterende-sak/illustrasjoner/uker-sirkel/UkerSirkel';\r\n\r\nexport default {\r\n    title: 'components/InnholdMedIllustrasjon',\r\n    component: InnholdMedIllustrasjon,\r\n};\r\n\r\nconst Template: Story<any> = (args) => <InnholdMedIllustrasjon {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    tittel: 'Dette er en tittel',\r\n};\r\n\r\nexport const MedIllustrasjon = Template.bind({});;\r\nMedIllustrasjon.args = {\r\n    tittel: 'Dette er en tittel',\r\n    illustrasjoner: [<UkerSirkel key=\"uker\" uker={10} />],\r\n};\r\n\r\nexport const MedIllustrasjonOgInfoboks = Template.bind({});\r\nMedIllustrasjonOgInfoboks.args = {\r\n    tittel: 'Dette er en tittel',\r\n    illustrasjoner: [<UkerSirkel key=\"uker\" uker={10} />],\r\n    infoboks: <div>Dette er en infoboks</div>,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <InnholdMedIllustrasjon {...args} />\" }, ...Default.parameters };\nMedIllustrasjon.parameters = { storySource: { source: \"(args) => <InnholdMedIllustrasjon {...args} />\" }, ...MedIllustrasjon.parameters };\nMedIllustrasjonOgInfoboks.parameters = { storySource: { source: \"(args) => <InnholdMedIllustrasjon {...args} />\" }, ...MedIllustrasjonOgInfoboks.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\n\\r\\nimport InteractiveListElement from '../../../app/components/interactive-list-element/InteractiveListElement';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/InteractiveListElement',\\r\\n    component: InteractiveListElement,\\r\\n};\\r\\n\\r\\nexport const Default = () => (\\r\\n    <InteractiveListElement\\r\\n        title=\\\"Dette er en tittel\\\"\\r\\n        text=\\\"Dette er en tekst\\\"\\r\\n        onEdit={() => alert('editering pågår')}\\r\\n        onDelete={() => alert('sletting pågår')}\\r\\n        deleteLinkText=\\\"Slett\\\"\\r\\n        editButtonAriaText=\\\"editaria\\\"\\r\\n        deleteButtonAriaText=\\\"deletearia\\\"\\r\\n    />\\r\\n);\\r\\n\\r\\nexport const ManglendeDokumentasjon = () => (\\r\\n    <InteractiveListElement\\r\\n        title=\\\"Dette er en tittel\\\"\\r\\n        text=\\\"Dette er en tekst\\\"\\r\\n        onEdit={() => alert('editering pågår')}\\r\\n        onDelete={() => alert('sletting pågår')}\\r\\n        deleteLinkText=\\\"Slett\\\"\\r\\n        editButtonAriaText=\\\"editaria\\\"\\r\\n        deleteButtonAriaText=\\\"deletearia\\\"\\r\\n        missingDocumentation\\r\\n    />\\r\\n);\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":10},\"endLoc\":{\"col\":1,\"line\":20},\"startBody\":{\"col\":23,\"line\":10},\"endBody\":{\"col\":1,\"line\":20}},\"ManglendeDokumentasjon\":{\"startLoc\":{\"col\":38,\"line\":22},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":38,\"line\":22},\"endBody\":{\"col\":1,\"line\":33}}};\n    \nimport React from 'react';\r\n\r\nimport InteractiveListElement from '../../../app/components/interactive-list-element/InteractiveListElement';\r\n\r\nexport default {\r\n    title: 'components/InteractiveListElement',\r\n    component: InteractiveListElement,\r\n};\r\n\r\nexport const Default = () => (\r\n    <InteractiveListElement\r\n        title=\"Dette er en tittel\"\r\n        text=\"Dette er en tekst\"\r\n        onEdit={() => alert('editering pågår')}\r\n        onDelete={() => alert('sletting pågår')}\r\n        deleteLinkText=\"Slett\"\r\n        editButtonAriaText=\"editaria\"\r\n        deleteButtonAriaText=\"deletearia\"\r\n    />\r\n);;\r\n\r\nexport const ManglendeDokumentasjon = () => (\r\n    <InteractiveListElement\r\n        title=\"Dette er en tittel\"\r\n        text=\"Dette er en tekst\"\r\n        onEdit={() => alert('editering pågår')}\r\n        onDelete={() => alert('sletting pågår')}\r\n        deleteLinkText=\"Slett\"\r\n        editButtonAriaText=\"editaria\"\r\n        deleteButtonAriaText=\"deletearia\"\r\n        missingDocumentation\r\n    />\r\n);\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => (\\r\\n    <InteractiveListElement\\r\\n        title=\\\"Dette er en tittel\\\"\\r\\n        text=\\\"Dette er en tekst\\\"\\r\\n        onEdit={() => alert('editering pågår')}\\r\\n        onDelete={() => alert('sletting pågår')}\\r\\n        deleteLinkText=\\\"Slett\\\"\\r\\n        editButtonAriaText=\\\"editaria\\\"\\r\\n        deleteButtonAriaText=\\\"deletearia\\\"\\r\\n    />\\r\\n)\" }, ...Default.parameters };\nManglendeDokumentasjon.parameters = { storySource: { source: \"() => (\\r\\n    <InteractiveListElement\\r\\n        title=\\\"Dette er en tittel\\\"\\r\\n        text=\\\"Dette er en tekst\\\"\\r\\n        onEdit={() => alert('editering pågår')}\\r\\n        onDelete={() => alert('sletting pågår')}\\r\\n        deleteLinkText=\\\"Slett\\\"\\r\\n        editButtonAriaText=\\\"editaria\\\"\\r\\n        deleteButtonAriaText=\\\"deletearia\\\"\\r\\n        missingDocumentation\\r\\n    />\\r\\n)\" }, ...ManglendeDokumentasjon.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport LenkeKnapp from 'app/components/lenke-knapp/LenkeKnapp';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/LenkeKnapp',\\r\\n    component: LenkeKnapp,\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <LenkeKnapp {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    onClick: () => alert('Du har klikka!'),\\r\\n    text: 'Knappetekst',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":63,\"line\":11},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":63,\"line\":11}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport LenkeKnapp from 'app/components/lenke-knapp/LenkeKnapp';\r\n\r\nexport default {\r\n    title: 'components/LenkeKnapp',\r\n    component: LenkeKnapp,\r\n};\r\n\r\nconst Template: Story<any> = (args) => <LenkeKnapp {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n    onClick: () => alert('Du har klikka!'),\r\n    text: 'Knappetekst',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <LenkeKnapp {...args} />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport Personkort from 'app/components/personkort/Personkort';\\r\\nimport CheckmarkIkon from 'app/assets/CheckmarkIkon';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/Personkort',\\r\\n    component: Personkort,\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <Personkort {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n    children: <div>Dette er innholdet</div>,\\r\\n};\\r\\n\\r\\nexport const PersonkortMedIkon = Template.bind({});\\r\\nPersonkortMedIkon.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n    children: <div>Dette er innholdet</div>,\\r\\n    ikon: <CheckmarkIkon />,\\r\\n};\\r\\n\\r\\nexport const PersonkortMedInvertertTekst = Template.bind({});\\r\\nPersonkortMedInvertertTekst.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n    children: <div>Dette er innholdet</div>,\\r\\n    invertert: true,\\r\\n};\\r\\n\\r\\nexport const PersonkortMedTextAlignBottom = Template.bind({});\\r\\nPersonkortMedTextAlignBottom.args = {\\r\\n    tittel: 'Dette er en tittel',\\r\\n    children: <div>Dette er innholdet</div>,\\r\\n    textValign: 'bottom',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":12},\"endLoc\":{\"col\":63,\"line\":12},\"startBody\":{\"col\":29,\"line\":12},\"endBody\":{\"col\":63,\"line\":12}},\"PersonkortMedIkon\":{\"startLoc\":{\"col\":29,\"line\":12},\"endLoc\":{\"col\":63,\"line\":12},\"startBody\":{\"col\":29,\"line\":12},\"endBody\":{\"col\":63,\"line\":12}},\"PersonkortMedInvertertTekst\":{\"startLoc\":{\"col\":29,\"line\":12},\"endLoc\":{\"col\":63,\"line\":12},\"startBody\":{\"col\":29,\"line\":12},\"endBody\":{\"col\":63,\"line\":12}},\"PersonkortMedTextAlignBottom\":{\"startLoc\":{\"col\":29,\"line\":12},\"endLoc\":{\"col\":63,\"line\":12},\"startBody\":{\"col\":29,\"line\":12},\"endBody\":{\"col\":63,\"line\":12}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport Personkort from 'app/components/personkort/Personkort';\r\nimport CheckmarkIkon from 'app/assets/CheckmarkIkon';\r\n\r\nexport default {\r\n    title: 'components/Personkort',\r\n    component: Personkort,\r\n};\r\n\r\nconst Template: Story<any> = (args) => <Personkort {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    tittel: 'Dette er en tittel',\r\n    children: <div>Dette er innholdet</div>,\r\n};\r\n\r\nexport const PersonkortMedIkon = Template.bind({});;\r\nPersonkortMedIkon.args = {\r\n    tittel: 'Dette er en tittel',\r\n    children: <div>Dette er innholdet</div>,\r\n    ikon: <CheckmarkIkon />,\r\n};\r\n\r\nexport const PersonkortMedInvertertTekst = Template.bind({});;\r\nPersonkortMedInvertertTekst.args = {\r\n    tittel: 'Dette er en tittel',\r\n    children: <div>Dette er innholdet</div>,\r\n    invertert: true,\r\n};\r\n\r\nexport const PersonkortMedTextAlignBottom = Template.bind({});\r\nPersonkortMedTextAlignBottom.args = {\r\n    tittel: 'Dette er en tittel',\r\n    children: <div>Dette er innholdet</div>,\r\n    textValign: 'bottom',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Personkort {...args} />\" }, ...Default.parameters };\nPersonkortMedIkon.parameters = { storySource: { source: \"(args) => <Personkort {...args} />\" }, ...PersonkortMedIkon.parameters };\nPersonkortMedInvertertTekst.parameters = { storySource: { source: \"(args) => <Personkort {...args} />\" }, ...PersonkortMedInvertertTekst.parameters };\nPersonkortMedTextAlignBottom.parameters = { storySource: { source: \"(args) => <Personkort {...args} />\" }, ...PersonkortMedTextAlignBottom.parameters };","import * as React from 'react';\r\n\r\nexport interface OwnProps {\r\n    size?: number;\r\n}\r\n\r\nconst PengerIkon = ({ size = 48 }: OwnProps) => (\r\n    <svg focusable=\"false\" role=\"presentation\" viewBox=\"0 0 48 48\" width={size} height={size}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path fill=\"#E3B0A8\" d=\"M4 6h44v24H4z\" />\r\n            <path fill=\"#F1D8D4\" d=\"M38.833 6h5.5v24h-5.5z\" />\r\n            <path fill=\"#C2EAF7\" d=\"M2 8h44v24H2z\" />\r\n            <path fill=\"#E0F5FB\" d=\"M36.833 8h5.5v24h-5.5z\" />\r\n            <path fill=\"#9BD0B0\" d=\"M0 10h44v24H0z\" />\r\n            <path fill=\"#CDE7D8\" d=\"M34.833 10h5.5v24h-5.5z\" />\r\n            <path\r\n                fill=\"#117938\"\r\n                d=\"M5.5 20.955V13.82h1.109l4.29 5.603V13.82h1.036v7.136h-1.109l-4.29-5.608v5.608H5.5zm7.922-3.475c0-1.185.364-2.112 1.092-2.782.728-.67 1.668-1.006 2.82-1.006.753 0 1.433.158 2.038.472a3.287 3.287 0 0 1 1.385 1.317c.317.563.476 1.202.476 1.916 0 .723-.167 1.37-.502 1.942a3.215 3.215 0 0 1-1.42 1.297 4.53 4.53 0 0 1-1.983.44c-.77 0-1.456-.161-2.062-.486a3.329 3.329 0 0 1-1.376-1.329 3.614 3.614 0 0 1-.468-1.781zm1.114.014c0 .86.265 1.538.794 2.032.53.495 1.193.743 1.992.743.813 0 1.483-.25 2.008-.75.526-.5.789-1.209.789-2.127 0-.581-.113-1.088-.337-1.521a2.38 2.38 0 0 0-.986-1.008 2.967 2.967 0 0 0-1.457-.358c-.765 0-1.424.23-1.975.69-.552.458-.828 1.225-.828 2.3zm8.045 3.461V13.82h1.08v3.539l4.057-3.54h1.465l-3.426 2.892 3.576 4.245h-1.426L25 17.343l-1.337 1.14v2.472h-1.08z\"\r\n            />\r\n            <circle cx={9.5} cy={35.5} r={7.5} fill=\"#FECB86\" fillRule=\"nonzero\" />\r\n            <path\r\n                fill=\"#F0F2F2\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M20.5 43a5.5 5.5 0 1 1 0-11 5.5 5.5 0 0 1 0 11zm0-3.667a1.833 1.833 0 1 0 0-3.666 1.833 1.833 0 0 0 0 3.666z\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default PengerIkon;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport Sirkelmaske from '../../../app/components/sirkelmaske/Sirkelmaske';\\r\\nimport PengerIkon from 'app/assets/PengerIkon';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/Sirkelmaske',\\r\\n    component: Sirkelmaske,\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => (\\r\\n    <Sirkelmaske {...args}>\\r\\n        <PengerIkon size={48} />\\r\\n    </Sirkelmaske>\\r\\n);\\r\\n\\r\\nexport const InaktivSirkelmaske = Template.bind({});\\r\\nInaktivSirkelmaske.args = {\\r\\n    diameter: '3rem',\\r\\n    aktiv: false,\\r\\n};\\r\\n\\r\\nexport const AktivSirkelmaske = Template.bind({});\\r\\nAktivSirkelmaske.args = {\\r\\n    diameter: '3rem',\\r\\n    aktiv: true,\\r\\n};\\r\\n\\r\\nexport const AktivSirkelmaskeMedBakgrunn = Template.bind({});\\r\\nAktivSirkelmaskeMedBakgrunn.args = {\\r\\n    diameter: '3rem',\\r\\n    aktiv: true,\\r\\n    farge: '#0067C5',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"InaktivSirkelmaske\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":1,\"line\":15},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":1,\"line\":15}},\"AktivSirkelmaske\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":1,\"line\":15},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":1,\"line\":15}},\"AktivSirkelmaskeMedBakgrunn\":{\"startLoc\":{\"col\":29,\"line\":11},\"endLoc\":{\"col\":1,\"line\":15},\"startBody\":{\"col\":29,\"line\":11},\"endBody\":{\"col\":1,\"line\":15}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Sirkelmaske from '../../../app/components/sirkelmaske/Sirkelmaske';\r\nimport PengerIkon from 'app/assets/PengerIkon';\r\n\r\nexport default {\r\n    title: 'components/Sirkelmaske',\r\n    component: Sirkelmaske,\r\n};\r\n\r\nconst Template: Story<any> = (args) => (\r\n    <Sirkelmaske {...args}>\r\n        <PengerIkon size={48} />\r\n    </Sirkelmaske>\r\n);\r\n\r\nexport const InaktivSirkelmaske = Template.bind({});;\r\nInaktivSirkelmaske.args = {\r\n    diameter: '3rem',\r\n    aktiv: false,\r\n};\r\n\r\nexport const AktivSirkelmaske = Template.bind({});;\r\nAktivSirkelmaske.args = {\r\n    diameter: '3rem',\r\n    aktiv: true,\r\n};\r\n\r\nexport const AktivSirkelmaskeMedBakgrunn = Template.bind({});\r\nAktivSirkelmaskeMedBakgrunn.args = {\r\n    diameter: '3rem',\r\n    aktiv: true,\r\n    farge: '#0067C5',\r\n};\r\n\n\n\nInaktivSirkelmaske.parameters = { storySource: { source: \"(args) => (\\r\\n    <Sirkelmaske {...args}>\\r\\n        <PengerIkon size={48} />\\r\\n    </Sirkelmaske>\\r\\n)\" }, ...InaktivSirkelmaske.parameters };\nAktivSirkelmaske.parameters = { storySource: { source: \"(args) => (\\r\\n    <Sirkelmaske {...args}>\\r\\n        <PengerIkon size={48} />\\r\\n    </Sirkelmaske>\\r\\n)\" }, ...AktivSirkelmaske.parameters };\nAktivSirkelmaskeMedBakgrunn.parameters = { storySource: { source: \"(args) => (\\r\\n    <Sirkelmaske {...args}>\\r\\n        <PengerIkon size={48} />\\r\\n    </Sirkelmaske>\\r\\n)\" }, ...AktivSirkelmaskeMedBakgrunn.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport Veileder from 'app/components/veileder/Veileder';\\r\\n\\r\\nexport default {\\r\\n    title: 'components/Veileder',\\r\\n    component: Veileder,\\r\\n    decorators: [\\r\\n        (Story: Story) => (\\r\\n            <div style={{ margin: 'auto', width: '10em' }}>\\r\\n                <Story />\\r\\n            </div>\\r\\n        ),\\r\\n    ],\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <Veileder {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\n\\r\\nexport const MedAnsiktUndrende = Template.bind({});\\r\\nMedAnsiktUndrende.args = {\\r\\n    ansikt: 'undrende',\\r\\n};\\r\\n\\r\\nexport const MedAnsiktSkeptisk = Template.bind({});\\r\\nMedAnsiktSkeptisk.args = {\\r\\n    ansikt: 'skeptisk',\\r\\n};\\r\\n\\r\\nexport const MedFargeGrøn = Template.bind({});\\r\\nMedFargeGrøn.args = {\\r\\n    farge: 'gronn',\\r\\n};\\r\\n\\r\\nexport const MedFargeBlå = Template.bind({});\\r\\nMedFargeBlå.args = {\\r\\n    farge: 'bla',\\r\\n};\\r\\n\\r\\nexport const MedFargeTransparent = Template.bind({});\\r\\nMedFargeTransparent.args = {\\r\\n    farge: 'transparent',\\r\\n};\\r\\n\\r\\nexport const MedStilKompakt = Template.bind({});\\r\\nMedStilKompakt.args = {\\r\\n    stil: 'kompakt',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}},\"MedAnsiktUndrende\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}},\"MedAnsiktSkeptisk\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}},\"MedFargeGrøn\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}},\"MedFargeBlå\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}},\"MedFargeTransparent\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}},\"MedStilKompakt\":{\"startLoc\":{\"col\":29,\"line\":18},\"endLoc\":{\"col\":61,\"line\":18},\"startBody\":{\"col\":29,\"line\":18},\"endBody\":{\"col\":61,\"line\":18}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport Veileder from 'app/components/veileder/Veileder';\r\n\r\nexport default {\r\n    title: 'components/Veileder',\r\n    component: Veileder,\r\n    decorators: [\r\n        (Story: Story) => (\r\n            <div style={{ margin: 'auto', width: '10em' }}>\r\n                <Story />\r\n            </div>\r\n        ),\r\n    ],\r\n};\r\n\r\nconst Template: Story<any> = (args) => <Veileder {...args} />;\r\n\r\nexport const Default = Template.bind({});;\r\n\r\nexport const MedAnsiktUndrende = Template.bind({});;\r\nMedAnsiktUndrende.args = {\r\n    ansikt: 'undrende',\r\n};\r\n\r\nexport const MedAnsiktSkeptisk = Template.bind({});;\r\nMedAnsiktSkeptisk.args = {\r\n    ansikt: 'skeptisk',\r\n};\r\n\r\nexport const MedFargeGrøn = Template.bind({});;\r\nMedFargeGrøn.args = {\r\n    farge: 'gronn',\r\n};\r\n\r\nexport const MedFargeBlå = Template.bind({});;\r\nMedFargeBlå.args = {\r\n    farge: 'bla',\r\n};\r\n\r\nexport const MedFargeTransparent = Template.bind({});;\r\nMedFargeTransparent.args = {\r\n    farge: 'transparent',\r\n};\r\n\r\nexport const MedStilKompakt = Template.bind({});\r\nMedStilKompakt.args = {\r\n    stil: 'kompakt',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...Default.parameters };\nMedAnsiktUndrende.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...MedAnsiktUndrende.parameters };\nMedAnsiktSkeptisk.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...MedAnsiktSkeptisk.parameters };\nMedFargeGrøn.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...MedFargeGrøn.parameters };\nMedFargeBlå.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...MedFargeBlå.parameters };\nMedFargeTransparent.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...MedFargeTransparent.parameters };\nMedStilKompakt.parameters = { storySource: { source: \"(args) => <Veileder {...args} />\" }, ...MedStilKompakt.parameters };","import * as React from 'react';\r\nimport Modal from 'nav-frontend-modal';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Systemtittel, Normaltekst } from 'nav-frontend-typografi';\r\nimport { AdvarselIkon, bemUtils, intlUtils } from '@navikt/fp-common';\r\nimport { shouldChangeBrowser } from 'app/utils/browserUtils';\r\n\r\nimport './byttBrowserModal.less';\r\n\r\ninterface Props {\r\n    skalEndreNettleser: boolean;\r\n}\r\n\r\nexport const ByttBrowserModalImpl: React.FunctionComponent<Props> = ({ skalEndreNettleser }) => {\r\n    const [isOpen, toggleIsOpen] = React.useState(skalEndreNettleser);\r\n    const intl = useIntl();\r\n    const cls = bemUtils('bytt-browser-modal');\r\n    return (\r\n        <Modal\r\n            className={cls.block}\r\n            contentLabel={intlUtils(intl, 'sesjonUtløpt.tittel')}\r\n            closeButton={false}\r\n            isOpen={isOpen}\r\n            onRequestClose={() => undefined}\r\n        >\r\n            <AdvarselIkon />\r\n            <Systemtittel className=\"blokk-m\">{<FormattedMessage id=\"byttBrowser.tittel\" />}</Systemtittel>\r\n            <Normaltekst className=\"blokk-m\">{<FormattedMessage id=\"byttBrowser.ingress\" />}</Normaltekst>\r\n            <div className={cls.element('ok-knapp')}>\r\n                <Hovedknapp className={cls.element('ok-knapp')} onClick={() => toggleIsOpen(false)}>\r\n                    {<FormattedMessage id=\"ok\" />}\r\n                </Hovedknapp>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst ByttBrowserModal = () => <ByttBrowserModalImpl skalEndreNettleser={shouldChangeBrowser()} />;\r\n\r\nexport default ByttBrowserModal;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\n\\r\\nimport { ByttBrowserModalImpl as ByttBrowserModal } from 'app/pages/byttBrowserModal/ByttBrowserModal';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\n\\r\\nexport default {\\r\\n    title: 'pages/ByttBrowserModal',\\r\\n    component: ByttBrowserModal,\\r\\n    decorators: [withIntlProvider],\\r\\n};\\r\\n\\r\\nexport const Default = () => <ByttBrowserModal skalEndreNettleser />;\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":12},\"endLoc\":{\"col\":68,\"line\":12},\"startBody\":{\"col\":23,\"line\":12},\"endBody\":{\"col\":68,\"line\":12}}};\n    \nimport React from 'react';\r\n\r\nimport { ByttBrowserModalImpl as ByttBrowserModal } from 'app/pages/byttBrowserModal/ByttBrowserModal';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\n\r\nexport default {\r\n    title: 'pages/ByttBrowserModal',\r\n    component: ByttBrowserModal,\r\n    decorators: [withIntlProvider],\r\n};\r\n\r\nexport const Default = () => <ByttBrowserModal skalEndreNettleser />;\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => <ByttBrowserModal skalEndreNettleser />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport DinePersonopplysningerModal from 'app/pages/modaler/DinePersonopplysningerModal';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\n\\r\\nexport default {\\r\\n    title: 'pages/DinePersonopplysningerModal',\\r\\n    component: DinePersonopplysningerModal,\\r\\n    decorators: [withIntlProvider],\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = (args) => <DinePersonopplysningerModal {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    isOpen: true,\\r\\n    onRequestClose: () => alert('Du prøver å lukke'),\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":13},\"endLoc\":{\"col\":80,\"line\":13},\"startBody\":{\"col\":29,\"line\":13},\"endBody\":{\"col\":80,\"line\":13}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport DinePersonopplysningerModal from 'app/pages/modaler/DinePersonopplysningerModal';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\n\r\nexport default {\r\n    title: 'pages/DinePersonopplysningerModal',\r\n    component: DinePersonopplysningerModal,\r\n    decorators: [withIntlProvider],\r\n};\r\n\r\nconst Template: Story<any> = (args) => <DinePersonopplysningerModal {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n    isOpen: true,\r\n    onRequestClose: () => alert('Du prøver å lukke'),\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <DinePersonopplysningerModal {...args} />\" }, ...Default.parameters };","import { detect } from 'detect-browser';\r\n\r\nconst base64ToArrayBuffer = (base64: string) => {\r\n    const binaryString = window.atob(base64);\r\n    const bytes = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n};\r\n\r\nexport const openPdfPreview = (base64: string) => {\r\n    const browserInfo = detect();\r\n    const pdfBlob = new Blob([base64ToArrayBuffer(base64)], {\r\n        type: 'application/pdf',\r\n    });\r\n\r\n    if (\r\n        browserInfo &&\r\n        (browserInfo.name === 'edge' || browserInfo.name === 'ie') &&\r\n        window.navigator &&\r\n        window.navigator.msSaveOrOpenBlob\r\n    ) {\r\n        window.navigator.msSaveOrOpenBlob(pdfBlob);\r\n    } else {\r\n        window.open(URL.createObjectURL(pdfBlob));\r\n    }\r\n};\r\n","import * as React from 'react';\r\n\r\nconst SpotlightLetter = (props: any) => (\r\n    <svg\r\n        width={120}\r\n        height={120}\r\n        viewBox=\"0 0 120 120\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlns-xlink=\"http://www.w3.org/1999/xlink\"\r\n        {...props}\r\n    >\r\n        <title>Søknad sendt illustrasjon</title>\r\n        <defs>\r\n            <circle id=\"path-1\" cx=\"60\" cy=\"60\" r=\"60\" />\r\n            <circle id=\"path-3\" cx=\"8\" cy=\"8\" r=\"8\" />\r\n        </defs>\r\n        <g id=\"Spotlight/letter\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            <use id=\"Background\" fill=\"#9BD0B0\" xlinkHref=\"#path-1\" />\r\n            <g id=\"Letter\" transform=\"translate(32.000000, 30.000000)\">\r\n                <path\r\n                    d=\"M4.385,30.26975 C3.693,29.57675 0.418,27.19775 1.111,26.50475 L0,22.99075 L26.227,0.51975 C26.92,-0.17325 28.042,-0.17325 28.736,0.51975 L54.961,22.99075 L49.021,35.84775 C49.712,36.53975 27.301,48.01175 26.609,48.70575 L4.385,30.26975 Z\"\r\n                    id=\"Back\"\r\n                    fill=\"#0C576F\"\r\n                />\r\n                <g transform=\"translate(4.000000, 16.000000)\">\r\n                    <path\r\n                        d=\"M45.7388018,30.9845992 L1.50880182,30.9845992 C1.20380182,30.9845992 0.957801819,30.7355992 0.957801819,30.4345992 L0.957801819,0.606599213 C0.957801819,0.302599213 1.20380182,0.0555992126 1.50880182,0.0555992126 L45.7388018,0.0555992126 C46.0418018,0.0555992126 46.2878018,0.302599213 46.2878018,0.606599213 L46.2878018,30.4345992 C46.2878018,30.7355992 46.0418018,30.9845992 45.7388018,30.9845992\"\r\n                        id=\"Paper\"\r\n                        fill=\"#DCDCD2\"\r\n                    />\r\n                    <g id=\"Checkmark\" transform=\"translate(16.000000, 5.000000)\">\r\n                        <use id=\"Circle\" fill=\"#0C5EA8\" xlinkHref=\"#path-3\" />\r\n                        <path\r\n                            d=\"M6.56203584,9.48462091 L11.2605404,4.94732782 C11.6578208,4.5636786 12.2908893,4.57472885 12.6745385,4.97200925 C13.0581878,5.36928965 13.0471375,6.0023582 12.6498571,6.38600742 L7.19332991,11.6553145 C6.79622485,12.0387944 6.16353973,12.0279231 5.77983986,11.6311589 C5.72674155,11.5893288 5.6771113,11.5414566 5.63194475,11.4876292 L3.56731217,9.02709588 C3.21231038,8.60402121 3.26749434,7.97326562 3.69056901,7.61826382 C4.11364367,7.26326203 4.74439926,7.31844599 5.09940106,7.74152066 L6.56203584,9.48462091 Z\"\r\n                            id=\"Mark\"\r\n                            fill=\"#FFFFFF\"\r\n                        />\r\n                    </g>\r\n                </g>\r\n                <path\r\n                    d=\"M2.21639938,59.6589001 L46.9593994,59.6589001 C48.1063994,59.6589001 0.141399384,23.0289001 0.141399384,23.0289001 L0.141399384,57.5839001 C0.141399384,58.7289001 1.07039938,59.6589001 2.21639938,59.6589001\"\r\n                    id=\"Front-left\"\r\n                    fill=\"#4C92D9\"\r\n                />\r\n                <path\r\n                    d=\"M53.0298,59.6589001 L8.28679997,59.6589001 C7.14079997,59.6589001 55.1048,23.0289001 55.1048,23.0289001 L55.1048,57.5839001 C55.1048,58.7289001 54.1758,59.6589001 53.0298,59.6589001\"\r\n                    id=\"Front-right\"\r\n                    fill=\"#2C79C5\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default SpotlightLetter;\r\n","import React from 'react';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Normaltekst, Sidetittel } from 'nav-frontend-typografi';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport dayjs from 'dayjs';\r\nimport Person from 'app/types/Person';\r\nimport { Kvittering } from 'app/types/Kvittering';\r\nimport { bemUtils, Block, VedleggIkon } from '@navikt/fp-common';\r\nimport { openPdfPreview } from 'app/utils/pdfUtils';\r\nimport SpotlightLetter from 'app/assets/SpotlightLetter';\r\n\r\nimport './kvitteringHeader.less';\r\n\r\ninterface Props {\r\n    søker: Person;\r\n    kvittering: Kvittering;\r\n}\r\n\r\nconst KvitteringHeader: React.FunctionComponent<Props> = ({ søker, kvittering }) => {\r\n    const bem = bemUtils('kvitteringHeader');\r\n    const { pdf, mottattDato } = kvittering;\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <Block padBottom=\"l\">\r\n                <SpotlightLetter className={bem.element('spotlightLetter')} />\r\n            </Block>\r\n\r\n            <Block padBottom=\"l\">\r\n                <Sidetittel tag=\"h1\">\r\n                    <FormattedMessage\r\n                        id=\"søknadSendt.tittel\"\r\n                        values={{\r\n                            name: `${søker.fornavn} ${søker.etternavn}`,\r\n                        }}\r\n                    />\r\n                </Sidetittel>\r\n            </Block>\r\n\r\n            <Block padBottom=\"l\" visible={pdf !== undefined}>\r\n                <div className={bem.element('vedleggWrapper')}>\r\n                    <VedleggIkon className={bem.element('vedleggIkon')} width={20} height={20} />\r\n                    <Lenke\r\n                        className={bem.element('vedleggLink')}\r\n                        href={'#'}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            openPdfPreview(pdf);\r\n                        }}\r\n                    >\r\n                        <FormattedMessage id={'søknadSendt.pdf'} />\r\n                    </Lenke>\r\n                </div>\r\n            </Block>\r\n\r\n            <Block padBottom=\"l\">\r\n                <div className={bem.element('sendtInnTid')}>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"søknadSendt.sendtInn\" />\r\n                    </Normaltekst>\r\n                    <span style={{ width: '0.25rem' }} />\r\n                    {dayjs(mottattDato).format('D. MMMM YYYY')}, kl. {dayjs(mottattDato).format('HH:mm')}\r\n                </div>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KvitteringHeader;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Undertittel, Normaltekst } from 'nav-frontend-typografi';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { MissingAttachment } from 'app/types/MissingAttachment';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport { AdvarselIkon, bemUtils, Block, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport CheckmarkIkon from 'app/assets/CheckmarkIkon';\r\n\r\nimport './kvitteringSuksess.less';\r\n\r\ninterface Props {\r\n    missingAttachments: MissingAttachment[];\r\n}\r\n\r\nconst KvitteringSuksess: FunctionComponent<Props> = ({ missingAttachments }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('kvittering');\r\n    const isMissingAttachments = missingAttachments.length > 0;\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <div\r\n                className={bem.classNames(\r\n                    bem.element('suksess'),\r\n                    bem.modifierConditional('mangler-vedlegg', isMissingAttachments)\r\n                )}\r\n            >\r\n                <div className={bem.element('ikon')}>{isMissingAttachments ? <AdvarselIkon /> : <CheckmarkIkon />}</div>\r\n                <div className={bem.element('tekst')}>\r\n                    <Block padBottom=\"l\">\r\n                        <Undertittel>\r\n                            <FormattedMessage\r\n                                id={\r\n                                    isMissingAttachments\r\n                                        ? 'søknadSendt.info.tittel.isMissingAttachments'\r\n                                        : 'søknadSendt.info.tittel'\r\n                                }\r\n                            />\r\n                        </Undertittel>\r\n                    </Block>\r\n                    <div>\r\n                        <Normaltekst>\r\n                            <FormattedMessage\r\n                                id={\r\n                                    isMissingAttachments\r\n                                        ? 'søknadSendt.info.innhold.isMissingAttachments'\r\n                                        : 'søknadSendt.info.innhold'\r\n                                }\r\n                            />\r\n                        </Normaltekst>\r\n                        {isMissingAttachments && (\r\n                            <>\r\n                                <ul>\r\n                                    {missingAttachments.map((a) => (\r\n                                        <li key={guid()}>\r\n                                            <Normaltekst>\r\n                                                <FormattedMessage\r\n                                                    id={`søknadSendt.info.missingAttachment.${a.skjemanummer}`}\r\n                                                />\r\n                                            </Normaltekst>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n\r\n                                <UtvidetInformasjon\r\n                                    apneLabel={intlUtils(intl, 'søknadSendt.info.missingAttachment.lesMer')}\r\n                                >\r\n                                    <FormattedMessage id=\"søknadSendt.info.missingAttachment.lesMer.content\" />\r\n                                </UtvidetInformasjon>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KvitteringSuksess;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport EtikettBase from 'nav-frontend-etiketter';\r\nimport { LenkepanelBase } from 'nav-frontend-lenkepanel';\r\nimport { Undertittel, Ingress, Systemtittel, Normaltekst } from 'nav-frontend-typografi';\r\nimport links from 'app/links/links';\r\nimport { bemUtils, Block } from '@navikt/fp-common';\r\n\r\nimport './statusBoks.less';\r\n\r\ninterface Props {\r\n    saksNr: string;\r\n}\r\n\r\nconst StatusBoks: FunctionComponent<Props> = ({ saksNr }) => {\r\n    const bem = bemUtils('statusBoks');\r\n\r\n    return (\r\n        <Block>\r\n            <Block padBottom=\"l\">\r\n                <Systemtittel>\r\n                    <FormattedMessage id=\"søknadSendt.status.tittel\" />\r\n                </Systemtittel>\r\n            </Block>\r\n            <LenkepanelBase href={links.innsyn} border={true} className=\"statusBoks__lenkepanel\">\r\n                <div className={bem.block}>\r\n                    <div className={bem.element('left')}>\r\n                        <Block padBottom=\"l\">\r\n                            <Undertittel tag=\"h3\">\r\n                                <FormattedMessage id=\"søknadSendt.status.undertittel\" />\r\n                            </Undertittel>\r\n                        </Block>\r\n                        <EtikettBase type=\"fokus\">\r\n                            <FormattedMessage id=\"søknadSendt.status.status\" />\r\n                        </EtikettBase>\r\n                    </div>\r\n                    {saksNr && (\r\n                        <div className={bem.element('right')}>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"søknadSendt.status.saksnummer\" />\r\n                            </Normaltekst>\r\n                            <Ingress>{saksNr}</Ingress>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </LenkepanelBase>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default StatusBoks;\r\n","import * as React from 'react';\r\n\r\nconst UtbetalingerIkon = (props: any) => {\r\n    const { title, ...rest } = props;\r\n    return (\r\n        <svg focusable=\"false\" role=\"presentation\" width={46} height={37} {...rest}>\r\n            <g transform=\"translate(0 -6)\" fill=\"none\" fillRule=\"evenodd\">\r\n                <path fill=\"#E3B0A8\" d=\"M3.538 6.708H46v23.048H3.538z\" />\r\n                <path fill=\"#F1D8D4\" d=\"M37.153 6.708h5.308v23.048h-5.308z\" />\r\n                <path fill=\"#C2EAF7\" d=\"M1.77 8.481H44.23V31.53H1.77z\" />\r\n                <path fill=\"#E0F5FB\" d=\"M35.384 8.481h5.308V31.53h-5.308z\" />\r\n                <path fill=\"#9BD0B0\" d=\"M0 10.254h42.462v23.048H0z\" />\r\n                <path fill=\"#CDE7D8\" d=\"M33.615 10.254h5.308v23.048h-5.308z\" />\r\n                <path\r\n                    d=\"M5.308 20.775v-6.853h1.07l4.14 5.38v-5.38h1v6.853h-1.07l-4.14-5.386v5.386h-1zm7.645-3.338c0-1.138.351-2.028 1.054-2.672.702-.643 1.609-.965 2.72-.965.728 0 1.384.151 1.968.453.584.303 1.03.724 1.336 1.265.306.54.46 1.154.46 1.84 0 .695-.162 1.316-.484 1.865-.323.548-.78.964-1.371 1.246a4.389 4.389 0 0 1-1.914.423c-.742 0-1.405-.156-1.99-.468a3.205 3.205 0 0 1-1.328-1.276 3.457 3.457 0 0 1-.451-1.711zm1.075.014c0 .826.255 1.476.766 1.952.511.475 1.152.713 1.922.713.785 0 1.431-.24 1.938-.72.508-.48.761-1.161.761-2.043 0-.558-.108-1.045-.325-1.461a2.29 2.29 0 0 0-.952-.968 2.874 2.874 0 0 0-1.406-.343c-.738 0-1.373.22-1.905.661-.533.441-.799 1.177-.799 2.209zm7.764 3.324v-6.853h1.043v3.398l3.914-3.398h1.414l-3.307 2.776 3.452 4.077H26.93l-2.806-3.469-1.29 1.094v2.375h-1.043z\"\r\n                    fill=\"#117938\"\r\n                />\r\n                <ellipse fill=\"#FECB86\" fillRule=\"nonzero\" cx={8.846} cy={35.075} rx={7.077} ry={7.092} />\r\n                <path\r\n                    d=\"M19.462 42.167a5.313 5.313 0 0 1-5.308-5.32 5.313 5.313 0 0 1 5.308-5.318 5.313 5.313 0 0 1 5.307 5.319 5.313 5.313 0 0 1-5.307 5.319zm0-3.546c.977 0 1.769-.794 1.769-1.773 0-.98-.792-1.773-1.77-1.773-.977 0-1.769.794-1.769 1.773 0 .98.792 1.773 1.77 1.773z\"\r\n                    fill=\"#F0F2F2\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default UtbetalingerIkon;\r\n","import * as React from 'react';\r\n\r\nconst KalenderIkon = (props: any) => (\r\n    <svg focusable=\"false\" role=\"presentation\" width={34} height={31} {...props}>\r\n        <title>{'Group'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                d=\"M25.185 4.428c0-.698.564-1.265 1.26-1.265.694 0 1.259.567 1.259 1.265 0 .7-.565 1.266-1.26 1.266-.695 0-1.259-.567-1.259-1.266zm-18.889 0c0-.698.564-1.265 1.26-1.265.695 0 1.259.567 1.259 1.265 0 .7-.564 1.266-1.26 1.266a1.262 1.262 0 0 1-1.259-1.266zM31.79 0H2.21A2.2 2.2 0 0 0 0 2.191v6.033h34V2.191c0-.907-.557-1.686-1.35-2.02A2.224 2.224 0 0 0 31.79 0z\"\r\n                fill=\"#C42229\"\r\n            />\r\n            <path d=\"M0 8.224v20.522C0 29.99.99 31 2.21 31h29.58c1.22 0 2.21-1.01 2.21-2.254V8.224H0z\" fill=\"#E3E3DA\" />\r\n            <g fillRule=\"nonzero\">\r\n                <path\r\n                    d=\"M6.93 13.918a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93zM6.93 18.347a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\r\n                    fill=\"#78706A\"\r\n                />\r\n                <path\r\n                    d=\"M21.407 20.878a3.156 3.156 0 0 1-3.148-3.164 3.156 3.156 0 0 1 3.148-3.163 3.156 3.156 0 0 1 3.149 3.163 3.156 3.156 0 0 1-3.149 3.164zm0-1.266c1.044 0 1.89-.85 1.89-1.898a1.893 1.893 0 0 0-1.89-1.898c-1.043 0-1.888.85-1.888 1.898s.845 1.898 1.888 1.898z\"\r\n                    fill=\"#06893A\"\r\n                />\r\n                <path\r\n                    d=\"M6.93 22.776a.633.633 0 1 1 0-1.266h20.14a.633.633 0 1 1 0 1.266H6.93zM6.93 27.204a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\r\n                    fill=\"#78706A\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default KalenderIkon;\r\n","import * as React from 'react';\r\n\r\nconst KoffertIkon = (props: any) => (\r\n    <svg focusable=\"false\" role=\"presentation\" width={36} height={36} viewBox=\"0 0 48 48\" {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#593A32\"\r\n                d=\"M45.646 42H2.354a.811.811 0 0 1-.806-.816V22.468c0-.45.361-.816.806-.816h43.292c.445 0 .806.366.806.816v18.716c0 .45-.361.816-.806.816\"\r\n            />\r\n            <path\r\n                fill=\"#333\"\r\n                d=\"M1.548 27.913h44.904V24H1.548zm28.646-18H28.65V8.786c0-.624-.47-1.13-1.052-1.13h-7.197c-.582 0-1.054.506-1.054 1.13v1.127h-1.542V8.626C17.805 7.176 18.9 6 20.251 6h7.496c1.351 0 2.446 1.176 2.446 2.626v1.287z\"\r\n            />\r\n            <path\r\n                fill=\"#723B30\"\r\n                d=\"M47.206 27.02a.79.79 0 0 0 .794-.783V10.696a.789.789 0 0 0-.794-.783H.794a.789.789 0 0 0-.794.783v15.54c0 .433.356.783.794.783h46.412z\"\r\n            />\r\n            <path\r\n                fill=\"#333\"\r\n                d=\"M21.61 30.26c-1.243 0-2.255-.945-2.255-2.108V26.89c0-1.162 1.012-2.107 2.255-2.107h4.78c1.244 0 2.255.945 2.255 2.107v1.262c0 1.163-1.011 2.109-2.255 2.109h-4.78z\"\r\n            />\r\n            <path\r\n                fill=\"#F79221\"\r\n                d=\"M26.432 25.565h-4.864c-.794 0-1.439.594-1.439 1.325v1.264c0 .732.645 1.324 1.44 1.324h4.863c.794 0 1.439-.592 1.439-1.324V26.89c0-.731-.645-1.325-1.44-1.325\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default KoffertIkon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport UtbetalingerIkon from 'app/assets/CashIkon';\r\nimport KalenderIkon from 'app/assets/KalenderIkon';\r\nimport KoffertIkon from 'app/assets/KoffertIkon';\r\n\r\ninterface Props {\r\n    type: OppsummeringIkonType;\r\n    className?: string;\r\n}\r\n\r\nexport type OppsummeringIkonType = 'koffert' | 'kalender' | 'cash';\r\n\r\nconst SendSøknadIkon: FunctionComponent<Props> = ({ type, className }) => {\r\n    switch (type) {\r\n        case 'cash':\r\n            return <UtbetalingerIkon className={className} width={48} height={48} />;\r\n        case 'koffert':\r\n            return <KoffertIkon className={className} width={48} height={48} />;\r\n        case 'kalender':\r\n            return <KalenderIkon className={className} width={48} height={48} />;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\nexport default SendSøknadIkon;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nimport SendSøknadIkon, { OppsummeringIkonType } from './SendSøknadIkon';\r\nimport { bemUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\n\r\nimport './søknadSendtSectionHeader.less';\r\nimport { Element } from 'nav-frontend-typografi';\r\n\r\ninterface Props {\r\n    title: ReactNode;\r\n    info?: ReactNode;\r\n    infoApneLabel?: ReactNode;\r\n    type: OppsummeringIkonType;\r\n    children?: ReactNode;\r\n}\r\n\r\nconst SøknadSendtSectionHeader: FunctionComponent<Props> = ({ title, info, type, infoApneLabel, children }) => {\r\n    const bem = bemUtils('søknadSendtSectionHeader');\r\n\r\n    return (\r\n        <section className={bem.block}>\r\n            <div className={bem.element('punkt')}>\r\n                <div className={bem.element('ikon')}>\r\n                    <SendSøknadIkon type={type} />\r\n                </div>\r\n                <div className={bem.element('content')}>\r\n                    <Element>{title}</Element>\r\n                    <UtvidetInformasjon apneLabel={infoApneLabel}>{info}</UtvidetInformasjon>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SøknadSendtSectionHeader;\r\n","import React from 'react';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\n\r\nimport './søknadSendtTittel.less';\r\n\r\nconst SøknadSendtTittel = () => (\r\n    <div className=\"søknadSendtTittel\" role=\"main\" aria-label=\"Foreldrepengeøksnaden\">\r\n        <Undertittel>Foreldrepengeøksnaden</Undertittel>\r\n    </div>\r\n);\r\n\r\nexport default SøknadSendtTittel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport DocumentTitle from 'react-document-title';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Ingress, Normaltekst } from 'nav-frontend-typografi';\r\n\r\nimport KvitteringHeader from './components/KvitteringHeader';\r\nimport KvitteringSuksess from './components/KvitteringSuksess';\r\nimport StatusBoks from './components/StatusBoks';\r\nimport SøknadSendtSectionHeader from './components/SøknadSendtSectionHeader';\r\nimport { Kvittering } from 'app/types/Kvittering';\r\nimport { bemUtils, Block, intlUtils } from '@navikt/fp-common';\r\nimport { openPdfPreview } from 'app/utils/pdfUtils';\r\nimport links from 'app/links/links';\r\nimport { logAmplitudeEvent, PageKeys } from 'app/amplitude/amplitude';\r\nimport Api from 'app/api/api';\r\nimport dayjs from 'dayjs';\r\nimport NavFrontendSpinner from 'nav-frontend-spinner';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport { MissingAttachment } from 'app/types/MissingAttachment';\r\n\r\nimport './søknadSendt.less';\r\nimport SøknadSendtTittel from './components/SøknadSendtTittel';\r\n\r\nconst SøknadSendt = () => {\r\n    const [kvittering, setKvittering] = useState<Kvittering>();\r\n    const søkerinfo = useSøkerinfo();\r\n    const missingAttachments: MissingAttachment[] = [];\r\n    const erEndringssøknad = false;\r\n    const behandlingsFrist = '2021-06-14';\r\n    const intl = useIntl();\r\n    const { person, arbeidsforhold } = søkerinfo;\r\n    const bem = bemUtils('søknadSendt');\r\n\r\n    useEffect(() => {\r\n        Api.sendStorageKvittering({ innsendingstidspunkt: dayjs().format('YYYY-MM-DD') }, søkerinfo.person.fnr).then(\r\n            (response) => setKvittering(response.data)\r\n        );\r\n\r\n        logAmplitudeEvent('sidevisning', {\r\n            app: 'foreldrepengesoknad',\r\n            team: 'foreldrepenger',\r\n            pageKey: PageKeys.SøknadSendt,\r\n        });\r\n    }, [søkerinfo.person.fnr]);\r\n\r\n    if (!kvittering) {\r\n        return (\r\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\r\n                <NavFrontendSpinner type=\"XXL\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DocumentTitle title={intlUtils(intl, 'søknad.søknadSendt')} />\r\n            <SøknadSendtTittel />\r\n            <div className={bem.block}>\r\n                <KvitteringHeader søker={person} kvittering={kvittering} />\r\n\r\n                <Block padBottom=\"l\">\r\n                    <KvitteringSuksess missingAttachments={missingAttachments} />\r\n                </Block>\r\n\r\n                {!erEndringssøknad && (\r\n                    <>\r\n                        <Block padBottom=\"l\">\r\n                            <SøknadSendtSectionHeader\r\n                                title={intlUtils(intl, 'søknadSendt.når.tittel')}\r\n                                type=\"kalender\"\r\n                                info={intlUtils(intl, 'søknadSendt.når.infoBox')}\r\n                                infoApneLabel={intlUtils(intl, 'søknadSendt.når.infoBox.apneLabel')}\r\n                            >\r\n                                <Normaltekst>{dayjs(behandlingsFrist).format('D. MMMM YYYY')}</Normaltekst>\r\n                            </SøknadSendtSectionHeader>\r\n                        </Block>\r\n\r\n                        {arbeidsforhold && arbeidsforhold.length > 0 && (\r\n                            <Block padBottom=\"l\">\r\n                                <SøknadSendtSectionHeader\r\n                                    title={intlUtils(intl, 'søknadSendt.infoFraArbeidsgiver.tittel')}\r\n                                    type=\"koffert\"\r\n                                    info={intlUtils(intl, 'søknadSendt.infoFraArbeidsgiver.infoBox')}\r\n                                    infoApneLabel={intlUtils(intl, 'søknadSendt.infoFraArbeidsgiver.infoBox.apneLabel')}\r\n                                >\r\n                                    <Block padBottom=\"l\">\r\n                                        <Normaltekst>\r\n                                            <FormattedMessage id={'søknadSendt.infoFraArbeidsgiver.del1'} />\r\n                                        </Normaltekst>\r\n                                    </Block>\r\n                                    <Normaltekst>\r\n                                        <Lenke\r\n                                            href={'#'}\r\n                                            onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                openPdfPreview(kvittering.infoskrivPdf);\r\n                                            }}\r\n                                        >\r\n                                            <FormattedMessage id={'søknadSendt.infoFraArbeidsgiver.del2'} />\r\n                                        </Lenke>\r\n                                    </Normaltekst>\r\n                                </SøknadSendtSectionHeader>\r\n                            </Block>\r\n                        )}\r\n\r\n                        <Block padBottom=\"l\">\r\n                            <SøknadSendtSectionHeader\r\n                                title={intlUtils(intl, 'søknadSendt.pengene.tittel')}\r\n                                type=\"cash\"\r\n                                info={intlUtils(intl, 'søknadSendt.pengene.infoBox')}\r\n                                infoApneLabel={intlUtils(intl, 'søknadSendt.pengene.infoBox.apneLabel')}\r\n                            >\r\n                                {person.bankkonto && person.bankkonto.kontonummer ? (\r\n                                    <>\r\n                                        <Block padBottom=\"l\">\r\n                                            <Normaltekst>\r\n                                                <FormattedMessage id=\"søknadSendt.pengene.kontonummer\" />\r\n                                            </Normaltekst>\r\n                                        </Block>\r\n                                        <Block padBottom=\"l\">\r\n                                            <Ingress>{person.bankkonto && person.bankkonto.kontonummer}</Ingress>\r\n                                        </Block>\r\n                                        <Block padBottom=\"l\">\r\n                                            <Normaltekst>\r\n                                                <Lenke href={links.brukerprofil}>\r\n                                                    <FormattedMessage id=\"søknadSendt.pengene.kontonummer.endre\" />\r\n                                                </Lenke>\r\n                                            </Normaltekst>\r\n                                        </Block>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Block padBottom=\"l\">\r\n                                            <Normaltekst>\r\n                                                <FormattedMessage id=\"søknadSendt.pengene.ingenKontonummer\" />\r\n                                            </Normaltekst>\r\n                                        </Block>\r\n                                        <Block padBottom=\"l\">\r\n                                            <Normaltekst>\r\n                                                <Lenke href={links.brukerprofil}>\r\n                                                    <FormattedMessage id=\"søknadSendt.pengene.kontonummer.leggTil\" />\r\n                                                </Lenke>\r\n                                            </Normaltekst>\r\n                                        </Block>\r\n                                    </>\r\n                                )}\r\n                            </SøknadSendtSectionHeader>\r\n                        </Block>\r\n                    </>\r\n                )}\r\n\r\n                <StatusBoks saksNr={kvittering.saksNr} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SøknadSendt;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport { SøkerinfoDTO, SøkerinfoDTOArbeidsforhold } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport SøknadSendt from 'app/pages/søknadSendt/SøknadSendt';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\nimport ForeldrepengerStateMock from '../../utils/ForeldrepengerStateMock';\\r\\nimport withForeldrepengersøknadContext from '../../decorators/withForeldrepengersøknadContext';\\r\\nimport AxiosMock from '../../utils/AxiosMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'pages/SøknadSendt',\\r\\n    component: SøknadSendt,\\r\\n    decorators: [withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    erFerdig: boolean;\\r\\n    bankkonto?: {\\r\\n        kontonummer: number;\\r\\n    };\\r\\n    arbeidsforhold: SøkerinfoDTOArbeidsforhold[];\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ erFerdig, bankkonto, arbeidsforhold }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        if (erFerdig) {\\r\\n            apiMock.onPost('/storage/kvittering/foreldrepenger').replyOnce(200, {});\\r\\n        }\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={{} as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={\\r\\n                    {\\r\\n                        søker: { fnr: '1233434', fornavn: 'Espen', etternavn: 'Utvikler', bankkonto, arbeidsforhold },\\r\\n                    } as SøkerinfoDTO\\r\\n                }\\r\\n            >\\r\\n                <SøknadSendt />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    erFerdig: true,\\r\\n};\\r\\n\\r\\nexport const MedBankkonto = Template.bind({});\\r\\nMedBankkonto.args = {\\r\\n    erFerdig: true,\\r\\n    bankkonto: { kontonummer: 5646464535 },\\r\\n};\\r\\n\\r\\nexport const MedArbeidsforhold = Template.bind({});\\r\\nMedArbeidsforhold.args = {\\r\\n    erFerdig: true,\\r\\n    arbeidsforhold: [{} as SøkerinfoDTOArbeidsforhold],\\r\\n};\\r\\n\\r\\nexport const VenterPåLagring = Template.bind({});\\r\\nVenterPåLagring.args = {\\r\\n    erFerdig: false,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":47},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":47}},\"MedBankkonto\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":47},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":47}},\"MedArbeidsforhold\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":47},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":47}},\"VenterPåLagring\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":47},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":47}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport { SøkerinfoDTO, SøkerinfoDTOArbeidsforhold } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport SøknadSendt from 'app/pages/søknadSendt/SøknadSendt';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\nimport ForeldrepengerStateMock from '../../utils/ForeldrepengerStateMock';\r\nimport withForeldrepengersøknadContext from '../../decorators/withForeldrepengersøknadContext';\r\nimport AxiosMock from '../../utils/AxiosMock';\r\n\r\nexport default {\r\n    title: 'pages/SøknadSendt',\r\n    component: SøknadSendt,\r\n    decorators: [withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    erFerdig: boolean;\r\n    bankkonto?: {\r\n        kontonummer: number;\r\n    };\r\n    arbeidsforhold: SøkerinfoDTOArbeidsforhold[];\r\n}\r\n\r\nconst Template: Story<Props> = ({ erFerdig, bankkonto, arbeidsforhold }) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        if (erFerdig) {\r\n            apiMock.onPost('/storage/kvittering/foreldrepenger').replyOnce(200, {});\r\n        }\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock\r\n                søknad={{} as ForeldrepengesøknadContextState}\r\n                søkerinfo={\r\n                    {\r\n                        søker: { fnr: '1233434', fornavn: 'Espen', etternavn: 'Utvikler', bankkonto, arbeidsforhold },\r\n                    } as SøkerinfoDTO\r\n                }\r\n            >\r\n                <SøknadSendt />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    erFerdig: true,\r\n};\r\n\r\nexport const MedBankkonto = Template.bind({});;\r\nMedBankkonto.args = {\r\n    erFerdig: true,\r\n    bankkonto: { kontonummer: 5646464535 },\r\n};\r\n\r\nexport const MedArbeidsforhold = Template.bind({});;\r\nMedArbeidsforhold.args = {\r\n    erFerdig: true,\r\n    arbeidsforhold: [{} as SøkerinfoDTOArbeidsforhold],\r\n};\r\n\r\nexport const VenterPåLagring = Template.bind({});\r\nVenterPåLagring.args = {\r\n    erFerdig: false,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ erFerdig, bankkonto, arbeidsforhold }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        if (erFerdig) {\\r\\n            apiMock.onPost('/storage/kvittering/foreldrepenger').replyOnce(200, {});\\r\\n        }\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={{} as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={\\r\\n                    {\\r\\n                        søker: { fnr: '1233434', fornavn: 'Espen', etternavn: 'Utvikler', bankkonto, arbeidsforhold },\\r\\n                    } as SøkerinfoDTO\\r\\n                }\\r\\n            >\\r\\n                <SøknadSendt />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nMedBankkonto.parameters = { storySource: { source: \"({ erFerdig, bankkonto, arbeidsforhold }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        if (erFerdig) {\\r\\n            apiMock.onPost('/storage/kvittering/foreldrepenger').replyOnce(200, {});\\r\\n        }\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={{} as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={\\r\\n                    {\\r\\n                        søker: { fnr: '1233434', fornavn: 'Espen', etternavn: 'Utvikler', bankkonto, arbeidsforhold },\\r\\n                    } as SøkerinfoDTO\\r\\n                }\\r\\n            >\\r\\n                <SøknadSendt />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...MedBankkonto.parameters };\nMedArbeidsforhold.parameters = { storySource: { source: \"({ erFerdig, bankkonto, arbeidsforhold }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        if (erFerdig) {\\r\\n            apiMock.onPost('/storage/kvittering/foreldrepenger').replyOnce(200, {});\\r\\n        }\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={{} as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={\\r\\n                    {\\r\\n                        søker: { fnr: '1233434', fornavn: 'Espen', etternavn: 'Utvikler', bankkonto, arbeidsforhold },\\r\\n                    } as SøkerinfoDTO\\r\\n                }\\r\\n            >\\r\\n                <SøknadSendt />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...MedArbeidsforhold.parameters };\nVenterPåLagring.parameters = { storySource: { source: \"({ erFerdig, bankkonto, arbeidsforhold }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        if (erFerdig) {\\r\\n            apiMock.onPost('/storage/kvittering/foreldrepenger').replyOnce(200, {});\\r\\n        }\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={{} as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={\\r\\n                    {\\r\\n                        søker: { fnr: '1233434', fornavn: 'Espen', etternavn: 'Utvikler', bankkonto, arbeidsforhold },\\r\\n                    } as SøkerinfoDTO\\r\\n                }\\r\\n            >\\r\\n                <SøknadSendt />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...VenterPåLagring.parameters };","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum VelkommenFormField {\r\n    harForståttRettigheterOgPlikter = 'harForståttRettigheterOgPlikter',\r\n}\r\n\r\nexport interface VelkommenFormData {\r\n    [VelkommenFormField.harForståttRettigheterOgPlikter]: boolean;\r\n}\r\n\r\nexport const getInitialVelkommenValues = (harForståttRettigheterOgPlikter: boolean): VelkommenFormData => {\r\n    return {\r\n        harForståttRettigheterOgPlikter,\r\n    };\r\n};\r\n\r\nexport const VelkommenFormComponents = getTypedFormComponents<VelkommenFormField, VelkommenFormData, string>();\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateHarForståttRettigheterOgPlikter = (intl: IntlShape) => (value: boolean) => {\r\n    if (value !== true) {\r\n        return intlUtils(intl, 'valideringsfeil.velkommen.harForståttRettigheterOgPlikter.påkrevd');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import { bemUtils, Block, intlUtils, LanguageToggle, Locale, Sidebanner } from '@navikt/fp-common';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport React, { useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport {\r\n    getInitialVelkommenValues,\r\n    VelkommenFormComponents,\r\n    VelkommenFormData,\r\n    VelkommenFormField,\r\n} from './velkommenFormConfig';\r\nimport DinePlikter from 'app/components/dine-plikter/DinePlikter';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport DinePersonopplysningerModal from '../modaler/DinePersonopplysningerModal';\r\n\r\nimport './velkommen.less';\r\nimport { validateHarForståttRettigheterOgPlikter } from './validation/velkommenValidation';\r\nimport SøknadRoutes from 'app/routes/routes';\r\n\r\ninterface Props {\r\n    fornavn: string;\r\n    onChangeLocale: (locale: Locale) => void;\r\n    locale: Locale;\r\n}\r\n\r\nconst Velkommen: React.FunctionComponent<Props> = ({ fornavn, locale, onChangeLocale }) => {\r\n    const intl = useIntl();\r\n    const søknad = useSøknad();\r\n    const [isDinePersonopplysningerModalOpen, setDinePersonopplysningerModalOpen] = useState(false);\r\n    const bem = bemUtils('velkommen');\r\n\r\n    const onValidSubmitHandler = (values: Partial<VelkommenFormData>) => {\r\n        return [actionCreator.setVelkommen(values.harForståttRettigheterOgPlikter!)];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.SØKERSITUASJON);\r\n\r\n    return (\r\n        <VelkommenFormComponents.FormikWrapper\r\n            initialValues={getInitialVelkommenValues(søknad.harGodkjentVilkår)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={() => {\r\n                return (\r\n                    <VelkommenFormComponents.Form includeButtons={false}>\r\n                        <LanguageToggle\r\n                            locale={locale}\r\n                            availableLocales={['nb', 'nn']}\r\n                            toggle={(l: Locale) => onChangeLocale(l)}\r\n                        />\r\n                        <Sidebanner\r\n                            dialog={{\r\n                                title: intlUtils(intl, 'velkommen.bobletittel', { name: fornavn }),\r\n                                text: (\r\n                                    <>\r\n                                        <Block padBottom=\"m\">\r\n                                            <FormattedMessage id={'velkommen.bobletekst'} />\r\n                                        </Block>\r\n                                    </>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <div className={bem.block}>\r\n                            <Block padBottom=\"xl\">\r\n                                <VelkommenFormComponents.ConfirmationCheckbox\r\n                                    name={VelkommenFormField.harForståttRettigheterOgPlikter}\r\n                                    label={intlUtils(intl, 'velkommen.samtykke')}\r\n                                    validate={validateHarForståttRettigheterOgPlikter(intl)}\r\n                                >\r\n                                    <>\r\n                                        <Block padBottom=\"l\">\r\n                                            <FormattedMessage id=\"velkommen.samtykkeIntro.del1\" />\r\n                                        </Block>\r\n                                        <Block padBottom=\"m\">\r\n                                            <DinePlikter />\r\n                                        </Block>\r\n                                        <Block padBottom=\"l\">\r\n                                            <FormattedMessage id=\"velkommen.samtykkeIntro.del2\" />\r\n                                        </Block>\r\n                                        <FormattedMessage id=\"velkommen.samtykkeIntro.del3\" />\r\n                                    </>\r\n                                </VelkommenFormComponents.ConfirmationCheckbox>\r\n                            </Block>\r\n                            <Block padBottom=\"l\">\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <Hovedknapp>Begynn med søknad</Hovedknapp>\r\n                                </div>\r\n                            </Block>\r\n                            <Normaltekst className={bem.element('personopplysningerLink')}>\r\n                                <a\r\n                                    className=\"lenke\"\r\n                                    href=\"#\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setDinePersonopplysningerModalOpen(true);\r\n                                    }}\r\n                                >\r\n                                    <FormattedMessage id=\"velkommen.lesMerOmPersonopplysninger\" />\r\n                                </a>\r\n                            </Normaltekst>\r\n                            <DinePersonopplysningerModal\r\n                                isOpen={isDinePersonopplysningerModalOpen}\r\n                                onRequestClose={() => setDinePersonopplysningerModalOpen(false)}\r\n                            />\r\n                        </div>\r\n                    </VelkommenFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Velkommen;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport Velkommen from 'app/pages/velkommen/Velkommen';\\r\\nimport withIntlProvider from '../../decorators/withIntl';\\r\\nimport ForeldrepengerStateMock from '../../utils/ForeldrepengerStateMock';\\r\\nimport withForeldrepengersøknadContext from '../../decorators/withForeldrepengersøknadContext';\\r\\n\\r\\nexport default {\\r\\n    title: 'pages/Velkommen',\\r\\n    component: Velkommen,\\r\\n    decorators: [withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\nconst Template: Story<any> = ({ harGodkjentVilkår }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock\\r\\n            søknad={{ søknad: { harGodkjentVilkår } } as ForeldrepengesøknadContextState}\\r\\n            søkerinfo={{ søker: { fnr: '1233434' } } as SøkerinfoDTO}\\r\\n        >\\r\\n            <Velkommen fornavn=\\\"Espen\\\" onChangeLocale={() => undefined} locale=\\\"nb\\\" />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    harGodkjentVilkår: false,\\r\\n};\\r\\n\\r\\nexport const HarAlleredeLestOgForstått = Template.bind({});\\r\\nHarAlleredeLestOgForstått.args = {\\r\\n    harGodkjentVilkår: true,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":17},\"endLoc\":{\"col\":1,\"line\":26},\"startBody\":{\"col\":29,\"line\":17},\"endBody\":{\"col\":1,\"line\":26}},\"HarAlleredeLestOgForstått\":{\"startLoc\":{\"col\":29,\"line\":17},\"endLoc\":{\"col\":1,\"line\":26},\"startBody\":{\"col\":29,\"line\":17},\"endBody\":{\"col\":1,\"line\":26}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport Velkommen from 'app/pages/velkommen/Velkommen';\r\nimport withIntlProvider from '../../decorators/withIntl';\r\nimport ForeldrepengerStateMock from '../../utils/ForeldrepengerStateMock';\r\nimport withForeldrepengersøknadContext from '../../decorators/withForeldrepengersøknadContext';\r\n\r\nexport default {\r\n    title: 'pages/Velkommen',\r\n    component: Velkommen,\r\n    decorators: [withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\nconst Template: Story<any> = ({ harGodkjentVilkår }) => {\r\n    return (\r\n        <ForeldrepengerStateMock\r\n            søknad={{ søknad: { harGodkjentVilkår } } as ForeldrepengesøknadContextState}\r\n            søkerinfo={{ søker: { fnr: '1233434' } } as SøkerinfoDTO}\r\n        >\r\n            <Velkommen fornavn=\"Espen\" onChangeLocale={() => undefined} locale=\"nb\" />\r\n        </ForeldrepengerStateMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    harGodkjentVilkår: false,\r\n};\r\n\r\nexport const HarAlleredeLestOgForstått = Template.bind({});\r\nHarAlleredeLestOgForstått.args = {\r\n    harGodkjentVilkår: true,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ harGodkjentVilkår }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock\\r\\n            søknad={{ søknad: { harGodkjentVilkår } } as ForeldrepengesøknadContextState}\\r\\n            søkerinfo={{ søker: { fnr: '1233434' } } as SøkerinfoDTO}\\r\\n        >\\r\\n            <Velkommen fornavn=\\\"Espen\\\" onChangeLocale={() => undefined} locale=\\\"nb\\\" />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nHarAlleredeLestOgForstått.parameters = { storySource: { source: \"({ harGodkjentVilkår }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock\\r\\n            søknad={{ søknad: { harGodkjentVilkår } } as ForeldrepengesøknadContextState}\\r\\n            søkerinfo={{ søker: { fnr: '1233434' } } as SøkerinfoDTO}\\r\\n        >\\r\\n            <Velkommen fornavn=\\\"Espen\\\" onChangeLocale={() => undefined} locale=\\\"nb\\\" />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...HarAlleredeLestOgForstått.parameters };","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { Attachment } from 'app/types/Attachment';\r\n\r\nexport enum AnnenForelderFormField {\r\n    kanIkkeOppgis = 'kanIkkeOppgis',\r\n    harRettPåForeldrepenger = 'harRettPåForeldrepenger',\r\n    erInformertOmSøknaden = 'erInformertOmSøknaden',\r\n    fornavn = 'fornavn',\r\n    etternavn = 'etternavn',\r\n    fnr = 'fnr',\r\n    utenlandskFnr = 'utenlandskFnr',\r\n    aleneOmOmsorg = 'aleneOmOmsorg',\r\n    erMorUfør = 'erMorUfør',\r\n    datoForAleneomsorg = 'datoForAleneomsorg',\r\n    bostedsland = 'bostedsland',\r\n    dokumentasjonAvAleneomsorg = 'dokumentasjonAvAleneomsorg',\r\n}\r\n\r\nexport interface AnnenForelderFormData {\r\n    [AnnenForelderFormField.kanIkkeOppgis]: boolean;\r\n    [AnnenForelderFormField.harRettPåForeldrepenger]: YesOrNo;\r\n    [AnnenForelderFormField.erInformertOmSøknaden]: YesOrNo;\r\n    [AnnenForelderFormField.fornavn]: string;\r\n    [AnnenForelderFormField.etternavn]: string;\r\n    [AnnenForelderFormField.fnr]: string;\r\n    [AnnenForelderFormField.utenlandskFnr]: boolean;\r\n    [AnnenForelderFormField.aleneOmOmsorg]: YesOrNo;\r\n    [AnnenForelderFormField.erMorUfør]: YesOrNo;\r\n    [AnnenForelderFormField.datoForAleneomsorg]: string;\r\n    [AnnenForelderFormField.bostedsland]: string;\r\n    [AnnenForelderFormField.dokumentasjonAvAleneomsorg]: Attachment[];\r\n}\r\n\r\nexport const AnnenForelderFormComponents = getTypedFormComponents<\r\n    AnnenForelderFormField,\r\n    AnnenForelderFormData,\r\n    string\r\n>();\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport AnnenForelder, { isAnnenForelderIkkeOppgitt, isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport Barn from 'app/context/types/Barn';\r\nimport Søker from 'app/context/types/Søker';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { RegistrertBarn } from 'app/types/Person';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport { lagSendSenereDokumentNårIngenAndreFinnes } from 'app/utils/vedleggUtils';\r\nimport { AnnenForelderFormData, AnnenForelderFormField } from './annenforelderFormConfig';\r\n\r\nexport const initialAnnenForelderValues: AnnenForelderFormData = {\r\n    [AnnenForelderFormField.kanIkkeOppgis]: false,\r\n    [AnnenForelderFormField.harRettPåForeldrepenger]: YesOrNo.UNANSWERED,\r\n    [AnnenForelderFormField.erInformertOmSøknaden]: YesOrNo.UNANSWERED,\r\n    [AnnenForelderFormField.fornavn]: '',\r\n    [AnnenForelderFormField.etternavn]: '',\r\n    [AnnenForelderFormField.fnr]: '',\r\n    [AnnenForelderFormField.utenlandskFnr]: false,\r\n    [AnnenForelderFormField.aleneOmOmsorg]: YesOrNo.UNANSWERED,\r\n    [AnnenForelderFormField.erMorUfør]: YesOrNo.UNANSWERED,\r\n    [AnnenForelderFormField.datoForAleneomsorg]: '',\r\n    [AnnenForelderFormField.bostedsland]: '',\r\n    [AnnenForelderFormField.dokumentasjonAvAleneomsorg]: [],\r\n};\r\n\r\nexport const cleanAnnenForelderFormData = (\r\n    values: AnnenForelderFormData,\r\n    visibility: QuestionVisibility<AnnenForelderFormField, undefined>,\r\n    registrertBarn: RegistrertBarn | undefined\r\n): AnnenForelderFormData => {\r\n    const cleanedData: AnnenForelderFormData = {\r\n        aleneOmOmsorg: visibility.isVisible(AnnenForelderFormField.aleneOmOmsorg)\r\n            ? values.aleneOmOmsorg\r\n            : YesOrNo.UNANSWERED,\r\n        bostedsland: visibility.isVisible(AnnenForelderFormField.bostedsland) ? values.bostedsland : '',\r\n        datoForAleneomsorg: visibility.isVisible(AnnenForelderFormField.datoForAleneomsorg)\r\n            ? values.datoForAleneomsorg\r\n            : '',\r\n        dokumentasjonAvAleneomsorg: visibility.isVisible(AnnenForelderFormField.dokumentasjonAvAleneomsorg)\r\n            ? lagSendSenereDokumentNårIngenAndreFinnes(\r\n                  values.dokumentasjonAvAleneomsorg,\r\n                  AttachmentType.ALENEOMSORG,\r\n                  Skjemanummer.DOK_AV_ALENEOMSORG\r\n              )\r\n            : [],\r\n        erInformertOmSøknaden: visibility.isVisible(AnnenForelderFormField.erInformertOmSøknaden)\r\n            ? values.erInformertOmSøknaden\r\n            : YesOrNo.UNANSWERED,\r\n        erMorUfør: visibility.isVisible(AnnenForelderFormField.erMorUfør) ? values.erMorUfør : YesOrNo.UNANSWERED,\r\n        etternavn: visibility.isVisible(AnnenForelderFormField.etternavn) ? values.etternavn : '',\r\n        fnr: visibility.isVisible(AnnenForelderFormField.fnr) ? values.fnr : '',\r\n        fornavn: visibility.isVisible(AnnenForelderFormField.fornavn) ? values.fornavn : '',\r\n        harRettPåForeldrepenger: visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepenger)\r\n            ? values.harRettPåForeldrepenger\r\n            : YesOrNo.UNANSWERED,\r\n        kanIkkeOppgis: visibility.isVisible(AnnenForelderFormField.kanIkkeOppgis) ? values.kanIkkeOppgis : false,\r\n        utenlandskFnr: visibility.isVisible(AnnenForelderFormField.utenlandskFnr) ? values.utenlandskFnr : false,\r\n    };\r\n\r\n    if (!!registrertBarn && !!registrertBarn.annenForelder) {\r\n        return {\r\n            ...cleanedData,\r\n            fornavn: registrertBarn.annenForelder.fornavn,\r\n            etternavn: registrertBarn.annenForelder.etternavn,\r\n            fnr: registrertBarn.annenForelder.fnr,\r\n        };\r\n    }\r\n\r\n    return cleanedData;\r\n};\r\n\r\nexport const mapAnnenForelderFormToState = (values: Partial<AnnenForelderFormData>): AnnenForelder => {\r\n    if (values.kanIkkeOppgis === false) {\r\n        return {\r\n            etternavn: hasValue(values.etternavn) ? values.etternavn : undefined,\r\n            fornavn: hasValue(values.fornavn) ? values.fornavn : undefined,\r\n            fnr: hasValue(values.fnr) ? values.fnr : undefined,\r\n            bostedsland: hasValue(values.bostedsland) ? values.bostedsland : undefined,\r\n            utenlandskFnr: hasValue(values.utenlandskFnr) ? values.utenlandskFnr : undefined,\r\n            erUfør: convertYesOrNoOrUndefinedToBoolean(values.erMorUfør),\r\n            kanIkkeOppgis: values.kanIkkeOppgis,\r\n            harRettPåForeldrepenger: convertYesOrNoOrUndefinedToBoolean(values.harRettPåForeldrepenger),\r\n            erInformertOmSøknaden: convertYesOrNoOrUndefinedToBoolean(values.erInformertOmSøknaden),\r\n        };\r\n    }\r\n\r\n    return {\r\n        kanIkkeOppgis: true,\r\n    };\r\n};\r\n\r\nexport const getAnnenForelderFormInitialValues = (\r\n    annenForelder: AnnenForelder,\r\n    barn: Barn,\r\n    søker: Søker,\r\n    registrertBarn: RegistrertBarn | undefined\r\n): AnnenForelderFormData => {\r\n    if (isAnnenForelderOppgitt(annenForelder) && hasValue(annenForelder.fornavn)) {\r\n        return {\r\n            ...initialAnnenForelderValues,\r\n            harRettPåForeldrepenger: convertBooleanOrUndefinedToYesOrNo(annenForelder.harRettPåForeldrepenger),\r\n            bostedsland: annenForelder.bostedsland || '',\r\n            erInformertOmSøknaden: convertBooleanOrUndefinedToYesOrNo(annenForelder.erInformertOmSøknaden),\r\n            erMorUfør: convertBooleanOrUndefinedToYesOrNo(annenForelder.erUfør),\r\n            dokumentasjonAvAleneomsorg: barn.dokumentasjonAvAleneomsorg || [],\r\n            etternavn: annenForelder.etternavn,\r\n            fornavn: annenForelder.fornavn,\r\n            kanIkkeOppgis: annenForelder.kanIkkeOppgis,\r\n            fnr: annenForelder.fnr,\r\n            aleneOmOmsorg: convertBooleanOrUndefinedToYesOrNo(søker.erAleneOmOmsorg),\r\n            datoForAleneomsorg: barn.datoForAleneomsorg || '',\r\n            utenlandskFnr: annenForelder.utenlandskFnr || false,\r\n        };\r\n    }\r\n\r\n    if (!!registrertBarn && !!registrertBarn.annenForelder) {\r\n        return {\r\n            ...initialAnnenForelderValues,\r\n            fornavn: registrertBarn.annenForelder.fornavn,\r\n            etternavn: registrertBarn.annenForelder.etternavn,\r\n            fnr: registrertBarn.annenForelder.fnr,\r\n        };\r\n    }\r\n\r\n    if (isAnnenForelderIkkeOppgitt(annenForelder)) {\r\n        return {\r\n            ...initialAnnenForelderValues,\r\n            kanIkkeOppgis: annenForelder.kanIkkeOppgis,\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...initialAnnenForelderValues,\r\n    };\r\n};\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { AnnenForelderFormData, AnnenForelderFormField } from './annenforelderFormConfig';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { Søkerrolle } from 'app/types/Søkerrolle';\r\nimport { hasValue } from '@navikt/fp-common';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\n\r\ninterface AnnenForelderQuestionsPayload extends AnnenForelderFormData {\r\n    skalOppgiPersonalia: boolean;\r\n    søkerRolle: Søkerrolle;\r\n    gjelderStebarnsadopsjon: boolean;\r\n}\r\n\r\nconst isAnnenForelderKanIkkeOppgisIncluded = (søkerRolle: Søkerrolle, gjelderStebarnsadopsjon: boolean): boolean => {\r\n    if (gjelderStebarnsadopsjon) {\r\n        return false;\r\n    }\r\n\r\n    if (søkerRolle === 'medmor') {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst AnnenForelderFormConfig: QuestionConfig<AnnenForelderQuestionsPayload, AnnenForelderFormField> = {\r\n    [AnnenForelderFormField.fornavn]: {\r\n        isAnswered: ({ fornavn }) => hasValue(fornavn),\r\n        isIncluded: ({ skalOppgiPersonalia }) => skalOppgiPersonalia,\r\n        isOptional: ({ kanIkkeOppgis }) => kanIkkeOppgis === true,\r\n    },\r\n    [AnnenForelderFormField.etternavn]: {\r\n        isAnswered: ({ etternavn }) => hasValue(etternavn),\r\n        isIncluded: ({ skalOppgiPersonalia }) => skalOppgiPersonalia,\r\n        isOptional: ({ kanIkkeOppgis }) => kanIkkeOppgis === true,\r\n    },\r\n    [AnnenForelderFormField.kanIkkeOppgis]: {\r\n        isAnswered: ({ kanIkkeOppgis }) => hasValue(kanIkkeOppgis),\r\n        isOptional: () => true,\r\n        isIncluded: ({ skalOppgiPersonalia, søkerRolle, gjelderStebarnsadopsjon }) =>\r\n            skalOppgiPersonalia && isAnnenForelderKanIkkeOppgisIncluded(søkerRolle, gjelderStebarnsadopsjon),\r\n    },\r\n    [AnnenForelderFormField.fnr]: {\r\n        isAnswered: ({ fnr, utenlandskFnr }) => hasValue(fnr) || (utenlandskFnr === true && hasValue(fnr)),\r\n        isIncluded: ({ skalOppgiPersonalia, kanIkkeOppgis }) => skalOppgiPersonalia && kanIkkeOppgis !== true,\r\n        visibilityFilter: ({ fornavn, etternavn }) => hasValue(fornavn) && hasValue(etternavn),\r\n    },\r\n    [AnnenForelderFormField.utenlandskFnr]: {\r\n        isAnswered: ({ utenlandskFnr }) => hasValue(utenlandskFnr),\r\n        visibilityFilter: ({ kanIkkeOppgis, fornavn, etternavn }) =>\r\n            kanIkkeOppgis !== true && hasValue(fornavn) && hasValue(etternavn),\r\n        isIncluded: ({ skalOppgiPersonalia }) => skalOppgiPersonalia,\r\n        isOptional: () => true,\r\n    },\r\n    [AnnenForelderFormField.aleneOmOmsorg]: {\r\n        isAnswered: ({ aleneOmOmsorg }) => aleneOmOmsorg !== YesOrNo.UNANSWERED,\r\n        isIncluded: ({ kanIkkeOppgis }) => kanIkkeOppgis === false,\r\n        visibilityFilter: ({ skalOppgiPersonalia, fnr, utenlandskFnr, bostedsland }) =>\r\n            !skalOppgiPersonalia ||\r\n            (skalOppgiPersonalia && hasValue(fnr) && utenlandskFnr === false) ||\r\n            (skalOppgiPersonalia && hasValue(bostedsland) && utenlandskFnr === true),\r\n    },\r\n    [AnnenForelderFormField.dokumentasjonAvAleneomsorg]: {\r\n        isAnswered: () => true,\r\n        isIncluded: ({ aleneOmOmsorg, søkerRolle }) => aleneOmOmsorg === YesOrNo.YES && søkerRolle !== 'mor',\r\n        visibilityFilter: ({ aleneOmOmsorg, datoForAleneomsorg }) =>\r\n            aleneOmOmsorg === YesOrNo.YES || hasValue(datoForAleneomsorg),\r\n    },\r\n    [AnnenForelderFormField.harRettPåForeldrepenger]: {\r\n        parentQuestion: AnnenForelderFormField.aleneOmOmsorg,\r\n        isAnswered: ({ harRettPåForeldrepenger }) => harRettPåForeldrepenger !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ aleneOmOmsorg }) => aleneOmOmsorg === YesOrNo.NO,\r\n    },\r\n    [AnnenForelderFormField.erInformertOmSøknaden]: {\r\n        parentQuestion: AnnenForelderFormField.harRettPåForeldrepenger,\r\n        isAnswered: ({ erInformertOmSøknaden }) => erInformertOmSøknaden !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ aleneOmOmsorg, harRettPåForeldrepenger }) =>\r\n            aleneOmOmsorg === YesOrNo.NO && harRettPåForeldrepenger === YesOrNo.YES,\r\n    },\r\n    [AnnenForelderFormField.erMorUfør]: {\r\n        parentQuestion: AnnenForelderFormField.harRettPåForeldrepenger,\r\n        isAnswered: ({ erMorUfør }) => erMorUfør !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ aleneOmOmsorg, harRettPåForeldrepenger, søkerRolle }) =>\r\n            aleneOmOmsorg === YesOrNo.NO && harRettPåForeldrepenger === YesOrNo.NO && isFarEllerMedmor(søkerRolle),\r\n    },\r\n    [AnnenForelderFormField.datoForAleneomsorg]: {\r\n        isAnswered: ({ datoForAleneomsorg }) => hasValue(datoForAleneomsorg),\r\n        isIncluded: ({ aleneOmOmsorg, søkerRolle }) => aleneOmOmsorg === YesOrNo.YES && isFarEllerMedmor(søkerRolle),\r\n    },\r\n    [AnnenForelderFormField.bostedsland]: {\r\n        isAnswered: ({ bostedsland }) => hasValue(bostedsland),\r\n        isIncluded: ({ utenlandskFnr }) => utenlandskFnr === true,\r\n        visibilityFilter: ({ fnr }) => hasValue(fnr),\r\n    },\r\n};\r\n\r\nexport const annenForelderQuestionsConfig = Questions<AnnenForelderQuestionsPayload, AnnenForelderFormField>(\r\n    AnnenForelderFormConfig\r\n);\r\n","import VeilederNormal from 'app/assets/VeilederNormal';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './annenForelderVeileder.less';\r\n\r\ninterface Props {\r\n    visible: boolean;\r\n    annenForelderNavn: string;\r\n}\r\n\r\nconst AvtaleAtFarTarUtForeldrepengerVeileder: React.FunctionComponent<Props> = ({ visible, annenForelderNavn }) => {\r\n    if (!visible) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"annenForelderVeileder\">\r\n            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                <FormattedMessage\r\n                    id=\"annenForelder.veileder.aleneOmsorg.forBarnet\"\r\n                    values={{ navn: annenForelderNavn }}\r\n                />\r\n            </Veilederpanel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvtaleAtFarTarUtForeldrepengerVeileder;\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\n\r\nimport './annenForelderVeileder.less';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\n\r\nconst FarDokumentasjonAleneomsorgVeileder: React.FunctionComponent = () => {\r\n    return (\r\n        <div className=\"annenForelderVeileder\">\r\n            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                <FormattedMessage id=\"annenForelder.farMedmor.dokumentasjonAvAleneomsorg.veileder\" />\r\n            </Veilederpanel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FarDokumentasjonAleneomsorgVeileder;\r\n","import React from 'react';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './annenForelderVeileder.less';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\n\r\ninterface Props {\r\n    visible: boolean;\r\n    annenForelderNavn: string;\r\n}\r\n\r\nconst MåOrientereAnnenForelderVeileder: React.FunctionComponent<Props> = ({ visible, annenForelderNavn }) => {\r\n    if (!visible) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"annenForelderVeileder\">\r\n            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                <FormattedMessage\r\n                    id=\"annenForelder.erAnnenForelderInformert.veileder\"\r\n                    values={{ navn: annenForelderNavn }}\r\n                />\r\n            </Veilederpanel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MåOrientereAnnenForelderVeileder;\r\n","import { formatDate, hasValue, intlUtils } from '@navikt/fp-common';\r\nimport dayjs from 'dayjs';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateDatoForAleneomsorg =\r\n    (intl: IntlShape, familiehendelsedato: dayjs.Dayjs) => (datoForAleneomsorg: string) => {\r\n        if (!hasValue(datoForAleneomsorg)) {\r\n            return intlUtils(intl, 'valideringsfeil.annenForelder.datoForAleneomsorg.duMåOppgi');\r\n        }\r\n\r\n        if (!isISODateString(datoForAleneomsorg)) {\r\n            return intlUtils(intl, 'valideringsfeil.annenForelder.datoForAleneomsorg.ugyldigDatoFormat');\r\n        }\r\n\r\n        if (dayjs(datoForAleneomsorg).isBefore(familiehendelsedato)) {\r\n            return intlUtils(intl, 'valideringsfeil.annenForelder.datoForAleneomsorg.førFamiliehendelsedato', {\r\n                dato: formatDate(familiehendelsedato.toDate()),\r\n            });\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\nexport const validateFornavn = (intl: IntlShape, kanIkkeOppgis?: boolean) => (fornavn: string) => {\r\n    if (!kanIkkeOppgis && !hasValue(fornavn)) {\r\n        return intlUtils(intl, 'valideringsfeil.annenForelder.fornavnPåkrevd');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateEtternavn = (intl: IntlShape, kanIkkeOppgis?: boolean) => (etternavn: string) => {\r\n    if (!kanIkkeOppgis && !hasValue(etternavn)) {\r\n        return intlUtils(intl, 'valideringsfeil.annenForelder.etternavnPåkrevd');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import dayjs from 'dayjs';\r\nconst isValidFødselsnummer = require('is-valid-fodselsnummer');\r\n\r\ntype FødselsnummerValidationResult = false | 'F' | 'D';\r\nexport const isFødselsnummerFormatValid = (fnr: string): FødselsnummerValidationResult => {\r\n    try {\r\n        return isValidFødselsnummer(fnr, true);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const isSixteenOrOlder = (fnr: string, isFødselsnummerValid: FødselsnummerValidationResult): boolean => {\r\n    const dato = isFødselsnummerValid === 'D' ? `${Number(fnr.substr(0, 1)) - 4}${fnr.substr(1, 1)}` : fnr.substr(0, 2);\r\n    const mnd = fnr.substr(2, 2);\r\n    const år = fnr.substr(4, 2);\r\n\r\n    const fødselsdato = dayjs(`${dato}-${mnd}-${år}`, 'DD-MM-YY');\r\n\r\n    if (fødselsdato.get('year') > dayjs().get('year')) {\r\n        fødselsdato.subtract(100, 'year');\r\n    }\r\n\r\n    if (!fødselsdato.isValid()) {\r\n        return false;\r\n    }\r\n\r\n    return fødselsdato.isBefore(dayjs().subtract(16, 'year'));\r\n};\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { IntlShape } from 'react-intl';\r\nimport { isFødselsnummerFormatValid, isSixteenOrOlder } from './validation/fødselsnummer';\r\n\r\nexport const validateFødselsnummer =\r\n    (intl: IntlShape, søkersFødselsnummer: string, erUtenlandskFnr?: boolean) =>\r\n    (fnr: string): string | undefined => {\r\n        if (erUtenlandskFnr) {\r\n            if (fnr === undefined || fnr === '') {\r\n                return intlUtils(intl, 'valideringsfeil.fødselsnummer.required');\r\n            }\r\n\r\n            return undefined;\r\n        }\r\n\r\n        if (fnr === søkersFødselsnummer) {\r\n            return intlUtils(intl, 'valideringsfeil.fødselsnummer.ugyldigEgetFødselsnummer');\r\n        }\r\n\r\n        const validFnrResult = isFødselsnummerFormatValid(fnr);\r\n\r\n        if (!erUtenlandskFnr && !isSixteenOrOlder(fnr, validFnrResult) && validFnrResult === 'F') {\r\n            return intlUtils(intl, 'valideringsfeil.fødselsnummer.underSeksten');\r\n        }\r\n\r\n        return validFnrResult === 'F' || validFnrResult === 'D'\r\n            ? undefined\r\n            : intlUtils(intl, 'valideringsfeil.fødselsnummer.ugyldigFødselsnummer');\r\n    };\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { AnnenForelderFormComponents, AnnenForelderFormField } from '../annenforelderFormConfig';\r\nimport { SkjemaGruppe } from 'nav-frontend-skjema';\r\nimport { bemUtils, Block, intlUtils } from '@navikt/fp-common';\r\nimport { validateEtternavn, validateFornavn } from '../validation/annenForelderValidering';\r\nimport { validateFødselsnummer } from 'app/utils/validationUtil';\r\nimport { Element } from 'nav-frontend-typografi';\r\n\r\nimport './oppgiPersonalia.less';\r\n\r\ninterface Props {\r\n    fornavn: string | undefined;\r\n    kanIkkeOppgis: boolean | undefined;\r\n    erUtenlandskFnr: boolean | undefined;\r\n    visibility: QuestionVisibility<AnnenForelderFormField, undefined>;\r\n    gjelderAdopsjon: boolean;\r\n    søkersFødselsnummer: string;\r\n}\r\n\r\nconst OppgiPersonalia: React.FunctionComponent<Props> = ({\r\n    fornavn,\r\n    erUtenlandskFnr,\r\n    kanIkkeOppgis,\r\n    visibility,\r\n    gjelderAdopsjon,\r\n    søkersFødselsnummer,\r\n}) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('oppgiPersonalia');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <SkjemaGruppe legend={<Element>{intlUtils(intl, 'annenForelder.spørsmål.navn')}</Element>}>\r\n                <Block visible={visibility.isVisible(AnnenForelderFormField.fornavn)}>\r\n                    <div className={bem.element('nameInputsWrapper')}>\r\n                        <AnnenForelderFormComponents.Input\r\n                            className={bem.element('nameInput')}\r\n                            name={AnnenForelderFormField.fornavn}\r\n                            label={intlUtils(intl, 'annenForelder.spørsmål.fornavn')}\r\n                            disabled={kanIkkeOppgis}\r\n                            validate={validateFornavn(intl, kanIkkeOppgis)}\r\n                        />\r\n                        <AnnenForelderFormComponents.Input\r\n                            className={bem.element('nameInput')}\r\n                            name={AnnenForelderFormField.etternavn}\r\n                            label={intlUtils(intl, 'annenForelder.spørsmål.etternavn')}\r\n                            disabled={kanIkkeOppgis}\r\n                            validate={validateEtternavn(intl, kanIkkeOppgis)}\r\n                        />\r\n                    </div>\r\n                </Block>\r\n                <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.kanIkkeOppgis)}>\r\n                    <AnnenForelderFormComponents.Checkbox\r\n                        name={AnnenForelderFormField.kanIkkeOppgis}\r\n                        label={\r\n                            gjelderAdopsjon\r\n                                ? intlUtils(intl, 'annenForelder.spørsmål.adoptererAlene')\r\n                                : intlUtils(intl, 'annenForelder.spørsmål.kanOppgis')\r\n                        }\r\n                    />\r\n                </Block>\r\n            </SkjemaGruppe>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.fnr)}>\r\n                <AnnenForelderFormComponents.Input\r\n                    name={AnnenForelderFormField.fnr}\r\n                    label={intlUtils(intl, 'annenForelder.spørsmål.fnr', { navn: fornavn })}\r\n                    validate={validateFødselsnummer(intl, søkersFødselsnummer, erUtenlandskFnr)}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.utenlandskFnr)}>\r\n                <AnnenForelderFormComponents.Checkbox\r\n                    name={AnnenForelderFormField.utenlandskFnr}\r\n                    label={intlUtils(intl, 'annenForelder.spørsmål.utenlandskFnr', { navn: fornavn })}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.bostedsland)}>\r\n                <AnnenForelderFormComponents.CountrySelect\r\n                    name={AnnenForelderFormField.bostedsland}\r\n                    label={intlUtils(intl, 'annenForelder.bostedsland', { navn: fornavn })}\r\n                    useAlpha3Code={false}\r\n                />\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OppgiPersonalia;\r\n","import * as React from 'react';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\n\r\nimport { RegistrertAnnenForelder } from 'app/types/Person';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { formaterNavn } from 'app/utils/personUtils';\r\nimport { getAlderFraDato } from 'app/utils/dateUtils';\r\nimport './registrertePersonalia.less';\r\nimport { bemUtils } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    person: RegistrertAnnenForelder;\r\n}\r\n\r\nconst RegistrertePersonalia: React.FunctionComponent<Props> = ({ person }: Props) => {\r\n    const bem = bemUtils('registrertePersonalia');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <Element className={bem.element('navn')}>\r\n                {formaterNavn(person.fornavn, person.etternavn, person.mellomnavn)}\r\n            </Element>\r\n            <Normaltekst>\r\n                <FormattedMessage\r\n                    id=\"annenForelder.registrertePersonalia.fødselsnummerOgÅr\"\r\n                    values={{ fnr: person.fnr, år: getAlderFraDato(person.fødselsdato).år }}\r\n                />\r\n            </Normaltekst>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrertePersonalia;\r\n","import { Block, hasValue, intlUtils, Step, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport dayjs from 'dayjs';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport Barn, { isAdoptertStebarn } from 'app/context/types/Barn';\r\nimport Søker from 'app/context/types/Søker';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport { getFamiliehendelsedato, getRegistrertBarnOmDetFinnes } from 'app/utils/barnUtils';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport React, { useCallback } from 'react';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport { AnnenForelderFormComponents, AnnenForelderFormData, AnnenForelderFormField } from './annenforelderFormConfig';\r\nimport {\r\n    cleanAnnenForelderFormData,\r\n    getAnnenForelderFormInitialValues,\r\n    mapAnnenForelderFormToState,\r\n} from './annenForelderFormUtils';\r\nimport { annenForelderQuestionsConfig } from './annenForelderQuestionsConfig';\r\nimport AvtaleAtFarTarUtForeldrepengerVeileder from './components/AvtaleAtFarTarUtForeldrepengerVeileder';\r\nimport FarDokumentasjonAleneomsorgVeileder from './components/FarDokumentasjonAleneomsorgVeileder';\r\nimport MåOrientereAnnenForelderVeileder from './components/MåOrientereAnnenForelderVeileder';\r\nimport OppgiPersonalia from './components/OppgiPersonalia';\r\nimport { validateDatoForAleneomsorg } from './validation/annenForelderValidering';\r\nimport RegistrertePersonalia from './components/registrerte-personalia/RegistrertePersonalia';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\n\r\nconst AnnenForelder = () => {\r\n    const intl = useIntl();\r\n    const {\r\n        annenForelder,\r\n        barn,\r\n        søker,\r\n        søkersituasjon: { rolle },\r\n    } = useSøknad();\r\n    const familiehendelsedato = dayjs(getFamiliehendelsedato(barn));\r\n    const søkerinfo = useSøkerinfo();\r\n    const registrertBarn = getRegistrertBarnOmDetFinnes(barn, søkerinfo.registrerteBarn);\r\n    const skalOppgiPersonalia =\r\n        registrertBarn === undefined || (registrertBarn !== undefined && registrertBarn.annenForelder === undefined);\r\n\r\n    const onValidSubmitHandler = useCallback(\r\n        (values: Partial<AnnenForelderFormData>) => {\r\n            const newSøker: Søker = {\r\n                ...søker,\r\n                erAleneOmOmsorg: !!convertYesOrNoOrUndefinedToBoolean(values.aleneOmOmsorg),\r\n            };\r\n            const newBarn: Barn = {\r\n                ...barn,\r\n                datoForAleneomsorg: hasValue(values.datoForAleneomsorg) ? values.datoForAleneomsorg : undefined,\r\n                dokumentasjonAvAleneomsorg:\r\n                    values.dokumentasjonAvAleneomsorg && values.dokumentasjonAvAleneomsorg.length > 0\r\n                        ? values.dokumentasjonAvAleneomsorg\r\n                        : undefined,\r\n            };\r\n\r\n            return [\r\n                actionCreator.setAnnenForelder(mapAnnenForelderFormToState(values)),\r\n                actionCreator.setSøker(newSøker),\r\n                actionCreator.setOmBarnet(newBarn),\r\n            ];\r\n        },\r\n        [søker, barn]\r\n    );\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN_INFO);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    return (\r\n        <AnnenForelderFormComponents.FormikWrapper\r\n            initialValues={getAnnenForelderFormInitialValues(annenForelder, barn, søker, registrertBarn)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = annenForelderQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    skalOppgiPersonalia,\r\n                    søkerRolle: rolle,\r\n                    gjelderStebarnsadopsjon: isAdoptertStebarn(barn) ? true : false,\r\n                });\r\n\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                        backLinkHref={getPreviousStepHref('annenForelder')}\r\n                        activeStepId=\"annenForelder\"\r\n                        pageTitle={intlUtils(intl, 'søknad.søkersituasjon')}\r\n                        stepTitle={intlUtils(intl, 'søknad.søkersituasjon')}\r\n                        onCancel={onAvbrytSøknad}\r\n                        onContinueLater={() => null}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <AnnenForelderFormComponents.Form\r\n                            includeButtons={false}\r\n                            cleanup={(values) => cleanAnnenForelderFormData(values, visibility, registrertBarn)}\r\n                            includeValidationSummary={true}\r\n                        >\r\n                            {skalOppgiPersonalia && (\r\n                                <OppgiPersonalia\r\n                                    fornavn={formValues.fornavn}\r\n                                    erUtenlandskFnr={formValues.utenlandskFnr}\r\n                                    kanIkkeOppgis={formValues.kanIkkeOppgis}\r\n                                    visibility={visibility}\r\n                                    gjelderAdopsjon={false}\r\n                                    søkersFødselsnummer={'søkersFødselsnummer'}\r\n                                />\r\n                            )}\r\n                            {registrertBarn !== undefined && registrertBarn.annenForelder && (\r\n                                <Block padBottom=\"l\">\r\n                                    <RegistrertePersonalia person={registrertBarn.annenForelder} />\r\n                                </Block>\r\n                            )}\r\n                            <Block\r\n                                visible={\r\n                                    visibility.isVisible(AnnenForelderFormField.aleneOmOmsorg) || !skalOppgiPersonalia\r\n                                }\r\n                                padBottom=\"l\"\r\n                            >\r\n                                <AnnenForelderFormComponents.YesOrNoQuestion\r\n                                    name={AnnenForelderFormField.aleneOmOmsorg}\r\n                                    description={\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                'annenForelder.aleneOmOmsorg.veileder.apneLabel'\r\n                                            )}\r\n                                        >\r\n                                            {intlUtils(intl, 'annenForelder.aleneOmOmsorg.veileder')}\r\n                                        </UtvidetInformasjon>\r\n                                    }\r\n                                    legend={intlUtils(intl, 'annenForelder.aleneOmOmsorg')}\r\n                                />\r\n                                <AvtaleAtFarTarUtForeldrepengerVeileder\r\n                                    visible={!isFarEllerMedmor(rolle) && formValues.aleneOmOmsorg === YesOrNo.YES}\r\n                                    annenForelderNavn={formValues.fornavn!}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(AnnenForelderFormField.datoForAleneomsorg)}\r\n                            >\r\n                                <Block>\r\n                                    <AnnenForelderFormComponents.DatePicker\r\n                                        name={AnnenForelderFormField.datoForAleneomsorg}\r\n                                        label={intlUtils(intl, 'annenForelder.datoForAleneomsorg')}\r\n                                        minDate={familiehendelsedato.toDate()}\r\n                                        validate={validateDatoForAleneomsorg(intl, familiehendelsedato)}\r\n                                    />\r\n                                </Block>\r\n\r\n                                <FarDokumentasjonAleneomsorgVeileder />\r\n\r\n                                <FormikFileUploader\r\n                                    label={intlUtils(\r\n                                        intl,\r\n                                        'annenForelder.farMedmor.dokumentasjonAvAleneomsorg.lastOpp'\r\n                                    )}\r\n                                    name={AnnenForelderFormField.dokumentasjonAvAleneomsorg}\r\n                                    attachments={formValues.dokumentasjonAvAleneomsorg || []}\r\n                                    attachmentType={AttachmentType.ALENEOMSORG}\r\n                                    skjemanummer={Skjemanummer.DOK_AV_ALENEOMSORG}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepenger)}\r\n                            >\r\n                                <AnnenForelderFormComponents.YesOrNoQuestion\r\n                                    name={AnnenForelderFormField.harRettPåForeldrepenger}\r\n                                    description={\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                'annenForelder.annenForelderRettPåForeldrepenger.veileder.apneLabel'\r\n                                            )}\r\n                                        >\r\n                                            <FormattedMessage\r\n                                                id=\"annenForelder.annenForelderRettPåForeldrepenger.veileder.del1\"\r\n                                                values={{ navn: formValues.fornavn }}\r\n                                            ></FormattedMessage>\r\n                                            <br />\r\n                                            <FormattedMessage\r\n                                                id=\"annenForelder.annenForelderRettPåForeldrepenger.veileder.del2\"\r\n                                                values={{ navn: formValues.fornavn }}\r\n                                            ></FormattedMessage>\r\n                                        </UtvidetInformasjon>\r\n                                    }\r\n                                    legend={intlUtils(intl, 'annenForelder.annenForelderRettPåForeldrepenger', {\r\n                                        navn: formValues.fornavn,\r\n                                    })}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(AnnenForelderFormField.erInformertOmSøknaden)}\r\n                            >\r\n                                <AnnenForelderFormComponents.YesOrNoQuestion\r\n                                    name={AnnenForelderFormField.erInformertOmSøknaden}\r\n                                    legend={intlUtils(intl, 'annenForelder.spørsmål.erAnnenForelderInformert', {\r\n                                        navn: formValues.fornavn,\r\n                                    })}\r\n                                />\r\n                                <MåOrientereAnnenForelderVeileder\r\n                                    visible={formValues.erInformertOmSøknaden === YesOrNo.NO}\r\n                                    annenForelderNavn={formValues.fornavn!}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.erMorUfør)}>\r\n                                <AnnenForelderFormComponents.YesOrNoQuestion\r\n                                    name={AnnenForelderFormField.erMorUfør}\r\n                                    legend={intlUtils(intl, 'annenForelder.erMorUfør', {\r\n                                        navn: formValues.fornavn,\r\n                                    })}\r\n                                />\r\n                            </Block>\r\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </AnnenForelderFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AnnenForelder;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport AnnenForelder from 'app/steps/annen-forelder/AnnenForelder';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\nimport AxiosMock from '../../../utils/AxiosMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/AnnenForelder',\\r\\n    component: AnnenForelder,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <AnnenForelder />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const SkalOppgiPersonalia = Template.bind({});\\r\\nSkalOppgiPersonalia.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            annenForelder: {\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo: {\\r\\n        søker: {\\r\\n            ...søkerinfo,\\r\\n            barn: [],\\r\\n        },\\r\\n    } as SøkerinfoDTO,\\r\\n};\\r\\n\\r\\nexport const ForFar = Template.bind({});\\r\\nForFar.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søkersituasjon: {\\r\\n                situasjon: 'fødsel',\\r\\n                rolle: 'far',\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo: {\\r\\n        søker: {\\r\\n            ...søkerinfo.søker,\\r\\n            fornavn: 'LEALAUS',\\r\\n            etternavn: 'BÆREPOSE',\\r\\n            kjønn: 'M',\\r\\n            barn: [\\r\\n                {\\r\\n                    fnr: '21091981146',\\r\\n                    fødselsdato: '2021-03-15',\\r\\n                    annenForelder: {\\r\\n                        fnr: '12038517080',\\r\\n                        fødselsdato: '1985-03-12',\\r\\n                        fornavn: 'TALENTFULL',\\r\\n                        etternavn: 'MYGG',\\r\\n                    },\\r\\n                    fornavn: 'KLØKTIG',\\r\\n                    etternavn: 'MIDTPUNKT',\\r\\n                    kjønn: 'K',\\r\\n                },\\r\\n            ],\\r\\n        },\\r\\n    } as SøkerinfoDTO,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}},\"SkalOppgiPersonalia\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}},\"ForFar\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport AnnenForelder from 'app/steps/annen-forelder/AnnenForelder';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\nimport AxiosMock from '../../../utils/AxiosMock';\r\n\r\nexport default {\r\n    title: 'steps/AnnenForelder',\r\n    component: AnnenForelder,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onPost('/storage/vedlegg').reply(\r\n            200,\r\n            { data: {} },\r\n            {\r\n                location: '',\r\n            }\r\n        );\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n                <AnnenForelder />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n};\r\n\r\nexport const SkalOppgiPersonalia = Template.bind({});;\r\nSkalOppgiPersonalia.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            annenForelder: {\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo: {\r\n        søker: {\r\n            ...søkerinfo,\r\n            barn: [],\r\n        },\r\n    } as SøkerinfoDTO,\r\n};\r\n\r\nexport const ForFar = Template.bind({});\r\nForFar.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søkersituasjon: {\r\n                situasjon: 'fødsel',\r\n                rolle: 'far',\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo: {\r\n        søker: {\r\n            ...søkerinfo.søker,\r\n            fornavn: 'LEALAUS',\r\n            etternavn: 'BÆREPOSE',\r\n            kjønn: 'M',\r\n            barn: [\r\n                {\r\n                    fnr: '21091981146',\r\n                    fødselsdato: '2021-03-15',\r\n                    annenForelder: {\r\n                        fnr: '12038517080',\r\n                        fødselsdato: '1985-03-12',\r\n                        fornavn: 'TALENTFULL',\r\n                        etternavn: 'MYGG',\r\n                    },\r\n                    fornavn: 'KLØKTIG',\r\n                    etternavn: 'MIDTPUNKT',\r\n                    kjønn: 'K',\r\n                },\r\n            ],\r\n        },\r\n    } as SøkerinfoDTO,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <AnnenForelder />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nSkalOppgiPersonalia.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <AnnenForelder />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...SkalOppgiPersonalia.parameters };\nForFar.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <AnnenForelder />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...ForFar.parameters };","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum InntektsinformasjonFormField {\r\n    hattInntektSomFrilans = 'hattInntektSomFrilans',\r\n    hattInntektSomNæringsdrivende = 'hattInntektSomNæringsdrivende',\r\n    hattAndreInntekter = 'hattAndreInntekter',\r\n    frilansOppstartsDato = 'frilansOppstartsDato',\r\n    jobberFremdelesSomFrilanser = 'jobberFremdelesSomFrilanser',\r\n    oppdragForNæreVennerEllerFamilie = 'oppdragForNæreVennerEllerFamilie',\r\n    inntektSomFosterforelder = 'inntektSomFosterforelder',\r\n}\r\n\r\nexport interface InntektsinformasjonFormData {\r\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: YesOrNo;\r\n    [InntektsinformasjonFormField.hattInntektSomNæringsdrivende]: YesOrNo;\r\n    [InntektsinformasjonFormField.hattAndreInntekter]: YesOrNo;\r\n    [InntektsinformasjonFormField.frilansOppstartsDato]: string;\r\n    [InntektsinformasjonFormField.inntektSomFosterforelder]: YesOrNo;\r\n    [InntektsinformasjonFormField.jobberFremdelesSomFrilanser]: YesOrNo;\r\n    [InntektsinformasjonFormField.oppdragForNæreVennerEllerFamilie]: YesOrNo;\r\n}\r\n\r\nexport const InntektsinformasjonFormComponents = getTypedFormComponents<\r\n    InntektsinformasjonFormField,\r\n    InntektsinformasjonFormData,\r\n    string\r\n>();\r\n","import { formatTidsperiodeMedValgfriSluttdato, intlUtils } from '@navikt/fp-common';\r\nimport InteractiveListElement from 'app/components/interactive-list-element/InteractiveListElement';\r\nimport { AnnenInntekt, AnnenInntektType } from 'app/context/types/AnnenInntekt';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { IntlShape, useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    andreInntekter: AnnenInntekt[];\r\n    deleteAnnenInntekt: (oppdrag: AnnenInntekt) => void;\r\n    selectAnnenInntekt: (oppdrag: AnnenInntekt) => void;\r\n}\r\n\r\nconst getTitle = (type: AnnenInntektType, intl: IntlShape): string => {\r\n    if (type === AnnenInntektType.JOBB_I_UTLANDET) {\r\n        return intlUtils(intl, 'inntektsinformasjon.andreInntekter.inntektsliste.jobbIUtlandet');\r\n    }\r\n\r\n    if (type === AnnenInntektType.MILITÆRTJENESTE) {\r\n        return intlUtils(intl, 'inntektsinformasjon.andreInntekter.inntektsliste.førstegangstjeneste');\r\n    }\r\n\r\n    if (type === AnnenInntektType.SLUTTPAKKE) {\r\n        return intlUtils(intl, 'inntektsinformasjon.andreInntekter.inntektsliste.sluttpakke');\r\n    }\r\n\r\n    return intlUtils(intl, 'inntektsinformasjon.andreInntekter.inntektsliste.ventelønn');\r\n};\r\n\r\nconst AndreInntekterListe: FunctionComponent<Props> = ({ andreInntekter, deleteAnnenInntekt, selectAnnenInntekt }) => {\r\n    const intl = useIntl();\r\n\r\n    if (andreInntekter.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul style={{ margin: 0, padding: 0, listStyle: 'none' }}>\r\n            {andreInntekter.map((annenInntekt, index) => (\r\n                <InteractiveListElement\r\n                    deleteLinkText=\"Slett annen inntekt\"\r\n                    onDelete={() => deleteAnnenInntekt(annenInntekt)}\r\n                    onEdit={() => selectAnnenInntekt(annenInntekt)}\r\n                    text={formatTidsperiodeMedValgfriSluttdato(annenInntekt.tidsperiode)}\r\n                    title={getTitle(annenInntekt.type, intl)}\r\n                    deleteButtonAriaText={`Slett annen inntekt`}\r\n                    editButtonAriaText={`Rediger annen inntekt`}\r\n                    missingDocumentation={\r\n                        annenInntekt.vedlegg.length === 0 && annenInntekt.type !== AnnenInntektType.JOBB_I_UTLANDET\r\n                    }\r\n                    key={`${annenInntekt.type}${annenInntekt.tidsperiode.fom}${index}`}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default AndreInntekterListe;\r\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { AnnenInntektType } from 'app/context/types/AnnenInntekt';\r\nimport { Attachment } from 'app/types/Attachment';\r\n\r\nexport enum AndreInntekterFormField {\r\n    type = 'type',\r\n    navnPåArbeidsgiver = 'navnPåArbeidsgiver',\r\n    land = 'land',\r\n    fom = 'fom',\r\n    tom = 'tom',\r\n    pågående = 'pågående',\r\n    dokumentasjon = 'dokumentasjon',\r\n}\r\n\r\nexport interface AndreInntekterFormData {\r\n    [AndreInntekterFormField.type]: AnnenInntektType | undefined;\r\n    [AndreInntekterFormField.navnPåArbeidsgiver]: string;\r\n    [AndreInntekterFormField.land]: string;\r\n    [AndreInntekterFormField.fom]: string;\r\n    [AndreInntekterFormField.tom]: string;\r\n    [AndreInntekterFormField.pågående]: YesOrNo;\r\n    [AndreInntekterFormField.dokumentasjon]: Attachment[];\r\n}\r\n\r\nexport const AndreInntekterModalFormComponents = getTypedFormComponents<\r\n    AndreInntekterFormField,\r\n    AndreInntekterFormData,\r\n    string\r\n>();\r\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { AnnenInntekt, AnnenInntektType } from 'app/context/types/AnnenInntekt';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport { lagSendSenereDokumentNårIngenAndreFinnes } from 'app/utils/vedleggUtils';\r\nimport { AndreInntekterFormData, AndreInntekterFormField } from './andreInntekterModalFormConfig';\r\n\r\nconst initialAndreInntekterFormValues: AndreInntekterFormData = {\r\n    [AndreInntekterFormField.type]: undefined,\r\n    [AndreInntekterFormField.fom]: '',\r\n    [AndreInntekterFormField.tom]: '',\r\n    [AndreInntekterFormField.pågående]: YesOrNo.UNANSWERED,\r\n    [AndreInntekterFormField.navnPåArbeidsgiver]: '',\r\n    [AndreInntekterFormField.land]: '',\r\n    [AndreInntekterFormField.dokumentasjon]: [],\r\n};\r\n\r\nexport const getSkjemanummer = (values: AndreInntekterFormData): Skjemanummer => {\r\n    if (values.type === AnnenInntektType.MILITÆRTJENESTE) {\r\n        return Skjemanummer.DOK_MILITÆR_SILVIL_TJENESTE;\r\n    }\r\n\r\n    if (values.type === AnnenInntektType.SLUTTPAKKE) {\r\n        return Skjemanummer.ETTERLØNN_ELLER_SLUTTVEDERLAG;\r\n    }\r\n\r\n    return Skjemanummer.ANNET;\r\n};\r\n\r\nexport const cleanupAndreInntekterForm = (\r\n    values: AndreInntekterFormData,\r\n    visibility: QuestionVisibility<AndreInntekterFormField, undefined>\r\n): AndreInntekterFormData => {\r\n    return {\r\n        type: visibility.isVisible(AndreInntekterFormField.type) ? values.type : initialAndreInntekterFormValues.type,\r\n        dokumentasjon: visibility.isVisible(AndreInntekterFormField.dokumentasjon)\r\n            ? lagSendSenereDokumentNårIngenAndreFinnes(\r\n                  values.dokumentasjon,\r\n                  AttachmentType.ANNEN_INNTEKT,\r\n                  getSkjemanummer(values)\r\n              )\r\n            : initialAndreInntekterFormValues.dokumentasjon,\r\n        fom: visibility.isVisible(AndreInntekterFormField.fom) ? values.fom : initialAndreInntekterFormValues.fom,\r\n        tom: visibility.isVisible(AndreInntekterFormField.tom) ? values.tom : initialAndreInntekterFormValues.tom,\r\n        pågående: visibility.isVisible(AndreInntekterFormField.pågående)\r\n            ? values.pågående\r\n            : initialAndreInntekterFormValues.pågående,\r\n        navnPåArbeidsgiver: visibility.isVisible(AndreInntekterFormField.navnPåArbeidsgiver)\r\n            ? values.navnPåArbeidsgiver\r\n            : initialAndreInntekterFormValues.navnPåArbeidsgiver,\r\n        land: visibility.isVisible(AndreInntekterFormField.land) ? values.land : initialAndreInntekterFormValues.land,\r\n    };\r\n};\r\n\r\nexport const getInitialAndreInntekterFormValues = (annenInntekt: AnnenInntekt | undefined): AndreInntekterFormData => {\r\n    if (!annenInntekt) {\r\n        return {\r\n            ...initialAndreInntekterFormValues,\r\n        };\r\n    }\r\n\r\n    if (annenInntekt.type === AnnenInntektType.JOBB_I_UTLANDET) {\r\n        return {\r\n            ...initialAndreInntekterFormValues,\r\n            navnPåArbeidsgiver: annenInntekt.arbeidsgiverNavn,\r\n            land: annenInntekt.land,\r\n            fom: annenInntekt.tidsperiode.fom,\r\n            tom: annenInntekt.tidsperiode.tom || '',\r\n            dokumentasjon: annenInntekt.vedlegg,\r\n            pågående: convertBooleanOrUndefinedToYesOrNo(annenInntekt.pågående),\r\n            type: annenInntekt.type,\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...initialAndreInntekterFormValues,\r\n        fom: annenInntekt.tidsperiode.fom,\r\n        tom: annenInntekt.tidsperiode.tom || '',\r\n        dokumentasjon: annenInntekt.vedlegg,\r\n        pågående: convertBooleanOrUndefinedToYesOrNo(annenInntekt.pågående),\r\n        type: annenInntekt.type,\r\n    };\r\n};\r\n\r\nexport const mapAnnenInntektModalValuesToState = (annenInntekt: Partial<AndreInntekterFormData>): AnnenInntekt => {\r\n    if (annenInntekt.type === AnnenInntektType.JOBB_I_UTLANDET) {\r\n        return {\r\n            arbeidsgiverNavn: annenInntekt.navnPåArbeidsgiver!,\r\n            land: annenInntekt.land!,\r\n            pågående: convertYesOrNoOrUndefinedToBoolean(annenInntekt.pågående)!,\r\n            tidsperiode: {\r\n                fom: annenInntekt.fom!,\r\n                tom: annenInntekt.tom,\r\n            },\r\n            type: annenInntekt.type,\r\n            vedlegg: [],\r\n        };\r\n    }\r\n\r\n    return {\r\n        pågående: convertYesOrNoOrUndefinedToBoolean(annenInntekt.pågående)!,\r\n        tidsperiode: {\r\n            fom: annenInntekt.fom!,\r\n            tom: annenInntekt.tom,\r\n        },\r\n        type: annenInntekt.type!,\r\n        vedlegg: annenInntekt.dokumentasjon || [],\r\n    };\r\n};\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { AnnenInntektType } from 'app/context/types/AnnenInntekt';\r\nimport { AndreInntekterFormData, AndreInntekterFormField } from './andreInntekterModalFormConfig';\r\n\r\nconst AndreInntekterModalFormConfig: QuestionConfig<AndreInntekterFormData, AndreInntekterFormField> = {\r\n    [AndreInntekterFormField.type]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ type }) => hasValue(type),\r\n    },\r\n    [AndreInntekterFormField.land]: {\r\n        isIncluded: ({ type }) => type === AnnenInntektType.JOBB_I_UTLANDET,\r\n        isAnswered: ({ land }) => hasValue(land),\r\n        visibilityFilter: ({ type }) => type === AnnenInntektType.JOBB_I_UTLANDET,\r\n    },\r\n    [AndreInntekterFormField.navnPåArbeidsgiver]: {\r\n        isIncluded: ({ type }) => type === AnnenInntektType.JOBB_I_UTLANDET,\r\n        isAnswered: ({ navnPåArbeidsgiver }) => hasValue(navnPåArbeidsgiver),\r\n        visibilityFilter: ({ land }) => hasValue(land),\r\n    },\r\n    [AndreInntekterFormField.fom]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ fom }) => hasValue(fom),\r\n        visibilityFilter: ({ type, navnPåArbeidsgiver, land }) =>\r\n            (type === AnnenInntektType.JOBB_I_UTLANDET && hasValue(navnPåArbeidsgiver) && hasValue(land)) ||\r\n            (type !== AnnenInntektType.JOBB_I_UTLANDET && hasValue(type)),\r\n    },\r\n    [AndreInntekterFormField.pågående]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ pågående }) => pågående !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ fom }) => hasValue(fom),\r\n    },\r\n    [AndreInntekterFormField.tom]: {\r\n        isIncluded: ({ pågående }) => pågående === YesOrNo.NO,\r\n        isAnswered: ({ tom }) => hasValue(tom),\r\n        visibilityFilter: ({ pågående }) => pågående === YesOrNo.NO,\r\n    },\r\n    [AndreInntekterFormField.dokumentasjon]: {\r\n        isIncluded: ({ type }) => type !== AnnenInntektType.JOBB_I_UTLANDET,\r\n        isAnswered: () => true,\r\n        visibilityFilter: ({ pågående, tom }) => pågående === YesOrNo.YES || (pågående === YesOrNo.NO && hasValue(tom)),\r\n    },\r\n};\r\n\r\nconst andreInntekterModalQuestionsConfig = Questions<AndreInntekterFormData, AndreInntekterFormField>(\r\n    AndreInntekterModalFormConfig\r\n);\r\n\r\nexport default andreInntekterModalQuestionsConfig;\r\n","import { hasValue, intlUtils } from '@navikt/fp-common';\r\nimport { isDateABeforeDateB, isDateInTheFuture } from 'app/utils/dateUtils';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateAnnenInntektFom = (intl: IntlShape, tom: string) => (fom: string) => {\r\n    if (!hasValue(fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.påkrevd');\r\n    }\r\n\r\n    if (!isISODateString(fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (isDateInTheFuture(fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\r\n    }\r\n\r\n    if (isDateABeforeDateB(tom, fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateAnnenInntektTom = (intl: IntlShape, fom: string) => (tom: string) => {\r\n    if (!hasValue(tom)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\r\n    }\r\n\r\n    if (!isISODateString(tom)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (isDateInTheFuture(tom)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\r\n    }\r\n\r\n    if (isDateABeforeDateB(tom, fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import { bemUtils, Block, intlUtils } from '@navikt/fp-common';\r\nimport Modal from 'nav-frontend-modal';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport {\r\n    AndreInntekterFormData,\r\n    AndreInntekterFormField,\r\n    AndreInntekterModalFormComponents,\r\n} from './andreInntekterModalFormConfig';\r\nimport {\r\n    cleanupAndreInntekterForm,\r\n    getInitialAndreInntekterFormValues,\r\n    getSkjemanummer,\r\n    mapAnnenInntektModalValuesToState,\r\n} from './andreInntekterModalFormUtils';\r\nimport { AnnenInntekt, AnnenInntektType } from 'app/context/types/AnnenInntekt';\r\nimport andreInntekterModalQuestionsConfig from './andreInntekterModalQuestionsConfig';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { validateAnnenInntektFom, validateAnnenInntektTom } from './../validation/andreInntekterValidation';\r\n\r\nimport './andreInntekterModal.less';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface Props {\r\n    isOpen: boolean;\r\n    contentLabel: string;\r\n    onRequestClose: () => void;\r\n    addAnnenInntekt: (annenInntekt: AnnenInntekt) => void;\r\n    editAnnenInntekt: (annenInntekt: AnnenInntekt) => void;\r\n    selectedAnnenInntekt: AnnenInntekt | undefined;\r\n}\r\n\r\nconst AndreInntekterModal: FunctionComponent<Props> = ({\r\n    isOpen,\r\n    contentLabel,\r\n    onRequestClose,\r\n    selectedAnnenInntekt,\r\n    addAnnenInntekt,\r\n    editAnnenInntekt,\r\n}) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('andreInntekterModal');\r\n\r\n    const onValidSubmit = (values: Partial<AndreInntekterFormData>) => {\r\n        if (!selectedAnnenInntekt) {\r\n            addAnnenInntekt(mapAnnenInntektModalValuesToState(values));\r\n        } else {\r\n            editAnnenInntekt(mapAnnenInntektModalValuesToState(values));\r\n        }\r\n        onRequestClose();\r\n    };\r\n\r\n    const getVeilederMessageId = (values: AndreInntekterFormData): string => {\r\n        if (values.type === AnnenInntektType.MILITÆRTJENESTE) {\r\n            return 'inntektsinformasjon.andreInntekterModal.veileder.militær';\r\n        }\r\n\r\n        if (values.type === AnnenInntektType.SLUTTPAKKE) {\r\n            return 'inntektsinformasjon.andreInntekterModal.veileder.sluttpakke';\r\n        }\r\n\r\n        return 'inntektsinformasjon.andreInntekterModal.veileder.ventelønn';\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            contentLabel={contentLabel}\r\n            onRequestClose={onRequestClose}\r\n            closeButton={true}\r\n            shouldCloseOnOverlayClick={false}\r\n            className={bem.block}\r\n        >\r\n            <AndreInntekterModalFormComponents.FormikWrapper\r\n                initialValues={getInitialAndreInntekterFormValues(selectedAnnenInntekt)}\r\n                onSubmit={onValidSubmit}\r\n                renderForm={({ values: formValues }) => {\r\n                    const visibility = andreInntekterModalQuestionsConfig.getVisbility(formValues);\r\n\r\n                    return (\r\n                        <AndreInntekterModalFormComponents.Form\r\n                            includeButtons={false}\r\n                            cleanup={(values) => cleanupAndreInntekterForm(values, visibility)}\r\n                        >\r\n                            <Block padBottom=\"l\">\r\n                                <Undertittel className={bem.element('tittel')}>\r\n                                    <FormattedMessage id=\"inntektsinformasjon.andreInntekterModal.tittel\" />\r\n                                </Undertittel>\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.type)}>\r\n                                <AndreInntekterModalFormComponents.RadioPanelGroup\r\n                                    name={AndreInntekterFormField.type}\r\n                                    radios={[\r\n                                        { label: 'Jobb i utlandet', value: AnnenInntektType.JOBB_I_UTLANDET },\r\n                                        { label: 'Vartpenger og ventelønn', value: AnnenInntektType.VENTELØNN },\r\n                                        { label: 'Sluttvederlag', value: AnnenInntektType.SLUTTPAKKE },\r\n                                        { label: 'Førstegangstjeneste', value: AnnenInntektType.MILITÆRTJENESTE },\r\n                                    ]}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.land)}>\r\n                                <AndreInntekterModalFormComponents.CountrySelect\r\n                                    name={AndreInntekterFormField.land}\r\n                                    label={'Hvilket land har du jobbet i?'}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(AndreInntekterFormField.navnPåArbeidsgiver)}\r\n                            >\r\n                                <AndreInntekterModalFormComponents.Input\r\n                                    name={AndreInntekterFormField.navnPåArbeidsgiver}\r\n                                    label={'Oppgi navnet på arbeidsgiveren'}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.fom)}>\r\n                                <AndreInntekterModalFormComponents.DatePicker\r\n                                    name={AndreInntekterFormField.fom}\r\n                                    label={intlUtils(intl, 'fom')}\r\n                                    placeholder=\"dd.mm.åååå\"\r\n                                    fullscreenOverlay={true}\r\n                                    showYearSelector={true}\r\n                                    validate={validateAnnenInntektFom(intl, formValues.tom)}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.pågående)}>\r\n                                <AndreInntekterModalFormComponents.YesOrNoQuestion\r\n                                    name={AndreInntekterFormField.pågående}\r\n                                    legend={intlUtils(intl, 'pågående')}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.tom)}>\r\n                                <AndreInntekterModalFormComponents.DatePicker\r\n                                    name={AndreInntekterFormField.tom}\r\n                                    label={intlUtils(intl, 'tom')}\r\n                                    placeholder=\"dd.mm.åååå\"\r\n                                    fullscreenOverlay={true}\r\n                                    showYearSelector={true}\r\n                                    validate={validateAnnenInntektTom(intl, formValues.fom)}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.dokumentasjon)}>\r\n                                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                    <FormattedMessage id={getVeilederMessageId(formValues)} />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(AndreInntekterFormField.dokumentasjon)}>\r\n                                <FormikFileUploader\r\n                                    name={AndreInntekterFormField.dokumentasjon}\r\n                                    label=\"Last opp dokumentasjon\"\r\n                                    attachments={formValues.dokumentasjon}\r\n                                    attachmentType={AttachmentType.ANNEN_INNTEKT}\r\n                                    skjemanummer={getSkjemanummer(formValues)}\r\n                                />\r\n                            </Block>\r\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </AndreInntekterModalFormComponents.Form>\r\n                    );\r\n                }}\r\n            />\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AndreInntekterModal;\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { AnnenInntekt } from 'app/context/types/AnnenInntekt';\r\nimport { Knapp } from 'nav-frontend-knapper';\r\nimport React, { FunctionComponent, useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport {\r\n    InntektsinformasjonFormComponents,\r\n    InntektsinformasjonFormData,\r\n    InntektsinformasjonFormField,\r\n} from '../../inntektsinformasjonFormConfig';\r\nimport AndreInntekterListe from './AndreInntekterListe';\r\nimport AndreInntekterModal from './modal/AndreInntekterModal';\r\n\r\ninterface Props {\r\n    andreInntekterInformasjon: AnnenInntekt[];\r\n    setAndreInntekterInformasjon: any;\r\n    visibility: QuestionVisibility<InntektsinformasjonFormField, undefined>;\r\n    formValues: InntektsinformasjonFormData;\r\n}\r\n\r\nconst AndreInntekter: FunctionComponent<Props> = ({\r\n    andreInntekterInformasjon,\r\n    setAndreInntekterInformasjon,\r\n    visibility,\r\n    formValues,\r\n}) => {\r\n    const intl = useIntl();\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedAnnenInntekt, setSelectedAnnenInntekt] = useState<AnnenInntekt>();\r\n\r\n    const handleOnLeggTil = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const addAnnenInntekt = (annenInntekt: AnnenInntekt) => {\r\n        const updatedandreInntekterInformasjon = andreInntekterInformasjon.concat(annenInntekt);\r\n\r\n        setAndreInntekterInformasjon(updatedandreInntekterInformasjon);\r\n    };\r\n\r\n    const deleteAnnenInntekt = (annenInntekt: AnnenInntekt) => {\r\n        const updatedAndreInntekterInformasjon = andreInntekterInformasjon.filter(\r\n            (inntekt) => inntekt !== annenInntekt\r\n        );\r\n\r\n        setAndreInntekterInformasjon(updatedAndreInntekterInformasjon);\r\n    };\r\n\r\n    const editAnnenInntekt = (annenInntekt: AnnenInntekt) => {\r\n        const updatedAndreInntekterInformasjon = andreInntekterInformasjon\r\n            .filter((inntekt) => inntekt !== selectedAnnenInntekt)\r\n            .concat(annenInntekt);\r\n\r\n        setAndreInntekterInformasjon(updatedAndreInntekterInformasjon);\r\n    };\r\n\r\n    const selectAnnenInntekt = (annenInntekt: AnnenInntekt) => {\r\n        setSelectedAnnenInntekt(annenInntekt);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(InntektsinformasjonFormField.hattAndreInntekter)}>\r\n                <InntektsinformasjonFormComponents.YesOrNoQuestion\r\n                    name={InntektsinformasjonFormField.hattAndreInntekter}\r\n                    legend={intlUtils(intl, 'inntektsinformasjon.annenInntekt')}\r\n                />\r\n            </Block>\r\n            {formValues.hattAndreInntekter === YesOrNo.YES && (\r\n                <div style={{ backgroundColor: '#e9e7e7', marginBottom: '1rem', padding: '1rem' }}>\r\n                    <AndreInntekterModal\r\n                        isOpen={isModalOpen}\r\n                        contentLabel={intlUtils(intl, 'inntektsinformasjon.andreInntekterModal.contentLabel')}\r\n                        onRequestClose={() => setIsModalOpen(false)}\r\n                        selectedAnnenInntekt={selectedAnnenInntekt}\r\n                        addAnnenInntekt={addAnnenInntekt}\r\n                        editAnnenInntekt={editAnnenInntekt}\r\n                    />\r\n                    <Block padBottom=\"l\" visible={andreInntekterInformasjon.length > 0}>\r\n                        <AndreInntekterListe\r\n                            andreInntekter={andreInntekterInformasjon}\r\n                            deleteAnnenInntekt={deleteAnnenInntekt}\r\n                            selectAnnenInntekt={selectAnnenInntekt}\r\n                        />\r\n                    </Block>\r\n                    <Knapp htmlType=\"button\" onClick={handleOnLeggTil}>\r\n                        <FormattedMessage id=\"inntektsinformasjon.leggTilOppdrag\" />\r\n                    </Knapp>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AndreInntekter;\r\n","import React from 'react';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport HarIkkeArbeidsforhold from './HarIkkeArbeidsforhold';\r\nimport HarArbeidsforhold from './HarArbeidsforhold';\r\n\r\nimport './arbeidsforholdInformasjon.less';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport { UtvidetInformasjon } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    arbeidsforhold: Arbeidsforhold[];\r\n}\r\nconst ArbeidsforholdInformasjon: React.FunctionComponent<Props> = ({ arbeidsforhold }) => {\r\n    const harArbeidsforhold = arbeidsforhold !== undefined && arbeidsforhold.length > 0;\r\n\r\n    return (\r\n        <>\r\n            <Element>Dine arbeidsforhold</Element>\r\n            <UtvidetInformasjon apneLabel=\"Les mer om dine arbeidsforhold\">\r\n                <Normaltekst>\r\n                    Er det feil eller mangler i informasjonen om dine arbeidsforhold? Da må du be din arbeidsgiver\r\n                    oppdatere med riktig informasjon i Arbeidsgiver- og arbeidstakerregisteret.\r\n                </Normaltekst>\r\n            </UtvidetInformasjon>\r\n            <HarIkkeArbeidsforhold harArbeidsforhold={harArbeidsforhold} />\r\n            <HarArbeidsforhold harArbeidsforhold={harArbeidsforhold} arbeidsforhold={arbeidsforhold} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArbeidsforholdInformasjon;\r\n","import { formatDate } from '@navikt/fp-common';\r\nimport InteractiveListElement from 'app/components/interactive-list-element/InteractiveListElement';\r\nimport { Næring } from 'app/context/types/Næring';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface Props {\r\n    næringsInformasjon: Næring[];\r\n    deleteNæring: (oppdrag: Næring) => void;\r\n    selectNæring: (oppdrag: Næring) => void;\r\n}\r\n\r\nconst EgenNæringListe: FunctionComponent<Props> = ({ næringsInformasjon, deleteNæring, selectNæring }) => {\r\n    if (næringsInformasjon.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul style={{ margin: 0, padding: 0, listStyle: 'none' }}>\r\n            {næringsInformasjon.map((næring, index) => (\r\n                <InteractiveListElement\r\n                    deleteLinkText=\"Slett næring\"\r\n                    onDelete={() => deleteNæring(næring)}\r\n                    onEdit={() => selectNæring(næring)}\r\n                    text={`${formatDate(næring.tidsperiode.fom)} - ${\r\n                        næring.tidsperiode.tom ? formatDate(næring.tidsperiode.tom) : 'pågående'\r\n                    }`}\r\n                    title={næring.navnPåNæringen}\r\n                    deleteButtonAriaText={`Slett næring`}\r\n                    editButtonAriaText={`Rediger næring`}\r\n                    key={`${næring.navnPåNæringen}${index}`}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default EgenNæringListe;\r\n","import { intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport EksternUrl from 'app/components/ekstern-url/EksternUrl';\r\nimport links from 'app/links/links';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst HvemKanDriveMedEgenNæring = () => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <UtvidetInformasjon\r\n            apneLabel={intlUtils(\r\n                intl,\r\n                'inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd.apneLabel'\r\n            )}\r\n        >\r\n            <div style={{ backgroundColor: '#e9e7e7', padding: '1.5rem' }}>\r\n                <Normaltekst>\r\n                    <EksternUrl\r\n                        tekst=\"inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd.infoboks.tekst\"\r\n                        url={links.næringsdrivendeInfoBoks}\r\n                        lenkeTekst={intlUtils(intl, 'hjemmeside')}\r\n                    />\r\n                </Normaltekst>\r\n            </div>\r\n        </UtvidetInformasjon>\r\n    );\r\n};\r\n\r\nexport default HvemKanDriveMedEgenNæring;\r\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { Næringstype } from 'app/context/types/Næring';\r\n\r\nexport enum EgenNæringModalFormField {\r\n    typer = 'typer',\r\n    navnPåNæringen = 'navnPåNæringen',\r\n    registrertINorge = 'registrertINorge',\r\n    orgnr = 'orgnr',\r\n    land = 'land',\r\n    fom = 'fom',\r\n    tom = 'tom',\r\n    pågående = 'pågående',\r\n    yrkesAktivDato = 'yrkesAktivDato',\r\n    næringsresultat = 'næringsresultat',\r\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene = 'harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene',\r\n    hattVarigEndringAvNæringsinntektSiste4Kalenderår = 'hattVarigEndringAvNæringsinntektSiste4Kalenderår',\r\n    datoForEndring = 'datoForEndring',\r\n    inntektEtterEndring = 'inntektEtterEndring',\r\n    forklaringEndring = 'forklaringEndring',\r\n    harRegnskapsfører = 'harRegnskapsfører',\r\n    navnRegnskapsfører = 'navnRegnskapsfører',\r\n    telefonRegnskapsfører = 'telefonRegnskapsfører',\r\n    regnskapsførerNærVennEllerFamilie = 'regnskapsførerNærVennEllerFamilie',\r\n}\r\n\r\nexport interface EgenNæringModalFormData {\r\n    [EgenNæringModalFormField.typer]: Næringstype[];\r\n    [EgenNæringModalFormField.navnPåNæringen]: string;\r\n    [EgenNæringModalFormField.registrertINorge]: YesOrNo;\r\n    [EgenNæringModalFormField.orgnr]: string;\r\n    [EgenNæringModalFormField.land]: string;\r\n    [EgenNæringModalFormField.fom]: string;\r\n    [EgenNæringModalFormField.tom]: string;\r\n    [EgenNæringModalFormField.pågående]: YesOrNo;\r\n    [EgenNæringModalFormField.yrkesAktivDato]: string;\r\n    [EgenNæringModalFormField.næringsresultat]: string;\r\n    [EgenNæringModalFormField.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene]: YesOrNo;\r\n    [EgenNæringModalFormField.hattVarigEndringAvNæringsinntektSiste4Kalenderår]: YesOrNo;\r\n    [EgenNæringModalFormField.datoForEndring]: string;\r\n    [EgenNæringModalFormField.inntektEtterEndring]: string;\r\n    [EgenNæringModalFormField.forklaringEndring]: string;\r\n    [EgenNæringModalFormField.harRegnskapsfører]: YesOrNo;\r\n    [EgenNæringModalFormField.navnRegnskapsfører]: string;\r\n    [EgenNæringModalFormField.telefonRegnskapsfører]: string;\r\n    [EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie]: YesOrNo;\r\n}\r\n\r\nexport const EgenNæringModalFormComponents = getTypedFormComponents<\r\n    EgenNæringModalFormField,\r\n    EgenNæringModalFormData,\r\n    string\r\n>();\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { Næring, EndringAvNæringsinntektInformasjon, Næringsrelasjon } from 'app/context/types/Næring';\r\nimport { date4YearsAgo } from 'app/utils/dateUtils';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport dayjs from 'dayjs';\r\nimport { EgenNæringModalFormData, EgenNæringModalFormField } from './egenNæringModalFormConfig';\r\n\r\nexport const initialEgenNæringModalValues: EgenNæringModalFormData = {\r\n    [EgenNæringModalFormField.typer]: [],\r\n    [EgenNæringModalFormField.navnPåNæringen]: '',\r\n    [EgenNæringModalFormField.registrertINorge]: YesOrNo.UNANSWERED,\r\n    [EgenNæringModalFormField.orgnr]: '',\r\n    [EgenNæringModalFormField.land]: '',\r\n    [EgenNæringModalFormField.tom]: '',\r\n    [EgenNæringModalFormField.fom]: '',\r\n    [EgenNæringModalFormField.pågående]: YesOrNo.UNANSWERED,\r\n    [EgenNæringModalFormField.næringsresultat]: '',\r\n    [EgenNæringModalFormField.hattVarigEndringAvNæringsinntektSiste4Kalenderår]: YesOrNo.UNANSWERED,\r\n    [EgenNæringModalFormField.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene]: YesOrNo.UNANSWERED,\r\n    [EgenNæringModalFormField.yrkesAktivDato]: '',\r\n    [EgenNæringModalFormField.datoForEndring]: '',\r\n    [EgenNæringModalFormField.inntektEtterEndring]: '',\r\n    [EgenNæringModalFormField.forklaringEndring]: '',\r\n    [EgenNæringModalFormField.harRegnskapsfører]: YesOrNo.UNANSWERED,\r\n    [EgenNæringModalFormField.navnRegnskapsfører]: '',\r\n    [EgenNæringModalFormField.telefonRegnskapsfører]: '',\r\n    [EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie]: YesOrNo.UNANSWERED,\r\n};\r\n\r\nexport const cleanupEgenNæringForm = (\r\n    values: EgenNæringModalFormData,\r\n    visibility: QuestionVisibility<EgenNæringModalFormField, undefined>\r\n): EgenNæringModalFormData => {\r\n    return {\r\n        typer: visibility.isVisible(EgenNæringModalFormField.typer) ? values.typer : [],\r\n        navnPåNæringen: visibility.isVisible(EgenNæringModalFormField.navnPåNæringen)\r\n            ? values.navnPåNæringen\r\n            : initialEgenNæringModalValues.navnPåNæringen,\r\n        registrertINorge: visibility.isVisible(EgenNæringModalFormField.registrertINorge)\r\n            ? values.registrertINorge\r\n            : initialEgenNæringModalValues.registrertINorge,\r\n        orgnr: visibility.isVisible(EgenNæringModalFormField.orgnr) ? values.orgnr : initialEgenNæringModalValues.orgnr,\r\n        land: visibility.isVisible(EgenNæringModalFormField.land) ? values.land : initialEgenNæringModalValues.land,\r\n        tom: visibility.isVisible(EgenNæringModalFormField.tom) ? values.tom : initialEgenNæringModalValues.tom,\r\n        fom: visibility.isVisible(EgenNæringModalFormField.fom) ? values.fom : initialEgenNæringModalValues.fom,\r\n        pågående: visibility.isVisible(EgenNæringModalFormField.pågående)\r\n            ? values.pågående\r\n            : initialEgenNæringModalValues.pågående,\r\n        næringsresultat: visibility.isVisible(EgenNæringModalFormField.næringsresultat)\r\n            ? values.næringsresultat\r\n            : initialEgenNæringModalValues.næringsresultat,\r\n        hattVarigEndringAvNæringsinntektSiste4Kalenderår: visibility.isVisible(\r\n            EgenNæringModalFormField.hattVarigEndringAvNæringsinntektSiste4Kalenderår\r\n        )\r\n            ? values.hattVarigEndringAvNæringsinntektSiste4Kalenderår\r\n            : initialEgenNæringModalValues.hattVarigEndringAvNæringsinntektSiste4Kalenderår,\r\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: visibility.isVisible(\r\n            EgenNæringModalFormField.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n        )\r\n            ? values.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n            : initialEgenNæringModalValues.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\r\n        yrkesAktivDato: visibility.isVisible(EgenNæringModalFormField.yrkesAktivDato)\r\n            ? values.yrkesAktivDato\r\n            : initialEgenNæringModalValues.yrkesAktivDato,\r\n        datoForEndring: visibility.isVisible(EgenNæringModalFormField.datoForEndring)\r\n            ? values.datoForEndring\r\n            : initialEgenNæringModalValues.datoForEndring,\r\n        inntektEtterEndring: visibility.isVisible(EgenNæringModalFormField.inntektEtterEndring)\r\n            ? values.inntektEtterEndring\r\n            : initialEgenNæringModalValues.inntektEtterEndring,\r\n        forklaringEndring: visibility.isVisible(EgenNæringModalFormField.forklaringEndring)\r\n            ? values.forklaringEndring\r\n            : initialEgenNæringModalValues.forklaringEndring,\r\n        harRegnskapsfører: visibility.isVisible(EgenNæringModalFormField.harRegnskapsfører)\r\n            ? values.harRegnskapsfører\r\n            : initialEgenNæringModalValues.harRegnskapsfører,\r\n        navnRegnskapsfører: visibility.isVisible(EgenNæringModalFormField.navnRegnskapsfører)\r\n            ? values.navnRegnskapsfører\r\n            : initialEgenNæringModalValues.navnRegnskapsfører,\r\n        telefonRegnskapsfører: visibility.isVisible(EgenNæringModalFormField.telefonRegnskapsfører)\r\n            ? values.telefonRegnskapsfører\r\n            : initialEgenNæringModalValues.telefonRegnskapsfører,\r\n        regnskapsførerNærVennEllerFamilie: visibility.isVisible(\r\n            EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie\r\n        )\r\n            ? values.regnskapsførerNærVennEllerFamilie\r\n            : initialEgenNæringModalValues.regnskapsførerNærVennEllerFamilie,\r\n    };\r\n};\r\n\r\nexport const getInitialEgenNæringModalValues = (næring: Næring | undefined): EgenNæringModalFormData => {\r\n    if (!næring) {\r\n        return {\r\n            ...initialEgenNæringModalValues,\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...initialEgenNæringModalValues,\r\n        typer: næring.næringstyper,\r\n        navnPåNæringen: næring.navnPåNæringen,\r\n        registrertINorge: convertBooleanOrUndefinedToYesOrNo(næring.registrertINorge),\r\n        land: næring.registrertILand || '',\r\n        fom: næring.tidsperiode.fom,\r\n        tom: næring.tidsperiode.tom || '',\r\n        orgnr: næring.organisasjonsnummer || '',\r\n        pågående: convertBooleanOrUndefinedToYesOrNo(næring.pågående),\r\n        næringsresultat: næring.næringsinntekt || '',\r\n        hattVarigEndringAvNæringsinntektSiste4Kalenderår: convertBooleanOrUndefinedToYesOrNo(\r\n            næring.hattVarigEndringAvNæringsinntektSiste4Kalenderår\r\n        ),\r\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: convertBooleanOrUndefinedToYesOrNo(\r\n            næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n        ),\r\n        yrkesAktivDato: næring.oppstartsdato || '',\r\n        datoForEndring: næring.endringAvNæringsinntektInformasjon ? næring.endringAvNæringsinntektInformasjon.dato : '',\r\n        inntektEtterEndring: næring.endringAvNæringsinntektInformasjon\r\n            ? næring.endringAvNæringsinntektInformasjon.næringsinntektEtterEndring.toString()\r\n            : '',\r\n        forklaringEndring: næring.endringAvNæringsinntektInformasjon\r\n            ? næring.endringAvNæringsinntektInformasjon.forklaring\r\n            : '',\r\n        harRegnskapsfører: convertBooleanOrUndefinedToYesOrNo(næring.harRegnskapsfører),\r\n        navnRegnskapsfører: næring.regnskapsfører ? næring.regnskapsfører.navn : '',\r\n        telefonRegnskapsfører: næring.regnskapsfører ? næring.regnskapsfører.telefonnummer : '',\r\n        regnskapsførerNærVennEllerFamilie: convertBooleanOrUndefinedToYesOrNo(\r\n            næring.regnskapsfører ? næring.regnskapsfører.erNærVennEllerFamilie : undefined\r\n        ),\r\n    };\r\n};\r\n\r\nexport const mapEgenNæringModalFormValuesToState = (values: Partial<EgenNæringModalFormData>): Næring => {\r\n    let endringAvNæringsinntektInformasjon: EndringAvNæringsinntektInformasjon | undefined = undefined;\r\n    let regnskapsfører: Næringsrelasjon | undefined = undefined;\r\n\r\n    if (values.hattVarigEndringAvNæringsinntektSiste4Kalenderår === YesOrNo.YES) {\r\n        endringAvNæringsinntektInformasjon = {\r\n            dato: values.datoForEndring!,\r\n            forklaring: values.forklaringEndring!,\r\n            næringsinntektEtterEndring: parseInt(values.inntektEtterEndring!),\r\n        };\r\n    }\r\n\r\n    if (values.harRegnskapsfører === YesOrNo.YES) {\r\n        regnskapsfører = {\r\n            navn: values.navnRegnskapsfører!,\r\n            telefonnummer: values.telefonRegnskapsfører!,\r\n            erNærVennEllerFamilie: convertYesOrNoOrUndefinedToBoolean(values.regnskapsførerNærVennEllerFamilie)!,\r\n        };\r\n    }\r\n\r\n    return {\r\n        næringstyper: values.typer!,\r\n        navnPåNæringen: values.navnPåNæringen!,\r\n        registrertINorge: convertYesOrNoOrUndefinedToBoolean(values.registrertINorge)!,\r\n        organisasjonsnummer: hasValue(values.orgnr) ? values.orgnr : undefined,\r\n        registrertILand: hasValue(values.land) ? values.land : undefined,\r\n        tidsperiode: {\r\n            fom: values.fom!,\r\n            tom: values.tom,\r\n        },\r\n        pågående: convertYesOrNoOrUndefinedToBoolean(values.pågående)!,\r\n        næringsinntekt: hasValue(values.næringsresultat) ? values.næringsresultat : undefined,\r\n        hattVarigEndringAvNæringsinntektSiste4Kalenderår: convertYesOrNoOrUndefinedToBoolean(\r\n            values.hattVarigEndringAvNæringsinntektSiste4Kalenderår\r\n        ),\r\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: convertYesOrNoOrUndefinedToBoolean(\r\n            values.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n        ),\r\n        oppstartsdato: hasValue(values.yrkesAktivDato) ? values.yrkesAktivDato : undefined,\r\n        endringAvNæringsinntektInformasjon: endringAvNæringsinntektInformasjon,\r\n        harRegnskapsfører: convertYesOrNoOrUndefinedToBoolean(values.harRegnskapsfører)!,\r\n        regnskapsfører: regnskapsfører,\r\n    };\r\n};\r\n\r\nexport const erVirksomhetRegnetSomNyoppstartet = (oppstartsdato: Date | undefined): boolean => {\r\n    if (!oppstartsdato) {\r\n        return true;\r\n    }\r\n\r\n    return dayjs(oppstartsdato).startOf('day').isAfter(date4YearsAgo);\r\n};\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { getDateFromDateString } from 'app/utils/dateUtils';\r\nimport { EgenNæringModalFormData, EgenNæringModalFormField } from './egenNæringModalFormConfig';\r\nimport { erVirksomhetRegnetSomNyoppstartet } from './egenNæringModalFormUtils';\r\n\r\nconst EgenNæringModalFormConfig: QuestionConfig<EgenNæringModalFormData, EgenNæringModalFormField> = {\r\n    [EgenNæringModalFormField.typer]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ typer }) => typer.length > 0,\r\n    },\r\n    [EgenNæringModalFormField.navnPåNæringen]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ navnPåNæringen }) => hasValue(navnPåNæringen),\r\n        visibilityFilter: ({ typer }) => typer.length > 0,\r\n    },\r\n    [EgenNæringModalFormField.registrertINorge]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ registrertINorge }) => registrertINorge !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ navnPåNæringen }) => hasValue(navnPåNæringen),\r\n    },\r\n    [EgenNæringModalFormField.orgnr]: {\r\n        isIncluded: ({ registrertINorge }) => registrertINorge === YesOrNo.YES,\r\n        isAnswered: ({ orgnr }) => hasValue(orgnr),\r\n        visibilityFilter: ({ registrertINorge }) => registrertINorge === YesOrNo.YES,\r\n    },\r\n    [EgenNæringModalFormField.land]: {\r\n        isIncluded: ({ registrertINorge }) => registrertINorge === YesOrNo.NO,\r\n        isAnswered: ({ land }) => hasValue(land),\r\n        visibilityFilter: ({ registrertINorge }) => registrertINorge === YesOrNo.NO,\r\n    },\r\n    [EgenNæringModalFormField.fom]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ fom }) => hasValue(fom),\r\n        visibilityFilter: ({ orgnr, land }) => hasValue(orgnr) || hasValue(land),\r\n    },\r\n    [EgenNæringModalFormField.pågående]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ pågående }) => pågående !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ fom }) => hasValue(fom),\r\n    },\r\n    [EgenNæringModalFormField.tom]: {\r\n        isIncluded: ({ pågående }) => pågående === YesOrNo.NO,\r\n        isAnswered: ({ tom }) => hasValue(tom),\r\n        visibilityFilter: ({ pågående }) => pågående === YesOrNo.NO,\r\n    },\r\n    [EgenNæringModalFormField.næringsresultat]: {\r\n        isIncluded: ({ fom }) => erVirksomhetRegnetSomNyoppstartet(getDateFromDateString(fom)),\r\n        isAnswered: ({ næringsresultat }) => hasValue(næringsresultat),\r\n        visibilityFilter: ({ pågående, tom }) => pågående === YesOrNo.YES || hasValue(tom),\r\n    },\r\n    [EgenNæringModalFormField.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene]: {\r\n        isIncluded: ({ fom }) => erVirksomhetRegnetSomNyoppstartet(getDateFromDateString(fom)),\r\n        isAnswered: ({ harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene }) =>\r\n            harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ næringsresultat }) => hasValue(næringsresultat),\r\n    },\r\n    [EgenNæringModalFormField.yrkesAktivDato]: {\r\n        isIncluded: ({ fom }) => erVirksomhetRegnetSomNyoppstartet(getDateFromDateString(fom)),\r\n        isAnswered: ({ yrkesAktivDato }) => hasValue(yrkesAktivDato),\r\n        visibilityFilter: ({ harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene }) =>\r\n            harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene === YesOrNo.YES,\r\n    },\r\n    [EgenNæringModalFormField.hattVarigEndringAvNæringsinntektSiste4Kalenderår]: {\r\n        isIncluded: ({ fom }) => !erVirksomhetRegnetSomNyoppstartet(getDateFromDateString(fom)),\r\n        isAnswered: ({ hattVarigEndringAvNæringsinntektSiste4Kalenderår }) =>\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ pågående, tom }) => pågående === YesOrNo.YES || hasValue(tom),\r\n    },\r\n    [EgenNæringModalFormField.datoForEndring]: {\r\n        isIncluded: ({ hattVarigEndringAvNæringsinntektSiste4Kalenderår }) =>\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår === YesOrNo.YES,\r\n        isAnswered: ({ datoForEndring }) => hasValue(datoForEndring),\r\n        visibilityFilter: ({ hattVarigEndringAvNæringsinntektSiste4Kalenderår }) =>\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår === YesOrNo.YES,\r\n    },\r\n    [EgenNæringModalFormField.inntektEtterEndring]: {\r\n        isIncluded: ({ hattVarigEndringAvNæringsinntektSiste4Kalenderår }) =>\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår === YesOrNo.YES,\r\n        isAnswered: ({ inntektEtterEndring }) => hasValue(inntektEtterEndring),\r\n        visibilityFilter: ({ datoForEndring }) => hasValue(datoForEndring),\r\n    },\r\n    [EgenNæringModalFormField.forklaringEndring]: {\r\n        isIncluded: ({ hattVarigEndringAvNæringsinntektSiste4Kalenderår }) =>\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår === YesOrNo.YES,\r\n        isAnswered: ({ forklaringEndring }) => hasValue(forklaringEndring),\r\n        visibilityFilter: ({ inntektEtterEndring }) => hasValue(inntektEtterEndring),\r\n    },\r\n    [EgenNæringModalFormField.harRegnskapsfører]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ harRegnskapsfører }) => harRegnskapsfører !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({\r\n            yrkesAktivDato,\r\n            forklaringEndring,\r\n            harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår,\r\n        }) =>\r\n            hasValue(yrkesAktivDato) ||\r\n            hasValue(forklaringEndring) ||\r\n            harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene === YesOrNo.NO ||\r\n            hattVarigEndringAvNæringsinntektSiste4Kalenderår === YesOrNo.NO,\r\n    },\r\n    [EgenNæringModalFormField.navnRegnskapsfører]: {\r\n        isIncluded: ({ harRegnskapsfører }) => harRegnskapsfører === YesOrNo.YES,\r\n        isAnswered: ({ navnRegnskapsfører }) => hasValue(navnRegnskapsfører),\r\n        visibilityFilter: ({ harRegnskapsfører }) => harRegnskapsfører === YesOrNo.YES,\r\n    },\r\n    [EgenNæringModalFormField.telefonRegnskapsfører]: {\r\n        isIncluded: ({ harRegnskapsfører }) => harRegnskapsfører === YesOrNo.YES,\r\n        isAnswered: ({ telefonRegnskapsfører }) => hasValue(telefonRegnskapsfører),\r\n        visibilityFilter: ({ navnRegnskapsfører }) => hasValue(navnRegnskapsfører),\r\n    },\r\n    [EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie]: {\r\n        isIncluded: ({ harRegnskapsfører }) => harRegnskapsfører === YesOrNo.YES,\r\n        isAnswered: ({ regnskapsførerNærVennEllerFamilie }) => regnskapsførerNærVennEllerFamilie !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ telefonRegnskapsfører }) => hasValue(telefonRegnskapsfører),\r\n    },\r\n};\r\n\r\nconst egenNæringModalQuestionsConfig = Questions<EgenNæringModalFormData, EgenNæringModalFormField>(\r\n    EgenNæringModalFormConfig\r\n);\r\n\r\nexport default egenNæringModalQuestionsConfig;\r\n","import { hasValue, intlUtils } from '@navikt/fp-common';\r\nimport { getNumberFromNumberInputValue } from '@navikt/sif-common-formik/lib';\r\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\r\nimport { isDateABeforeDateB, isDateInTheFuture } from 'app/utils/dateUtils';\r\nimport { erGyldigNorskOrgnummer } from 'app/utils/numberUtils';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateEgenNæringFom =\r\n    (intl: IntlShape, tom: string) =>\r\n    (fom: string): SkjemaelementFeil => {\r\n        if (!hasValue(fom)) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.påkrevd');\r\n        }\r\n\r\n        if (!isISODateString(fom)) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\r\n        }\r\n\r\n        if (isDateInTheFuture(fom)) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\r\n        }\r\n\r\n        if (isDateABeforeDateB(tom, fom)) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\nexport const validateEgenNæringTom =\r\n    (intl: IntlShape, fom: string) =>\r\n    (tom: string): SkjemaelementFeil => {\r\n        if (!hasValue(tom)) {\r\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\r\n        }\r\n\r\n        if (!isISODateString(tom)) {\r\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n        }\r\n\r\n        if (isDateInTheFuture(tom)) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\r\n        }\r\n\r\n        if (isDateABeforeDateB(tom, fom)) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\nexport const validateEgenNæringOrgnr =\r\n    (intl: IntlShape) =>\r\n    (orgnr: string): SkjemaelementFeil => {\r\n        if (!erGyldigNorskOrgnummer(orgnr)) {\r\n            return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.orgnr.ugyldigFormat');\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\nexport const validateEgenNæringForklaringTilEndring = (intl: IntlShape) => (forklaring: string) => {\r\n    if (forklaring.length < 25) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.forklaringTilEndring.forKort');\r\n    }\r\n\r\n    if (forklaring.length > 1000) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.forklaringTilEndring.forLang');\r\n    }\r\n};\r\n\r\nexport const validateEgenNæringEndringAvInntektsDato = (intl: IntlShape) => (dato: string) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\r\n    }\r\n\r\n    if (!isISODateString(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (isDateInTheFuture(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateEgenNæringYrkesAktivDatoDato = (intl: IntlShape) => (dato: string) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\r\n    }\r\n\r\n    if (!isISODateString(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (isDateInTheFuture(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateNumber = (intl: IntlShape, errorKey: string) => (value: string) => {\r\n    const valueNumber = getNumberFromNumberInputValue(value);\r\n\r\n    if (!valueNumber || Math.round(valueNumber) !== valueNumber) {\r\n        return intlUtils(intl, errorKey);\r\n    }\r\n};\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { EgenNæringModalFormComponents, EgenNæringModalFormField } from '../egenNæringModalFormConfig';\r\nimport { validateEgenNæringOrgnr } from '../validation/egenNæringValidation';\r\n\r\ninterface Props {\r\n    visibility: QuestionVisibility<EgenNæringModalFormField, undefined>;\r\n}\r\n\r\nconst OrgnummerEllerLand: FunctionComponent<Props> = ({ visibility }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.orgnr)}>\r\n                <EgenNæringModalFormComponents.NumberInput\r\n                    name={EgenNæringModalFormField.orgnr}\r\n                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.orgnr')}\r\n                    validate={validateEgenNæringOrgnr(intl)}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.land)}>\r\n                <EgenNæringModalFormComponents.CountrySelect\r\n                    name={EgenNæringModalFormField.land}\r\n                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.registrertILand')}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrgnummerEllerLand;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { EgenNæringModalFormComponents, EgenNæringModalFormField } from '../egenNæringModalFormConfig';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport { validateNumber } from '../validation/egenNæringValidation';\r\n\r\ninterface Props {\r\n    visibility: QuestionVisibility<EgenNæringModalFormField, undefined>;\r\n}\r\n\r\nconst Regnskapsfører: FunctionComponent<Props> = ({ visibility }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.harRegnskapsfører)}>\r\n                <EgenNæringModalFormComponents.YesOrNoQuestion\r\n                    name={EgenNæringModalFormField.harRegnskapsfører}\r\n                    legend={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.harRegnskapsfører')}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.navnRegnskapsfører)}>\r\n                <EgenNæringModalFormComponents.Input\r\n                    name={EgenNæringModalFormField.navnRegnskapsfører}\r\n                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.regnskapsførerNavn')}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.telefonRegnskapsfører)}>\r\n                <EgenNæringModalFormComponents.NumberInput\r\n                    name={EgenNæringModalFormField.telefonRegnskapsfører}\r\n                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.regnskapsførerTlf')}\r\n                    validate={validateNumber(\r\n                        intl,\r\n                        'valideringsfeil.inntektsinformasjon.regnskapsførerTelefonnummer.ugyldigFormat'\r\n                    )}\r\n                />\r\n            </Block>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={visibility.isVisible(EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie)}\r\n            >\r\n                <EgenNæringModalFormComponents.YesOrNoQuestion\r\n                    name={EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie}\r\n                    legend={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.regnskapsførerNærVennEllerFamilie')}\r\n                />\r\n            </Block>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={visibility.isVisible(EgenNæringModalFormField.regnskapsførerNærVennEllerFamilie)}\r\n            >\r\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.egenNæringModal.regnskapsførerVeileder\" />\r\n                    </Normaltekst>\r\n                </Veilederpanel>\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Regnskapsfører;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Modal from 'nav-frontend-modal';\r\nimport { bemUtils, Block, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { Normaltekst, Undertittel } from 'nav-frontend-typografi';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport {\r\n    EgenNæringModalFormComponents,\r\n    EgenNæringModalFormData,\r\n    EgenNæringModalFormField,\r\n} from './egenNæringModalFormConfig';\r\nimport {\r\n    cleanupEgenNæringForm,\r\n    getInitialEgenNæringModalValues,\r\n    mapEgenNæringModalFormValuesToState,\r\n} from './egenNæringModalFormUtils';\r\nimport { Næring, Næringstype } from 'app/context/types/Næring';\r\nimport egenNæringModalQuestionsConfig from './egenNæringModalQuestionsConfig';\r\nimport OrgnummerEllerLand from './components/OrgnummerEllerLand';\r\nimport Regnskapsfører from './components/Regnskapsfører';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\n\r\nimport './egenNæringModal.less';\r\nimport {\r\n    validateEgenNæringFom,\r\n    validateEgenNæringTom,\r\n    validateEgenNæringForklaringTilEndring,\r\n    validateEgenNæringEndringAvInntektsDato,\r\n    validateEgenNæringYrkesAktivDatoDato,\r\n    validateNumber,\r\n} from './validation/egenNæringValidation';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface Props {\r\n    isOpen: boolean;\r\n    title: string;\r\n    onRequestClose: () => void;\r\n    selectedNæring?: Næring;\r\n    addNæring: (næring: Næring) => void;\r\n    editNæring: (næring: Næring) => void;\r\n}\r\n\r\nconst EgenNæringModal: FunctionComponent<Props> = ({\r\n    isOpen,\r\n    title,\r\n    onRequestClose,\r\n    selectedNæring,\r\n    addNæring,\r\n    editNæring,\r\n}) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('egenNæringModal');\r\n\r\n    const onValidSubmit = (values: Partial<EgenNæringModalFormData>) => {\r\n        if (!selectedNæring) {\r\n            addNæring(mapEgenNæringModalFormValuesToState(values));\r\n        } else {\r\n            editNæring(mapEgenNæringModalFormValuesToState(values));\r\n        }\r\n        onRequestClose();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            contentLabel={title}\r\n            onRequestClose={onRequestClose}\r\n            closeButton={true}\r\n            shouldCloseOnOverlayClick={false}\r\n            className={bem.block}\r\n        >\r\n            <EgenNæringModalFormComponents.FormikWrapper\r\n                initialValues={getInitialEgenNæringModalValues(selectedNæring)}\r\n                onSubmit={(values: Partial<EgenNæringModalFormData>) => onValidSubmit(values)}\r\n                renderForm={({ values: formValues }) => {\r\n                    const visibility = egenNæringModalQuestionsConfig.getVisbility(formValues);\r\n\r\n                    return (\r\n                        <EgenNæringModalFormComponents.Form\r\n                            includeButtons={false}\r\n                            cleanup={(values) => cleanupEgenNæringForm(values, visibility)}\r\n                            includeValidationSummary={true}\r\n                        >\r\n                            <Block padBottom=\"l\">\r\n                                <Undertittel className={bem.element('tittel')}>\r\n                                    <FormattedMessage id=\"inntektsinformasjon.egenNæringModal.tittel\" />\r\n                                </Undertittel>\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.typer)}>\r\n                                <EgenNæringModalFormComponents.CheckboxPanelGroup\r\n                                    name={EgenNæringModalFormField.typer}\r\n                                    legend={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.næringstype')}\r\n                                    checkboxes={[\r\n                                        {\r\n                                            label: intlUtils(\r\n                                                intl,\r\n                                                'inntektsinformasjon.egenNæringModal.næringstype.dagmamma'\r\n                                            ),\r\n                                            value: Næringstype.DAGMAMMA,\r\n                                        },\r\n                                        {\r\n                                            label: intlUtils(\r\n                                                intl,\r\n                                                'inntektsinformasjon.egenNæringModal.næringstype.fiske'\r\n                                            ),\r\n                                            value: Næringstype.FISKER,\r\n                                        },\r\n                                        {\r\n                                            label: intlUtils(\r\n                                                intl,\r\n                                                'inntektsinformasjon.egenNæringModal.næringstype.jordbrukSkogbruk'\r\n                                            ),\r\n                                            value: Næringstype.JORDBRUK,\r\n                                        },\r\n                                        {\r\n                                            label: intlUtils(\r\n                                                intl,\r\n                                                'inntektsinformasjon.egenNæringModal.næringstype.annen'\r\n                                            ),\r\n                                            value: Næringstype.ANNET,\r\n                                        },\r\n                                    ]}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.navnPåNæringen)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.Input\r\n                                    name={EgenNæringModalFormField.navnPåNæringen}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.navnPåNæring')}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.registrertINorge)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.YesOrNoQuestion\r\n                                    name={EgenNæringModalFormField.registrertINorge}\r\n                                    legend={intlUtils(\r\n                                        intl,\r\n                                        'inntektsinformasjon.egenNæringModal.erNæringenRegistrertINorge',\r\n                                        {\r\n                                            navnPåNæringen: formValues.navnPåNæringen,\r\n                                        }\r\n                                    )}\r\n                                />\r\n                            </Block>\r\n                            <OrgnummerEllerLand visibility={visibility} />\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.fom)}>\r\n                                <EgenNæringModalFormComponents.DatePicker\r\n                                    name={EgenNæringModalFormField.fom}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.startetNæring.fom', {\r\n                                        navnPåNæringen: formValues.navnPåNæringen,\r\n                                    })}\r\n                                    placeholder=\"dd.mm.åååå\"\r\n                                    fullscreenOverlay={true}\r\n                                    showYearSelector={true}\r\n                                    validate={validateEgenNæringFom(intl, formValues.tom)}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.pågående)}>\r\n                                <EgenNæringModalFormComponents.YesOrNoQuestion\r\n                                    name={EgenNæringModalFormField.pågående}\r\n                                    legend={intlUtils(\r\n                                        intl,\r\n                                        'inntektsinformasjon.egenNæringModal.startetNæring.pågående',\r\n                                        {\r\n                                            navnPåNæringen: formValues.navnPåNæringen,\r\n                                        }\r\n                                    )}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(EgenNæringModalFormField.tom)}>\r\n                                <EgenNæringModalFormComponents.DatePicker\r\n                                    name={EgenNæringModalFormField.tom}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.startetNæring.tom', {\r\n                                        navnPåNæringen: formValues.navnPåNæringen,\r\n                                    })}\r\n                                    placeholder=\"dd.mm.åååå\"\r\n                                    fullscreenOverlay={true}\r\n                                    showYearSelector={true}\r\n                                    validate={validateEgenNæringTom(intl, formValues.fom)}\r\n                                    maxDate={dayjs().toDate()}\r\n                                    minDate={dayjs(formValues.fom).toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.næringsresultat)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.NumberInput\r\n                                    name={EgenNæringModalFormField.næringsresultat}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.næringsinntekt')}\r\n                                    description={\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                'inntektsinformasjon.egenNæringModal.næringsinntekt.info.apneLabel'\r\n                                            )}\r\n                                        >\r\n                                            <Normaltekst>\r\n                                                <FormattedMessage id=\"inntektsinformasjon.egenNæringModal.næringsinntekt.info\" />\r\n                                            </Normaltekst>\r\n                                        </UtvidetInformasjon>\r\n                                    }\r\n                                    validate={validateNumber(\r\n                                        intl,\r\n                                        'valideringsfeil.inntektsinformasjon.næringsinntekt.ugyldigFormat'\r\n                                    )}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(\r\n                                    EgenNæringModalFormField.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n                                )}\r\n                            >\r\n                                <EgenNæringModalFormComponents.YesOrNoQuestion\r\n                                    name={\r\n                                        EgenNæringModalFormField.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n                                    }\r\n                                    legend={intlUtils(\r\n                                        intl,\r\n                                        'inntektsinformasjon.egenNæringModal.blittYrkesaktivSiste3År'\r\n                                    )}\r\n                                    description={\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                'inntektsinformasjon.egenNæringModal.blittYrkesaktivSiste3År.info.apneLabel'\r\n                                            )}\r\n                                        >\r\n                                            <Normaltekst>\r\n                                                <FormattedMessage id=\"inntektsinformasjon.egenNæringModal.blittYrkesaktivSiste3År.info\" />\r\n                                            </Normaltekst>\r\n                                        </UtvidetInformasjon>\r\n                                    }\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.yrkesAktivDato)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.DatePicker\r\n                                    name={EgenNæringModalFormField.yrkesAktivDato}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.yrkesaktivDato')}\r\n                                    placeholder=\"dd.mm.åååå\"\r\n                                    fullscreenOverlay={true}\r\n                                    showYearSelector={true}\r\n                                    validate={validateEgenNæringYrkesAktivDatoDato(intl)}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(\r\n                                    EgenNæringModalFormField.hattVarigEndringAvNæringsinntektSiste4Kalenderår\r\n                                )}\r\n                            >\r\n                                <EgenNæringModalFormComponents.YesOrNoQuestion\r\n                                    name={EgenNæringModalFormField.hattVarigEndringAvNæringsinntektSiste4Kalenderår}\r\n                                    legend={intlUtils(\r\n                                        intl,\r\n                                        'inntektsinformasjon.egenNæringModal.varigEndringAvNæringsinntekt'\r\n                                    )}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.datoForEndring)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.DatePicker\r\n                                    name={EgenNæringModalFormField.datoForEndring}\r\n                                    label={intlUtils(\r\n                                        intl,\r\n                                        'inntektsinformasjon.egenNæringModal.varigEndringAvNæringsinntektDato'\r\n                                    )}\r\n                                    placeholder=\"dd.mm.åååå\"\r\n                                    fullscreenOverlay={true}\r\n                                    showYearSelector={true}\r\n                                    validate={validateEgenNæringEndringAvInntektsDato(intl)}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.inntektEtterEndring)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.NumberInput\r\n                                    name={EgenNæringModalFormField.inntektEtterEndring}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.egenNæringModal.inntektEtterEndring')}\r\n                                    validate={validateNumber(\r\n                                        intl,\r\n                                        'valideringsfeil.inntektsinformasjon.varigEndringAvInntekt.ugyldigFormat'\r\n                                    )}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(EgenNæringModalFormField.forklaringEndring)}\r\n                            >\r\n                                <EgenNæringModalFormComponents.Textarea\r\n                                    name={EgenNæringModalFormField.forklaringEndring}\r\n                                    label={intlUtils(\r\n                                        intl,\r\n                                        'inntektsinformasjon.egenNæringModal.varigEndringAvNæringsinntektForklaring'\r\n                                    )}\r\n                                    maxLength={1000}\r\n                                    validate={validateEgenNæringForklaringTilEndring(intl)}\r\n                                />\r\n                            </Block>\r\n                            <Regnskapsfører visibility={visibility} />\r\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </EgenNæringModalFormComponents.Form>\r\n                    );\r\n                }}\r\n            />\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EgenNæringModal;\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { Næring } from 'app/context/types/Næring';\r\nimport { Knapp } from 'nav-frontend-knapper';\r\nimport React, { FunctionComponent, useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport {\r\n    InntektsinformasjonFormComponents,\r\n    InntektsinformasjonFormData,\r\n    InntektsinformasjonFormField,\r\n} from '../../inntektsinformasjonFormConfig';\r\nimport EgenNæringListe from './EgenNæringListe';\r\nimport HvemKanDriveMedEgenNæring from './HvemKanDriveMedEgenNæring';\r\nimport EgenNæringModal from './modal/EgenNæringModal';\r\n\r\ninterface Props {\r\n    egenNæringInformasjon: Næring[];\r\n    setEgenNæringsInformasjon: (oppdrag: Næring[]) => void;\r\n    visibility: QuestionVisibility<InntektsinformasjonFormField, undefined>;\r\n    formValues: InntektsinformasjonFormData;\r\n}\r\n\r\nconst EgenNæring: FunctionComponent<Props> = ({\r\n    egenNæringInformasjon,\r\n    setEgenNæringsInformasjon,\r\n    visibility,\r\n    formValues,\r\n}) => {\r\n    const intl = useIntl();\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedNæring, setSelectedNæring] = useState<Næring>();\r\n\r\n    const handleOnLeggTil = () => {\r\n        setIsModalOpen(true);\r\n        setSelectedNæring(undefined);\r\n    };\r\n\r\n    const addNæring = (næring: Næring) => {\r\n        const updatedEgenNæringInformasjon = egenNæringInformasjon.concat(næring);\r\n\r\n        setEgenNæringsInformasjon(updatedEgenNæringInformasjon);\r\n    };\r\n\r\n    const deleteNæring = (næring: Næring) => {\r\n        const updatedEgenNæringInformasjon = egenNæringInformasjon.filter((nær) => nær !== næring);\r\n\r\n        setEgenNæringsInformasjon(updatedEgenNæringInformasjon);\r\n    };\r\n\r\n    const editNæring = (næring: Næring) => {\r\n        const updatedEgenNæringInformasjon = egenNæringInformasjon\r\n            .filter((nær) => nær !== selectedNæring)\r\n            .concat(næring);\r\n\r\n        setEgenNæringsInformasjon(updatedEgenNæringInformasjon);\r\n    };\r\n\r\n    const selectNæring = (næring: Næring) => {\r\n        setSelectedNæring(næring);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={visibility.isVisible(InntektsinformasjonFormField.hattInntektSomNæringsdrivende)}\r\n            >\r\n                <InntektsinformasjonFormComponents.YesOrNoQuestion\r\n                    name={InntektsinformasjonFormField.hattInntektSomNæringsdrivende}\r\n                    legend={intlUtils(intl, 'inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd')}\r\n                    description={<HvemKanDriveMedEgenNæring />}\r\n                />\r\n            </Block>\r\n            {formValues.hattInntektSomNæringsdrivende === YesOrNo.YES && (\r\n                <div style={{ backgroundColor: '#e9e7e7', marginBottom: '1rem', padding: '1rem' }}>\r\n                    <EgenNæringModal\r\n                        isOpen={isModalOpen}\r\n                        title=\"Næringsinformasjon\"\r\n                        onRequestClose={() => setIsModalOpen(false)}\r\n                        selectedNæring={selectedNæring}\r\n                        addNæring={addNæring}\r\n                        editNæring={editNæring}\r\n                    />\r\n                    <Block padBottom=\"l\" visible={egenNæringInformasjon.length > 0}>\r\n                        <EgenNæringListe\r\n                            næringsInformasjon={egenNæringInformasjon}\r\n                            deleteNæring={deleteNæring}\r\n                            selectNæring={selectNæring}\r\n                        />\r\n                    </Block>\r\n                    <Knapp htmlType=\"button\" onClick={handleOnLeggTil}>\r\n                        <FormattedMessage id=\"inntektsinformasjon.leggTilVirksomhet\" />\r\n                    </Knapp>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EgenNæring;\r\n","import { hasValue, intlUtils } from '@navikt/fp-common';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateFrilansoppstartsDato = (intl: IntlShape) => (oppstartsdato: string) => {\r\n    if (!hasValue(oppstartsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.frilansoppstartsDato.påkrevd');\r\n    }\r\n\r\n    if (!isISODateString(oppstartsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.frilansoppstartsDato.ugyldigDatoFormat');\r\n    }\r\n};\r\n","import { formatDate } from '@navikt/fp-common';\r\nimport InteractiveListElement from 'app/components/interactive-list-element/InteractiveListElement';\r\nimport { FrilansOppdrag } from 'app/context/types/Frilans';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface Props {\r\n    frilansoppdrag: FrilansOppdrag[];\r\n    deleteFrilansoppdrag: (oppdrag: FrilansOppdrag) => void;\r\n    selectOppdrag: (oppdrag: FrilansOppdrag) => void;\r\n}\r\n\r\nconst FrilansoppdragListe: FunctionComponent<Props> = ({ frilansoppdrag, deleteFrilansoppdrag, selectOppdrag }) => {\r\n    if (frilansoppdrag.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul style={{ margin: 0, padding: 0, listStyle: 'none' }}>\r\n            {frilansoppdrag.map((oppdrag, index) => (\r\n                <InteractiveListElement\r\n                    deleteLinkText=\"Slett oppdrag\"\r\n                    onDelete={() => deleteFrilansoppdrag(oppdrag)}\r\n                    onEdit={() => selectOppdrag(oppdrag)}\r\n                    text={`${formatDate(oppdrag.tidsperiode.fom)} - ${\r\n                        oppdrag.tidsperiode.tom ? formatDate(oppdrag.tidsperiode.tom) : 'pågående'\r\n                    }`}\r\n                    title={oppdrag.navnPåArbeidsgiver}\r\n                    deleteButtonAriaText={`Slett oppdrag for ${oppdrag.navnPåArbeidsgiver}`}\r\n                    editButtonAriaText={`Rediger oppdrag for ${oppdrag.navnPåArbeidsgiver}`}\r\n                    key={`${oppdrag.navnPåArbeidsgiver}+${index}`}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default FrilansoppdragListe;\r\n","import { intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport EksternUrl from 'app/components/ekstern-url/EksternUrl';\r\nimport links from 'app/links/links';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nconst HvemKanVæreFrilanser = () => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <UtvidetInformasjon\r\n            apneLabel={intlUtils(intl, 'inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.apneLabel')}\r\n        >\r\n            <div style={{ backgroundColor: '#e9e7e7', padding: '1.5rem' }}>\r\n                <Normaltekst>\r\n                    <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.del1\" />\r\n                </Normaltekst>\r\n                <ul>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt1\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt2\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt3\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt4\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt5\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt6\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt7\" />\r\n                    </li>\r\n                    <li>\r\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.punkt8\" />\r\n                    </li>\r\n                </ul>\r\n                <Normaltekst>\r\n                    <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd.infoboksTekst.del2\" />\r\n                    <EksternUrl url={links.frilanserInfoBoks} lenkeTekst={intlUtils(intl, 'hjemmeside')} />\r\n                </Normaltekst>\r\n            </div>\r\n        </UtvidetInformasjon>\r\n    );\r\n};\r\n\r\nexport default HvemKanVæreFrilanser;\r\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum FrilansoppdragModalFormField {\r\n    navnOppdragsgiver = 'navnOppdragsgiver',\r\n    fom = 'fom',\r\n    tom = 'tom',\r\n    pågående = 'pågående',\r\n}\r\n\r\nexport interface FrilansoppdragModalFormData {\r\n    [FrilansoppdragModalFormField.navnOppdragsgiver]: string;\r\n    [FrilansoppdragModalFormField.fom]: string;\r\n    [FrilansoppdragModalFormField.tom]: string;\r\n    [FrilansoppdragModalFormField.pågående]: YesOrNo;\r\n}\r\n\r\nexport const FrilansoppdragModalFormComponents = getTypedFormComponents<\r\n    FrilansoppdragModalFormField,\r\n    FrilansoppdragModalFormData,\r\n    string\r\n>();\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { FrilansOppdrag } from 'app/context/types/Frilans';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport { FrilansoppdragModalFormData, FrilansoppdragModalFormField } from './frilansoppdragModalFormConfig';\r\n\r\nexport const initialFrilansoppdragModalValues: FrilansoppdragModalFormData = {\r\n    [FrilansoppdragModalFormField.navnOppdragsgiver]: '',\r\n    [FrilansoppdragModalFormField.fom]: '',\r\n    [FrilansoppdragModalFormField.tom]: '',\r\n    [FrilansoppdragModalFormField.pågående]: YesOrNo.UNANSWERED,\r\n};\r\n\r\nexport const cleanupFrilansoppdragForm = (\r\n    values: FrilansoppdragModalFormData,\r\n    visibility: QuestionVisibility<FrilansoppdragModalFormField, undefined>\r\n): FrilansoppdragModalFormData => {\r\n    return {\r\n        navnOppdragsgiver: visibility.isVisible(FrilansoppdragModalFormField.navnOppdragsgiver)\r\n            ? values.navnOppdragsgiver\r\n            : initialFrilansoppdragModalValues.navnOppdragsgiver,\r\n        fom: visibility.isVisible(FrilansoppdragModalFormField.fom) ? values.fom : initialFrilansoppdragModalValues.fom,\r\n        tom: visibility.isVisible(FrilansoppdragModalFormField.tom) ? values.tom : initialFrilansoppdragModalValues.tom,\r\n        pågående: visibility.isVisible(FrilansoppdragModalFormField.pågående)\r\n            ? values.pågående\r\n            : initialFrilansoppdragModalValues.pågående,\r\n    };\r\n};\r\n\r\nexport const mapFrilansoppdragModalValuesToState = (values: Partial<FrilansoppdragModalFormData>): FrilansOppdrag => {\r\n    return {\r\n        navnPåArbeidsgiver: values.navnOppdragsgiver!,\r\n        pågående: convertYesOrNoOrUndefinedToBoolean(values.pågående)!,\r\n        tidsperiode: {\r\n            fom: values.fom!,\r\n            tom: hasValue(values.tom) ? values.tom : undefined,\r\n        },\r\n    };\r\n};\r\n\r\nexport const getInitialFrilansoppdragModalValues = (\r\n    oppdrag: FrilansOppdrag | undefined\r\n): FrilansoppdragModalFormData => {\r\n    if (!oppdrag) {\r\n        return {\r\n            ...initialFrilansoppdragModalValues,\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...initialFrilansoppdragModalValues,\r\n        fom: oppdrag.tidsperiode.fom,\r\n        tom: oppdrag.tidsperiode.tom || '',\r\n        navnOppdragsgiver: oppdrag.navnPåArbeidsgiver,\r\n        pågående: convertBooleanOrUndefinedToYesOrNo(oppdrag.pågående),\r\n    };\r\n};\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { FrilansoppdragModalFormData, FrilansoppdragModalFormField } from './frilansoppdragModalFormConfig';\r\n\r\nconst FrilansoppdragModalFormConfig: QuestionConfig<FrilansoppdragModalFormData, FrilansoppdragModalFormField> = {\r\n    [FrilansoppdragModalFormField.navnOppdragsgiver]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ navnOppdragsgiver }) => hasValue(navnOppdragsgiver),\r\n    },\r\n    [FrilansoppdragModalFormField.fom]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ fom }) => hasValue(fom),\r\n        visibilityFilter: ({ navnOppdragsgiver }) => hasValue(navnOppdragsgiver),\r\n    },\r\n    [FrilansoppdragModalFormField.pågående]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ pågående }) => pågående !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ fom }) => hasValue(fom),\r\n    },\r\n    [FrilansoppdragModalFormField.tom]: {\r\n        isIncluded: ({ pågående }) => pågående === YesOrNo.NO,\r\n        isAnswered: ({ tom }) => hasValue(tom),\r\n        visibilityFilter: ({ pågående }) => pågående === YesOrNo.NO,\r\n    },\r\n};\r\n\r\nconst frilansoppdragModalQuestionsConfig = Questions<FrilansoppdragModalFormData, FrilansoppdragModalFormField>(\r\n    FrilansoppdragModalFormConfig\r\n);\r\n\r\nexport default frilansoppdragModalQuestionsConfig;\r\n","import { hasValue, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { isDateInTheFuture, isDateABeforeDateB } from 'app/utils/dateUtils';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateNavnPåOppdragsgiver = (intl: IntlShape) => (navn: string) => {\r\n    if (!hasValue(navn)) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.frilansoppdrag.navnPåOppdragsgiver.påkrevd');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateOppdragFom = (intl: IntlShape, tom: string, oppstartsdato: string) => (fom: string) => {\r\n    if (!hasValue(fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.påkrevd');\r\n    }\r\n\r\n    if (!isISODateString(fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (isDateInTheFuture(fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\r\n    }\r\n\r\n    if (isDateABeforeDateB(fom, oppstartsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.frilansoppdrag.fom.førOppstartsdato');\r\n    }\r\n\r\n    if (isDateABeforeDateB(tom, fom)) {\r\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validatePågåendeOppdrag = (intl: IntlShape) => (pågående: YesOrNo) => {\r\n    if (pågående === YesOrNo.UNANSWERED) {\r\n        return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.frilansoppdrag.pågående.påkrevd');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateOppdragTom =\r\n    (intl: IntlShape, pågående: YesOrNo, fom: string, oppstartsdato: string) => (tom: string) => {\r\n        if (pågående === YesOrNo.YES) {\r\n            return undefined;\r\n        }\r\n\r\n        if (!hasValue(tom)) {\r\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\r\n        }\r\n\r\n        if (!isISODateString(tom)) {\r\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n        }\r\n\r\n        if (isDateInTheFuture(tom)) {\r\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\r\n        }\r\n\r\n        if (isDateABeforeDateB(tom, oppstartsdato)) {\r\n            return intlUtils(intl, 'valideringsfeil.inntektsinformasjon.frilansoppdrag.tom.førOppstartsdato');\r\n        }\r\n\r\n        if (isDateABeforeDateB(tom, fom)) {\r\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n","import React, { FunctionComponent } from 'react';\r\nimport Modal from 'nav-frontend-modal';\r\nimport {\r\n    FrilansoppdragModalFormComponents,\r\n    FrilansoppdragModalFormData,\r\n    FrilansoppdragModalFormField,\r\n} from './frilansoppdragModalFormConfig';\r\nimport {\r\n    cleanupFrilansoppdragForm,\r\n    getInitialFrilansoppdragModalValues,\r\n    mapFrilansoppdragModalValuesToState,\r\n} from './frilansoppdragModalFormUtils';\r\nimport { bemUtils, Block, intlUtils } from '@navikt/fp-common';\r\nimport { useIntl } from 'react-intl';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport frilansoppdragModalQuestionsConfig from './frilansoppdragModalQuestionsConfig';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FrilansOppdrag } from 'app/context/types/Frilans';\r\nimport {\r\n    validateNavnPåOppdragsgiver,\r\n    validateOppdragFom,\r\n    validateOppdragTom,\r\n    validatePågåendeOppdrag,\r\n} from '../validation/frilansValidation';\r\nimport dayjs from 'dayjs';\r\n\r\nimport './frilansoppdragModal.less';\r\n\r\ninterface Props {\r\n    isOpen: boolean;\r\n    title: string;\r\n    onRequestClose: () => void;\r\n    selectedFrilansoppdrag?: FrilansOppdrag;\r\n    addFrilansoppdrag: (oppdrag: FrilansOppdrag) => void;\r\n    editFrilansoppdrag: (oppdrag: FrilansOppdrag) => void;\r\n    oppstartsdato: string;\r\n}\r\n\r\nconst FrilansoppdragModal: FunctionComponent<Props> = ({\r\n    isOpen,\r\n    title,\r\n    onRequestClose,\r\n    selectedFrilansoppdrag,\r\n    addFrilansoppdrag,\r\n    editFrilansoppdrag,\r\n    oppstartsdato,\r\n}) => {\r\n    const bem = bemUtils('frilansoppdragModal');\r\n    const intl = useIntl();\r\n\r\n    const onValidSubmit = (values: Partial<FrilansoppdragModalFormData>) => {\r\n        if (!selectedFrilansoppdrag) {\r\n            addFrilansoppdrag(mapFrilansoppdragModalValuesToState(values));\r\n        } else {\r\n            editFrilansoppdrag(mapFrilansoppdragModalValuesToState(values));\r\n        }\r\n        onRequestClose();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            contentLabel={title}\r\n            onRequestClose={onRequestClose}\r\n            closeButton={true}\r\n            shouldCloseOnOverlayClick={false}\r\n            className={bem.block}\r\n        >\r\n            <FrilansoppdragModalFormComponents.FormikWrapper\r\n                initialValues={getInitialFrilansoppdragModalValues(selectedFrilansoppdrag)}\r\n                onSubmit={(values: Partial<FrilansoppdragModalFormData>) => onValidSubmit(values)}\r\n                renderForm={({ values: formValues }) => {\r\n                    const visibility = frilansoppdragModalQuestionsConfig.getVisbility(formValues);\r\n\r\n                    return (\r\n                        <FrilansoppdragModalFormComponents.Form\r\n                            cleanup={(values) => cleanupFrilansoppdragForm(values, visibility)}\r\n                        >\r\n                            <Undertittel className={bem.element('tittel')}>\r\n                                <FormattedMessage id=\"inntektsinformasjon.frilansOppdrag.tittel\" />\r\n                            </Undertittel>\r\n                            <Block padBottom=\"l\">\r\n                                <FrilansoppdragModalFormComponents.Input\r\n                                    name={FrilansoppdragModalFormField.navnOppdragsgiver}\r\n                                    label={intlUtils(intl, 'inntektsinformasjon.frilansOppdrag.oppdragsgiver')}\r\n                                    validate={validateNavnPåOppdragsgiver(intl)}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(FrilansoppdragModalFormField.fom)}>\r\n                                <FrilansoppdragModalFormComponents.DatePicker\r\n                                    name={FrilansoppdragModalFormField.fom}\r\n                                    label={intlUtils(intl, 'fom')}\r\n                                    placeholder={'dd.mm.åååå'}\r\n                                    fullscreenOverlay={true}\r\n                                    validate={validateOppdragFom(intl, formValues.tom, oppstartsdato)}\r\n                                    minDate={dayjs(oppstartsdato).toDate()}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(FrilansoppdragModalFormField.pågående)}>\r\n                                <FrilansoppdragModalFormComponents.YesOrNoQuestion\r\n                                    name={FrilansoppdragModalFormField.pågående}\r\n                                    legend={intlUtils(intl, 'inntektsinformasjon.frilansOppdrag.pågående')}\r\n                                    validate={validatePågåendeOppdrag(intl)}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\" visible={visibility.isVisible(FrilansoppdragModalFormField.tom)}>\r\n                                <FrilansoppdragModalFormComponents.DatePicker\r\n                                    name={FrilansoppdragModalFormField.tom}\r\n                                    label={intlUtils(intl, 'tom')}\r\n                                    placeholder={'dd.mm.åååå'}\r\n                                    fullscreenOverlay={true}\r\n                                    validate={validateOppdragTom(\r\n                                        intl,\r\n                                        formValues.pågående,\r\n                                        formValues.fom,\r\n                                        oppstartsdato\r\n                                    )}\r\n                                    minDate={dayjs(formValues.fom).toDate()}\r\n                                    maxDate={dayjs().toDate()}\r\n                                />\r\n                            </Block>\r\n                        </FrilansoppdragModalFormComponents.Form>\r\n                    );\r\n                }}\r\n            />\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default FrilansoppdragModal;\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { FrilansOppdrag } from 'app/context/types/Frilans';\r\nimport { Knapp } from 'nav-frontend-knapper';\r\nimport React, { FunctionComponent, useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport {\r\n    InntektsinformasjonFormComponents,\r\n    InntektsinformasjonFormData,\r\n    InntektsinformasjonFormField,\r\n} from '../../inntektsinformasjonFormConfig';\r\nimport { validateFrilansoppstartsDato } from '../../validation/inntektsinformasjonValidering';\r\nimport FrilansoppdragListe from './FrilansoppdragListe';\r\nimport HvemKanVæreFrilanser from './HvemKanVæreFrilanser';\r\nimport FrilansoppdragModal from './modal/FrilansoppdragModal';\r\n\r\ninterface Props {\r\n    frilansoppdrag: FrilansOppdrag[];\r\n    setFrilansoppdrag: (oppdrag: FrilansOppdrag[]) => void;\r\n    visibility: QuestionVisibility<InntektsinformasjonFormField, undefined>;\r\n    formValues: InntektsinformasjonFormData;\r\n}\r\n\r\nconst Frilans: FunctionComponent<Props> = ({ frilansoppdrag, setFrilansoppdrag, visibility, formValues }) => {\r\n    const intl = useIntl();\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedOppdrag, setSelectedOppdrag] = useState<FrilansOppdrag>();\r\n\r\n    const addFrilansoppdrag = (oppdrag: FrilansOppdrag) => {\r\n        const updatedFrilansoppdrag = frilansoppdrag.concat(oppdrag);\r\n\r\n        setFrilansoppdrag(updatedFrilansoppdrag);\r\n    };\r\n\r\n    const deleteFrilansoppdrag = (oppdrag: FrilansOppdrag) => {\r\n        const updatedFrilansoppdrag = frilansoppdrag.filter((opp) => opp !== oppdrag);\r\n\r\n        setFrilansoppdrag(updatedFrilansoppdrag);\r\n    };\r\n\r\n    const editFrilansoppdrag = (oppdrag: FrilansOppdrag) => {\r\n        const updatedFrilansoppdrag = frilansoppdrag.filter((opp) => opp !== selectedOppdrag).concat(oppdrag);\r\n\r\n        setFrilansoppdrag(updatedFrilansoppdrag);\r\n    };\r\n\r\n    const selectOppdrag = (frilansoppdrag: FrilansOppdrag) => {\r\n        setSelectedOppdrag(frilansoppdrag);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleOnLeggTil = () => {\r\n        setIsModalOpen(true);\r\n        setSelectedOppdrag(undefined);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(InntektsinformasjonFormField.hattInntektSomFrilans)}>\r\n                <InntektsinformasjonFormComponents.YesOrNoQuestion\r\n                    name={InntektsinformasjonFormField.hattInntektSomFrilans}\r\n                    legend={intlUtils(intl, 'inntektsinformasjon.harDuJobbetSomFrilansSiste10Mnd')}\r\n                    description={<HvemKanVæreFrilanser />}\r\n                />\r\n            </Block>\r\n            {formValues.hattInntektSomFrilans === YesOrNo.YES && (\r\n                <div style={{ backgroundColor: '#e9e7e7', marginBottom: '1rem', padding: '1rem' }}>\r\n                    <Block\r\n                        padBottom=\"l\"\r\n                        visible={visibility.isVisible(InntektsinformasjonFormField.frilansOppstartsDato)}\r\n                    >\r\n                        <InntektsinformasjonFormComponents.DatePicker\r\n                            name={InntektsinformasjonFormField.frilansOppstartsDato}\r\n                            label={intlUtils(intl, 'inntektsinformasjon.frilans.oppstart')}\r\n                            validate={validateFrilansoppstartsDato(intl)}\r\n                        />\r\n                    </Block>\r\n                    <Block\r\n                        padBottom=\"l\"\r\n                        visible={visibility.isVisible(InntektsinformasjonFormField.jobberFremdelesSomFrilanser)}\r\n                    >\r\n                        <InntektsinformasjonFormComponents.YesOrNoQuestion\r\n                            name={InntektsinformasjonFormField.jobberFremdelesSomFrilanser}\r\n                            legend={intlUtils(intl, 'inntektsinformasjon.frilans.jobberFremdelesSomFrilans')}\r\n                        />\r\n                    </Block>\r\n                    <Block\r\n                        padBottom=\"l\"\r\n                        visible={visibility.isVisible(InntektsinformasjonFormField.oppdragForNæreVennerEllerFamilie)}\r\n                    >\r\n                        <InntektsinformasjonFormComponents.YesOrNoQuestion\r\n                            name={InntektsinformasjonFormField.oppdragForNæreVennerEllerFamilie}\r\n                            legend={intlUtils(intl, 'inntektsinformasjon.harJobbetForNærVennEllerFamilieSiste10Mnd')}\r\n                        />\r\n                    </Block>\r\n                    <Block padBottom=\"l\" visible={formValues.oppdragForNæreVennerEllerFamilie === YesOrNo.YES}>\r\n                        <FrilansoppdragModal\r\n                            isOpen={isModalOpen}\r\n                            title={intlUtils(intl, 'inntektsinformasjon.frilansOppdrag.tittel')}\r\n                            onRequestClose={() => setIsModalOpen(false)}\r\n                            selectedFrilansoppdrag={selectedOppdrag}\r\n                            addFrilansoppdrag={addFrilansoppdrag}\r\n                            editFrilansoppdrag={editFrilansoppdrag}\r\n                            oppstartsdato={formValues.frilansOppstartsDato}\r\n                        />\r\n                        <Block padBottom=\"l\" visible={frilansoppdrag.length > 0}>\r\n                            <FrilansoppdragListe\r\n                                frilansoppdrag={frilansoppdrag}\r\n                                deleteFrilansoppdrag={deleteFrilansoppdrag}\r\n                                selectOppdrag={selectOppdrag}\r\n                            />\r\n                        </Block>\r\n                        <Knapp htmlType=\"button\" onClick={handleOnLeggTil}>\r\n                            <FormattedMessage id=\"inntektsinformasjon.leggTilOppdrag\" />\r\n                        </Knapp>\r\n                    </Block>\r\n                    <Block\r\n                        padBottom=\"l\"\r\n                        visible={visibility.isVisible(InntektsinformasjonFormField.inntektSomFosterforelder)}\r\n                    >\r\n                        <InntektsinformasjonFormComponents.YesOrNoQuestion\r\n                            name={InntektsinformasjonFormField.inntektSomFosterforelder}\r\n                            legend={intlUtils(intl, 'inntektsinformasjon.driverFosterhjem')}\r\n                        />\r\n                    </Block>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Frilans;\r\n","import React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport { Block, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport links from 'app/links/links';\r\n\r\nconst InfoTilFiskere = () => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <UtvidetInformasjon apneLabel={intlUtils(intl, 'inntektsinformasjon.infoTilFiskere.apneLabel')}>\r\n            <div style={{ backgroundColor: '#e9e7e7', padding: '1.5rem' }}>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del1\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Element tag=\"h3\" style={{ marginBottom: '.5rem' }}>\r\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.hyre\" />\r\n                </Element>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del2\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"inntektsinformasjon.infoTilFiskere.del3\"\r\n                            values={{\r\n                                a: (msg: any) => (\r\n                                    <a\r\n                                        href={links.hvordanSendeInntektsmelding}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        className=\"lenke\"\r\n                                    >\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Element tag=\"h3\" style={{ marginBottom: '.5rem' }}>\r\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.lott\" />\r\n                </Element>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del4\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"inntektsinformasjon.infoTilFiskere.del5\"\r\n                            values={{\r\n                                a: (msg: any) => (\r\n                                    <a href={links.omLottOgHyre} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Element tag=\"h3\" style={{ marginBottom: '.5rem' }}>\r\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.egenBåt\" />\r\n                </Element>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del6\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Element tag=\"h3\" style={{ marginBottom: '.5rem' }}>\r\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.lottOgHyre\" />\r\n                </Element>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del7\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del8\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block padBottom=\"m\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del9\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block margin=\"none\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"inntektsinformasjon.infoTilFiskere.del5\"\r\n                            values={{\r\n                                a: (msg: any) => (\r\n                                    <a href={links.omLottOgHyre} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </Block>\r\n            </div>\r\n        </UtvidetInformasjon>\r\n    );\r\n};\r\n\r\nexport default InfoTilFiskere;\r\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { AnnenInntekt } from 'app/context/types/AnnenInntekt';\r\nimport { Frilans, FrilansOppdrag } from 'app/context/types/Frilans';\r\nimport { Næring } from 'app/context/types/Næring';\r\nimport Søker from 'app/context/types/Søker';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport { InntektsinformasjonFormData, InntektsinformasjonFormField } from './inntektsinformasjonFormConfig';\r\n\r\nexport const initialInntektsinformasjonFormValues: InntektsinformasjonFormData = {\r\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: YesOrNo.UNANSWERED,\r\n    [InntektsinformasjonFormField.hattInntektSomNæringsdrivende]: YesOrNo.UNANSWERED,\r\n    [InntektsinformasjonFormField.hattAndreInntekter]: YesOrNo.UNANSWERED,\r\n    [InntektsinformasjonFormField.frilansOppstartsDato]: '',\r\n    [InntektsinformasjonFormField.oppdragForNæreVennerEllerFamilie]: YesOrNo.UNANSWERED,\r\n    [InntektsinformasjonFormField.inntektSomFosterforelder]: YesOrNo.UNANSWERED,\r\n    [InntektsinformasjonFormField.jobberFremdelesSomFrilanser]: YesOrNo.UNANSWERED,\r\n    [InntektsinformasjonFormField.hattAndreInntekter]: YesOrNo.UNANSWERED,\r\n};\r\n\r\nexport const mapInntektsinformasjonFormDataToState = (\r\n    values: Partial<InntektsinformasjonFormData>,\r\n    søker: Søker,\r\n    andreInntekter?: AnnenInntekt[],\r\n    frilansoppdrag?: FrilansOppdrag[],\r\n    næringer?: Næring[]\r\n): Søker => {\r\n    let frilansInformasjon: Frilans | undefined = undefined;\r\n\r\n    if (values.hattInntektSomFrilans === YesOrNo.YES) {\r\n        frilansInformasjon = {\r\n            oppstart: values.frilansOppstartsDato!,\r\n            jobberFremdelesSomFrilans: convertYesOrNoOrUndefinedToBoolean(values.jobberFremdelesSomFrilanser)!,\r\n            harJobbetForNærVennEllerFamilieSiste10Mnd: convertYesOrNoOrUndefinedToBoolean(\r\n                values.oppdragForNæreVennerEllerFamilie\r\n            )!,\r\n            driverFosterhjem: convertYesOrNoOrUndefinedToBoolean(values.inntektSomFosterforelder),\r\n            oppdragForNæreVennerEllerFamilieSiste10Mnd: frilansoppdrag!,\r\n        };\r\n    }\r\n\r\n    return {\r\n        erAleneOmOmsorg: søker.erAleneOmOmsorg,\r\n        språkkode: søker.språkkode,\r\n        harHattAnnenInntektSiste10Mnd: convertYesOrNoOrUndefinedToBoolean(values.hattAndreInntekter)!,\r\n        harJobbetSomFrilansSiste10Mnd: convertYesOrNoOrUndefinedToBoolean(values.hattInntektSomFrilans)!,\r\n        harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: convertYesOrNoOrUndefinedToBoolean(\r\n            values.hattInntektSomNæringsdrivende\r\n        )!,\r\n        andreInntekterSiste10Mnd: values.hattAndreInntekter === YesOrNo.YES ? andreInntekter : [],\r\n        selvstendigNæringsdrivendeInformasjon: values.hattInntektSomNæringsdrivende === YesOrNo.YES ? næringer : [],\r\n        frilansInformasjon: values.hattInntektSomFrilans === YesOrNo.YES ? frilansInformasjon : undefined,\r\n    };\r\n};\r\n\r\nexport const getInitialInntektsinformasjonFormValues = (søker: Søker): InntektsinformasjonFormData => {\r\n    return {\r\n        ...initialInntektsinformasjonFormValues,\r\n        hattAndreInntekter: convertBooleanOrUndefinedToYesOrNo(søker.harHattAnnenInntektSiste10Mnd),\r\n        hattInntektSomNæringsdrivende: convertBooleanOrUndefinedToYesOrNo(\r\n            søker.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd\r\n        ),\r\n        hattInntektSomFrilans: convertBooleanOrUndefinedToYesOrNo(søker.harJobbetSomFrilansSiste10Mnd),\r\n        frilansOppstartsDato: søker.frilansInformasjon ? søker.frilansInformasjon.oppstart : '',\r\n        inntektSomFosterforelder: søker.frilansInformasjon\r\n            ? convertBooleanOrUndefinedToYesOrNo(søker.frilansInformasjon.driverFosterhjem)\r\n            : YesOrNo.UNANSWERED,\r\n        jobberFremdelesSomFrilanser: søker.frilansInformasjon\r\n            ? convertBooleanOrUndefinedToYesOrNo(søker.frilansInformasjon.jobberFremdelesSomFrilans)\r\n            : YesOrNo.UNANSWERED,\r\n        oppdragForNæreVennerEllerFamilie: søker.frilansInformasjon\r\n            ? convertBooleanOrUndefinedToYesOrNo(søker.frilansInformasjon.harJobbetForNærVennEllerFamilieSiste10Mnd)\r\n            : YesOrNo.UNANSWERED,\r\n    };\r\n};\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { InntektsinformasjonFormData, InntektsinformasjonFormField } from './inntektsinformasjonFormConfig';\r\n\r\nconst InntektsinformasjonFormConfig: QuestionConfig<InntektsinformasjonFormData, InntektsinformasjonFormField> = {\r\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ hattInntektSomFrilans }) => hattInntektSomFrilans !== YesOrNo.UNANSWERED,\r\n    },\r\n    [InntektsinformasjonFormField.frilansOppstartsDato]: {\r\n        isIncluded: ({ hattInntektSomFrilans }) => hattInntektSomFrilans === YesOrNo.YES,\r\n        isAnswered: ({ frilansOppstartsDato }) => hasValue(frilansOppstartsDato),\r\n        visibilityFilter: ({ hattInntektSomFrilans }) => hattInntektSomFrilans === YesOrNo.YES,\r\n    },\r\n    [InntektsinformasjonFormField.jobberFremdelesSomFrilanser]: {\r\n        isIncluded: ({ hattInntektSomFrilans }) => hattInntektSomFrilans === YesOrNo.YES,\r\n        isAnswered: ({ jobberFremdelesSomFrilanser }) => jobberFremdelesSomFrilanser !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ frilansOppstartsDato }) => hasValue(frilansOppstartsDato),\r\n    },\r\n    [InntektsinformasjonFormField.oppdragForNæreVennerEllerFamilie]: {\r\n        isIncluded: ({ hattInntektSomFrilans }) => hattInntektSomFrilans === YesOrNo.YES,\r\n        isAnswered: ({ oppdragForNæreVennerEllerFamilie }) => oppdragForNæreVennerEllerFamilie !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ jobberFremdelesSomFrilanser }) => jobberFremdelesSomFrilanser !== YesOrNo.UNANSWERED,\r\n    },\r\n    [InntektsinformasjonFormField.inntektSomFosterforelder]: {\r\n        isIncluded: ({ hattInntektSomFrilans }) => hattInntektSomFrilans === YesOrNo.YES,\r\n        isAnswered: ({ inntektSomFosterforelder }) => inntektSomFosterforelder !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ oppdragForNæreVennerEllerFamilie }) =>\r\n            oppdragForNæreVennerEllerFamilie !== YesOrNo.UNANSWERED,\r\n    },\r\n    [InntektsinformasjonFormField.hattInntektSomNæringsdrivende]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ hattInntektSomNæringsdrivende }) => hattInntektSomNæringsdrivende !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ hattInntektSomFrilans }) => hattInntektSomFrilans !== YesOrNo.UNANSWERED,\r\n    },\r\n    [InntektsinformasjonFormField.hattAndreInntekter]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ hattAndreInntekter }) => hattAndreInntekter !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ hattInntektSomNæringsdrivende }) => hattInntektSomNæringsdrivende !== YesOrNo.UNANSWERED,\r\n    },\r\n};\r\n\r\nconst inntektsinforMasjonQuestionsConfig = Questions<InntektsinformasjonFormData, InntektsinformasjonFormField>(\r\n    InntektsinformasjonFormConfig\r\n);\r\n\r\nexport default inntektsinforMasjonQuestionsConfig;\r\n","import { Block, intlUtils, Step } from '@navikt/fp-common';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport AndreInntekter from './components/andre-inntekter/AndreInntekter';\r\nimport ArbeidsforholdInformasjon from './components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon';\r\nimport EgenNæring from './components/egen-næring/EgenNæring';\r\nimport Frilans from './components/frilans/Frilans';\r\nimport InfoTilFiskere from './components/info-til-fiskere/InfoTilFiskere';\r\nimport { InntektsinformasjonFormComponents, InntektsinformasjonFormData } from './inntektsinformasjonFormConfig';\r\nimport {\r\n    getInitialInntektsinformasjonFormValues,\r\n    mapInntektsinformasjonFormDataToState,\r\n} from './inntektsinformasjonFormUtils';\r\nimport inntektsinforMasjonQuestionsConfig from './inntektsInformasjonQuestionsConfig';\r\n\r\nconst Inntektsinformasjon = () => {\r\n    const intl = useIntl();\r\n    const { arbeidsforhold } = useSøkerinfo();\r\n    const { søker } = useSøknad();\r\n\r\n    const [frilansoppdrag, setFrilansoppdrag] = useState(\r\n        søker.frilansInformasjon ? søker.frilansInformasjon.oppdragForNæreVennerEllerFamilieSiste10Mnd : []\r\n    );\r\n    const [egenNæringInformasjon, setEgenNæringsInformasjon] = useState(\r\n        søker.selvstendigNæringsdrivendeInformasjon ? søker.selvstendigNæringsdrivendeInformasjon : []\r\n    );\r\n    const [andreInntekterInformasjon, setAndreInntekterInformasjon] = useState(\r\n        søker.andreInntekterSiste10Mnd ? søker.andreInntekterSiste10Mnd : []\r\n    );\r\n\r\n    const onValidSubmitHandler = (values: Partial<InntektsinformasjonFormData>) => {\r\n        const updatedSøker = mapInntektsinformasjonFormDataToState(\r\n            values,\r\n            søker,\r\n            andreInntekterInformasjon,\r\n            frilansoppdrag,\r\n            egenNæringInformasjon\r\n        );\r\n\r\n        return [actionCreator.setSøker(updatedSøker)];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.OPPSUMMERING);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    return (\r\n        <InntektsinformasjonFormComponents.FormikWrapper\r\n            initialValues={getInitialInntektsinformasjonFormValues(søker)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = inntektsinforMasjonQuestionsConfig.getVisbility(formValues);\r\n\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.inntektsinformasjon')}\r\n                        backLinkHref={getPreviousStepHref('inntektsinformasjon')}\r\n                        activeStepId=\"inntektsinformasjon\"\r\n                        pageTitle={intlUtils(intl, 'søknad.inntektsinformasjon')}\r\n                        stepTitle={intlUtils(intl, 'søknad.inntektsinformasjon')}\r\n                        onCancel={onAvbrytSøknad}\r\n                        onContinueLater={() => null}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <InntektsinformasjonFormComponents.Form includeButtons={false}>\r\n                            <Block padBottom=\"l\">\r\n                                <Element>Utbetalinger fra NAV</Element>\r\n                                <Normaltekst>\r\n                                    Hvis du får utbetalinger fra NAV, trenger du ikke å opplyse om det i søknaden\r\n                                </Normaltekst>\r\n                            </Block>\r\n\r\n                            <ArbeidsforholdInformasjon arbeidsforhold={arbeidsforhold} />\r\n\r\n                            <InfoTilFiskere />\r\n\r\n                            <Block padBottom=\"l\">\r\n                                <Frilans\r\n                                    frilansoppdrag={frilansoppdrag}\r\n                                    setFrilansoppdrag={setFrilansoppdrag}\r\n                                    visibility={visibility}\r\n                                    formValues={formValues}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block padBottom=\"l\">\r\n                                <EgenNæring\r\n                                    egenNæringInformasjon={egenNæringInformasjon}\r\n                                    setEgenNæringsInformasjon={setEgenNæringsInformasjon}\r\n                                    visibility={visibility}\r\n                                    formValues={formValues}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block padBottom=\"l\">\r\n                                <AndreInntekter\r\n                                    andreInntekterInformasjon={andreInntekterInformasjon}\r\n                                    setAndreInntekterInformasjon={setAndreInntekterInformasjon}\r\n                                    visibility={visibility}\r\n                                    formValues={formValues}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block textAlignCenter={true} visible={visibility.areAllQuestionsAnswered()}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </InntektsinformasjonFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Inntektsinformasjon;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport Inntektsinformasjon from 'app/steps/inntektsinformasjon/Inntektsinformasjon';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\nimport AxiosMock from '../../../utils/AxiosMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/Inntektsinformasjon',\\r\\n    component: Inntektsinformasjon,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <Inntektsinformasjon />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const HarArbeidsforhold = Template.bind({});\\r\\nHarArbeidsforhold.args = {\\r\\n    context,\\r\\n    søkerinfo: {\\r\\n        søker: {\\r\\n            ...søkerinfo,\\r\\n            arbeidsforhold: [\\r\\n                {\\r\\n                    arbeidsgiverId: '1',\\r\\n                    arbeidsgiverIdType: 'orgnr',\\r\\n                    arbeidsgiverNavn: 'Auto Joachim Bilpleie',\\r\\n                    stillingsprosent: 80,\\r\\n                    fom: '2015-01-01',\\r\\n                },\\r\\n                {\\r\\n                    arbeidsgiverId: '2',\\r\\n                    arbeidsgiverIdType: 'orgnr',\\r\\n                    arbeidsgiverNavn: 'Taco Express',\\r\\n                    stillingsprosent: 20,\\r\\n                    fom: '2019-01-01',\\r\\n                    tom: '2021-01-01',\\r\\n                },\\r\\n            ],\\r\\n        },\\r\\n    } as SøkerinfoDTO,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}},\"HarArbeidsforhold\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport Inntektsinformasjon from 'app/steps/inntektsinformasjon/Inntektsinformasjon';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\nimport AxiosMock from '../../../utils/AxiosMock';\r\n\r\nexport default {\r\n    title: 'steps/Inntektsinformasjon',\r\n    component: Inntektsinformasjon,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onPost('/storage/vedlegg').reply(\r\n            200,\r\n            { data: {} },\r\n            {\r\n                location: '',\r\n            }\r\n        );\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n                <Inntektsinformasjon />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n};\r\n\r\nexport const HarArbeidsforhold = Template.bind({});\r\nHarArbeidsforhold.args = {\r\n    context,\r\n    søkerinfo: {\r\n        søker: {\r\n            ...søkerinfo,\r\n            arbeidsforhold: [\r\n                {\r\n                    arbeidsgiverId: '1',\r\n                    arbeidsgiverIdType: 'orgnr',\r\n                    arbeidsgiverNavn: 'Auto Joachim Bilpleie',\r\n                    stillingsprosent: 80,\r\n                    fom: '2015-01-01',\r\n                },\r\n                {\r\n                    arbeidsgiverId: '2',\r\n                    arbeidsgiverIdType: 'orgnr',\r\n                    arbeidsgiverNavn: 'Taco Express',\r\n                    stillingsprosent: 20,\r\n                    fom: '2019-01-01',\r\n                    tom: '2021-01-01',\r\n                },\r\n            ],\r\n        },\r\n    } as SøkerinfoDTO,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <Inntektsinformasjon />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nHarArbeidsforhold.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <Inntektsinformasjon />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...HarArbeidsforhold.parameters };","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\nimport { Attachment } from 'app/types/Attachment';\r\n\r\nexport enum ManglendeVedleggFormField {\r\n    vedlegg = 'vedlegg',\r\n}\r\n\r\nexport interface ManglendeVedleggFormData {\r\n    [ManglendeVedleggFormField.vedlegg]: Attachment[][];\r\n}\r\n\r\nexport const ManglendeVedleggFormComponents = getTypedFormComponents<\r\n    ManglendeVedleggFormField,\r\n    ManglendeVedleggFormData,\r\n    string\r\n>();\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { ManglendeVedleggFormData, ManglendeVedleggFormField } from './manglendeVedleggFormConfig';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\n\r\ninterface ManglendeVedleggQuestionsPayload extends ManglendeVedleggFormData {\r\n    manglendeVedleggTyper: AttachmentType[];\r\n    erLikEllerMindreEnnFireUkerTilUttaketStarter: boolean;\r\n}\r\n\r\nconst ManglendeVedleggFormConfig: QuestionConfig<ManglendeVedleggQuestionsPayload, ManglendeVedleggFormField> = {\r\n    [ManglendeVedleggFormField.vedlegg]: {\r\n        isAnswered: ({ vedlegg, manglendeVedleggTyper, erLikEllerMindreEnnFireUkerTilUttaketStarter }) =>\r\n            erLikEllerMindreEnnFireUkerTilUttaketStarter\r\n                ? true\r\n                : manglendeVedleggTyper.every((type) =>\r\n                      vedlegg\r\n                          .filter((vedlegg) => !!vedlegg)\r\n                          .flat()\r\n                          .some((v) => v.type === type)\r\n                  ),\r\n        isIncluded: () => true,\r\n    },\r\n};\r\n\r\nexport const manglendeVedleggQuestionsConfig = Questions<ManglendeVedleggQuestionsPayload, ManglendeVedleggFormField>(\r\n    ManglendeVedleggFormConfig\r\n);\r\n","import { Attachment, InnsendingsType } from 'app/types/Attachment';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\n\r\nconst isArrayOfAttachments = (object: any) => {\r\n    return (\r\n        Array.isArray(object) &&\r\n        object[0] !== null &&\r\n        object.some((element) => element && element.innsendingsType === InnsendingsType.SEND_SENERE)\r\n    );\r\n};\r\n\r\nexport const isAttachmentForPeriode = (type: AttachmentType) =>\r\n    type === AttachmentType.UTSETTELSE_SYKDOM ||\r\n    type === AttachmentType.MORS_AKTIVITET_DOKUMENTASJON ||\r\n    type === AttachmentType.HV_ØVELSE ||\r\n    type === AttachmentType.NAV_TILTAK ||\r\n    type === AttachmentType.OVERFØRING_KVOTE;\r\n\r\nexport const finnSendSenereVedlegg = (\r\n    object: any,\r\n    currentKey?: string,\r\n    previousEntries?: Map<string, Attachment[]>\r\n): Map<string, Attachment> => {\r\n    if (object === null || object === undefined) {\r\n        return new Map();\r\n    }\r\n\r\n    const path: string = currentKey || 'søknad';\r\n    let foundAttachments = previousEntries || new Map();\r\n    Object.keys(object).forEach((key: string) => {\r\n        if (typeof object[key] === 'object') {\r\n            if (isArrayOfAttachments(object[key])) {\r\n                foundAttachments.set(path + '.' + key, object[key][0]);\r\n            } else {\r\n                foundAttachments = finnSendSenereVedlegg(object[key], path + '.' + key, foundAttachments);\r\n            }\r\n        }\r\n    });\r\n    return foundAttachments;\r\n};\r\n","import { ManglendeVedleggFormData, ManglendeVedleggFormField } from './manglendeVedleggFormConfig';\r\n\r\nexport const getInitValues = (): Readonly<ManglendeVedleggFormData> => ({\r\n    [ManglendeVedleggFormField.vedlegg]: [],\r\n});\r\n","import { Block, formatDate, intlUtils, Step, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { isInfoPeriode, Periode } from 'uttaksplan/types/Periode';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport {\r\n    ManglendeVedleggFormComponents,\r\n    ManglendeVedleggFormData,\r\n    ManglendeVedleggFormField,\r\n} from './manglendeVedleggFormConfig';\r\nimport dayjs from 'dayjs';\r\nimport { manglendeVedleggQuestionsConfig } from './manglendeVedleggQuestionsConfig';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport { sorterPerioder } from '../uttaksplan-info/utils/Periodene';\r\nimport { finnSendSenereVedlegg, isAttachmentForPeriode } from './util';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Normaltekst, Element } from 'nav-frontend-typografi';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport { getInitValues } from './manglendeVedleggFormUtils';\r\nimport { FieldArray } from 'formik';\r\n\r\nexport const attenUkerPluss3Number = 18 * 7 + 3;\r\n\r\nconst getManglendeVedleggValues = (type: AttachmentType, fornavnAnnenForelder: string) => {\r\n    return type === AttachmentType.MORS_AKTIVITET_DOKUMENTASJON\r\n        ? {\r\n              navn: fornavnAnnenForelder,\r\n          }\r\n        : undefined;\r\n};\r\n\r\nconst lagSti = (stiDeler: string[]) => {\r\n    const sti = stiDeler.reduce((formatertSti, del) => {\r\n        return isNaN(+del) ? formatertSti + '.' + del : formatertSti + '[' + del + ']';\r\n    }, '');\r\n    return sti.replace('.søknad.', '');\r\n};\r\n\r\nconst ManglendeVedlegg: React.FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const søknad = useSøknad();\r\n    const { uttaksplan } = søknad;\r\n\r\n    const alleSendSenereVedlegg = finnSendSenereVedlegg(søknad);\r\n    const alleStierMedManglendeVedlegg = Array.from(alleSendSenereVedlegg.keys());\r\n\r\n    const onValidSubmitHandler = (values: Partial<ManglendeVedleggFormData>) => {\r\n        values.vedlegg!.forEach((vedlegg, index) => {\r\n            if (!!vedlegg) {\r\n                const sti = lagSti(alleStierMedManglendeVedlegg[index].split('.'));\r\n                _.set(søknad, sti, vedlegg);\r\n            }\r\n        });\r\n\r\n        //TODO (TOR) Om ein skal gjera det på denne måten må ein laga ei djup klone av søknad og så ein updateSøknad actionCreator\r\n        //Utan djup klone gir det liten meining å kalla actionCreator\r\n        return [\r\n            /*actionCreator.setVedlegg(stiOgVedlegg)*/\r\n        ];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.OPPSUMMERING);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    const fornavnAnnenForelder = isAnnenForelderOppgitt(søknad.annenForelder) ? søknad.annenForelder.fornavn : '';\r\n\r\n    const førsteUttaksEllerUttsettelsesPeriode = uttaksplan\r\n        .filter((p: Periode) => p.tidsperiode.fom !== undefined && !isInfoPeriode(p))\r\n        .sort(sorterPerioder)\r\n        .shift();\r\n\r\n    const erLikEllerMindreEnnFireUkerTilUttaketStarter =\r\n        førsteUttaksEllerUttsettelsesPeriode !== undefined &&\r\n        dayjs(førsteUttaksEllerUttsettelsesPeriode.tidsperiode.fom).isSameOrBefore(dayjs().add(4, 'weeks'));\r\n\r\n    const manglendeVedleggTyper = Array.from(alleSendSenereVedlegg.values()).map((v) => v.type);\r\n\r\n    return (\r\n        <ManglendeVedleggFormComponents.FormikWrapper\r\n            initialValues={getInitValues()}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = manglendeVedleggQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    manglendeVedleggTyper,\r\n                    erLikEllerMindreEnnFireUkerTilUttaketStarter,\r\n                });\r\n\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                        backLinkHref={getPreviousStepHref('omBarnet')}\r\n                        activeStepId=\"dokumentasjon\"\r\n                        pageTitle={intlUtils(intl, 'søknad.manglendeVedlegg')}\r\n                        stepTitle={intlUtils(intl, 'søknad.manglendeVedlegg')}\r\n                        onCancel={onAvbrytSøknad}\r\n                        onContinueLater={() => null}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <ManglendeVedleggFormComponents.Form includeButtons={false}>\r\n                            <Block padBottom=\"l\">\r\n                                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                    <FormattedMessage\r\n                                        id={\r\n                                            erLikEllerMindreEnnFireUkerTilUttaketStarter\r\n                                                ? 'manglendeVedlegg.veileder'\r\n                                                : 'manglendeVedlegg.uttaksplan.advarsel.forTidligUtenDokumentasjon'\r\n                                        }\r\n                                    />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                            {alleStierMedManglendeVedlegg.map((keyISoknad, index) => {\r\n                                const key = keyISoknad.replace('søknad.', '');\r\n                                const periode = _.get(søknad, key.replace('.vedlegg', '').split('.'));\r\n\r\n                                const sendSenereVedlegg = alleSendSenereVedlegg.get(keyISoknad)!;\r\n                                if (sendSenereVedlegg.type === AttachmentType.SEN_ENDRING) {\r\n                                    return null;\r\n                                }\r\n                                return (\r\n                                    <Block\r\n                                        key={\r\n                                            sendSenereVedlegg.type +\r\n                                            periode?.tidsperiode?.fom +\r\n                                            periode?.tidsperiode?.tom\r\n                                        }\r\n                                    >\r\n                                        <Element>\r\n                                            {intlUtils(\r\n                                                intl,\r\n                                                `manglendeVedlegg.title.${sendSenereVedlegg.type}`,\r\n                                                getManglendeVedleggValues(sendSenereVedlegg.type, fornavnAnnenForelder)\r\n                                            )}\r\n                                        </Element>\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                `manglendeVedlegg.apneLabel.${sendSenereVedlegg.type}`,\r\n                                                getManglendeVedleggValues(sendSenereVedlegg.type, fornavnAnnenForelder)\r\n                                            )}\r\n                                        >\r\n                                            <div style={{ backgroundColor: '#e9e7e7', padding: '1.5rem' }}>\r\n                                                <Normaltekst>\r\n                                                    {intlUtils(\r\n                                                        intl,\r\n                                                        `manglendeVedlegg.info.${sendSenereVedlegg.type}`,\r\n                                                        getManglendeVedleggValues(\r\n                                                            sendSenereVedlegg.type,\r\n                                                            fornavnAnnenForelder\r\n                                                        )\r\n                                                    )}\r\n                                                </Normaltekst>\r\n                                            </div>\r\n                                        </UtvidetInformasjon>\r\n                                        {periode?.tidsperiode && periode?.type && (\r\n                                            <Block margin=\"l\">\r\n                                                <Normaltekst>\r\n                                                    {intlUtils(\r\n                                                        intl,\r\n                                                        isAttachmentForPeriode(sendSenereVedlegg.type)\r\n                                                            ? 'manglendeVedlegg.uttak.periode.tidsperiode'\r\n                                                            : 'manglendeVedlegg.periode.tidsperiode',\r\n                                                        {\r\n                                                            type: intlUtils(\r\n                                                                intl,\r\n                                                                sendSenereVedlegg.type === AttachmentType.ANNEN_INNTEKT\r\n                                                                    ? `inntektstype.${periode.type.toLowerCase()}`\r\n                                                                    : periode.type\r\n                                                            ),\r\n                                                            fom: formatDate(periode.tidsperiode.fom),\r\n                                                            tom: periode.tidsperiode.tom\r\n                                                                ? formatDate(periode.tidsperiode.tom)\r\n                                                                : '-',\r\n                                                        }\r\n                                                    )}\r\n                                                </Normaltekst>\r\n                                            </Block>\r\n                                        )}\r\n                                        <FieldArray\r\n                                            name={ManglendeVedleggFormField.vedlegg}\r\n                                            render={() => {\r\n                                                return (\r\n                                                    <FormikFileUploader\r\n                                                        key={`${ManglendeVedleggFormField.vedlegg}.${index}`}\r\n                                                        name={`${ManglendeVedleggFormField.vedlegg}.${index}`}\r\n                                                        label={intlUtils(\r\n                                                            intl,\r\n                                                            'manglendeVedlegg.lastopp.manglende.vedlegg'\r\n                                                        )}\r\n                                                        attachments={\r\n                                                            formValues.vedlegg.length > index &&\r\n                                                            formValues.vedlegg[index]\r\n                                                                ? formValues.vedlegg[index]\r\n                                                                : []\r\n                                                        }\r\n                                                        attachmentType={sendSenereVedlegg.type}\r\n                                                        skjemanummer={sendSenereVedlegg.skjemanummer}\r\n                                                    />\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    </Block>\r\n                                );\r\n                            })}\r\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </ManglendeVedleggFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ManglendeVedlegg;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport ManglendeVedlegg from 'app/steps/manglende-vedlegg/ManglendeVedlegg';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\nimport { lagSendSenereDokument } from 'app/utils/vedleggUtils';\\r\\nimport { AttachmentType } from 'app/types/AttachmentType';\\r\\nimport { Skjemanummer } from 'app/types/Skjemanummer';\\r\\nimport AxiosMock from '../../../utils/AxiosMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/ManglendeVedlegg',\\r\\n    component: ManglendeVedlegg,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <ManglendeVedlegg />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            barn: {\\r\\n                ...context.søknad.barn,\\r\\n                dokumentasjonAvAleneomsorg: [\\r\\n                    lagSendSenereDokument(AttachmentType.ALENEOMSORG, Skjemanummer.DOK_AV_ALENEOMSORG),\\r\\n                ],\\r\\n                terminbekreftelse: [\\r\\n                    lagSendSenereDokument(AttachmentType.TERMINBEKREFTELSE, Skjemanummer.TERMINBEKREFTELSE),\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const ManglerVedleggForUlikePerioder = Template.bind({});\\r\\nManglerVedleggForUlikePerioder.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                andreInntekterSiste10Mnd: [\\r\\n                    {\\r\\n                        pågående: true,\\r\\n                        tidsperiode: {\\r\\n                            fom: '2021-08-01',\\r\\n                            tom: '',\\r\\n                        },\\r\\n                        type: 'ETTERLØNN_SLUTTPAKKE',\\r\\n                        vedlegg: [\\r\\n                            lagSendSenereDokument(\\r\\n                                AttachmentType.ANNEN_INNTEKT,\\r\\n                                Skjemanummer.ETTERLØNN_ELLER_SLUTTVEDERLAG\\r\\n                            ),\\r\\n                        ],\\r\\n                    },\\r\\n                    {\\r\\n                        pågående: true,\\r\\n                        tidsperiode: {\\r\\n                            fom: '2021-09-01',\\r\\n                            tom: '',\\r\\n                        },\\r\\n                        type: 'ETTERLØNN_SLUTTPAKKE',\\r\\n                        vedlegg: [\\r\\n                            lagSendSenereDokument(\\r\\n                                AttachmentType.ANNEN_INNTEKT,\\r\\n                                Skjemanummer.ETTERLØNN_ELLER_SLUTTVEDERLAG\\r\\n                            ),\\r\\n                        ],\\r\\n                    },\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":30},\"endLoc\":{\"col\":1,\"line\":47},\"startBody\":{\"col\":31,\"line\":30},\"endBody\":{\"col\":1,\"line\":47}},\"ManglerVedleggForUlikePerioder\":{\"startLoc\":{\"col\":31,\"line\":30},\"endLoc\":{\"col\":1,\"line\":47},\"startBody\":{\"col\":31,\"line\":30},\"endBody\":{\"col\":1,\"line\":47}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport ManglendeVedlegg from 'app/steps/manglende-vedlegg/ManglendeVedlegg';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\nimport { lagSendSenereDokument } from 'app/utils/vedleggUtils';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport AxiosMock from '../../../utils/AxiosMock';\r\n\r\nexport default {\r\n    title: 'steps/ManglendeVedlegg',\r\n    component: ManglendeVedlegg,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onPost('/storage/vedlegg').reply(\r\n            200,\r\n            { data: {} },\r\n            {\r\n                location: '',\r\n            }\r\n        );\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n                <ManglendeVedlegg />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            barn: {\r\n                ...context.søknad.barn,\r\n                dokumentasjonAvAleneomsorg: [\r\n                    lagSendSenereDokument(AttachmentType.ALENEOMSORG, Skjemanummer.DOK_AV_ALENEOMSORG),\r\n                ],\r\n                terminbekreftelse: [\r\n                    lagSendSenereDokument(AttachmentType.TERMINBEKREFTELSE, Skjemanummer.TERMINBEKREFTELSE),\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const ManglerVedleggForUlikePerioder = Template.bind({});\r\nManglerVedleggForUlikePerioder.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                andreInntekterSiste10Mnd: [\r\n                    {\r\n                        pågående: true,\r\n                        tidsperiode: {\r\n                            fom: '2021-08-01',\r\n                            tom: '',\r\n                        },\r\n                        type: 'ETTERLØNN_SLUTTPAKKE',\r\n                        vedlegg: [\r\n                            lagSendSenereDokument(\r\n                                AttachmentType.ANNEN_INNTEKT,\r\n                                Skjemanummer.ETTERLØNN_ELLER_SLUTTVEDERLAG\r\n                            ),\r\n                        ],\r\n                    },\r\n                    {\r\n                        pågående: true,\r\n                        tidsperiode: {\r\n                            fom: '2021-09-01',\r\n                            tom: '',\r\n                        },\r\n                        type: 'ETTERLØNN_SLUTTPAKKE',\r\n                        vedlegg: [\r\n                            lagSendSenereDokument(\r\n                                AttachmentType.ANNEN_INNTEKT,\r\n                                Skjemanummer.ETTERLØNN_ELLER_SLUTTVEDERLAG\r\n                            ),\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <ManglendeVedlegg />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nManglerVedleggForUlikePerioder.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <ManglendeVedlegg />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...ManglerVedleggForUlikePerioder.parameters };","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { Attachment } from 'app/types/Attachment';\r\n\r\nexport enum OmBarnetFormField {\r\n    erBarnetFødt = 'erBarnetFødt',\r\n    adopsjonAvEktefellesBarn = 'adopsjonAvEktefellesBarn',\r\n    antallBarn = 'antallBarn',\r\n    adopsjonsdato = 'adopsjonsdato',\r\n    søkerAdopsjonAlene = 'søkerAdopsjonAlene',\r\n    adoptertIUtlandet = 'adoptertIUtlandet',\r\n    fødselsdatoer = 'fødselsdatoer',\r\n    termindato = 'termindato',\r\n    omsorgsovertakelse = 'omsorgsovertakelse',\r\n    terminbekreftelse = 'terminbekreftelse',\r\n    terminbekreftelsedato = 'terminbekreftelsedato',\r\n    ankomstdato = 'ankomstdato',\r\n    gjelderAnnetBarn = 'gjelderAnnetBarn',\r\n    valgteBarn = 'valgteBarn',\r\n}\r\n\r\nexport interface OmBarnetFormData {\r\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo;\r\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo;\r\n    [OmBarnetFormField.antallBarn]: string;\r\n    [OmBarnetFormField.adopsjonsdato]: string;\r\n    [OmBarnetFormField.fødselsdatoer]: string[];\r\n    [OmBarnetFormField.omsorgsovertakelse]: Attachment[];\r\n    [OmBarnetFormField.termindato]: string;\r\n    [OmBarnetFormField.terminbekreftelse]: Attachment[];\r\n    [OmBarnetFormField.terminbekreftelsedato]: string;\r\n    [OmBarnetFormField.adoptertIUtlandet]: YesOrNo;\r\n    [OmBarnetFormField.ankomstdato]: string;\r\n    [OmBarnetFormField.gjelderAnnetBarn]: boolean;\r\n    [OmBarnetFormField.valgteBarn]: string[];\r\n}\r\n\r\nexport const OmBarnetFormComponents = getTypedFormComponents<OmBarnetFormField, OmBarnetFormData, string>();\r\n","import {\r\n    barnetErUnder15årPåAdopsjonsdato,\r\n    erIUke22Pluss3,\r\n    erMindreEnn3UkerSiden,\r\n    etterDagensDato,\r\n    hasValue,\r\n    intlUtils,\r\n} from '@navikt/fp-common';\r\nimport dayjs from 'dayjs';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport { isDateABeforeDateB } from 'app/utils/dateUtils';\r\n\r\ndayjs.extend(isSameOrAfter);\r\ndayjs.extend(isSameOrBefore);\r\n\r\nexport const validateFødselsdato = (intl: IntlShape) => (fødselsdato: string) => {\r\n    if (!hasValue(fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.duMåOppgi');\r\n    }\r\n\r\n    if (!isISODateString(fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ugyldigDatoFormat');\r\n    }\r\n\r\n    if (etterDagensDato(fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreIdagEllerTidligere');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateFødselsdatoAdopsjon = (intl: IntlShape) => (fødselsdato: string, adopsjonsdato: string) => {\r\n    if (!hasValue(fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.duMåOppgi');\r\n    }\r\n\r\n    if (!isISODateString(fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ugyldigDatoFormat');\r\n    }\r\n\r\n    if (etterDagensDato(fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreIdagEllerTidligere');\r\n    }\r\n\r\n    if (isDateABeforeDateB(adopsjonsdato, fødselsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreFørAdopsjonsdato');\r\n    }\r\n\r\n    if (!barnetErUnder15årPåAdopsjonsdato(fødselsdato, adopsjonsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ikkeMerEnn15År3MndTilbake');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateTermindato = (intl: IntlShape) => (termindato: string) => {\r\n    if (!hasValue(termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\r\n    }\r\n\r\n    if (!isISODateString(termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.ugyldigDatoFormat');\r\n    }\r\n\r\n    if (!erMindreEnn3UkerSiden(termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forTidlig');\r\n    }\r\n\r\n    if (!erIUke22Pluss3(termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåVæreIUke22');\r\n    }\r\n};\r\n\r\nexport const validateTermindatoFødsel = (intl: IntlShape) => (termindato: string) => {\r\n    if (!hasValue(termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\r\n    }\r\n\r\n    if (!isISODateString(termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.ugyldigDatoFormat');\r\n    }\r\n\r\n    if (!dayjs().add(9, 'months').isSameOrAfter(dayjs(termindato), 'day')) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forLangtFremITid');\r\n    }\r\n};\r\n\r\nexport const validateAdopsjonsdato = (intl: IntlShape) => (adopsjonsdato: string) => {\r\n    if (!hasValue(adopsjonsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonsdato.duMåOppgi');\r\n    }\r\n\r\n    if (!isISODateString(adopsjonsdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonsdato.ugyldigDatoFormat');\r\n    }\r\n};\r\n\r\nexport const validateAnkomstdato = (intl: IntlShape) => (ankomstdato: string, fødselsdato: string) => {\r\n    if (!hasValue(ankomstdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.duMåOppgi');\r\n    }\r\n\r\n    if (!isISODateString(ankomstdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.ugyldigDatoFormat');\r\n    }\r\n\r\n    if (!dayjs(fødselsdato).isSameOrBefore(ankomstdato, 'day')) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.førFødselsdato');\r\n    }\r\n};\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport dayjs from 'dayjs';\r\nimport { FieldArray } from 'formik';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport {\r\n    validateAdopsjonsdato,\r\n    validateAnkomstdato,\r\n    validateFødselsdatoAdopsjon,\r\n} from '../validation/omBarnetValidering';\r\n\r\ninterface Props {\r\n    søkersituasjon: Søkersituasjon;\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst AdopsjonAnnetBarn: FunctionComponent<Props> = ({ søkersituasjon, formValues, visibility }) => {\r\n    const intl = useIntl();\r\n\r\n    if (søkersituasjon.situasjon === 'fødsel' || formValues.adopsjonAvEktefellesBarn !== YesOrNo.NO) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\">\r\n                <OmBarnetFormComponents.DatePicker\r\n                    label={intlUtils(intl, 'omBarnet.adopsjonsdato.annetBarn')}\r\n                    name={OmBarnetFormField.adopsjonsdato}\r\n                    validate={validateAdopsjonsdato(intl)}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\r\n                <OmBarnetFormComponents.RadioPanelGroup\r\n                    name={OmBarnetFormField.antallBarn}\r\n                    radios={[\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\r\n                            value: '1',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\r\n                            value: '2',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                            value: '3',\r\n                        },\r\n                    ]}\r\n                    useTwoColumns={true}\r\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.født')}\r\n                />\r\n            </Block>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={formValues.antallBarn !== undefined && parseInt(formValues.antallBarn, 10) >= 3}\r\n            >\r\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                </OmBarnetFormComponents.Select>\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\r\n                <FieldArray\r\n                    name={OmBarnetFormField.fødselsdatoer}\r\n                    render={() => [\r\n                        <OmBarnetFormComponents.DatePicker\r\n                            key={`${OmBarnetFormField.fødselsdatoer}.0`}\r\n                            name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\r\n                            label={intlUtils(intl, 'omBarnet.fødselsdato')}\r\n                            minDate={dayjs(formValues.adopsjonsdato).subtract(15, 'years').toDate()}\r\n                            maxDate={ISOStringToDate(formValues.adopsjonsdato)}\r\n                            validate={(value) => validateFødselsdatoAdopsjon(intl)(value, formValues.adopsjonsdato)}\r\n                            placeholder={'dd.mm.åååå'}\r\n                            showYearSelector={true}\r\n                        />,\r\n                    ]}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.adoptertIUtlandet)}>\r\n                <OmBarnetFormComponents.YesOrNoQuestion\r\n                    name={OmBarnetFormField.adoptertIUtlandet}\r\n                    legend={intlUtils(intl, 'omBarnet.adopteresFraUtlandet')}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.ankomstdato)}>\r\n                <OmBarnetFormComponents.DatePicker\r\n                    name={OmBarnetFormField.ankomstdato}\r\n                    label={intlUtils(intl, 'omBarnet.ankomstDato')}\r\n                    minDate={dayjs(formValues.fødselsdatoer[0]).toDate()}\r\n                    maxDate={dayjs().add(6, 'months').toDate()}\r\n                    validate={(value) => validateAnkomstdato(intl)(value, formValues.fødselsdatoer[0])}\r\n                    placeholder={'dd.mm.åååå'}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\r\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                    <FormattedMessage id=\"omBarnet.veileder.omsorgsovertakelse.annetBarn\" />\r\n                </Veilederpanel>\r\n            </Block>\r\n            <Block visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\r\n                <FormikFileUploader\r\n                    label={intlUtils(intl, 'omBarnet.adopsjon.vedlegg')}\r\n                    name={OmBarnetFormField.omsorgsovertakelse}\r\n                    attachments={formValues.omsorgsovertakelse || []}\r\n                    attachmentType={AttachmentType.OMSORGSOVERTAKELSE}\r\n                    skjemanummer={Skjemanummer.OMSORGSOVERTAKELSESDATO}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdopsjonAnnetBarn;\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport dayjs from 'dayjs';\r\nimport { FieldArray } from 'formik';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport { validateAdopsjonsdato, validateFødselsdatoAdopsjon } from '../validation/omBarnetValidering';\r\n\r\ninterface Props {\r\n    søkersituasjon: Søkersituasjon;\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst AdopsjonEktefellesBarn: FunctionComponent<Props> = ({ søkersituasjon, formValues, visibility }) => {\r\n    const intl = useIntl();\r\n\r\n    if (søkersituasjon.situasjon === 'fødsel' || formValues.adopsjonAvEktefellesBarn !== YesOrNo.YES) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\">\r\n                <OmBarnetFormComponents.DatePicker\r\n                    label={intlUtils(intl, 'omBarnet.adopsjonsdato.stebarn')}\r\n                    name={OmBarnetFormField.adopsjonsdato}\r\n                    validate={validateAdopsjonsdato(intl)}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\r\n                <OmBarnetFormComponents.RadioPanelGroup\r\n                    name={OmBarnetFormField.antallBarn}\r\n                    radios={[\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\r\n                            value: '1',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\r\n                            value: '2',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                            value: '3',\r\n                        },\r\n                    ]}\r\n                    useTwoColumns={true}\r\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.født')}\r\n                />\r\n            </Block>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={formValues.antallBarn !== undefined && parseInt(formValues.antallBarn, 10) >= 3}\r\n            >\r\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                </OmBarnetFormComponents.Select>\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\r\n                <FieldArray\r\n                    name={OmBarnetFormField.fødselsdatoer}\r\n                    render={() => [\r\n                        <OmBarnetFormComponents.DatePicker\r\n                            key={`${OmBarnetFormField.fødselsdatoer}.0`}\r\n                            name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\r\n                            label={intlUtils(intl, 'omBarnet.fødselsdato')}\r\n                            minDate={dayjs().subtract(6, 'month').toDate()}\r\n                            maxDate={ISOStringToDate(formValues.adopsjonsdato)}\r\n                            validate={(value) => validateFødselsdatoAdopsjon(intl)(value, formValues.adopsjonsdato)}\r\n                            placeholder={'dd.mm.åååå'}\r\n                        />,\r\n                    ]}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\r\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                    <FormattedMessage id=\"omBarnet.veileder.omsorgsovertakelse.stebarn\" />\r\n                </Veilederpanel>\r\n            </Block>\r\n            <Block visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\r\n                <FormikFileUploader\r\n                    label={intlUtils(intl, 'omBarnet.adopsjon.vedlegg')}\r\n                    name={OmBarnetFormField.omsorgsovertakelse}\r\n                    attachments={formValues.omsorgsovertakelse || []}\r\n                    attachmentType={AttachmentType.OMSORGSOVERTAKELSE}\r\n                    skjemanummer={Skjemanummer.OMSORGSOVERTAKELSESDATO}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdopsjonEktefellesBarn;\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormField } from '../omBarnetFormConfig';\r\n\r\ninterface Props {\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst BarnFødtEllerAdoptert: FunctionComponent<Props> = ({ visibility }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.adopsjonAvEktefellesBarn)}>\r\n                <OmBarnetFormComponents.YesOrNoQuestion\r\n                    name={OmBarnetFormField.adopsjonAvEktefellesBarn}\r\n                    legend={intlUtils(intl, 'omBarnet.adopsjonGjelder')}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.erBarnetFødt)}>\r\n                <OmBarnetFormComponents.YesOrNoQuestion\r\n                    name={OmBarnetFormField.erBarnetFødt}\r\n                    legend={intlUtils(intl, 'omBarnet.erBarnetFødt')}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BarnFødtEllerAdoptert;\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport dayjs from 'dayjs';\r\nimport { FieldArray } from 'formik';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport { validateFødselsdato, validateTermindatoFødsel } from '../validation/omBarnetValidering';\r\n\r\ninterface Props {\r\n    søkersituasjon: Søkersituasjon;\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst Fødsel: FunctionComponent<Props> = ({ søkersituasjon, formValues, visibility }) => {\r\n    const { erBarnetFødt } = formValues;\r\n\r\n    const intl = useIntl();\r\n\r\n    if (søkersituasjon.situasjon === 'adopsjon' || erBarnetFødt !== YesOrNo.YES) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\r\n                <OmBarnetFormComponents.RadioPanelGroup\r\n                    name={OmBarnetFormField.antallBarn}\r\n                    radios={[\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\r\n                            value: '1',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\r\n                            value: '2',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                            value: '3',\r\n                        },\r\n                    ]}\r\n                    useTwoColumns={true}\r\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.født')}\r\n                />\r\n            </Block>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={formValues.antallBarn !== undefined && parseInt(formValues.antallBarn, 10) >= 3}\r\n            >\r\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                </OmBarnetFormComponents.Select>\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\r\n                <FieldArray\r\n                    name={OmBarnetFormField.fødselsdatoer}\r\n                    render={() => [\r\n                        <OmBarnetFormComponents.DatePicker\r\n                            key={`${OmBarnetFormField.fødselsdatoer}.0`}\r\n                            name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\r\n                            label={intlUtils(intl, 'omBarnet.fødselsdato')}\r\n                            minDate={dayjs().subtract(6, 'months').toDate()}\r\n                            maxDate={dayjs().toDate()}\r\n                            validate={validateFødselsdato(intl)}\r\n                            placeholder={'dd.mm.åååå'}\r\n                        />,\r\n                    ]}\r\n                />\r\n            </Block>\r\n            <Block visible={visibility.isVisible(OmBarnetFormField.termindato)}>\r\n                <OmBarnetFormComponents.DatePicker\r\n                    name={OmBarnetFormField.termindato}\r\n                    label={intlUtils(intl, 'omBarnet.termindato.født')}\r\n                    minDate={dayjs().subtract(6, 'months').toDate()}\r\n                    maxDate={dayjs().add(9, 'months').toDate()}\r\n                    placeholder={'dd.mm.åååå'}\r\n                    validate={validateTermindatoFødsel(intl)}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Fødsel;\r\n","import { attenUkerTreDager, Block, date21DaysAgo, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport { validateTermindato } from '../validation/omBarnetValidering';\r\n\r\ninterface Props {\r\n    søkersituasjon: Søkersituasjon;\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst Termin: FunctionComponent<Props> = ({ søkersituasjon, visibility, formValues }) => {\r\n    const intl = useIntl();\r\n\r\n    if (søkersituasjon.situasjon === 'adopsjon' || formValues.erBarnetFødt !== YesOrNo.NO) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\r\n                <OmBarnetFormComponents.RadioPanelGroup\r\n                    name={OmBarnetFormField.antallBarn}\r\n                    radios={[\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\r\n                            value: '1',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\r\n                            value: '2',\r\n                        },\r\n                        {\r\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                            value: '3',\r\n                        },\r\n                    ]}\r\n                    useTwoColumns={true}\r\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.termin')}\r\n                />\r\n            </Block>\r\n            <Block\r\n                padBottom=\"l\"\r\n                visible={formValues.antallBarn !== undefined && parseInt(formValues.antallBarn, 10) >= 3}\r\n            >\r\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                </OmBarnetFormComponents.Select>\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.termindato)}>\r\n                <OmBarnetFormComponents.DatePicker\r\n                    name={OmBarnetFormField.termindato}\r\n                    label={intlUtils(intl, 'omBarnet.termindato.termin')}\r\n                    placeholder={'dd.mm.åååå'}\r\n                    description={\r\n                        <UtvidetInformasjon apneLabel={intlUtils(intl, 'omBarnet.termindato.åpneLabel')}>\r\n                            {intlUtils(intl, 'omBarnet.termindato.infotekst')}\r\n                        </UtvidetInformasjon>\r\n                    }\r\n                    minDate={date21DaysAgo}\r\n                    maxDate={attenUkerTreDager}\r\n                    validate={validateTermindato(intl)}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelse)}>\r\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                    <FormattedMessage id=\"omBarnet.veileder.terminbekreftelse\" />\r\n                </Veilederpanel>\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelse)}>\r\n                <FormikFileUploader\r\n                    label={intlUtils(intl, 'annenForelder.farMedmor.dokumentasjonAvAleneomsorg.lastOpp')}\r\n                    name={OmBarnetFormField.terminbekreftelse}\r\n                    attachments={formValues.terminbekreftelse || []}\r\n                    attachmentType={AttachmentType.TERMINBEKREFTELSE}\r\n                    skjemanummer={Skjemanummer.TERMINBEKREFTELSE}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelsedato)}>\r\n                <OmBarnetFormComponents.DatePicker\r\n                    name={OmBarnetFormField.terminbekreftelsedato}\r\n                    label={intlUtils(intl, 'omBarnet.terminbekreftelseDato')}\r\n                    placeholder={'dd.mm.åååå'}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Termin;\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport { RegistrertBarn } from 'app/types/Person';\r\nimport { Søkerrolle } from 'app/types/Søkerrolle';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport dayjs from 'dayjs';\r\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\r\n\r\nexport interface OmBarnetQuestionPayload extends OmBarnetFormData {\r\n    situasjon: string;\r\n    rolle: Søkerrolle;\r\n    arbeidsforhold: Arbeidsforhold[];\r\n    registrerteBarn: RegistrertBarn[];\r\n}\r\n\r\nconst includeTermindato = (rolle: Søkerrolle, fødselsdato: string | undefined): boolean => {\r\n    if (!fødselsdato) {\r\n        return false;\r\n    }\r\n\r\n    if (isFarEllerMedmor(rolle)) {\r\n        const sixWeeksAfterBirthday = dayjs(fødselsdato).add(6, 'weeks');\r\n\r\n        return dayjs(sixWeeksAfterBirthday).isAfter(new Date());\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst skalViseErBarnFødt = (\r\n    situasjon: string,\r\n    registrerteBarn: RegistrertBarn[],\r\n    gjelderAnnetBarn: boolean\r\n): boolean => {\r\n    if (situasjon === 'fødsel') {\r\n        if (registrerteBarn.length > 0) {\r\n            return gjelderAnnetBarn;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nconst OmBarnetFormConfig: QuestionConfig<OmBarnetQuestionPayload, OmBarnetFormField> = {\r\n    [OmBarnetFormField.gjelderAnnetBarn]: {\r\n        isIncluded: ({ registrerteBarn }) => registrerteBarn.length > 0,\r\n        isAnswered: () => true,\r\n        visibilityFilter: ({ situasjon }) => situasjon === 'fødsel',\r\n    },\r\n    [OmBarnetFormField.valgteBarn]: {\r\n        isIncluded: ({ registrerteBarn, situasjon }) => registrerteBarn.length > 0 && situasjon === 'fødsel',\r\n        isAnswered: ({ valgteBarn, gjelderAnnetBarn }) => valgteBarn.length > 0 || gjelderAnnetBarn,\r\n        visibilityFilter: ({ registrerteBarn }) => registrerteBarn.length > 0,\r\n    },\r\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: {\r\n        isIncluded: ({ situasjon }) => situasjon === 'adopsjon',\r\n        isAnswered: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ situasjon }) => situasjon === 'adopsjon',\r\n    },\r\n    [OmBarnetFormField.erBarnetFødt]: {\r\n        isIncluded: ({ situasjon }) => situasjon === 'fødsel',\r\n        isAnswered: ({ erBarnetFødt }) => erBarnetFødt !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ situasjon, registrerteBarn, gjelderAnnetBarn }) =>\r\n            skalViseErBarnFødt(situasjon, registrerteBarn, gjelderAnnetBarn),\r\n    },\r\n    [OmBarnetFormField.antallBarn]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ antallBarn }) => hasValue(antallBarn),\r\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, adopsjonsdato }) =>\r\n            erBarnetFødt !== YesOrNo.UNANSWERED ||\r\n            (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato)),\r\n    },\r\n    [OmBarnetFormField.adopsjonsdato]: {\r\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        isAnswered: ({ adopsjonsdato }) => hasValue(adopsjonsdato),\r\n        visibilityFilter: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n    },\r\n    [OmBarnetFormField.fødselsdatoer]: {\r\n        isIncluded: ({ erBarnetFødt, adopsjonAvEktefellesBarn }) =>\r\n            erBarnetFødt === YesOrNo.YES || adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        isAnswered: ({ fødselsdatoer }) => fødselsdatoer.length > 0 && hasValue(fødselsdatoer[0]),\r\n        visibilityFilter: ({ antallBarn }) => {\r\n            return hasValue(antallBarn);\r\n        },\r\n    },\r\n    [OmBarnetFormField.omsorgsovertakelse]: {\r\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        isAnswered: () => true,\r\n        visibilityFilter: ({ adoptertIUtlandet, adopsjonAvEktefellesBarn, fødselsdatoer }) =>\r\n            adoptertIUtlandet !== YesOrNo.UNANSWERED ||\r\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && hasValue(fødselsdatoer[0])),\r\n    },\r\n    [OmBarnetFormField.termindato]: {\r\n        isIncluded: ({ rolle, fødselsdatoer, erBarnetFødt }) =>\r\n            (includeTermindato(rolle, fødselsdatoer[0]) && erBarnetFødt !== YesOrNo.UNANSWERED) ||\r\n            erBarnetFødt === YesOrNo.NO,\r\n        isAnswered: ({ termindato }) => hasValue(termindato),\r\n        visibilityFilter: ({ fødselsdatoer, erBarnetFødt, antallBarn }) => {\r\n            return hasValue(fødselsdatoer[0]) || (erBarnetFødt === YesOrNo.NO && hasValue(antallBarn));\r\n        },\r\n    },\r\n    [OmBarnetFormField.terminbekreftelse]: {\r\n        isIncluded: ({ erBarnetFødt, arbeidsforhold }) => erBarnetFødt === YesOrNo.NO && arbeidsforhold.length === 0,\r\n        isAnswered: () => true,\r\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\r\n    },\r\n    [OmBarnetFormField.terminbekreftelsedato]: {\r\n        isIncluded: ({ erBarnetFødt, arbeidsforhold }) => erBarnetFødt === YesOrNo.NO && arbeidsforhold.length === 0,\r\n        isAnswered: ({ terminbekreftelsedato }) => hasValue(terminbekreftelsedato),\r\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\r\n    },\r\n    [OmBarnetFormField.adoptertIUtlandet]: {\r\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn === YesOrNo.NO,\r\n        isAnswered: ({ adoptertIUtlandet }) => adoptertIUtlandet !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ fødselsdatoer }) => hasValue(fødselsdatoer[0]),\r\n    },\r\n    [OmBarnetFormField.ankomstdato]: {\r\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn === YesOrNo.NO,\r\n        isAnswered: ({ ankomstdato }) => hasValue(ankomstdato),\r\n        visibilityFilter: ({ adoptertIUtlandet }) => adoptertIUtlandet === YesOrNo.YES,\r\n    },\r\n};\r\n\r\nconst omBarnetQuestionsConfig = Questions<OmBarnetQuestionPayload, OmBarnetFormField>(OmBarnetFormConfig);\r\n\r\nexport default omBarnetQuestionsConfig;\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { dateToISOString, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport Barn, {\r\n    BarnType,\r\n    isAdoptertAnnetBarn,\r\n    isAdoptertStebarn,\r\n    isFødtBarn,\r\n    isUfødtBarn,\r\n} from 'app/context/types/Barn';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { RegistrertBarn } from 'app/types/Person';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { getRegistrertBarnOmDetFinnes } from 'app/utils/barnUtils';\r\nimport { velgEldsteBarn } from 'app/utils/dateUtils';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport { lagSendSenereDokumentNårIngenAndreFinnes } from 'app/utils/vedleggUtils';\r\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\r\n\r\nconst getInitValues = (): Readonly<OmBarnetFormData> => ({\r\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo.UNANSWERED,\r\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo.UNANSWERED,\r\n    [OmBarnetFormField.antallBarn]: '',\r\n    [OmBarnetFormField.adopsjonsdato]: '',\r\n    [OmBarnetFormField.fødselsdatoer]: [],\r\n    [OmBarnetFormField.omsorgsovertakelse]: [],\r\n    [OmBarnetFormField.termindato]: '',\r\n    [OmBarnetFormField.terminbekreftelse]: [],\r\n    [OmBarnetFormField.terminbekreftelsedato]: '',\r\n    [OmBarnetFormField.adoptertIUtlandet]: YesOrNo.UNANSWERED,\r\n    [OmBarnetFormField.ankomstdato]: '',\r\n    [OmBarnetFormField.gjelderAnnetBarn]: false,\r\n    [OmBarnetFormField.valgteBarn]: [],\r\n});\r\n\r\nexport const mapOmBarnetFormDataToState = (\r\n    values: Partial<OmBarnetFormData>,\r\n    registrerteBarn: RegistrertBarn[]\r\n): Barn => {\r\n    if (!values.gjelderAnnetBarn && values.valgteBarn && values.valgteBarn.length > 0) {\r\n        const eldsteBarn = velgEldsteBarn(registrerteBarn, values.valgteBarn);\r\n\r\n        return {\r\n            type: BarnType.FØDT,\r\n            fødselsdatoer: [dateToISOString(eldsteBarn.fødselsdato)!],\r\n            antallBarn: values.valgteBarn.length.toString(),\r\n            termindato: hasValue(values.termindato) ? values.termindato : undefined,\r\n        };\r\n    }\r\n\r\n    if (values.erBarnetFødt === YesOrNo.YES) {\r\n        return {\r\n            type: BarnType.FØDT,\r\n            fødselsdatoer: values.fødselsdatoer!,\r\n            antallBarn: values.antallBarn!,\r\n            termindato: values.termindato,\r\n        };\r\n    }\r\n\r\n    if (values.erBarnetFødt === YesOrNo.NO) {\r\n        const terminbekreftelse = lagSendSenereDokumentNårIngenAndreFinnes(\r\n            values.terminbekreftelse!,\r\n            AttachmentType.TERMINBEKREFTELSE,\r\n            Skjemanummer.TERMINBEKREFTELSE\r\n        );\r\n        return {\r\n            type: BarnType.UFØDT,\r\n            terminbekreftelse: terminbekreftelse!,\r\n            terminbekreftelsedato: values.terminbekreftelsedato,\r\n            antallBarn: values.antallBarn!,\r\n            termindato: values.termindato!,\r\n        };\r\n    }\r\n\r\n    const omsorgsovertakelse = lagSendSenereDokumentNårIngenAndreFinnes(\r\n        values.omsorgsovertakelse!,\r\n        AttachmentType.OMSORGSOVERTAKELSE,\r\n        Skjemanummer.OMSORGSOVERTAKELSESDATO\r\n    );\r\n\r\n    if (values.adopsjonAvEktefellesBarn === YesOrNo.YES) {\r\n        return {\r\n            type: BarnType.ADOPTERT_STEBARN,\r\n            adopsjonsdato: values.adopsjonsdato!,\r\n            antallBarn: values.antallBarn!,\r\n            fødselsdatoer: values.fødselsdatoer!,\r\n            omsorgsovertakelse: omsorgsovertakelse!,\r\n        };\r\n    }\r\n\r\n    return {\r\n        type: BarnType.ADOPTERT_ANNET_BARN,\r\n        fødselsdatoer: values.fødselsdatoer!,\r\n        adopsjonsdato: values.adopsjonsdato!,\r\n        antallBarn: values.antallBarn!,\r\n        adoptertIUtlandet: convertYesOrNoOrUndefinedToBoolean(values.adoptertIUtlandet)!,\r\n        omsorgsovertakelse: omsorgsovertakelse!,\r\n        ankomstdato: values.adoptertIUtlandet! === YesOrNo.YES ? values.ankomstdato! : undefined,\r\n    };\r\n};\r\n\r\nexport const getOmBarnetInitialValues = (barn: Barn, registrerteBarn: RegistrertBarn[]): OmBarnetFormData => {\r\n    const initialOmBarnetValues = getInitValues();\r\n\r\n    if (!barn) {\r\n        return initialOmBarnetValues;\r\n    }\r\n\r\n    if (isFødtBarn(barn)) {\r\n        const registrertBarn = getRegistrertBarnOmDetFinnes(barn, registrerteBarn);\r\n\r\n        if (registrertBarn) {\r\n            return {\r\n                ...initialOmBarnetValues,\r\n                fødselsdatoer: barn.fødselsdatoer,\r\n                termindato: barn.termindato || '',\r\n                antallBarn: barn.antallBarn,\r\n                valgteBarn: [registrertBarn.fnr],\r\n            };\r\n        }\r\n    }\r\n\r\n    if (isFødtBarn(barn)) {\r\n        return {\r\n            ...initialOmBarnetValues,\r\n            erBarnetFødt: YesOrNo.YES,\r\n            fødselsdatoer: barn.fødselsdatoer,\r\n            termindato: barn.termindato || '',\r\n            antallBarn: barn.antallBarn,\r\n            gjelderAnnetBarn: true,\r\n        };\r\n    }\r\n\r\n    if (isUfødtBarn(barn)) {\r\n        return {\r\n            ...initialOmBarnetValues,\r\n            erBarnetFødt: YesOrNo.NO,\r\n            terminbekreftelse: barn.terminbekreftelse,\r\n            terminbekreftelsedato: barn.terminbekreftelsedato || '',\r\n            termindato: barn.termindato,\r\n            antallBarn: barn.antallBarn,\r\n        };\r\n    }\r\n\r\n    if (isAdoptertAnnetBarn(barn)) {\r\n        return {\r\n            ...initialOmBarnetValues,\r\n            adopsjonAvEktefellesBarn: YesOrNo.NO,\r\n            fødselsdatoer: barn.fødselsdatoer,\r\n            adopsjonsdato: barn.adopsjonsdato,\r\n            antallBarn: barn.antallBarn!,\r\n            adoptertIUtlandet: convertBooleanOrUndefinedToYesOrNo(barn.adoptertIUtlandet),\r\n            omsorgsovertakelse: barn.omsorgsovertakelse!,\r\n            ankomstdato: barn.ankomstdato!,\r\n        };\r\n    }\r\n\r\n    if (isAdoptertStebarn(barn)) {\r\n        return {\r\n            ...initialOmBarnetValues,\r\n            adopsjonAvEktefellesBarn: YesOrNo.YES,\r\n            adopsjonsdato: barn.adopsjonsdato,\r\n            antallBarn: barn.antallBarn,\r\n            fødselsdatoer: barn.fødselsdatoer,\r\n            omsorgsovertakelse: barn.omsorgsovertakelse,\r\n        };\r\n    }\r\n\r\n    return initialOmBarnetValues;\r\n};\r\n","import { Block, formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport { RegistrertBarn as RegistrertBarnType } from 'app/types/Person';\r\nimport { formaterNavn } from 'app/utils/personUtils';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\n\r\ninterface Props {\r\n    registrerteBarn: RegistrertBarnType[];\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n    formValues: OmBarnetFormData;\r\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\r\n}\r\n\r\nconst RegistrertBarn: FunctionComponent<Props> = ({ registrerteBarn, visibility, formValues, setFieldValue }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.valgteBarn)}>\r\n                <OmBarnetFormComponents.CheckboxPanelGroup\r\n                    name={OmBarnetFormField.valgteBarn}\r\n                    legend={intlUtils(intl, 'omBarnet.barnRegistrert')}\r\n                    checkboxes={registrerteBarn.map((barn) => ({\r\n                        label: formaterNavn(barn.fornavn, barn.etternavn, barn.mellomnavn),\r\n                        value: barn.fnr,\r\n                        subtext: formatDate(barn.fødselsdato),\r\n                        autoComplete: 'off',\r\n                        disabled: formValues.gjelderAnnetBarn,\r\n                    }))}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.gjelderAnnetBarn)}>\r\n                <OmBarnetFormComponents.Checkbox\r\n                    name={OmBarnetFormField.gjelderAnnetBarn}\r\n                    label={intlUtils(intl, 'omBarnet.gjelderAnnetBarn')}\r\n                    onClick={() => {\r\n                        if (!formValues.gjelderAnnetBarn) {\r\n                            setFieldValue(OmBarnetFormField.valgteBarn, []);\r\n                        } else {\r\n                            setFieldValue(OmBarnetFormField.erBarnetFødt, YesOrNo.UNANSWERED);\r\n                        }\r\n                    }}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegistrertBarn;\r\n","import { Block, intlUtils, Step } from '@navikt/fp-common';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport AdopsjonAnnetBarn from './components/AdopsjonAnnetBarn';\r\nimport AdopsjonEktefellesBarn from './components/AdopsjonEktefellesBarn';\r\nimport BarnFødtEllerAdoptert from './components/BarnFødtEllerAdoptert';\r\nimport Fødsel from './components/Fødsel';\r\nimport Termin from './components/Termin';\r\nimport { OmBarnetFormComponents, OmBarnetFormData } from './omBarnetFormConfig';\r\nimport omBarnetQuestionsConfig from './omBarnetQuestionsConfig';\r\nimport { getOmBarnetInitialValues, mapOmBarnetFormDataToState } from './omBarnetUtils';\r\nimport RegistrertBarn from './components/RegistrertBarn';\r\n\r\nconst OmBarnet: React.FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const { søkersituasjon, barn } = useSøknad();\r\n    const { arbeidsforhold, registrerteBarn } = useSøkerinfo();\r\n\r\n    const onValidSubmitHandler = (values: Partial<OmBarnetFormData>) => {\r\n        const barn = mapOmBarnetFormDataToState(values, registrerteBarn);\r\n        return [actionCreator.setOmBarnet(barn)];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.ANNEN_FORELDER);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    return (\r\n        <OmBarnetFormComponents.FormikWrapper\r\n            initialValues={getOmBarnetInitialValues(barn, registrerteBarn)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues, setFieldValue }) => {\r\n                const visibility = omBarnetQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    arbeidsforhold,\r\n                    situasjon: søkersituasjon.situasjon,\r\n                    rolle: søkersituasjon.rolle,\r\n                    registrerteBarn,\r\n                });\r\n\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                        backLinkHref={getPreviousStepHref('omBarnet')}\r\n                        activeStepId=\"omBarnet\"\r\n                        pageTitle={intlUtils(intl, 'søknad.omBarnet')}\r\n                        stepTitle={intlUtils(intl, 'søknad.omBarnet')}\r\n                        onCancel={onAvbrytSøknad}\r\n                        onContinueLater={() => null}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <OmBarnetFormComponents.Form includeButtons={false}>\r\n                            <RegistrertBarn\r\n                                registrerteBarn={registrerteBarn}\r\n                                visibility={visibility}\r\n                                formValues={formValues}\r\n                                setFieldValue={setFieldValue}\r\n                            />\r\n                            <BarnFødtEllerAdoptert visibility={visibility} />\r\n                            <AdopsjonAnnetBarn\r\n                                søkersituasjon={søkersituasjon}\r\n                                formValues={formValues}\r\n                                visibility={visibility}\r\n                            />\r\n                            <AdopsjonEktefellesBarn\r\n                                søkersituasjon={søkersituasjon}\r\n                                formValues={formValues}\r\n                                visibility={visibility}\r\n                            />\r\n                            <Termin søkersituasjon={søkersituasjon} formValues={formValues} visibility={visibility} />\r\n                            <Fødsel søkersituasjon={søkersituasjon} formValues={formValues} visibility={visibility} />\r\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </OmBarnetFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default OmBarnet;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport OmBarnet from 'app/steps/om-barnet/OmBarnet';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\nimport AxiosMock from '../../../utils/AxiosMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/OmBarnet',\\r\\n    component: OmBarnet,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <OmBarnet />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const ForAdopsjon = Template.bind({});\\r\\nForAdopsjon.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søkersituasjon: {\\r\\n                situasjon: 'adopsjon',\\r\\n                rolle: 'mor',\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}},\"ForAdopsjon\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":44}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport OmBarnet from 'app/steps/om-barnet/OmBarnet';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\nimport AxiosMock from '../../../utils/AxiosMock';\r\n\r\nexport default {\r\n    title: 'steps/OmBarnet',\r\n    component: OmBarnet,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onPost('/storage/vedlegg').reply(\r\n            200,\r\n            { data: {} },\r\n            {\r\n                location: '',\r\n            }\r\n        );\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n                <OmBarnet />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n};\r\n\r\nexport const ForAdopsjon = Template.bind({});\r\nForAdopsjon.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søkersituasjon: {\r\n                situasjon: 'adopsjon',\r\n                rolle: 'mor',\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <OmBarnet />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nForAdopsjon.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onPost('/storage/vedlegg').reply(\\r\\n            200,\\r\\n            { data: {} },\\r\\n            {\\r\\n                location: '',\\r\\n            }\\r\\n        );\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n                <OmBarnet />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...ForAdopsjon.parameters };","import { Block } from '@navikt/fp-common';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\ninterface Props {\r\n    title: string;\r\n    visible?: boolean;\r\n    children?: ReactNode;\r\n}\r\n\r\nconst OppsummeringsPunkt: FunctionComponent<Props> = ({ title, visible, children }) => {\r\n    return (\r\n        <Block padBottom=\"l\" visible={visible}>\r\n            <Element>{title}</Element>\r\n            {children}\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default OppsummeringsPunkt;\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport AnnenForelder, { isAnnenForelderIkkeOppgitt, isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport Søker from 'app/context/types/Søker';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\n\r\ninterface Props {\r\n    annenForelder: AnnenForelder;\r\n    søker: Søker;\r\n}\r\n\r\nconst AnnenForelderOppsummering: FunctionComponent<Props> = ({ annenForelder, søker }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <>\r\n            {isAnnenForelderIkkeOppgitt(annenForelder) && (\r\n                <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.annenForelder.ikkeOppgitt')} />\r\n            )}\r\n            {isAnnenForelderOppgitt(annenForelder) && (\r\n                <>\r\n                    <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.annenForelder.navn')}>\r\n                        <Normaltekst>{`${annenForelder.fornavn} ${annenForelder.etternavn}`}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.annenForelder.fnr')}>\r\n                        <Normaltekst>{annenForelder.fnr}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt\r\n                        title={\r\n                            !søker.erAleneOmOmsorg\r\n                                ? intlUtils(intl, 'oppsummering.annenForelder.fellesOmsorg.tittel')\r\n                                : intlUtils(intl, 'oppsummering.annenForelder.aleneOmOmsorg.tittel')\r\n                        }\r\n                    >\r\n                        <Normaltekst>\r\n                            <FormattedMessage\r\n                                id={\r\n                                    !søker.erAleneOmOmsorg\r\n                                        ? 'oppsummering.annenForelder.fellesOmsorg.tekst'\r\n                                        : 'oppsummering.annenForelder.aleneOmOmsorg.tekst'\r\n                                }\r\n                            />\r\n                        </Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(intl, 'oppsummering.annenForelder.rettPåForeldrepenger', {\r\n                            navn: annenForelder.fornavn,\r\n                        })}\r\n                    >\r\n                        <Normaltekst>\r\n                            <FormattedMessage id={annenForelder.harRettPåForeldrepenger ? 'ja' : 'nei'} />\r\n                        </Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AnnenForelderOppsummering;\r\n","import { formatDate, hasValue, intlUtils } from '@navikt/fp-common';\r\nimport { AdoptertAnnetBarn, AdoptertStebarn, isAdoptertStebarn } from 'app/context/types/Barn';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\n\r\ninterface Props {\r\n    barn: AdoptertAnnetBarn | AdoptertStebarn;\r\n}\r\n\r\nconst BarnAdoptertIUtlandetDetaljer: FunctionComponent<Props> = ({ barn }) => {\r\n    const intl = useIntl();\r\n\r\n    if (isAdoptertStebarn(barn)) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.barn.adoptertIUtlandet')}>\r\n                <Normaltekst>\r\n                    <FormattedMessage id={barn.adoptertIUtlandet ? 'ja' : 'nei'} />\r\n                </Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            <OppsummeringsPunkt\r\n                title={intlUtils(intl, 'oppsummering.barn.ankomstdato')}\r\n                visible={hasValue(barn.ankomstdato)}\r\n            >\r\n                <Normaltekst>{formatDate(barn.ankomstdato!)}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BarnAdoptertIUtlandetDetaljer;\r\n","import { formatDate, intlUtils } from '@navikt/fp-common';\r\nimport Barn, { BarnType, isAdoptertAnnetBarn, isAdoptertStebarn, isUfødtBarn } from 'app/context/types/Barn';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\nimport BarnAdoptertIUtlandetDetaljer from './BarnAdoptertIUtlandetDetaljer';\r\n\r\ninterface Props {\r\n    barn: Barn;\r\n}\r\n\r\nconst getAntallBarnTekst = (antallBarnString: string, intl: IntlShape): string => {\r\n    const antallBarn = parseInt(antallBarnString, 10);\r\n\r\n    if (antallBarn === 1) {\r\n        return intlUtils(intl, 'oppsummering.barn.antallBarn.ettBarn');\r\n    }\r\n\r\n    if (antallBarn === 2) {\r\n        return intlUtils(intl, 'oppsummering.barn.antallBarn.toBarn');\r\n    }\r\n\r\n    return intlUtils(intl, 'oppsummering.barn.antallBarn.flere', { antallBarn });\r\n};\r\n\r\nconst getTerminEllerFødselTittel = (type: BarnType) => {\r\n    if (type === BarnType.UFØDT) {\r\n        return 'Termin';\r\n    }\r\n\r\n    return 'Fødselsdato';\r\n};\r\n\r\nconst getTerminEllerFødselsdato = (barn: Barn) => {\r\n    if (isUfødtBarn(barn)) {\r\n        return formatDate(barn.termindato);\r\n    }\r\n\r\n    return formatDate(barn.fødselsdatoer[0]);\r\n};\r\n\r\nconst BarnOppsummering: FunctionComponent<Props> = ({ barn }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.barn.søknadenGjelder')}>\r\n                <Normaltekst>{getAntallBarnTekst(barn.antallBarn, intl)}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            <OppsummeringsPunkt title={getTerminEllerFødselTittel(barn.type)}>\r\n                <Normaltekst>{getTerminEllerFødselsdato(barn)}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            {(isAdoptertAnnetBarn(barn) || isAdoptertStebarn(barn)) && (\r\n                <>\r\n                    <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.barn.gjelderSøknadenStebarnsadopsjon')}>\r\n                        <Normaltekst>\r\n                            <FormattedMessage id={barn.type === BarnType.ADOPTERT_STEBARN ? 'ja' : 'nei'} />\r\n                        </Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.barn.adopsjonsdato')}>\r\n                        <Normaltekst>{formatDate(barn.adopsjonsdato)}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <BarnAdoptertIUtlandetDetaljer barn={barn} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BarnOppsummering;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\nimport EkspanderbartPanel from 'nav-frontend-ekspanderbartpanel';\r\n\r\nimport './oppsummeringsPanel.less';\r\nimport { bemUtils } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    title: string;\r\n    children: ReactNode;\r\n}\r\n\r\nconst OppsummeringsPanel: FunctionComponent<Props> = ({ title, children }) => {\r\n    const bem = bemUtils('oppsummeringsPanel');\r\n\r\n    return (\r\n        <EkspanderbartPanel className={bem.block} tittel={title}>\r\n            <div className={bem.element('content')}>{children}</div>\r\n        </EkspanderbartPanel>\r\n    );\r\n};\r\n\r\nexport default OppsummeringsPanel;\r\n","import * as React from 'react';\r\n\r\nconst KvinneIkon = () => (\r\n    <svg\r\n        width={40}\r\n        height={40}\r\n        viewBox=\"0 0 32 32\"\r\n        display=\"block\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n    >\r\n        <defs />\r\n        <g\r\n            id=\"Component/static/person-header\"\r\n            stroke=\"none\"\r\n            strokeWidth=\"1\"\r\n            fill=\"none\"\r\n            fillRule=\"evenodd\"\r\n            transform=\"translate(0.000000, -11.000000)\"\r\n        >\r\n            <g id=\"⚙️/-ikon/-id-markering-/-kvinne\" transform=\"translate(0.000000, 11.000000)\">\r\n                <circle id=\"Oval\" fill=\"#FFFFFF\" cx=\"16\" cy=\"16\" r=\"16\" />\r\n                <g id=\"kvinne\" strokeWidth=\"1\" fill=\"#C86151\">\r\n                    <g id=\"Layer_1\">\r\n                        <g id=\"Layer_1_1_\">\r\n                            <path\r\n                                d=\"M16,0 C7.164,0 0,7.1635 0,16 C0,24.836 7.1635,32 16,32 C24.8365,32 32,24.8365 32,16 C32,7.164 24.836,0 16,0 L16,0 Z M15.999,3.9745 C17.0685,3.9745 17.937,4.8415 17.937,5.9115 C17.937,6.9815 17.0685,7.849 15.999,7.849 C14.9295,7.849 14.0625,6.981 14.0625,5.9115 C14.0625,4.8415 14.929,3.9745 15.999,3.9745 L15.999,3.9745 Z M21.9015,17.855 C21.462,17.988 20.9965,17.767 20.7995,17.354 L19.3165,12.537 C19.2445,12.3005 18.9945,12.167 18.7575,12.239 C18.544,12.304 18.4235,12.514 18.4525,12.728 C18.446,12.7365 20.6445,19.9185 20.981,21.0175 L18.5695,21.0175 L18.5695,26.921 C18.5695,27.5305 18.0765,28.024 17.4675,28.024 C16.8585,28.024 16.364,27.53 16.364,26.921 L16.364,26.906 L16.364,21.193 L16.364,21.0175 L16,21.0175 L15.6355,21.0175 L15.6355,21.193 L15.6355,26.9065 L15.6355,26.9215 C15.6355,27.531 15.1415,28.0245 14.532,28.0245 C13.923,28.0245 13.43,27.5305 13.43,26.9215 L13.43,21.018 L11.0185,21.018 C11.3545,19.9185 13.5535,12.737 13.547,12.7285 C13.5765,12.5145 13.4555,12.304 13.242,12.2395 C13.0055,12.1675 12.755,12.3005 12.683,12.5375 L11.2,17.3545 C11.0035,17.7675 10.538,17.988 10.098,17.8555 C9.6115,17.7085 9.34,17.183 9.492,16.684 C9.492,16.684 11.5495,10.1765 11.5725,10.13 C12.1325,8.3815 13.5445,8.387 14.8435,8.384 L17.155,8.384 C18.4545,8.387 19.8665,8.3815 20.426,10.13 C20.4495,10.177 22.5065,16.684 22.5065,16.684 C22.6595,17.1825 22.3875,17.7075 21.9015,17.855 L21.9015,17.855 Z\"\r\n                                id=\"Shape\"\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\nexport default KvinneIkon;\r\n","import { bemUtils } from '@navikt/fp-common';\r\nimport KvinneIkon from 'app/assets/KvinneIkon';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { Normaltekst, Undertittel } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport './personalia.less';\r\n\r\ninterface Props {\r\n    søkerinfo: Søkerinfo;\r\n}\r\n\r\nconst Personalia: FunctionComponent<Props> = ({ søkerinfo }) => {\r\n    const bem = bemUtils('personalia');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <div className={bem.element('icon')}>\r\n                <KvinneIkon />\r\n            </div>\r\n            <div>\r\n                <Undertittel>{`${søkerinfo.person.fornavn} ${søkerinfo.person.etternavn}`}</Undertittel>\r\n                <Normaltekst>{søkerinfo.person.fnr}</Normaltekst>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Personalia;\r\n","import { bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { Utenlandsopphold } from 'app/context/types/InformasjonOmUtenlandsopphold';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport countries from 'i18n-iso-countries';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport './utenlandsoppholdOppsummeringListe.less';\r\n\r\ninterface Props {\r\n    utenlandsopphold: Utenlandsopphold[];\r\n    tidligereOpphold: boolean;\r\n}\r\n\r\nconst UtenlandsoppholdOppsummeringListe: FunctionComponent<Props> = ({ utenlandsopphold, tidligereOpphold }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('utenlandsoppholdOppsummeringListe');\r\n\r\n    return (\r\n        <ul className={bem.block}>\r\n            {utenlandsopphold.map((opphold) => {\r\n                return (\r\n                    <li\r\n                        className={bem.element('listElement')}\r\n                        key={`${opphold.land}${opphold.tidsperiode.fom}${opphold.tidsperiode.tom}`}\r\n                    >\r\n                        <Normaltekst>\r\n                            {tidligereOpphold\r\n                                ? intlUtils(intl, 'oppsummering.utenlandsopphold.harBoddINorge.utenlands', {\r\n                                      land: countries.getName(opphold.land, 'nb'),\r\n                                  })\r\n                                : intlUtils(intl, 'oppsummering.utenlandsopphold.skalBoINorge.utenlands', {\r\n                                      land: countries.getName(opphold.land, 'nb'),\r\n                                  })}\r\n                        </Normaltekst>\r\n                        <Normaltekst>\r\n                            {formatDate(opphold.tidsperiode.fom)} - {formatDate(opphold.tidsperiode.tom)}\r\n                        </Normaltekst>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default UtenlandsoppholdOppsummeringListe;\r\n","import { doesTidsperiodeContainDate, intlUtils } from '@navikt/fp-common';\r\nimport Barn, { isAdoptertAnnetBarn, isAdoptertStebarn } from 'app/context/types/Barn';\r\nimport InformasjonOmUtenlandsopphold, { Utenlandsopphold } from 'app/context/types/InformasjonOmUtenlandsopphold';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\nimport UtenlandsoppholdListe from './UtenlandsoppholdOppsummeringListe';\r\n\r\ninterface Props {\r\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold;\r\n    barn: Barn;\r\n}\r\n\r\nconst getErINorgePåFamiliehendelsedato = (\r\n    familiehendelsedato: string,\r\n    tidligereOpphold: Utenlandsopphold[],\r\n    senereOpphold: Utenlandsopphold[]\r\n): boolean => {\r\n    let erINorge = true;\r\n\r\n    tidligereOpphold.forEach((tidOpphold) => {\r\n        if (doesTidsperiodeContainDate(tidOpphold.tidsperiode, familiehendelsedato)) {\r\n            erINorge = false;\r\n        }\r\n    });\r\n\r\n    senereOpphold.forEach((senOpphold) => {\r\n        if (doesTidsperiodeContainDate(senOpphold.tidsperiode, familiehendelsedato)) {\r\n            erINorge = false;\r\n        }\r\n    });\r\n\r\n    return erINorge;\r\n};\r\n\r\nconst erAdoptertBarn = (barn: Barn): boolean => {\r\n    return isAdoptertAnnetBarn(barn) || isAdoptertStebarn(barn);\r\n};\r\n\r\nconst UtenlandsoppholdOppsummering: FunctionComponent<Props> = ({ informasjonOmUtenlandsopphold, barn }) => {\r\n    const intl = useIntl();\r\n    const { senereOpphold, tidligereOpphold } = informasjonOmUtenlandsopphold;\r\n    const familiehendelsedato = getFamiliehendelsedato(barn);\r\n    const erINorgePåFamiliehendelsedato = getErINorgePåFamiliehendelsedato(\r\n        familiehendelsedato,\r\n        tidligereOpphold,\r\n        senereOpphold\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.utenlandsopphold.harBoddINorge')}>\r\n                {informasjonOmUtenlandsopphold.iNorgeSiste12Mnd\r\n                    ? intlUtils(intl, 'oppsummering.utenlandsopphold.harBoddINorge.norge')\r\n                    : null}\r\n                <UtenlandsoppholdListe\r\n                    utenlandsopphold={informasjonOmUtenlandsopphold.tidligereOpphold}\r\n                    tidligereOpphold={true}\r\n                />\r\n            </OppsummeringsPunkt>\r\n\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.utenlandsopphold.skalBoINorge')}>\r\n                {informasjonOmUtenlandsopphold.iNorgeNeste12Mnd\r\n                    ? intlUtils(intl, 'oppsummering.utenlandsopphold.skalBoINorge.norge')\r\n                    : null}\r\n                <UtenlandsoppholdListe\r\n                    utenlandsopphold={informasjonOmUtenlandsopphold.senereOpphold}\r\n                    tidligereOpphold={false}\r\n                />\r\n            </OppsummeringsPunkt>\r\n\r\n            <OppsummeringsPunkt\r\n                title={\r\n                    erAdoptertBarn(barn)\r\n                        ? intlUtils(intl, 'oppsummering.utenlandsopphold.erINorgeOmsorgsovertakelsesdato')\r\n                        : intlUtils(intl, 'oppsummering.utenlandsopphold.erINorgePåFødselstidspunkt')\r\n                }\r\n            >\r\n                <Normaltekst>\r\n                    <FormattedMessage id={erINorgePåFamiliehendelsedato ? 'ja' : 'nei'} />\r\n                </Normaltekst>\r\n            </OppsummeringsPunkt>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UtenlandsoppholdOppsummering;\r\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum OppsummeringFormField {\r\n    harGodkjentOppsummering = 'harGodkjentOppsummering',\r\n}\r\n\r\nexport interface OppsummeringFormData {\r\n    [OppsummeringFormField.harGodkjentOppsummering]: YesOrNo;\r\n}\r\n\r\nconst initialOppsummeringValues: OppsummeringFormData = {\r\n    [OppsummeringFormField.harGodkjentOppsummering]: YesOrNo.UNANSWERED,\r\n};\r\n\r\nexport const getInitialOppsummeringValues = (): OppsummeringFormData => {\r\n    return initialOppsummeringValues;\r\n};\r\n\r\nexport const OppsummeringFormComponents = getTypedFormComponents<OppsummeringFormField, OppsummeringFormData, string>();\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateHarGodkjentOppsummering = (intl: IntlShape) => (value: boolean) => {\r\n    if (value !== true) {\r\n        return intlUtils(intl, 'valideringsfeil.oppsummering.harGodkjentOppsummering.påkrevd');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport * as countries from 'i18n-iso-countries';\r\nimport { AnnenInntekt, AnnenInntektType, JobbIUtlandetInntekt } from 'app/context/types/AnnenInntekt';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport { useIntl } from 'react-intl';\r\nimport { intlUtils } from '@navikt/fp-common';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport EtikettBase from 'nav-frontend-etiketter';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { isAttachmentWithError } from 'app/utils/vedleggUtils';\r\n\r\ninterface Props {\r\n    annenInntekt: AnnenInntekt;\r\n}\r\n\r\nconst AnnenInntektDetaljer: FunctionComponent<Props> = ({ annenInntekt }) => {\r\n    const intl = useIntl();\r\n    const { type, vedlegg } = annenInntekt;\r\n    if (type === AnnenInntektType.JOBB_I_UTLANDET) {\r\n        const jobbIUtlandetInntekt = annenInntekt as JobbIUtlandetInntekt;\r\n        return (\r\n            <>\r\n                <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.andreInntekter.arbeidsgiverNavn')}>\r\n                    <Normaltekst>{jobbIUtlandetInntekt.arbeidsgiverNavn}</Normaltekst>\r\n                </OppsummeringsPunkt>\r\n                <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.andreInntekter.arbeidsgiverLand')}>\r\n                    <Normaltekst>{countries.getName(jobbIUtlandetInntekt.land, 'nb')}</Normaltekst>\r\n                </OppsummeringsPunkt>\r\n            </>\r\n        );\r\n    }\r\n    if (\r\n        type === AnnenInntektType.VENTELØNN ||\r\n        type === AnnenInntektType.SLUTTPAKKE ||\r\n        type === AnnenInntektType.MILITÆRTJENESTE\r\n    ) {\r\n        const renderListOfAttachmentPreviewLinks = () => {\r\n            return vedlegg\r\n                .filter((a: Attachment) => !isAttachmentWithError(a))\r\n                .map(({ url, id, filename }) => (\r\n                    <Lenke href={url!} key={id} target=\"_blank\">\r\n                        {filename}\r\n                    </Lenke>\r\n                ));\r\n        };\r\n        return (\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.andreInntekter.vedlagtdokumentasjon')}>\r\n                {(vedlegg || []).filter((a: Attachment) => !isAttachmentWithError(a)).length > 0 ? (\r\n                    renderListOfAttachmentPreviewLinks()\r\n                ) : (\r\n                    <EtikettBase type=\"fokus\">\r\n                        {intlUtils(intl, 'oppsummering.andreInntekter.dokumentasjon.mangler')}\r\n                    </EtikettBase>\r\n                )}\r\n            </OppsummeringsPunkt>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default AnnenInntektDetaljer;\r\n","import { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent, ReactElement } from 'react';\r\n\r\nimport './inntekterTabell.less';\r\n\r\ninterface Props {\r\n    list: {\r\n        key: string;\r\n        headerVenstre: string;\r\n        headerHøyre: string;\r\n        content?: ReactElement;\r\n    }[];\r\n}\r\n\r\nconst InntekterTabell: FunctionComponent<Props> = ({ list }) => {\r\n    return (\r\n        <ul className=\"oppsummeringsliste\">\r\n            {list.map((l) => (\r\n                <li key={l.key} className=\"oppsummeringsliste__element\">\r\n                    <div className=\"oppsummeringsliste__element__heading\">\r\n                        <Element>{l.headerVenstre}</Element>\r\n                        <div className=\"høyrestiltTekst\">\r\n                            <Normaltekst>{l.headerHøyre}</Normaltekst>\r\n                        </div>\r\n                    </div>\r\n                    {l.content && <div className=\"oppsummeringsliste__element__content\">{l.content}</div>}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default InntekterTabell;\r\n","import { formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\n\r\nimport AnnenInntektDetaljer from './AnnenInntektDetaljer';\r\nimport InntekterTabell from './InntekterTabell';\r\n\r\nconst AndreInntekterOppsummering: FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const {\r\n        søker: { harHattAnnenInntektSiste10Mnd, andreInntekterSiste10Mnd },\r\n    } = useSøknad();\r\n\r\n    if (!harHattAnnenInntektSiste10Mnd || !andreInntekterSiste10Mnd) {\r\n        return (\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.andreInntekter.tittel')}>\r\n                <Normaltekst>{intlUtils(intl, 'oppsummering.andreInntekter.ikkeHattAndreInntekter')}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.andreInntekter.tittel')}>\r\n            <InntekterTabell\r\n                list={andreInntekterSiste10Mnd.map((annenInntekt) => ({\r\n                    key: annenInntekt.type + annenInntekt.tidsperiode,\r\n                    headerVenstre: intlUtils(intl, `inntektstype.${annenInntekt.type.toLowerCase()}`),\r\n                    headerHøyre: intlUtils(intl, 'tidsintervall', {\r\n                        fom: formatDate(ISOStringToDate(annenInntekt.tidsperiode.fom)!),\r\n                        tom: annenInntekt.pågående\r\n                            ? 'pågående'\r\n                            : formatDate(ISOStringToDate(annenInntekt.tidsperiode.tom)!),\r\n                    }),\r\n                    content: <AnnenInntektDetaljer annenInntekt={annenInntekt} />,\r\n                }))}\r\n            />\r\n        </OppsummeringsPunkt>\r\n    );\r\n};\r\n\r\nexport default AndreInntekterOppsummering;\r\n","import { Block, formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\nimport InntekterTabell from './InntekterTabell';\r\n\r\nconst FrilansOppsummering: FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const {\r\n        søker: { frilansInformasjon, harJobbetSomFrilansSiste10Mnd },\r\n    } = useSøknad();\r\n\r\n    if (!frilansInformasjon || !harJobbetSomFrilansSiste10Mnd) {\r\n        return (\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.frilans.tittel')}>\r\n                <Normaltekst>{intlUtils(intl, 'oppsummering.frilans.ikkeFrilans')}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n        );\r\n    }\r\n    const {\r\n        oppstart,\r\n        jobberFremdelesSomFrilans,\r\n        driverFosterhjem,\r\n        harJobbetForNærVennEllerFamilieSiste10Mnd,\r\n        oppdragForNæreVennerEllerFamilieSiste10Mnd,\r\n    } = frilansInformasjon;\r\n\r\n    return (\r\n        <>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.frilans.tittel')} />\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.frilans.oppstartsdato')}>\r\n                <Normaltekst>{formatDate(ISOStringToDate(oppstart)!)}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.frilans.fremdelesFrilans')}>\r\n                <Normaltekst>{jobberFremdelesSomFrilans ? intlUtils(intl, 'ja') : intlUtils(intl, 'nei')}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.frilans.driverFosterhjem')}>\r\n                <Normaltekst>{driverFosterhjem ? intlUtils(intl, 'ja') : intlUtils(intl, 'nei')}</Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            <OppsummeringsPunkt\r\n                title={intlUtils(intl, 'oppsummering.frilans.frilansArbeidForNæreVennerEllerFamilieSiste10Mnd')}\r\n            >\r\n                <Block visible={!harJobbetForNærVennEllerFamilieSiste10Mnd} margin=\"none\">\r\n                    <Normaltekst>\r\n                        {intlUtils(\r\n                            intl,\r\n                            'oppsummering.frilans.harIkkeUtførtFrilansArbeidForNæreVennerEllerFamilieSiste10Mnd'\r\n                        )}\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block visible={harJobbetForNærVennEllerFamilieSiste10Mnd} margin=\"none\">\r\n                    <InntekterTabell\r\n                        list={oppdragForNæreVennerEllerFamilieSiste10Mnd.map(\r\n                            ({ navnPåArbeidsgiver, tidsperiode, pågående }) => ({\r\n                                key: navnPåArbeidsgiver + tidsperiode,\r\n                                headerVenstre: navnPåArbeidsgiver,\r\n                                headerHøyre: intlUtils(intl, 'tidsintervall', {\r\n                                    fom: formatDate(ISOStringToDate(tidsperiode.fom)!),\r\n                                    tom: pågående ? 'pågående' : formatDate(ISOStringToDate(tidsperiode.tom)!),\r\n                                }),\r\n                            })\r\n                        )}\r\n                    />\r\n                </Block>\r\n            </OppsummeringsPunkt>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FrilansOppsummering;\r\n","import { formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport { Næring } from 'app/context/types/Næring';\r\nimport * as countries from 'i18n-iso-countries';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\n\r\ninterface Props {\r\n    næring: Næring;\r\n}\r\n\r\nconst Næringsdetaljer: FunctionComponent<Props> = ({ næring }) => {\r\n    const intl = useIntl();\r\n    const {\r\n        næringstyper,\r\n        organisasjonsnummer,\r\n        næringsinntekt,\r\n        registrertINorge,\r\n        registrertILand,\r\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\r\n        hattVarigEndringAvNæringsinntektSiste4Kalenderår,\r\n        endringAvNæringsinntektInformasjon,\r\n        harRegnskapsfører,\r\n        regnskapsfører,\r\n    } = næring;\r\n\r\n    return (\r\n        <>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.næringstype')}>\r\n                <Normaltekst>\r\n                    {næringstyper\r\n                        .map((næringstype) => intlUtils(intl, `næringstype.${næringstype.toLowerCase()}`))\r\n                        .join(', ')}\r\n                </Normaltekst>\r\n            </OppsummeringsPunkt>\r\n            {organisasjonsnummer && (\r\n                <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.orgnr')}>\r\n                    <Normaltekst>{organisasjonsnummer}</Normaltekst>\r\n                </OppsummeringsPunkt>\r\n            )}\r\n            {næringsinntekt && (\r\n                <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.næringsinntekt')}>\r\n                    <Normaltekst>{næringsinntekt}</Normaltekst>\r\n                </OppsummeringsPunkt>\r\n            )}\r\n            {registrertINorge ||\r\n                (registrertILand && (\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.registrertLand')}\r\n                    >\r\n                        <Normaltekst>\r\n                            {registrertINorge ? 'Norge' : countries.getName(registrertILand, 'nb')}\r\n                        </Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                ))}\r\n            {harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene && (\r\n                <OppsummeringsPunkt\r\n                    title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.blittYrkesaktivSiste3År')}\r\n                >\r\n                    <Normaltekst>\r\n                        {hattVarigEndringAvNæringsinntektSiste4Kalenderår\r\n                            ? intlUtils(intl, 'ja')\r\n                            : intlUtils(intl, 'nei')}\r\n                    </Normaltekst>\r\n                </OppsummeringsPunkt>\r\n            )}\r\n            {hattVarigEndringAvNæringsinntektSiste4Kalenderår === true && (\r\n                <>\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(\r\n                            intl,\r\n                            'oppsummering.selvstendigNæringsdrivende.datoForEndringAvNæringsinntekt'\r\n                        )}\r\n                    >\r\n                        <Normaltekst>\r\n                            {formatDate(ISOStringToDate(endringAvNæringsinntektInformasjon?.dato)!)}\r\n                        </Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.næringsinntektEtterEndring')}\r\n                    >\r\n                        <Normaltekst>{endringAvNæringsinntektInformasjon!.næringsinntektEtterEndring}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.forklaring')}>\r\n                        <Normaltekst>{endringAvNæringsinntektInformasjon!.forklaring}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                </>\r\n            )}\r\n            {harRegnskapsfører === true && regnskapsfører && (\r\n                <>\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.regnskapsførerNavn')}\r\n                    >\r\n                        <Normaltekst>{regnskapsfører.navn}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.regnskapsførerTlf')}\r\n                    >\r\n                        <Normaltekst>{regnskapsfører.telefonnummer}</Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                    <OppsummeringsPunkt\r\n                        title={intlUtils(\r\n                            intl,\r\n                            'oppsummering.selvstendigNæringsdrivende.regnskapsførerNærVennEllerFamilie'\r\n                        )}\r\n                    >\r\n                        <Normaltekst>\r\n                            {regnskapsfører.erNærVennEllerFamilie ? intlUtils(intl, 'ja') : intlUtils(intl, 'nei')}\r\n                        </Normaltekst>\r\n                    </OppsummeringsPunkt>\r\n                </>\r\n            )}\r\n            {harRegnskapsfører === false && (\r\n                <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.regnskapsfører')}>\r\n                    <Normaltekst>\r\n                        {intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.harIkkeRegnskapsfører')}\r\n                    </Normaltekst>\r\n                </OppsummeringsPunkt>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Næringsdetaljer;\r\n","import { formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\nimport InntekterTabell from './InntekterTabell';\r\nimport Næringsdetaljer from './Næringsdetaljer';\r\n\r\nconst SelvstendigNæringsdrivendeOppsummering: FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const {\r\n        søker: { selvstendigNæringsdrivendeInformasjon, harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd },\r\n    } = useSøknad();\r\n\r\n    if (!selvstendigNæringsdrivendeInformasjon || !harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd) {\r\n        return (\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.tittel')}>\r\n                <Normaltekst>\r\n                    {intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.ikkeSelvstendigNæringsdrivende')}\r\n                </Normaltekst>\r\n            </OppsummeringsPunkt>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.selvstendigNæringsdrivende.tittel')}>\r\n            <InntekterTabell\r\n                list={selvstendigNæringsdrivendeInformasjon.map((næring) => ({\r\n                    key: næring.navnPåNæringen + næring.tidsperiode,\r\n                    headerVenstre: næring.navnPåNæringen,\r\n                    headerHøyre: intlUtils(intl, 'tidsintervall', {\r\n                        fom: formatDate(ISOStringToDate(næring.tidsperiode.fom)!),\r\n                        tom: næring.pågående ? 'pågående' : formatDate(ISOStringToDate(næring.tidsperiode.tom)!),\r\n                    }),\r\n                    content: <Næringsdetaljer næring={næring} />,\r\n                }))}\r\n            />\r\n        </OppsummeringsPunkt>\r\n    );\r\n};\r\n\r\nexport default SelvstendigNæringsdrivendeOppsummering;\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport HarArbeidsforhold from 'app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarArbeidsforhold';\r\nimport HarIkkeArbeidsforhold from 'app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarIkkeArbeidsforhold';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport OppsummeringsPunkt from '../OppsummeringsPunkt';\r\nimport AndreInntekterOppsummering from './AndreInntekterOppsummering';\r\nimport FrilansOppsummering from './FrilansOppsummering';\r\nimport SelvstendigNæringsdrivendeOppsummering from './SelvstendigNæringsdrivendeOppsummering';\r\n\r\nconst ArbeidsforholdOgAndreInntekterOppsummering: FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const { arbeidsforhold } = useSøkerinfo();\r\n    const harArbeidsforhold = arbeidsforhold !== undefined && arbeidsforhold.length > 0;\r\n\r\n    return (\r\n        <>\r\n            <OppsummeringsPunkt title={intlUtils(intl, 'oppsummering.inntekt.registrerteArbeidsforhold')}>\r\n                <HarIkkeArbeidsforhold harArbeidsforhold={harArbeidsforhold} />\r\n                <HarArbeidsforhold harArbeidsforhold={harArbeidsforhold} arbeidsforhold={arbeidsforhold} />\r\n            </OppsummeringsPunkt>\r\n            <FrilansOppsummering />\r\n            <SelvstendigNæringsdrivendeOppsummering />\r\n            <AndreInntekterOppsummering />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArbeidsforholdOgAndreInntekterOppsummering;\r\n","import { bemUtils, Block, intlUtils, Step } from '@navikt/fp-common';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React from 'react';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport AnnenForelderOppsummering from './components/annen-forelder-oppsummering/AnnenForelderOppsummering';\r\nimport BarnOppsummering from './components/barn-oppsummering/BarnOppsummering';\r\nimport OppsummeringsPanel from './components/OppsummeringsPanel';\r\nimport Personalia from './components/Personalia';\r\nimport UtenlandsoppholdOppsummering from './components/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummering';\r\n\r\nimport './oppsummering.less';\r\nimport {\r\n    getInitialOppsummeringValues,\r\n    OppsummeringFormComponents,\r\n    OppsummeringFormField,\r\n} from './oppsummeringFormConfig';\r\nimport { validateHarGodkjentOppsummering } from './validation/oppsummeringValidation';\r\nimport ArbeidsforholdOgAndreInntekterOppsummering from './components/andre-inntekter-oppsummering/ArbeidsforholdOgAndreInntekterOppsummering';\r\n\r\nconst Oppsummering = () => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('oppsummering');\r\n    const { barn, annenForelder, søker, informasjonOmUtenlandsopphold } = useSøknad();\r\n    const søkerinfo = useSøkerinfo();\r\n\r\n    const onValidSubmitHandler = () => [];\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.SØKNAD_SENDT);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    return (\r\n        <OppsummeringFormComponents.FormikWrapper\r\n            initialValues={getInitialOppsummeringValues()}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={() => {\r\n                return (\r\n                    <OppsummeringFormComponents.Form includeButtons={false}>\r\n                        <Step\r\n                            bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                            backLinkHref={getPreviousStepHref('oppsummering')}\r\n                            activeStepId=\"oppsummering\"\r\n                            pageTitle={intlUtils(intl, 'søknad.oppsummering')}\r\n                            stepTitle={intlUtils(intl, 'søknad.oppsummering')}\r\n                            onCancel={onAvbrytSøknad}\r\n                            onContinueLater={() => null}\r\n                            steps={stepConfig}\r\n                            kompakt={true}\r\n                        >\r\n                            <Block padBottom=\"l\">\r\n                                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                    <FormattedMessage id=\"oppsummering.veileder\" />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                            <Block padBottom=\"l\">\r\n                                <div className={bem.block}>\r\n                                    <Block padBottom=\"l\">\r\n                                        <Personalia søkerinfo={søkerinfo} />\r\n                                    </Block>\r\n                                    <OppsummeringsPanel title=\"Om barnet\">\r\n                                        <BarnOppsummering barn={barn} />\r\n                                    </OppsummeringsPanel>\r\n                                    <OppsummeringsPanel title=\"Den andre forelderen\">\r\n                                        <AnnenForelderOppsummering annenForelder={annenForelder} søker={søker} />\r\n                                    </OppsummeringsPanel>\r\n                                    <OppsummeringsPanel title=\"Utenlandsopphold\">\r\n                                        <UtenlandsoppholdOppsummering\r\n                                            informasjonOmUtenlandsopphold={informasjonOmUtenlandsopphold}\r\n                                            barn={barn}\r\n                                        />\r\n                                    </OppsummeringsPanel>\r\n                                    <OppsummeringsPanel title=\"Arbeidsforhold og andre inntektskilder\">\r\n                                        <ArbeidsforholdOgAndreInntekterOppsummering />\r\n                                    </OppsummeringsPanel>\r\n                                </div>\r\n                            </Block>\r\n                            <Block padBottom=\"l\">\r\n                                <OppsummeringFormComponents.ConfirmationCheckbox\r\n                                    name={OppsummeringFormField.harGodkjentOppsummering}\r\n                                    label={intlUtils(intl, 'oppsummering.harGodkjentOppsummering')}\r\n                                    validate={validateHarGodkjentOppsummering(intl)}\r\n                                />\r\n                            </Block>\r\n                            <Block padBottom=\"l\">\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <Hovedknapp>Send inn søknad</Hovedknapp>\r\n                                </div>\r\n                            </Block>\r\n                        </Step>\r\n                    </OppsummeringFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Oppsummering;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\n\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport Oppsummering from 'app/steps/oppsummering/Oppsummering';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\nimport { Næringstype } from 'app/context/types/Næring';\\r\\nimport { AnnenInntektType } from 'app/context/types/AnnenInntekt';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/Oppsummering',\\r\\n    component: Oppsummering,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedAnnenForelder = Template.bind({});\\r\\nMedAnnenForelder.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'Espen',\\r\\n                etternavn: 'Utvikler',\\r\\n                fnr: '1212121313',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedAdoptertBarn = Template.bind({});\\r\\nMedAdoptertBarn.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søkersituasjon: {\\r\\n                ...context.søknad.søkersituasjon,\\r\\n                situasjon: 'adopsjon',\\r\\n            },\\r\\n            barn: {\\r\\n                type: 'adoptertStebarn',\\r\\n                antallBarn: 1,\\r\\n                adopsjonsdato: '2021-10-01',\\r\\n                fødselsdatoer: '2021-01-01',\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedUtenlandsopphold = Template.bind({});\\r\\nMedUtenlandsopphold.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            informasjonOmUtenlandsopphold: {\\r\\n                iNorgeNeste12Mnd: false,\\r\\n                iNorgeSiste12Mnd: false,\\r\\n                senereOpphold: [\\r\\n                    {\\r\\n                        land: 'SE',\\r\\n                        tidsperiode: {\\r\\n                            fom: '2021-01-01',\\r\\n                            tom: '2021-12-31',\\r\\n                        },\\r\\n                    },\\r\\n                ],\\r\\n                tidligereOpphold: [\\r\\n                    {\\r\\n                        land: 'SE',\\r\\n                        tidsperiode: {\\r\\n                            fom: '2020-01-01',\\r\\n                            tom: '2020-12-31',\\r\\n                        },\\r\\n                    },\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedArbeidsforholdOgAndreInntekter = Template.bind({});\\r\\nMedArbeidsforholdOgAndreInntekter.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                harJobbetSomFrilansSiste10Mnd: true,\\r\\n                frilansInformasjon: {\\r\\n                    jobberFremdelesSomFrilans: true,\\r\\n                    oppstart: '2019-01-01',\\r\\n                    harJobbetForNærVennEllerFamilieSiste10Mnd: false,\\r\\n                    oppdragForNæreVennerEllerFamilieSiste10Mnd: [],\\r\\n                },\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo: {\\r\\n        søker: {\\r\\n            ...søkerinfo.søker,\\r\\n            arbeidsforhold: [\\r\\n                {\\r\\n                    arbeidsgiverId: '1',\\r\\n                    arbeidsgiverIdType: 'orgnr',\\r\\n                    arbeidsgiverNavn: 'Auto Joachim Bilpleie',\\r\\n                    stillingsprosent: 80,\\r\\n                    fom: '2015-01-01',\\r\\n                },\\r\\n                {\\r\\n                    arbeidsgiverId: '2',\\r\\n                    arbeidsgiverIdType: 'orgnr',\\r\\n                    arbeidsgiverNavn: 'Taco Express',\\r\\n                    stillingsprosent: 20,\\r\\n                    fom: '2019-01-01',\\r\\n                    tom: '2021-01-01',\\r\\n                },\\r\\n            ],\\r\\n        },\\r\\n    } as SøkerinfoDTO,\\r\\n};\\r\\n\\r\\nexport const MedArbeidsforholdOgAndreInntekterJobbetForNærFamilie = Template.bind({});\\r\\nMedArbeidsforholdOgAndreInntekterJobbetForNærFamilie.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                harJobbetSomFrilansSiste10Mnd: true,\\r\\n                frilansInformasjon: {\\r\\n                    jobberFremdelesSomFrilans: true,\\r\\n                    oppstart: '2019-01-01',\\r\\n                    harJobbetForNærVennEllerFamilieSiste10Mnd: true,\\r\\n                    oppdragForNæreVennerEllerFamilieSiste10Mnd: [\\r\\n                        {\\r\\n                            navnPåArbeidsgiver: 'Auto Joachim Bilpleie',\\r\\n                            pågående: true,\\r\\n                            tidsperiode: {\\r\\n                                fom: '2019-01-01',\\r\\n                            },\\r\\n                        },\\r\\n                        {\\r\\n                            navnPåArbeidsgiver: 'Taco Express',\\r\\n                            pågående: false,\\r\\n                            tidsperiode: {\\r\\n                                fom: '2018-01-01',\\r\\n                                tom: '2021-01-01',\\r\\n                            },\\r\\n                        },\\r\\n                    ],\\r\\n                },\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedSelvstendigNæringsdrivende = Template.bind({});\\r\\nMedSelvstendigNæringsdrivende.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: true,\\r\\n                selvstendigNæringsdrivendeInformasjon: [\\r\\n                    {\\r\\n                        navnPåNæringen: 'Fiske',\\r\\n                        pågående: false,\\r\\n                        tidsperiode: {\\r\\n                            fom: '2018-01-01',\\r\\n                            tom: '2021-01-01',\\r\\n                        },\\r\\n                        næringstyper: [Næringstype.FISKER],\\r\\n                        organisasjonsnummer: '123',\\r\\n                        næringsinntekt: 1000000,\\r\\n                        registrertINorge: true,\\r\\n                        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: true,\\r\\n                        hattVarigEndringAvNæringsinntektSiste4Kalenderår: true,\\r\\n                        endringAvNæringsinntektInformasjon: {\\r\\n                            dato: '2019-01-01',\\r\\n                            næringsinntektEtterEndring: 1000000,\\r\\n                            forklaring: 'Jobbar beinhardt!',\\r\\n                        },\\r\\n                        harRegnskapsfører: true,\\r\\n                        regnskapsfører: {\\r\\n                            navn: 'Espen Utvikler',\\r\\n                            telefonnummer: 555904233,\\r\\n                            erNærVennEllerFamilie: true,\\r\\n                        },\\r\\n                    },\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedSelvstendigNæringsdrivendeUtenDiverse = Template.bind({});\\r\\nMedSelvstendigNæringsdrivendeUtenDiverse.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: true,\\r\\n                selvstendigNæringsdrivendeInformasjon: [\\r\\n                    {\\r\\n                        navnPåNæringen: 'Fiske',\\r\\n                        pågående: false,\\r\\n                        tidsperiode: {\\r\\n                            fom: '2018-01-01',\\r\\n                            tom: '2021-01-01',\\r\\n                        },\\r\\n                        næringstyper: [Næringstype.FISKER],\\r\\n                        registrertILand: 'SE',\\r\\n                        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: false,\\r\\n                        hattVarigEndringAvNæringsinntektSiste4Kalenderår: false,\\r\\n                        harRegnskapsfører: false,\\r\\n                    },\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedAndreInntekterJobbIUtlandet = Template.bind({});\\r\\nMedAndreInntekterJobbIUtlandet.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                harHattAnnenInntektSiste10Mnd: true,\\r\\n                andreInntekterSiste10Mnd: [\\r\\n                    {\\r\\n                        type: AnnenInntektType.JOBB_I_UTLANDET,\\r\\n                        pågående: false,\\r\\n                        tidsperiode: {\\r\\n                            fom: '2018-01-01',\\r\\n                            tom: '2021-01-01',\\r\\n                        },\\r\\n                        arbeidsgiverNavn: 'Statoil',\\r\\n                        land: 'SE',\\r\\n                    },\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const MedAndreInntekterMilitærtjeneste = Template.bind({});\\r\\nMedAndreInntekterMilitærtjeneste.args = {\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                harHattAnnenInntektSiste10Mnd: true,\\r\\n                andreInntekterSiste10Mnd: [\\r\\n                    {\\r\\n                        type: AnnenInntektType.MILITÆRTJENESTE,\\r\\n                        pågående: false,\\r\\n                        tidsperiode: {\\r\\n                            fom: '2018-01-01',\\r\\n                            tom: '2021-01-01',\\r\\n                        },\\r\\n                        vedlegg: [\\r\\n                            {\\r\\n                                id: '1',\\r\\n                                url: 'Dette er en url',\\r\\n                                filename: 'Filnavn',\\r\\n                            },\\r\\n                        ],\\r\\n                    },\\r\\n                ],\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedAnnenForelder\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedAdoptertBarn\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedUtenlandsopphold\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedArbeidsforholdOgAndreInntekter\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedArbeidsforholdOgAndreInntekterJobbetForNærFamilie\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedSelvstendigNæringsdrivende\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedSelvstendigNæringsdrivendeUtenDiverse\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedAndreInntekterJobbIUtlandet\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}},\"MedAndreInntekterMilitærtjeneste\":{\"startLoc\":{\"col\":31,\"line\":27},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":31,\"line\":27},\"endBody\":{\"col\":1,\"line\":33}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport Oppsummering from 'app/steps/oppsummering/Oppsummering';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\nimport { Næringstype } from 'app/context/types/Næring';\r\nimport { AnnenInntektType } from 'app/context/types/AnnenInntekt';\r\n\r\nexport default {\r\n    title: 'steps/Oppsummering',\r\n    component: Oppsummering,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\r\n    return (\r\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n            <Oppsummering />\r\n        </ForeldrepengerStateMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedAnnenForelder = Template.bind({});;\r\nMedAnnenForelder.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'Espen',\r\n                etternavn: 'Utvikler',\r\n                fnr: '1212121313',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedAdoptertBarn = Template.bind({});;\r\nMedAdoptertBarn.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søkersituasjon: {\r\n                ...context.søknad.søkersituasjon,\r\n                situasjon: 'adopsjon',\r\n            },\r\n            barn: {\r\n                type: 'adoptertStebarn',\r\n                antallBarn: 1,\r\n                adopsjonsdato: '2021-10-01',\r\n                fødselsdatoer: '2021-01-01',\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedUtenlandsopphold = Template.bind({});;\r\nMedUtenlandsopphold.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            informasjonOmUtenlandsopphold: {\r\n                iNorgeNeste12Mnd: false,\r\n                iNorgeSiste12Mnd: false,\r\n                senereOpphold: [\r\n                    {\r\n                        land: 'SE',\r\n                        tidsperiode: {\r\n                            fom: '2021-01-01',\r\n                            tom: '2021-12-31',\r\n                        },\r\n                    },\r\n                ],\r\n                tidligereOpphold: [\r\n                    {\r\n                        land: 'SE',\r\n                        tidsperiode: {\r\n                            fom: '2020-01-01',\r\n                            tom: '2020-12-31',\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedArbeidsforholdOgAndreInntekter = Template.bind({});;\r\nMedArbeidsforholdOgAndreInntekter.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                harJobbetSomFrilansSiste10Mnd: true,\r\n                frilansInformasjon: {\r\n                    jobberFremdelesSomFrilans: true,\r\n                    oppstart: '2019-01-01',\r\n                    harJobbetForNærVennEllerFamilieSiste10Mnd: false,\r\n                    oppdragForNæreVennerEllerFamilieSiste10Mnd: [],\r\n                },\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo: {\r\n        søker: {\r\n            ...søkerinfo.søker,\r\n            arbeidsforhold: [\r\n                {\r\n                    arbeidsgiverId: '1',\r\n                    arbeidsgiverIdType: 'orgnr',\r\n                    arbeidsgiverNavn: 'Auto Joachim Bilpleie',\r\n                    stillingsprosent: 80,\r\n                    fom: '2015-01-01',\r\n                },\r\n                {\r\n                    arbeidsgiverId: '2',\r\n                    arbeidsgiverIdType: 'orgnr',\r\n                    arbeidsgiverNavn: 'Taco Express',\r\n                    stillingsprosent: 20,\r\n                    fom: '2019-01-01',\r\n                    tom: '2021-01-01',\r\n                },\r\n            ],\r\n        },\r\n    } as SøkerinfoDTO,\r\n};\r\n\r\nexport const MedArbeidsforholdOgAndreInntekterJobbetForNærFamilie = Template.bind({});;\r\nMedArbeidsforholdOgAndreInntekterJobbetForNærFamilie.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                harJobbetSomFrilansSiste10Mnd: true,\r\n                frilansInformasjon: {\r\n                    jobberFremdelesSomFrilans: true,\r\n                    oppstart: '2019-01-01',\r\n                    harJobbetForNærVennEllerFamilieSiste10Mnd: true,\r\n                    oppdragForNæreVennerEllerFamilieSiste10Mnd: [\r\n                        {\r\n                            navnPåArbeidsgiver: 'Auto Joachim Bilpleie',\r\n                            pågående: true,\r\n                            tidsperiode: {\r\n                                fom: '2019-01-01',\r\n                            },\r\n                        },\r\n                        {\r\n                            navnPåArbeidsgiver: 'Taco Express',\r\n                            pågående: false,\r\n                            tidsperiode: {\r\n                                fom: '2018-01-01',\r\n                                tom: '2021-01-01',\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedSelvstendigNæringsdrivende = Template.bind({});;\r\nMedSelvstendigNæringsdrivende.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: true,\r\n                selvstendigNæringsdrivendeInformasjon: [\r\n                    {\r\n                        navnPåNæringen: 'Fiske',\r\n                        pågående: false,\r\n                        tidsperiode: {\r\n                            fom: '2018-01-01',\r\n                            tom: '2021-01-01',\r\n                        },\r\n                        næringstyper: [Næringstype.FISKER],\r\n                        organisasjonsnummer: '123',\r\n                        næringsinntekt: 1000000,\r\n                        registrertINorge: true,\r\n                        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: true,\r\n                        hattVarigEndringAvNæringsinntektSiste4Kalenderår: true,\r\n                        endringAvNæringsinntektInformasjon: {\r\n                            dato: '2019-01-01',\r\n                            næringsinntektEtterEndring: 1000000,\r\n                            forklaring: 'Jobbar beinhardt!',\r\n                        },\r\n                        harRegnskapsfører: true,\r\n                        regnskapsfører: {\r\n                            navn: 'Espen Utvikler',\r\n                            telefonnummer: 555904233,\r\n                            erNærVennEllerFamilie: true,\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedSelvstendigNæringsdrivendeUtenDiverse = Template.bind({});;\r\nMedSelvstendigNæringsdrivendeUtenDiverse.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: true,\r\n                selvstendigNæringsdrivendeInformasjon: [\r\n                    {\r\n                        navnPåNæringen: 'Fiske',\r\n                        pågående: false,\r\n                        tidsperiode: {\r\n                            fom: '2018-01-01',\r\n                            tom: '2021-01-01',\r\n                        },\r\n                        næringstyper: [Næringstype.FISKER],\r\n                        registrertILand: 'SE',\r\n                        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: false,\r\n                        hattVarigEndringAvNæringsinntektSiste4Kalenderår: false,\r\n                        harRegnskapsfører: false,\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedAndreInntekterJobbIUtlandet = Template.bind({});;\r\nMedAndreInntekterJobbIUtlandet.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                harHattAnnenInntektSiste10Mnd: true,\r\n                andreInntekterSiste10Mnd: [\r\n                    {\r\n                        type: AnnenInntektType.JOBB_I_UTLANDET,\r\n                        pågående: false,\r\n                        tidsperiode: {\r\n                            fom: '2018-01-01',\r\n                            tom: '2021-01-01',\r\n                        },\r\n                        arbeidsgiverNavn: 'Statoil',\r\n                        land: 'SE',\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const MedAndreInntekterMilitærtjeneste = Template.bind({});\r\nMedAndreInntekterMilitærtjeneste.args = {\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                harHattAnnenInntektSiste10Mnd: true,\r\n                andreInntekterSiste10Mnd: [\r\n                    {\r\n                        type: AnnenInntektType.MILITÆRTJENESTE,\r\n                        pågående: false,\r\n                        tidsperiode: {\r\n                            fom: '2018-01-01',\r\n                            tom: '2021-01-01',\r\n                        },\r\n                        vedlegg: [\r\n                            {\r\n                                id: '1',\r\n                                url: 'Dette er en url',\r\n                                filename: 'Filnavn',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nMedAnnenForelder.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedAnnenForelder.parameters };\nMedAdoptertBarn.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedAdoptertBarn.parameters };\nMedUtenlandsopphold.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedUtenlandsopphold.parameters };\nMedArbeidsforholdOgAndreInntekter.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedArbeidsforholdOgAndreInntekter.parameters };\nMedArbeidsforholdOgAndreInntekterJobbetForNærFamilie.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedArbeidsforholdOgAndreInntekterJobbetForNærFamilie.parameters };\nMedSelvstendigNæringsdrivende.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedSelvstendigNæringsdrivende.parameters };\nMedSelvstendigNæringsdrivendeUtenDiverse.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedSelvstendigNæringsdrivendeUtenDiverse.parameters };\nMedAndreInntekterJobbIUtlandet.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedAndreInntekterJobbIUtlandet.parameters };\nMedAndreInntekterMilitærtjeneste.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Oppsummering />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...MedAndreInntekterMilitærtjeneste.parameters };","import { hasValue } from '@navikt/fp-common';\r\nimport { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport { Situasjon } from 'app/types/Situasjon';\r\nimport { Søkerrolle } from 'app/types/Søkerrolle';\r\n\r\nexport enum SøkersituasjonFormField {\r\n    situasjon = 'situasjon',\r\n    rolle = 'rolle',\r\n}\r\n\r\nexport interface SøkersituasjonFormData {\r\n    [SøkersituasjonFormField.situasjon]: Situasjon;\r\n    [SøkersituasjonFormField.rolle]: Søkerrolle;\r\n}\r\n\r\nconst initialSøkersituasjonValues: SøkersituasjonFormData = {\r\n    [SøkersituasjonFormField.situasjon]: '',\r\n    [SøkersituasjonFormField.rolle]: '',\r\n};\r\n\r\nexport const getInitialSøkerSituasjonValues = (stateValues: Søkersituasjon): SøkersituasjonFormData => {\r\n    if (hasValue(stateValues.rolle) && hasValue(stateValues.situasjon)) {\r\n        return {\r\n            rolle: stateValues.rolle,\r\n            situasjon: stateValues.situasjon,\r\n        };\r\n    }\r\n\r\n    return initialSøkersituasjonValues;\r\n};\r\n\r\nexport const SøkersituasjonFormComponents = getTypedFormComponents<\r\n    SøkersituasjonFormField,\r\n    SøkersituasjonFormData,\r\n    string\r\n>();\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Block, intlUtils, Kjønn } from '@navikt/fp-common';\r\nimport { SøkersituasjonFormComponents, SøkersituasjonFormField } from '../søkersituasjonFormConfig';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    kjønn: Kjønn;\r\n}\r\n\r\nconst VelgRolle: FunctionComponent<Props> = ({ kjønn }) => {\r\n    const intl = useIntl();\r\n\r\n    if (kjønn === 'M') {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Block margin=\"xl\">\r\n            <SøkersituasjonFormComponents.RadioPanelGroup\r\n                name={SøkersituasjonFormField.rolle}\r\n                radios={[\r\n                    {\r\n                        label: intlUtils(intl, 'søkersituasjon.radioButton.mor'),\r\n                        value: 'mor',\r\n                    },\r\n                    {\r\n                        label: intlUtils(intl, 'søkersituasjon.radioButton.medmor'),\r\n                        value: 'medmor',\r\n                    },\r\n                ]}\r\n                useTwoColumns={true}\r\n                legend={intlUtils(intl, 'søkersituasjon.text.rolle')}\r\n            />\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default VelgRolle;\r\n","import { hasValue, Kjønn } from '@navikt/fp-common';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { SøkersituasjonFormData, SøkersituasjonFormField } from './søkersituasjonFormConfig';\r\n\r\ninterface SøkersituasjonQuestionsPayload extends SøkersituasjonFormData {\r\n    søkerKjønn: Kjønn;\r\n}\r\n\r\nconst SøkersituasjonFormConfig: QuestionConfig<SøkersituasjonQuestionsPayload, SøkersituasjonFormField> = {\r\n    [SøkersituasjonFormField.situasjon]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ situasjon }) => hasValue(situasjon),\r\n    },\r\n    [SøkersituasjonFormField.rolle]: {\r\n        isIncluded: ({ søkerKjønn }) => søkerKjønn === 'K',\r\n        isAnswered: ({ rolle }) => hasValue(rolle),\r\n        visibilityFilter: ({ situasjon }) => hasValue(situasjon),\r\n    },\r\n};\r\n\r\nconst søkersituasjonQuestionsConfig = Questions<SøkersituasjonQuestionsPayload, SøkersituasjonFormField>(\r\n    SøkersituasjonFormConfig\r\n);\r\n\r\nexport default søkersituasjonQuestionsConfig;\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport { SøkersituasjonFormData } from './søkersituasjonFormConfig';\r\n\r\nexport const mapSøkersituasjonFormDataToState = (formData: Partial<SøkersituasjonFormData>): Søkersituasjon => {\r\n    return {\r\n        situasjon: formData.situasjon!,\r\n        rolle: hasValue(formData.rolle) ? formData.rolle! : 'far',\r\n    };\r\n};\r\n","import { Block, intlUtils, Kjønn, Step } from '@navikt/fp-common';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport React from 'react';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport { useIntl } from 'react-intl';\r\nimport stepConfig from '../stepsConfig';\r\nimport VelgRolle from './components/VelgRolle';\r\nimport {\r\n    getInitialSøkerSituasjonValues,\r\n    SøkersituasjonFormComponents,\r\n    SøkersituasjonFormData,\r\n    SøkersituasjonFormField,\r\n} from './søkersituasjonFormConfig';\r\nimport søkersituasjonQuestionsConfig from './søkersituasjonQuestionsConfig';\r\nimport { mapSøkersituasjonFormDataToState } from './søkersituasjonUtils';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\n\r\ninterface Props {\r\n    kjønn: Kjønn;\r\n}\r\n\r\nconst Søkersituasjon: React.FunctionComponent<Props> = ({ kjønn }) => {\r\n    const intl = useIntl();\r\n    const søknad = useSøknad();\r\n    const søkerinfo = useSøkerinfo();\r\n\r\n    const onValidSubmitHandler = (values: Partial<SøkersituasjonFormData>) => {\r\n        const søkersituasjon = mapSøkersituasjonFormDataToState(values);\r\n        return [actionCreator.setSøkersituasjon(søkersituasjon)];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.OM_BARNET);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    return (\r\n        <SøkersituasjonFormComponents.FormikWrapper\r\n            initialValues={getInitialSøkerSituasjonValues(søknad.søkersituasjon)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = søkersituasjonQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    søkerKjønn: søkerinfo.person.kjønn,\r\n                });\r\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                        activeStepId=\"søkersituasjon\"\r\n                        pageTitle={intlUtils(intl, 'søknad.søkersituasjon')}\r\n                        stepTitle={intlUtils(intl, 'søknad.søkersituasjon')}\r\n                        onCancel={onAvbrytSøknad}\r\n                        onContinueLater={() => null}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <SøkersituasjonFormComponents.Form includeButtons={false}>\r\n                            <div>\r\n                                <Block margin=\"xl\">\r\n                                    <SøkersituasjonFormComponents.RadioPanelGroup\r\n                                        name={SøkersituasjonFormField.situasjon}\r\n                                        radios={[\r\n                                            {\r\n                                                label: intlUtils(intl, 'søkersituasjon.radioButton.fødsel'),\r\n                                                value: 'fødsel',\r\n                                            },\r\n                                            {\r\n                                                label: intlUtils(intl, 'søkersituasjon.radioButton.adopsjon'),\r\n                                                value: 'adopsjon',\r\n                                            },\r\n                                        ]}\r\n                                        useTwoColumns={true}\r\n                                        legend={intlUtils(intl, 'søkersituasjon.text.situasjon')}\r\n                                    />\r\n                                </Block>\r\n                                <Block visible={visibility.isVisible(SøkersituasjonFormField.rolle)} margin=\"xl\">\r\n                                    <VelgRolle kjønn={kjønn} />\r\n                                </Block>\r\n                                {allQuestionsAnswered && (\r\n                                    <Block margin=\"xl\" textAlignCenter={true}>\r\n                                        <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                                    </Block>\r\n                                )}\r\n                            </div>\r\n                        </SøkersituasjonFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Søkersituasjon;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport { Kjønn } from '@navikt/fp-common';\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport Søkersituasjon from 'app/steps/søkersituasjon/Søkersituasjon';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/Søkersituasjon',\\r\\n    component: Søkersituasjon,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n    kjønn: Kjønn;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo, kjønn }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Søkersituasjon kjønn={kjønn} />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n    kjønn: 'K',\\r\\n};\\r\\n\\r\\nexport const Far = Template.bind({});\\r\\nFar.args = {\\r\\n    context,\\r\\n    søkerinfo: {\\r\\n        søker: {\\r\\n            ...søkerinfo,\\r\\n            kjønn: 'M',\\r\\n        },\\r\\n    } as SøkerinfoDTO,\\r\\n    kjønn: 'M',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":26},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":31,\"line\":26},\"endBody\":{\"col\":1,\"line\":32}},\"Far\":{\"startLoc\":{\"col\":31,\"line\":26},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":31,\"line\":26},\"endBody\":{\"col\":1,\"line\":32}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Kjønn } from '@navikt/fp-common';\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport Søkersituasjon from 'app/steps/søkersituasjon/Søkersituasjon';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\n\r\nexport default {\r\n    title: 'steps/Søkersituasjon',\r\n    component: Søkersituasjon,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n    kjønn: Kjønn;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo, kjønn }) => {\r\n    return (\r\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n            <Søkersituasjon kjønn={kjønn} />\r\n        </ForeldrepengerStateMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n    kjønn: 'K',\r\n};\r\n\r\nexport const Far = Template.bind({});\r\nFar.args = {\r\n    context,\r\n    søkerinfo: {\r\n        søker: {\r\n            ...søkerinfo,\r\n            kjønn: 'M',\r\n        },\r\n    } as SøkerinfoDTO,\r\n    kjønn: 'M',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo, kjønn }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Søkersituasjon kjønn={kjønn} />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };\nFar.parameters = { storySource: { source: \"({ context, søkerinfo, kjønn }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Søkersituasjon kjønn={kjønn} />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...Far.parameters };","import { BostedUtland } from './bostedUtlandListAndDialog/types';\r\nimport { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum UtenlandsoppholdFieldNames {\r\n    harBoddINorgeSiste12Mnd = 'harBoddINorgeSiste12Mnd',\r\n    utenlandsoppholdSiste12Mnd = 'utenlandsoppholdSiste12Mnd',\r\n    skalBoINorgeNeste12Mnd = 'skalBoINorgeNeste12Mnd',\r\n    utenlandsoppholdNeste12Mnd = 'utenlandsoppholdNeste12Mnd',\r\n}\r\n\r\nexport interface UtenlandsoppholdFormData {\r\n    [UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd]: YesOrNo;\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: BostedUtland[];\r\n    [UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd]: YesOrNo;\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: BostedUtland[];\r\n}\r\n\r\nexport const initialUtenlandsoppholdFormData: UtenlandsoppholdFormData = {\r\n    [UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd]: YesOrNo.UNANSWERED,\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: [],\r\n    [UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd]: YesOrNo.UNANSWERED,\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: [],\r\n};\r\n\r\nexport const UtenlandsoppholdFormComponents = getTypedFormComponents<\r\n    UtenlandsoppholdFieldNames,\r\n    UtenlandsoppholdFormData,\r\n    string\r\n>();\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { UtenlandsoppholdFormData, UtenlandsoppholdFieldNames } from './utenlandsoppholdFormTypes';\r\n\r\nconst UtenlandsoppholdFormConfig: QuestionConfig<UtenlandsoppholdFormData, UtenlandsoppholdFieldNames> = {\r\n    [UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd]: {\r\n        isAnswered: ({ harBoddINorgeSiste12Mnd }) => harBoddINorgeSiste12Mnd !== YesOrNo.UNANSWERED,\r\n        isIncluded: () => true,\r\n        visibilityFilter: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd !== YesOrNo.UNANSWERED,\r\n    },\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: {\r\n        isAnswered: ({ utenlandsoppholdSiste12Mnd }) => utenlandsoppholdSiste12Mnd.length > 0,\r\n        isOptional: () => true,\r\n        isIncluded: ({ harBoddINorgeSiste12Mnd }) => harBoddINorgeSiste12Mnd === YesOrNo.NO,\r\n    },\r\n    [UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd]: {\r\n        isAnswered: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd !== YesOrNo.UNANSWERED,\r\n        isIncluded: () => true,\r\n    },\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: {\r\n        isAnswered: ({ utenlandsoppholdNeste12Mnd }) => utenlandsoppholdNeste12Mnd.length > 0,\r\n        isOptional: () => true,\r\n        isIncluded: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd === YesOrNo.NO,\r\n    },\r\n};\r\n\r\nexport const utenlandsoppholdFormQuestions = Questions<UtenlandsoppholdFormData, UtenlandsoppholdFieldNames>(\r\n    UtenlandsoppholdFormConfig\r\n);\r\n","import React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { getTypedFormComponents, ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport { Systemtittel } from 'nav-frontend-typografi';\r\nimport { BostedUtland, isValidBostedUtland } from './types';\r\nimport { Block, intlUtils, validateRequiredField } from '@navikt/fp-common';\r\nimport { dateRangeValidation } from 'app/utils/dateUtils';\r\n\r\nexport interface BostedUtlandFormLabels {\r\n    tittel: string;\r\n}\r\n\r\ninterface Props {\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    bosted?: BostedUtland;\r\n    onSubmit: (values: BostedUtland) => void;\r\n    onCancel: () => void;\r\n    erFremtidigOpphold: boolean;\r\n}\r\n\r\nenum BostedUtlandFormFields {\r\n    fom = 'fom',\r\n    tom = 'tom',\r\n    landkode = 'landkode',\r\n}\r\n\r\ntype FormValues = Partial<{\r\n    [BostedUtlandFormFields.fom]: string;\r\n    [BostedUtlandFormFields.tom]: string;\r\n    [BostedUtlandFormFields.landkode]: string;\r\n}>;\r\n\r\nconst Form = getTypedFormComponents<BostedUtlandFormFields, FormValues, string>();\r\n\r\nconst mapBostedToFormValues = (bosted: BostedUtland): FormValues => {\r\n    return {\r\n        fom: bosted.fom,\r\n        tom: bosted.tom,\r\n        landkode: bosted.landkode,\r\n    };\r\n};\r\n\r\nconst BostedUtlandForm: React.FunctionComponent<Props> = ({\r\n    maxDate,\r\n    minDate,\r\n    bosted,\r\n    onSubmit,\r\n    onCancel,\r\n    erFremtidigOpphold,\r\n}) => {\r\n    const intl = useIntl();\r\n    const onFormikSubmit = (formValues: FormValues) => {\r\n        const updatedBosted: Partial<BostedUtland> = {\r\n            ...bosted,\r\n            fom: formValues.fom,\r\n            tom: formValues.tom,\r\n            landkode: formValues.landkode,\r\n        };\r\n        if (isValidBostedUtland(updatedBosted)) {\r\n            onSubmit(updatedBosted);\r\n        } else {\r\n            throw new Error('BostedUtlandForm: Formvalues is not a valid BostedUtland on submit.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form.FormikWrapper\r\n            initialValues={bosted ? mapBostedToFormValues(bosted) : {}}\r\n            onSubmit={onFormikSubmit}\r\n            renderForm={({ values }) => {\r\n                return (\r\n                    <Form.Form onCancel={onCancel}>\r\n                        <Systemtittel tag=\"h1\">\r\n                            <FormattedMessage id={'utenlandsopphold.leggTilUtenlandsopphold.tittel'} />\r\n                        </Systemtittel>\r\n                        <Block>\r\n                            <Form.DateIntervalPicker\r\n                                legend={intlUtils(intl, 'utenlandsopphold.leggTilUtenlandsopphold.tidsrom')}\r\n                                fromDatepickerProps={{\r\n                                    name: BostedUtlandFormFields.fom,\r\n                                    label: intlUtils(intl, 'utenlandsopphold.leggTilUtenlandsopphold.fraogmed'),\r\n                                    fullscreenOverlay: true,\r\n                                    placeholder: 'dd.mm.åååå',\r\n                                    minDate,\r\n                                    maxDate: ISOStringToDate(values.tom) || maxDate,\r\n                                    validate: (value) =>\r\n                                        dateRangeValidation.validateFromDateInRange(\r\n                                            intl,\r\n                                            ISOStringToDate(value),\r\n                                            minDate,\r\n                                            maxDate,\r\n                                            'valideringsfeil.fraOgMedDato.førTilDato',\r\n                                            ISOStringToDate(values.tom)\r\n                                        ),\r\n                                }}\r\n                                toDatepickerProps={{\r\n                                    name: BostedUtlandFormFields.tom,\r\n                                    label: intlUtils(intl, 'utenlandsopphold.leggTilUtenlandsopphold.tilogmed'),\r\n                                    fullscreenOverlay: true,\r\n                                    placeholder: 'dd.mm.åååå',\r\n                                    minDate: ISOStringToDate(values.fom) || minDate,\r\n                                    maxDate,\r\n                                    validate: (value) =>\r\n                                        dateRangeValidation.validateToDateInRange(\r\n                                            intl,\r\n                                            ISOStringToDate(value),\r\n                                            minDate,\r\n                                            maxDate,\r\n                                            'valideringsfeil.tilOgMedDato.etterFraDato',\r\n                                            ISOStringToDate(values.fom)\r\n                                        ),\r\n                                }}\r\n                            />\r\n                        </Block>\r\n                        <Block margin=\"xl\">\r\n                            <Form.CountrySelect\r\n                                name={BostedUtlandFormFields.landkode}\r\n                                label={\r\n                                    erFremtidigOpphold\r\n                                        ? intlUtils(\r\n                                              intl,\r\n                                              'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandSkalDuBoI'\r\n                                          )\r\n                                        : intlUtils(\r\n                                              intl,\r\n                                              'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandHarDuBoddI'\r\n                                          )\r\n                                }\r\n                                validate={(country) =>\r\n                                    validateRequiredField(\r\n                                        country,\r\n                                        intlUtils(\r\n                                            intl,\r\n                                            erFremtidigOpphold\r\n                                                ? 'valideringsfeil.utenlandsopphold.landDuSkalBoIPåkrevd'\r\n                                                : 'valideringsfeil.utenlandsopphold.landDuHarBoddIPåkrevd'\r\n                                        )\r\n                                    )\r\n                                }\r\n                                useAlpha3Code={false}\r\n                            />\r\n                        </Block>\r\n                    </Form.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BostedUtlandForm;\r\n","export interface BostedUtland {\r\n    id?: string;\r\n    fom: string;\r\n    tom: string;\r\n    landkode: string;\r\n}\r\n\r\nexport const isValidBostedUtland = (bosted: Partial<BostedUtland>): bosted is BostedUtland => {\r\n    const { fom, landkode, tom } = bosted;\r\n    return fom !== undefined && landkode !== undefined && tom !== undefined;\r\n};\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { getCountryName } from '@navikt/sif-common-formik';\r\nimport { BostedUtland } from './types';\r\nimport { ActionLink, bemUtils, formatDateExtended, ItemList } from '@navikt/fp-common';\r\n\r\nimport dayjs from 'dayjs';\r\n\r\nimport './bostedUtlandList.less';\r\n\r\ninterface Props {\r\n    bosteder: BostedUtland[];\r\n    onEdit?: (opphold: BostedUtland) => void;\r\n    onDelete?: (opphold: BostedUtland) => void;\r\n}\r\n\r\nconst bem = bemUtils('bostedUtlandList');\r\n\r\nconst BostedUtlandList: React.FunctionComponent<Props> = ({ bosteder, onDelete, onEdit }) => {\r\n    const intl = useIntl();\r\n    const renderBostedUtlandLabel = (opphold: BostedUtland): React.ReactNode => {\r\n        const navn = getCountryName(opphold.landkode, intl.locale);\r\n        return (\r\n            <div className={bem.element('label')}>\r\n                <span className={bem.element('land')}>\r\n                    {onEdit && <ActionLink onClick={() => onEdit(opphold)}>{navn}</ActionLink>}\r\n                    {!onEdit && <span>{navn}</span>}\r\n                </span>\r\n                <span className={bem.element('dato')}>\r\n                    {formatDateExtended(dayjs(opphold.fom).toDate())} -{' '}\r\n                    {formatDateExtended(dayjs(opphold.tom).toDate())}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ItemList<BostedUtland>\r\n            getItemId={(opphold: BostedUtland) => opphold.id}\r\n            getItemTitle={(opphold: BostedUtland) => getCountryName(opphold.landkode, intl.locale)}\r\n            onDelete={onDelete}\r\n            onEdit={onEdit}\r\n            labelRenderer={renderBostedUtlandLabel}\r\n            items={bosteder}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BostedUtlandList;\r\n","import React from 'react';\r\nimport { FormikModalFormAndList, ModalFormAndListLabels } from '@navikt/sif-common-formik';\r\nimport BostedUtlandForm from './BostedUtlandForm';\r\nimport BostedUtlandListe from './BostedUtlandList';\r\nimport { BostedUtland } from './types';\r\nimport { sortItemsByFom } from '@navikt/fp-common';\r\n\r\ninterface Props<FieldNames> {\r\n    name: FieldNames;\r\n    validate?: any;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    labels: ModalFormAndListLabels;\r\n    erFremtidigOpphold: boolean;\r\n}\r\n\r\nfunction BostedUtlandListAndDialog<FieldNames>({\r\n    name,\r\n    minDate,\r\n    maxDate,\r\n    validate,\r\n    labels,\r\n    erFremtidigOpphold,\r\n}: Props<FieldNames>) {\r\n    return (\r\n        <FormikModalFormAndList<FieldNames, BostedUtland, string>\r\n            name={name}\r\n            labels={labels}\r\n            validate={validate}\r\n            dialogWidth=\"narrow\"\r\n            sortFunc={sortItemsByFom}\r\n            formRenderer={({ onSubmit, onCancel, item }) => (\r\n                <BostedUtlandForm\r\n                    bosted={item}\r\n                    minDate={minDate}\r\n                    maxDate={maxDate}\r\n                    onSubmit={onSubmit}\r\n                    onCancel={onCancel}\r\n                    erFremtidigOpphold={erFremtidigOpphold}\r\n                />\r\n            )}\r\n            listRenderer={({ items, onEdit, onDelete }) => (\r\n                <BostedUtlandListe bosteder={items} onEdit={onEdit} onDelete={onDelete} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default BostedUtlandListAndDialog;\r\n","import { initialUtenlandsoppholdFormData, UtenlandsoppholdFormData } from './utenlandsoppholdFormTypes';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport InformasjonOmUtenlandsopphold, { Utenlandsopphold } from 'app/context/types/InformasjonOmUtenlandsopphold';\r\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\r\nimport { BostedUtland } from './bostedUtlandListAndDialog/types';\r\n\r\nconst mapUtenlandsoppholdTilBostedUtland = (opphold: Utenlandsopphold): BostedUtland => ({\r\n    fom: opphold.tidsperiode.fom,\r\n    tom: opphold.tidsperiode.tom!,\r\n    landkode: opphold.land,\r\n});\r\n\r\nexport const getInitialUtenlandsoppholdValuesFromState = (\r\n    init: InformasjonOmUtenlandsopphold\r\n): UtenlandsoppholdFormData => {\r\n    return {\r\n        ...initialUtenlandsoppholdFormData,\r\n        harBoddINorgeSiste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeSiste12Mnd),\r\n        skalBoINorgeNeste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeNeste12Mnd),\r\n        utenlandsoppholdNeste12Mnd: init.senereOpphold.map(mapUtenlandsoppholdTilBostedUtland),\r\n        utenlandsoppholdSiste12Mnd: init.tidligereOpphold.map(mapUtenlandsoppholdTilBostedUtland),\r\n    };\r\n};\r\n\r\nconst mapBostedUtlandToUtenlandsopphold = (bostedUtland: BostedUtland[]): Utenlandsopphold[] => {\r\n    return bostedUtland.map((bosted) => ({\r\n        land: bosted.landkode,\r\n        tidsperiode: {\r\n            fom: bosted.fom,\r\n            tom: bosted.tom,\r\n        },\r\n    }));\r\n};\r\n\r\nexport const mapUtenlandsoppholdFormDataToState = (\r\n    formValues: Partial<UtenlandsoppholdFormData>\r\n): InformasjonOmUtenlandsopphold => {\r\n    const { harBoddINorgeSiste12Mnd, skalBoINorgeNeste12Mnd, utenlandsoppholdNeste12Mnd, utenlandsoppholdSiste12Mnd } =\r\n        formValues;\r\n\r\n    return {\r\n        iNorgeSiste12Mnd: convertYesOrNoOrUndefinedToBoolean(harBoddINorgeSiste12Mnd)!,\r\n        iNorgeNeste12Mnd: convertYesOrNoOrUndefinedToBoolean(skalBoINorgeNeste12Mnd)!,\r\n        senereOpphold:\r\n            skalBoINorgeNeste12Mnd === YesOrNo.NO ? mapBostedUtlandToUtenlandsopphold(utenlandsoppholdNeste12Mnd!) : [],\r\n        tidligereOpphold:\r\n            harBoddINorgeSiste12Mnd === YesOrNo.NO\r\n                ? mapBostedUtlandToUtenlandsopphold(utenlandsoppholdSiste12Mnd!)\r\n                : [],\r\n    };\r\n};\r\n","import {\r\n    date1YearAgo,\r\n    date1YearFromNow,\r\n    dateRangesCollide,\r\n    dateRangesExceedsRange,\r\n    intlUtils,\r\n} from '@navikt/fp-common';\r\nimport dayjs from 'dayjs';\r\nimport { BostedUtland } from './bostedUtlandListAndDialog/types';\r\nimport { IntlShape } from 'react-intl';\r\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\r\n\r\nexport const validateUtenlandsoppholdNeste12Mnd =\r\n    (intl: IntlShape) =>\r\n    (utenlandsopphold: BostedUtland[]): SkjemaelementFeil => {\r\n        if (utenlandsopphold.length === 0) {\r\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.neste12Måneder.ikkeRegistrert');\r\n        }\r\n\r\n        const dateRanges = utenlandsopphold.map((u) => ({ from: dayjs(u.fom).toDate(), to: dayjs(u.tom).toDate() }));\r\n\r\n        if (dateRangesCollide(dateRanges)) {\r\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapp');\r\n        }\r\n\r\n        if (dateRangesExceedsRange(dateRanges, { from: new Date(), to: date1YearFromNow })) {\r\n            return intlUtils(intl, 'valideringsfeil.utenlandsoppholdUtenforPeriode');\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\nexport const validateUtenlandsoppholdSiste12Mnd =\r\n    (intl: IntlShape) =>\r\n    (utenlandsopphold: BostedUtland[]): SkjemaelementFeil => {\r\n        if (utenlandsopphold.length === 0) {\r\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.siste12Måneder.ikkeRegistrert');\r\n        }\r\n\r\n        const dateRanges = utenlandsopphold.map((u) => ({ from: dayjs(u.fom).toDate(), to: dayjs(u.tom).toDate() }));\r\n\r\n        if (dateRangesCollide(dateRanges)) {\r\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapp');\r\n        }\r\n\r\n        if (dateRangesExceedsRange(dateRanges, { from: date1YearAgo, to: new Date() })) {\r\n            return intlUtils(intl, 'valideringsfeil.utenlandsoppholdUtenforPeriode');\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n","import React from 'react';\r\nimport {\r\n    Block,\r\n    date1YearAgo,\r\n    date1YearFromNow,\r\n    dateToday,\r\n    intlUtils,\r\n    Step,\r\n    UtvidetInformasjon,\r\n    validateYesOrNoIsAnswered,\r\n} from '@navikt/fp-common';\r\nimport {\r\n    UtenlandsoppholdFieldNames,\r\n    UtenlandsoppholdFormComponents,\r\n    UtenlandsoppholdFormData,\r\n} from './utenlandsoppholdFormTypes';\r\nimport { useIntl } from 'react-intl';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport { utenlandsoppholdFormQuestions } from './utenlandsoppholdFormQuestions';\r\nimport BostedUtlandListAndDialog from './bostedUtlandListAndDialog/BostedUtlandListAndDialog';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport {\r\n    getInitialUtenlandsoppholdValuesFromState,\r\n    mapUtenlandsoppholdFormDataToState,\r\n} from './utenlandsoppholdFormUtils';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { validateUtenlandsoppholdNeste12Mnd, validateUtenlandsoppholdSiste12Mnd } from './utenlandsoppholdValidering';\r\n\r\nconst Utenlandsopphold: React.FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const { informasjonOmUtenlandsopphold } = useSøknad();\r\n\r\n    const onValidSubmitHandler = (values: Partial<UtenlandsoppholdFormData>) => {\r\n        const utenlandsopphold = mapUtenlandsoppholdFormDataToState(values);\r\n        return [actionCreator.setInformasjonOmUtenlandsopphold(utenlandsopphold)];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.INNTEKTSINFORMASJON);\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    return (\r\n        <UtenlandsoppholdFormComponents.FormikWrapper\r\n            initialValues={getInitialUtenlandsoppholdValuesFromState(informasjonOmUtenlandsopphold)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = utenlandsoppholdFormQuestions.getVisbility(formValues);\r\n\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                        activeStepId=\"utenlandsopphold\"\r\n                        pageTitle={intlUtils(intl, 'søknad.utenlandsopphold')}\r\n                        stepTitle={intlUtils(intl, 'søknad.utenlandsopphold')}\r\n                        backLinkHref={getPreviousStepHref('utenlandsopphold')}\r\n                        onCancel={onAvbrytSøknad}\r\n                        onContinueLater={() => null}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <UtenlandsoppholdFormComponents.Form includeButtons={false} includeValidationSummary={true}>\r\n                            <Block\r\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd)}\r\n                                padBottom=\"l\"\r\n                            >\r\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\r\n                                    legend={intlUtils(intl, 'utenlandsopphold.neste12Måneder.spørsmål')}\r\n                                    name={UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd}\r\n                                    description={\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                'utenlandsopphold.neste12MånederInfotekst.apneLabel'\r\n                                            )}\r\n                                        >\r\n                                            {intlUtils(intl, 'utenlandsopphold.neste12MånederInfotekst')}\r\n                                        </UtvidetInformasjon>\r\n                                    }\r\n                                    labels={{\r\n                                        yes: intlUtils(\r\n                                            intl,\r\n                                            'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddINorge'\r\n                                        ),\r\n                                        no: intlUtils(\r\n                                            intl,\r\n                                            'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddIUtlandet'\r\n                                        ),\r\n                                    }}\r\n                                    validate={(skalBoINorgeNeste12Mnd) =>\r\n                                        validateYesOrNoIsAnswered(\r\n                                            skalBoINorgeNeste12Mnd,\r\n                                            'valideringsfeil.utenlandsopphold.skalBoINorgePåkrevd'\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd)}\r\n                            >\r\n                                <BostedUtlandListAndDialog<UtenlandsoppholdFieldNames>\r\n                                    name={UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd}\r\n                                    minDate={dateToday}\r\n                                    maxDate={date1YearFromNow}\r\n                                    labels={{\r\n                                        addLabel: intlUtils(intl, 'utenlandsopphold.knapp.leggTilLand'),\r\n                                        modalTitle: 'Utenlandsopphold neste 12 måneder',\r\n                                    }}\r\n                                    erFremtidigOpphold={true}\r\n                                    validate={validateUtenlandsoppholdNeste12Mnd(intl)}\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd)}\r\n                            >\r\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\r\n                                    legend={intlUtils(intl, 'utenlandsopphold.siste12Måneder.spørsmål')}\r\n                                    name={UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd}\r\n                                    description={\r\n                                        <UtvidetInformasjon\r\n                                            apneLabel={intlUtils(\r\n                                                intl,\r\n                                                'utenlandsopphold.siste12MånederInfotekst.apneLabel'\r\n                                            )}\r\n                                        >\r\n                                            {intlUtils(intl, 'utenlandsopphold.siste12MånederInfotekst')}\r\n                                        </UtvidetInformasjon>\r\n                                    }\r\n                                    labels={{\r\n                                        yes: intlUtils(\r\n                                            intl,\r\n                                            'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddINorge'\r\n                                        ),\r\n                                        no: intlUtils(\r\n                                            intl,\r\n                                            'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddIUtlandet'\r\n                                        ),\r\n                                    }}\r\n                                    validate={(harBoddINorgeSiste12Mnd) =>\r\n                                        validateYesOrNoIsAnswered(\r\n                                            harBoddINorgeSiste12Mnd,\r\n                                            'valideringsfeil.utenlandsopphold.harBoddINorgePåkrevd'\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd)}\r\n                            >\r\n                                <BostedUtlandListAndDialog<UtenlandsoppholdFieldNames>\r\n                                    minDate={date1YearAgo}\r\n                                    maxDate={dateToday}\r\n                                    name={UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd}\r\n                                    labels={{\r\n                                        addLabel: intlUtils(intl, 'utenlandsopphold.knapp.leggTilLand'),\r\n                                        modalTitle: 'Utenlandsopphold siste 12 måneder',\r\n                                    }}\r\n                                    erFremtidigOpphold={false}\r\n                                    validate={validateUtenlandsoppholdSiste12Mnd(intl)}\r\n                                />\r\n                            </Block>\r\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                                <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                            </Block>\r\n                        </UtenlandsoppholdFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Utenlandsopphold;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\\r\\nimport withIntlProvider from '../../../decorators/withIntl';\\r\\nimport withRouter from '../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\\r\\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/Utenlandsopphold',\\r\\n    component: Utenlandsopphold,\\r\\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\ninterface Props {\\r\\n    context: ForeldrepengesøknadContextState;\\r\\n    søkerinfo: SøkerinfoDTO;\\r\\n}\\r\\n\\r\\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Utenlandsopphold />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":31,\"line\":24},\"endLoc\":{\"col\":1,\"line\":30},\"startBody\":{\"col\":31,\"line\":24},\"endBody\":{\"col\":1,\"line\":30}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\r\nimport withIntlProvider from '../../../decorators/withIntl';\r\nimport withRouter from '../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\r\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\r\n\r\nexport default {\r\n    title: 'steps/Utenlandsopphold',\r\n    component: Utenlandsopphold,\r\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\r\n};\r\n\r\ninterface Props {\r\n    context: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\r\n    return (\r\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\r\n            <Utenlandsopphold />\r\n        </ForeldrepengerStateMock>\r\n    );\r\n};\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n    context,\r\n    søkerinfo,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"({ context, søkerinfo }) => {\\r\\n    return (\\r\\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\\r\\n            <Utenlandsopphold />\\r\\n        </ForeldrepengerStateMock>\\r\\n    );\\r\\n}\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport stønadskontoDeltUttak80 from './../testdata/stønadskontoDeltUttak80.json';\\r\\nimport stønadskontoDeltUttak100 from './../testdata/stønadskontoDeltUttak100.json';\\r\\nimport UttaksplanInfo from '../../../../../app/steps/uttaksplan-info/UttaksplanInfo';\\r\\nimport withIntl from '../../../../decorators/withIntl';\\r\\nimport withRouter from '../../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\\r\\nimport AxiosMock from '../../../../utils/AxiosMock';\\r\\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\\r\\nimport { ForeldrepengesøknadContextState } from '../../../../../app/context/ForeldrepengesøknadContextConfig';\\r\\nimport { SøkerinfoDTO } from '../../../../../app/types/SøkerinfoDTO';\\r\\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\\r\\n\\r\\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\\r\\nconst STØNADSKONTO_URL = '/uttak-url/konto';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/uttaksplan-info/FarMedmorFødselBeggeHarRett',\\r\\n    component: UttaksplanInfo,\\r\\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const UttaksplanInfoFarMedmorFødselBeggeHarRett = Template.bind({});\\r\\nUttaksplanInfoFarMedmorFødselBeggeHarRett.args = {\\r\\n    stønadskonto100: stønadskontoDeltUttak100,\\r\\n    stønadskonto80: stønadskontoDeltUttak80,\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"UttaksplanInfoFarMedmorFødselBeggeHarRett\":{\"startLoc\":{\"col\":48,\"line\":28},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":48,\"line\":28},\"endBody\":{\"col\":1,\"line\":44}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport stønadskontoDeltUttak80 from './../testdata/stønadskontoDeltUttak80.json';\r\nimport stønadskontoDeltUttak100 from './../testdata/stønadskontoDeltUttak100.json';\r\nimport UttaksplanInfo from '../../../../../app/steps/uttaksplan-info/UttaksplanInfo';\r\nimport withIntl from '../../../../decorators/withIntl';\r\nimport withRouter from '../../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\r\nimport AxiosMock from '../../../../utils/AxiosMock';\r\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\r\nimport { ForeldrepengesøknadContextState } from '../../../../../app/context/ForeldrepengesøknadContextConfig';\r\nimport { SøkerinfoDTO } from '../../../../../app/types/SøkerinfoDTO';\r\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\r\n\r\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\r\nconst STØNADSKONTO_URL = '/uttak-url/konto';\r\n\r\nexport default {\r\n    title: 'steps/uttaksplan-info/FarMedmorFødselBeggeHarRett',\r\n    component: UttaksplanInfo,\r\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\r\n};\r\n\r\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock\r\n                søknad={args.context as ForeldrepengesøknadContextState}\r\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\r\n            >\r\n                <UttaksplanInfo />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const UttaksplanInfoFarMedmorFødselBeggeHarRett = Template.bind({});\r\nUttaksplanInfoFarMedmorFødselBeggeHarRett.args = {\r\n    stønadskonto100: stønadskontoDeltUttak100,\r\n    stønadskonto80: stønadskontoDeltUttak80,\r\n    context,\r\n    søkerinfo,\r\n};\r\n\n\n\nUttaksplanInfoFarMedmorFødselBeggeHarRett.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanInfoFarMedmorFødselBeggeHarRett.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport søkerinfoFarSøker from './testdata/søkerinfoFarSøker.json';\\r\\nimport contextFarSøker from './testdata/contextFarSøker.json';\\r\\nimport stønadskonto100MorHarIkkeRett from './../testdata/stønadskonto100MorHarIkkeRett.json';\\r\\nimport stønadskonto80MorHarIkkeRett from './../testdata/stønadskonto80MorHarIkkeRett.json';\\r\\nimport withIntl from '../../../../decorators/withIntl';\\r\\nimport withRouter from '../../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\\r\\nimport AxiosMock from '../../../../utils/AxiosMock';\\r\\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\\r\\nimport FarMedmorFødselOgMorHarIkkeRett from 'app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/FarMedmorFødselOgMorHarIkkeRett';\\r\\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\\r\\n\\r\\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\\r\\nconst STØNADSKONTO_URL = '/uttak-url/konto';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/uttaksplan-info/FarMedmorFødselOgMorHarIkkeRett',\\r\\n    component: FarMedmorFødselOgMorHarIkkeRett,\\r\\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const UttaksplanDerMorIkkeHarRettPåForeldrepenger = Template.bind({});\\r\\nUttaksplanDerMorIkkeHarRettPåForeldrepenger.args = {\\r\\n    stønadskonto100: stønadskonto100MorHarIkkeRett,\\r\\n    stønadskonto80: stønadskonto80MorHarIkkeRett,\\r\\n    context: contextFarSøker,\\r\\n    søkerinfo: søkerinfoFarSøker,\\r\\n};\\r\\n\\r\\nexport const UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør = Template.bind({});\\r\\nUttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør.args = {\\r\\n    stønadskonto100: stønadskonto100MorHarIkkeRett,\\r\\n    stønadskonto80: stønadskonto80MorHarIkkeRett,\\r\\n    context: {\\r\\n        ...contextFarSøker,\\r\\n        søknad: {\\r\\n            ...contextFarSøker.søknad,\\r\\n            annenForelder: {\\r\\n                ...contextFarSøker.søknad.annenForelder,\\r\\n                erUfør: true,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo: søkerinfoFarSøker,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"UttaksplanDerMorIkkeHarRettPåForeldrepenger\":{\"startLoc\":{\"col\":48,\"line\":29},\"endLoc\":{\"col\":1,\"line\":45},\"startBody\":{\"col\":48,\"line\":29},\"endBody\":{\"col\":1,\"line\":45}},\"UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør\":{\"startLoc\":{\"col\":48,\"line\":29},\"endLoc\":{\"col\":1,\"line\":45},\"startBody\":{\"col\":48,\"line\":29},\"endBody\":{\"col\":1,\"line\":45}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport søkerinfoFarSøker from './testdata/søkerinfoFarSøker.json';\r\nimport contextFarSøker from './testdata/contextFarSøker.json';\r\nimport stønadskonto100MorHarIkkeRett from './../testdata/stønadskonto100MorHarIkkeRett.json';\r\nimport stønadskonto80MorHarIkkeRett from './../testdata/stønadskonto80MorHarIkkeRett.json';\r\nimport withIntl from '../../../../decorators/withIntl';\r\nimport withRouter from '../../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\r\nimport AxiosMock from '../../../../utils/AxiosMock';\r\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\r\nimport FarMedmorFødselOgMorHarIkkeRett from 'app/steps/uttaksplan-info/components/scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/FarMedmorFødselOgMorHarIkkeRett';\r\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\r\n\r\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\r\nconst STØNADSKONTO_URL = '/uttak-url/konto';\r\n\r\nexport default {\r\n    title: 'steps/uttaksplan-info/FarMedmorFødselOgMorHarIkkeRett',\r\n    component: FarMedmorFødselOgMorHarIkkeRett,\r\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\r\n};\r\n\r\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock\r\n                søknad={args.context as ForeldrepengesøknadContextState}\r\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\r\n            >\r\n                <UttaksplanInfo />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const UttaksplanDerMorIkkeHarRettPåForeldrepenger = Template.bind({});;\r\nUttaksplanDerMorIkkeHarRettPåForeldrepenger.args = {\r\n    stønadskonto100: stønadskonto100MorHarIkkeRett,\r\n    stønadskonto80: stønadskonto80MorHarIkkeRett,\r\n    context: contextFarSøker,\r\n    søkerinfo: søkerinfoFarSøker,\r\n};\r\n\r\nexport const UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør = Template.bind({});\r\nUttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør.args = {\r\n    stønadskonto100: stønadskonto100MorHarIkkeRett,\r\n    stønadskonto80: stønadskonto80MorHarIkkeRett,\r\n    context: {\r\n        ...contextFarSøker,\r\n        søknad: {\r\n            ...contextFarSøker.søknad,\r\n            annenForelder: {\r\n                ...contextFarSøker.søknad.annenForelder,\r\n                erUfør: true,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo: søkerinfoFarSøker,\r\n};\r\n\n\n\nUttaksplanDerMorIkkeHarRettPåForeldrepenger.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanDerMorIkkeHarRettPåForeldrepenger.parameters };\nUttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport søkerinfoMorSøker from './testdata/søkerinfoMorSøker.json';\\r\\nimport contextMorSøker from './testdata/contextMorSøker.json';\\r\\nimport søkerinfoFarSøker from './testdata/søkerinfoFarSøker.json';\\r\\nimport contextFarSøker from './testdata/contextFarSøker.json';\\r\\nimport stønadskonto100 from './../testdata/stønadskonto100.json';\\r\\nimport stønadskonto80 from './../testdata/stønadskonto80.json';\\r\\nimport stønadskontoDeltUttak80 from './../testdata/stønadskontoDeltUttak80.json';\\r\\nimport stønadskontoDeltUttak100 from './../testdata/stønadskontoDeltUttak100.json';\\r\\nimport withIntl from '../../../../decorators/withIntl';\\r\\nimport withRouter from '../../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\\r\\nimport AxiosMock from '../../../../utils/AxiosMock';\\r\\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\\r\\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\\r\\n\\r\\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\\r\\nconst STØNADSKONTO_URL = '/uttak-url/konto';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/uttaksplan-info/MorFarAdopsjon',\\r\\n    component: UttaksplanInfo,\\r\\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedAleneomsorg = Template.bind({});\\r\\nUttaksplanMedAleneomsorg.args = {\\r\\n    stønadskonto100,\\r\\n    stønadskonto80,\\r\\n    context: contextMorSøker,\\r\\n    søkerinfo: søkerinfoMorSøker,\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedDeltUttakDerMorSøker = Template.bind({});\\r\\nUttaksplanMedDeltUttakDerMorSøker.args = {\\r\\n    stønadskonto100: stønadskontoDeltUttak100,\\r\\n    stønadskonto80: stønadskontoDeltUttak80,\\r\\n    context: {\\r\\n        ...contextMorSøker,\\r\\n        søknad: {\\r\\n            ...contextMorSøker.søknad,\\r\\n            søker: {\\r\\n                ...contextMorSøker.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'Espen',\\r\\n                etternavn: 'Utvikler',\\r\\n                fnr: '1212121313',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo: søkerinfoMorSøker,\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedDeltUttakDerFarSøker = Template.bind({});\\r\\nUttaksplanMedDeltUttakDerFarSøker.args = {\\r\\n    stønadskonto100: stønadskontoDeltUttak100,\\r\\n    stønadskonto80: stønadskontoDeltUttak80,\\r\\n    context: {\\r\\n        ...contextFarSøker,\\r\\n        søknad: {\\r\\n            ...contextFarSøker.søknad,\\r\\n            søker: {\\r\\n                ...contextFarSøker.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'TALENTFULL',\\r\\n                etternavn: 'MYGG',\\r\\n                fnr: '19047815714',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo: søkerinfoFarSøker,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"UttaksplanMedAleneomsorg\":{\"startLoc\":{\"col\":48,\"line\":32},\"endLoc\":{\"col\":1,\"line\":48},\"startBody\":{\"col\":48,\"line\":32},\"endBody\":{\"col\":1,\"line\":48}},\"UttaksplanMedDeltUttakDerMorSøker\":{\"startLoc\":{\"col\":48,\"line\":32},\"endLoc\":{\"col\":1,\"line\":48},\"startBody\":{\"col\":48,\"line\":32},\"endBody\":{\"col\":1,\"line\":48}},\"UttaksplanMedDeltUttakDerFarSøker\":{\"startLoc\":{\"col\":48,\"line\":32},\"endLoc\":{\"col\":1,\"line\":48},\"startBody\":{\"col\":48,\"line\":32},\"endBody\":{\"col\":1,\"line\":48}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport søkerinfoMorSøker from './testdata/søkerinfoMorSøker.json';\r\nimport contextMorSøker from './testdata/contextMorSøker.json';\r\nimport søkerinfoFarSøker from './testdata/søkerinfoFarSøker.json';\r\nimport contextFarSøker from './testdata/contextFarSøker.json';\r\nimport stønadskonto100 from './../testdata/stønadskonto100.json';\r\nimport stønadskonto80 from './../testdata/stønadskonto80.json';\r\nimport stønadskontoDeltUttak80 from './../testdata/stønadskontoDeltUttak80.json';\r\nimport stønadskontoDeltUttak100 from './../testdata/stønadskontoDeltUttak100.json';\r\nimport withIntl from '../../../../decorators/withIntl';\r\nimport withRouter from '../../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\r\nimport AxiosMock from '../../../../utils/AxiosMock';\r\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\r\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\r\n\r\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\r\nconst STØNADSKONTO_URL = '/uttak-url/konto';\r\n\r\nexport default {\r\n    title: 'steps/uttaksplan-info/MorFarAdopsjon',\r\n    component: UttaksplanInfo,\r\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\r\n};\r\n\r\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\r\n    };\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock\r\n                søknad={args.context as ForeldrepengesøknadContextState}\r\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\r\n            >\r\n                <UttaksplanInfo />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const UttaksplanMedAleneomsorg = Template.bind({});;\r\nUttaksplanMedAleneomsorg.args = {\r\n    stønadskonto100,\r\n    stønadskonto80,\r\n    context: contextMorSøker,\r\n    søkerinfo: søkerinfoMorSøker,\r\n};\r\n\r\nexport const UttaksplanMedDeltUttakDerMorSøker = Template.bind({});;\r\nUttaksplanMedDeltUttakDerMorSøker.args = {\r\n    stønadskonto100: stønadskontoDeltUttak100,\r\n    stønadskonto80: stønadskontoDeltUttak80,\r\n    context: {\r\n        ...contextMorSøker,\r\n        søknad: {\r\n            ...contextMorSøker.søknad,\r\n            søker: {\r\n                ...contextMorSøker.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'Espen',\r\n                etternavn: 'Utvikler',\r\n                fnr: '1212121313',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo: søkerinfoMorSøker,\r\n};\r\n\r\nexport const UttaksplanMedDeltUttakDerFarSøker = Template.bind({});\r\nUttaksplanMedDeltUttakDerFarSøker.args = {\r\n    stønadskonto100: stønadskontoDeltUttak100,\r\n    stønadskonto80: stønadskontoDeltUttak80,\r\n    context: {\r\n        ...contextFarSøker,\r\n        søknad: {\r\n            ...contextFarSøker.søknad,\r\n            søker: {\r\n                ...contextFarSøker.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'TALENTFULL',\r\n                etternavn: 'MYGG',\r\n                fnr: '19047815714',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo: søkerinfoFarSøker,\r\n};\r\n\n\n\nUttaksplanMedAleneomsorg.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedAleneomsorg.parameters };\nUttaksplanMedDeltUttakDerMorSøker.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedDeltUttakDerMorSøker.parameters };\nUttaksplanMedDeltUttakDerFarSøker.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedDeltUttakDerFarSøker.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story } from '@storybook/react';\\r\\nimport MockAdapter from 'axios-mock-adapter/types';\\r\\n\\r\\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\\r\\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\\r\\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\\r\\nimport søkerinfo from './testdata/søkerinfo.json';\\r\\nimport context from './testdata/context.json';\\r\\nimport stønadskonto100 from './../testdata/stønadskonto100.json';\\r\\nimport stønadskonto80 from './../testdata/stønadskonto80.json';\\r\\nimport stønadskontoPrematurUker100 from './../testdata/stønadskontoPrematurUker100.json';\\r\\nimport stønadskontoPrematurUker80 from './../testdata/stønadskontoPrematurUker80.json';\\r\\nimport stønadskontoDeltUttak80 from './../testdata/stønadskontoDeltUttak80.json';\\r\\nimport stønadskontoDeltUttak100 from './../testdata/stønadskontoDeltUttak100.json';\\r\\nimport stønadskontoFlerbarnsuker80 from './../testdata/stønadskontoFlerbarnsuker80.json';\\r\\nimport stønadskontoFlerbarnsuker100 from './../testdata/stønadskontoFlerbarnsuker100.json';\\r\\nimport withIntl from '../../../../decorators/withIntl';\\r\\nimport withRouter from '../../../../decorators/withRouter';\\r\\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\\r\\nimport AxiosMock from '../../../../utils/AxiosMock';\\r\\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\\r\\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\\r\\n\\r\\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\\r\\nconst STØNADSKONTO_URL = '/uttak-url/konto';\\r\\n\\r\\nexport default {\\r\\n    title: 'steps/uttaksplan-info/MorFødsel',\\r\\n    component: UttaksplanInfo,\\r\\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\\r\\n};\\r\\n\\r\\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedAleneomsorg = Template.bind({});\\r\\nUttaksplanMedAleneomsorg.args = {\\r\\n    stønadskonto100,\\r\\n    stønadskonto80,\\r\\n    context,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedPrematurFødsel = Template.bind({});\\r\\nUttaksplanMedPrematurFødsel.args = {\\r\\n    stønadskonto100: stønadskontoPrematurUker100,\\r\\n    stønadskonto80: stønadskontoPrematurUker80,\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            barn: {\\r\\n                ...context.søknad.barn,\\r\\n                fødselsdatoer: ['2021-01-11'],\\r\\n                termindato: '2021-03-11',\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedDeltUttak = Template.bind({});\\r\\nUttaksplanMedDeltUttak.args = {\\r\\n    stønadskonto100: stønadskontoDeltUttak100,\\r\\n    stønadskonto80: stønadskontoDeltUttak80,\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'Espen',\\r\\n                etternavn: 'Utvikler',\\r\\n                fnr: '1212121313',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\\r\\nexport const UttaksplanMedFlerbarnsukerTvillinger = Template.bind({});\\r\\nUttaksplanMedFlerbarnsukerTvillinger.args = {\\r\\n    stønadskonto100: stønadskontoFlerbarnsuker100,\\r\\n    stønadskonto80: stønadskontoFlerbarnsuker80,\\r\\n    context: {\\r\\n        ...context,\\r\\n        søknad: {\\r\\n            ...context.søknad,\\r\\n            søker: {\\r\\n                ...context.søknad.søker,\\r\\n                erAleneOmOmsorg: false,\\r\\n            },\\r\\n            barn: {\\r\\n                ...context.søknad.barn,\\r\\n                antallBarn: '2',\\r\\n            },\\r\\n            annenForelder: {\\r\\n                fornavn: 'Espen',\\r\\n                etternavn: 'Utvikler',\\r\\n                fnr: '1212121313',\\r\\n                harRettPåForeldrepenger: true,\\r\\n                kanIkkeOppgis: false,\\r\\n            },\\r\\n        },\\r\\n    } as ForeldrepengesøknadContextState,\\r\\n    søkerinfo,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"UttaksplanMedAleneomsorg\":{\"startLoc\":{\"col\":48,\"line\":34},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":48,\"line\":34},\"endBody\":{\"col\":1,\"line\":51}},\"UttaksplanMedPrematurFødsel\":{\"startLoc\":{\"col\":48,\"line\":34},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":48,\"line\":34},\"endBody\":{\"col\":1,\"line\":51}},\"UttaksplanMedDeltUttak\":{\"startLoc\":{\"col\":48,\"line\":34},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":48,\"line\":34},\"endBody\":{\"col\":1,\"line\":51}},\"UttaksplanMedFlerbarnsukerTvillinger\":{\"startLoc\":{\"col\":48,\"line\":34},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":48,\"line\":34},\"endBody\":{\"col\":1,\"line\":51}}};\n    \nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter/types';\r\n\r\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\r\nimport søkerinfo from './testdata/søkerinfo.json';\r\nimport context from './testdata/context.json';\r\nimport stønadskonto100 from './../testdata/stønadskonto100.json';\r\nimport stønadskonto80 from './../testdata/stønadskonto80.json';\r\nimport stønadskontoPrematurUker100 from './../testdata/stønadskontoPrematurUker100.json';\r\nimport stønadskontoPrematurUker80 from './../testdata/stønadskontoPrematurUker80.json';\r\nimport stønadskontoDeltUttak80 from './../testdata/stønadskontoDeltUttak80.json';\r\nimport stønadskontoDeltUttak100 from './../testdata/stønadskontoDeltUttak100.json';\r\nimport stønadskontoFlerbarnsuker80 from './../testdata/stønadskontoFlerbarnsuker80.json';\r\nimport stønadskontoFlerbarnsuker100 from './../testdata/stønadskontoFlerbarnsuker100.json';\r\nimport withIntl from '../../../../decorators/withIntl';\r\nimport withRouter from '../../../../decorators/withRouter';\r\nimport withForeldrepengersøknadContext from '../../../../decorators/withForeldrepengersøknadContext';\r\nimport AxiosMock from '../../../../utils/AxiosMock';\r\nimport ForeldrepengerStateMock from '../../../../utils/ForeldrepengerStateMock';\r\nimport UttaksplanInfoTestData from '../uttaksplanInfoTestData';\r\n\r\nconst UTTAKSPLAN_ANNEN_URL = '/innsyn/uttaksplanannen';\r\nconst STØNADSKONTO_URL = '/uttak-url/konto';\r\n\r\nexport default {\r\n    title: 'steps/uttaksplan-info/MorFødsel',\r\n    component: UttaksplanInfo,\r\n    decorators: [withRouter, withIntl, withForeldrepengersøknadContext],\r\n};\r\n\r\nconst Template: Story<UttaksplanInfoTestData> = (args) => {\r\n    const restMock = (apiMock: MockAdapter) => {\r\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\r\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\r\n    };\r\n\r\n    return (\r\n        <AxiosMock mock={restMock}>\r\n            <ForeldrepengerStateMock\r\n                søknad={args.context as ForeldrepengesøknadContextState}\r\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\r\n            >\r\n                <UttaksplanInfo />\r\n            </ForeldrepengerStateMock>\r\n        </AxiosMock>\r\n    );\r\n};\r\n\r\nexport const UttaksplanMedAleneomsorg = Template.bind({});;\r\nUttaksplanMedAleneomsorg.args = {\r\n    stønadskonto100,\r\n    stønadskonto80,\r\n    context,\r\n    søkerinfo,\r\n};\r\n\r\nexport const UttaksplanMedPrematurFødsel = Template.bind({});;\r\nUttaksplanMedPrematurFødsel.args = {\r\n    stønadskonto100: stønadskontoPrematurUker100,\r\n    stønadskonto80: stønadskontoPrematurUker80,\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            barn: {\r\n                ...context.søknad.barn,\r\n                fødselsdatoer: ['2021-01-11'],\r\n                termindato: '2021-03-11',\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const UttaksplanMedDeltUttak = Template.bind({});;\r\nUttaksplanMedDeltUttak.args = {\r\n    stønadskonto100: stønadskontoDeltUttak100,\r\n    stønadskonto80: stønadskontoDeltUttak80,\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'Espen',\r\n                etternavn: 'Utvikler',\r\n                fnr: '1212121313',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\r\nexport const UttaksplanMedFlerbarnsukerTvillinger = Template.bind({});\r\nUttaksplanMedFlerbarnsukerTvillinger.args = {\r\n    stønadskonto100: stønadskontoFlerbarnsuker100,\r\n    stønadskonto80: stønadskontoFlerbarnsuker80,\r\n    context: {\r\n        ...context,\r\n        søknad: {\r\n            ...context.søknad,\r\n            søker: {\r\n                ...context.søknad.søker,\r\n                erAleneOmOmsorg: false,\r\n            },\r\n            barn: {\r\n                ...context.søknad.barn,\r\n                antallBarn: '2',\r\n            },\r\n            annenForelder: {\r\n                fornavn: 'Espen',\r\n                etternavn: 'Utvikler',\r\n                fnr: '1212121313',\r\n                harRettPåForeldrepenger: true,\r\n                kanIkkeOppgis: false,\r\n            },\r\n        },\r\n    } as ForeldrepengesøknadContextState,\r\n    søkerinfo,\r\n};\r\n\n\n\nUttaksplanMedAleneomsorg.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedAleneomsorg.parameters };\nUttaksplanMedPrematurFødsel.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedPrematurFødsel.parameters };\nUttaksplanMedDeltUttak.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedDeltUttak.parameters };\nUttaksplanMedFlerbarnsukerTvillinger.parameters = { storySource: { source: \"(args) => {\\r\\n    const restMock = (apiMock: MockAdapter) => {\\r\\n        apiMock.onGet(UTTAKSPLAN_ANNEN_URL).replyOnce(200, {});\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);\\r\\n        apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <AxiosMock mock={restMock}>\\r\\n            <ForeldrepengerStateMock\\r\\n                søknad={args.context as ForeldrepengesøknadContextState}\\r\\n                søkerinfo={args.søkerinfo as SøkerinfoDTO}\\r\\n            >\\r\\n                <UttaksplanInfo />\\r\\n            </ForeldrepengerStateMock>\\r\\n        </AxiosMock>\\r\\n    );\\r\\n}\" }, ...UttaksplanMedFlerbarnsukerTvillinger.parameters };","enum FeatureToggle {\r\n    visPerioderSomSendesInn = 'FEATURE_VIS_PERIODER_SOM_SENDES_INN',\r\n    visFeilside = 'FEATURE_VIS_FEILSIDE',\r\n    visAlertstripe = 'FEATURE_VIS_ALERTSTRIPE',\r\n    /** Nye features må også registreres i ./Environment */\r\n}\r\n\r\nexport default FeatureToggle;\r\n","import FeatureToggle from './FeatureToggle';\r\n\r\nconst Environment = () => {\r\n    const appSettings = (window as any).appSettings;\r\n    return {\r\n        REST_API_URL: appSettings.REST_API_URL,\r\n        UTTAK_API_URL: appSettings.UTTAK_API_URL,\r\n        LOGIN_URL: appSettings.LOGIN_URL,\r\n        APP_VERSION: appSettings.APP_VERSION,\r\n        FAMILIE: appSettings.FAMILIE,\r\n        [FeatureToggle.visFeilside]: appSettings[FeatureToggle.visFeilside],\r\n        [FeatureToggle.visAlertstripe]: appSettings[FeatureToggle.visAlertstripe],\r\n        [FeatureToggle.visPerioderSomSendesInn]: appSettings[FeatureToggle.visPerioderSomSendesInn],\r\n    };\r\n};\r\n\r\nexport default Environment();\r\n","import amplitude from 'amplitude-js';\r\n\r\nexport enum PageKeys {\r\n    Velkommen = 'velkommen',\r\n    Situasjon = 'situasjon',\r\n    OmBarnetFødsel = 'om-barnet-fødsel',\r\n    OmBarnetAdopsjon = 'om-barnet-adopsjon',\r\n    AnnenForelder = 'annen-forelder',\r\n    ManglendeVedlegg = 'manglende-vedlegg',\r\n    UttaksplanSkjema = 'uttaksplan-skjema',\r\n    Uttaksplan = 'uttaksplan',\r\n    AndreInntekter = 'andre-inntekter',\r\n    Utenlandsopphold = 'utenlandsopphold',\r\n    Oppsummering = 'oppsummering',\r\n    SøknadSendt = 'søknad-sendt',\r\n    Umyndig = 'umyndig',\r\n}\r\n\r\nexport const initAmplitude = () => {\r\n    if (amplitude) {\r\n        amplitude.getInstance().init('default', '', {\r\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\r\n            saveEvents: false,\r\n            includeUtm: true,\r\n            includeReferrer: true,\r\n            platform: window.location.toString(),\r\n        });\r\n    }\r\n};\r\n\r\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = true) => {\r\n    if (logToConsoleOnly) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n            console.log({ eventName, eventData });\r\n        }\r\n        return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n        try {\r\n            if (amplitude) {\r\n                amplitude.getInstance().logEvent(eventName, eventData);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    });\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport getAxiosInstance from 'app/api/apiInterceptor';\r\n\r\ntype Options = {\r\n    config?: AxiosRequestConfig;\r\n    fnr?: string;\r\n    isSuspended?: boolean;\r\n};\r\n\r\nconst DEFAULT_OPTIONS: Options = {\r\n    config: {},\r\n    isSuspended: false,\r\n};\r\n\r\nexport const useRequest = <T>(url: string, options: Options = DEFAULT_OPTIONS) => {\r\n    const [data, setData] = useState<T>();\r\n    const [error, setError] = useState<AxiosError<any> | null>(null);\r\n    const axiosInstance = options.fnr ? getAxiosInstance(options.fnr) : getAxiosInstance();\r\n\r\n    useEffect(() => {\r\n        if (!options.isSuspended) {\r\n            axiosInstance\r\n                .get(url, options.config)\r\n                .then((res) => {\r\n                    setData(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    setError(err);\r\n                });\r\n        }\r\n    }, [options.isSuspended, url, axiosInstance]);\r\n\r\n    return { data, error };\r\n};\r\n","export enum UttakArbeidType {\r\n    'ORDINÆRT_ARBEID' = 'ORDINÆRT_ARBEID',\r\n    'SELVSTENDIG_NÆRINGSDRIVENDE' = 'SELVSTENDIG_NÆRINGSDRIVENDE',\r\n    'FRILANS' = 'FRILANS',\r\n    'ANNET' = 'ANNET',\r\n}\r\n","import moment from 'moment';\r\nimport { isISODateString } from 'nav-datovelger';\r\n\r\nexport const dateStringToDateObjectMapper = (_key: string, value: string) => {\r\n    if (isISODateString(value)) {\r\n        return value;\r\n    }\r\n    if (!Array.isArray(value) && moment(value, [moment.HTML5_FMT.DATE, 'YYYY-MM-DDTHH:mm:ss.SSSZ'], true).isValid()) {\r\n        return new Date(value);\r\n    }\r\n    return value;\r\n};\r\nexport const storageParser = (storageResponse: string) => {\r\n    if (storageResponse) {\r\n        return JSON.parse(storageResponse, dateStringToDateObjectMapper);\r\n    }\r\n};\r\n","export enum PeriodeResultatType {\r\n    INNVILGET = 'INNVILGET',\r\n    AVSLÅTT = 'AVSLÅTT',\r\n    IKKE_FASTSATT = 'IKKE_FASTSATT',\r\n    MANUELL_BEHANDLING = 'MANUELL_BEHANDLING',\r\n}\r\n","export enum FamiliehendelseType {\r\n    'ADOPSJON' = 'ADPSJN',\r\n    'OMSORGSOVERTAKELSE' = 'OMSRGO',\r\n    'FØDSEL' = 'FODSL',\r\n    'TERM' = 'TERM',\r\n}\r\n","import { FamiliehendelseType } from 'app/types/FamiliehendelseType';\r\n\r\nexport const getFamiliehendelseType = (fødselsdato: string | undefined, termindato: string | undefined) => {\r\n    if (fødselsdato !== undefined) {\r\n        return FamiliehendelseType.FØDSEL;\r\n    } else {\r\n        return termindato !== undefined ? FamiliehendelseType.TERM : FamiliehendelseType.ADOPSJON;\r\n    }\r\n};\r\n","export enum MorsAktivitet {\r\n    Arbeid = 'ARBEID',\r\n    Utdanning = 'UTDANNING',\r\n    Kvalifiseringsprogrammet = 'KVALPROG',\r\n    Introduksjonsprogrammet = 'INTROPROG',\r\n    TrengerHjelp = 'TRENGER_HJELP',\r\n    Innlagt = 'INNLAGT',\r\n    ArbeidOgUtdanning = 'ARBEID_OG_UTDANNING',\r\n    Uføre = 'UFØRE',\r\n}\r\n","import { guid } from 'nav-frontend-js-utils';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n    Arbeidsform,\r\n    AvslåttPeriode,\r\n    isInfoPeriode,\r\n    Overføringsperiode,\r\n    Periode,\r\n    Periodetype,\r\n    UtsettelseAnnenPartInfoPeriode,\r\n    Utsettelsesperiode,\r\n    UttakAnnenPartInfoPeriode,\r\n    Uttaksperiode,\r\n} from 'uttaksplan/types/Periode';\r\nimport { Perioden } from 'app/steps/uttaksplan-info/utils/Perioden';\r\nimport { isValidTidsperiode, Tidsperioden } from 'app/steps/uttaksplan-info/utils/Tidsperioden';\r\nimport { sorterPerioder } from 'app/steps/uttaksplan-info/utils/Periodene';\r\nimport { erUttaksdag, Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\r\nimport { Saksperiode } from 'app/types/Saksperiode';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { OppholdÅrsakType } from 'uttaksplan/types/OppholdÅrsakType';\r\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\nimport { Saksgrunnlag } from 'app/types/Saksgrunnlag';\r\nimport { MorsAktivitet } from 'uttaksplan/types/MorsAktivitet';\r\nimport { getArbeidsformFromUttakArbeidstype } from './eksisterendeSakUtils';\r\nimport { UtsettelseÅrsakType } from 'uttaksplan/types/UtsettelseÅrsakType';\r\nimport { PeriodeInfoType } from 'uttaksplan/types/PeriodeInfoType';\r\nimport { PeriodeResultatType } from 'uttaksplan/types/PeriodeResultatType';\r\nimport { convertTidsperiodeToTidsperiodeDate, getRelevantFamiliehendelseDato } from './dateUtils';\r\n\r\nconst harUttaksdager = (periode: Periode): boolean => {\r\n    return Perioden(periode).getAntallUttaksdager() > 0;\r\n};\r\n\r\nconst harGyldigTidsperiode = (periode: Periode): boolean => {\r\n    return isValidTidsperiode(periode.tidsperiode);\r\n};\r\n\r\nconst slåSammenLikePerioder = (perioder: Periode[]): Periode[] => {\r\n    if (perioder.length <= 1) {\r\n        return perioder;\r\n    }\r\n\r\n    const nyePerioder: Periode[] = [];\r\n    const infoPerioder = perioder.filter((p) => isInfoPeriode(p));\r\n    const ordinærePerioder = perioder.filter((p) => !isInfoPeriode(p));\r\n    const tmp: Periode[] = [...ordinærePerioder, ...infoPerioder];\r\n    let forrigePeriode: Periode | undefined = { ...tmp[0] };\r\n\r\n    tmp.forEach((periode, index) => {\r\n        if (index === 0) {\r\n            return;\r\n        }\r\n\r\n        if (forrigePeriode === undefined) {\r\n            forrigePeriode = periode;\r\n            return;\r\n        }\r\n\r\n        if (\r\n            Perioden(forrigePeriode).erLik(periode, false, true) &&\r\n            Perioden(forrigePeriode).erSammenhengende(periode)\r\n        ) {\r\n            forrigePeriode.tidsperiode.tom = periode.tidsperiode.tom;\r\n            return;\r\n        } else {\r\n            nyePerioder.push(forrigePeriode);\r\n        }\r\n\r\n        forrigePeriode = periode;\r\n    });\r\n\r\n    nyePerioder.push(forrigePeriode);\r\n\r\n    return nyePerioder.sort(sorterPerioder);\r\n};\r\n\r\nconst korrigerTidsperiodeTilGyldigUttaksdag = (periode: Periode): Periode => {\r\n    const { fom, tom } = periode.tidsperiode;\r\n    const fomOk = erUttaksdag(fom);\r\n    const tomOk = erUttaksdag(tom);\r\n    if (fomOk && tomOk) {\r\n        return periode;\r\n    } else if (!fomOk && !tomOk) {\r\n        return {\r\n            ...periode,\r\n            tidsperiode: {\r\n                fom: Uttaksdagen(fom).neste(),\r\n                tom: Uttaksdagen(tom).forrige(),\r\n            },\r\n        };\r\n    } else if (!fomOk && tomOk) {\r\n        return {\r\n            ...periode,\r\n            tidsperiode: {\r\n                fom: Uttaksdagen(fom).neste(),\r\n                tom,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            ...periode,\r\n            tidsperiode: {\r\n                fom,\r\n                tom: Uttaksdagen(tom).forrige(),\r\n            },\r\n        };\r\n    }\r\n};\r\n\r\nconst getForelderForPeriode = (saksperiode: Saksperiode, søkerErFarEllerMedmor: boolean): Forelder => {\r\n    if (saksperiode.gjelderAnnenPart) {\r\n        return søkerErFarEllerMedmor ? Forelder.mor : Forelder.farMedmor;\r\n    }\r\n    return søkerErFarEllerMedmor ? Forelder.farMedmor : Forelder.mor;\r\n};\r\n\r\nconst getOppholdÅrsakFromSaksperiode = (saksperiode: Saksperiode): OppholdÅrsakType | undefined => {\r\n    switch (saksperiode.stønadskontotype) {\r\n        case StønadskontoType.Fedrekvote:\r\n            return OppholdÅrsakType.UttakFedrekvoteAnnenForelder;\r\n        case StønadskontoType.Fellesperiode:\r\n            return OppholdÅrsakType.UttakFellesperiodeAnnenForelder;\r\n        case StønadskontoType.Mødrekvote:\r\n            return OppholdÅrsakType.UttakMødrekvoteAnnenForelder;\r\n        case StønadskontoType.ForeldrepengerFørFødsel:\r\n            return OppholdÅrsakType.UttakForelderpengerFørFødsel;\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\n\r\nconst beregnSamtidigUttaksProsent = (\r\n    egenProsent: number | undefined,\r\n    andrePartsProsent: number | undefined,\r\n    utbetalingsprosent: number\r\n): string | undefined => {\r\n    if (egenProsent) {\r\n        return egenProsent.toString();\r\n    }\r\n\r\n    if (andrePartsProsent) {\r\n        return utbetalingsprosent.toString();\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const mapUttaksperiodeFromSaksperiode = (\r\n    saksperiode: Saksperiode,\r\n    grunnlag: Saksgrunnlag,\r\n    innvilgedePerioder: Saksperiode[],\r\n    erFarEllerMedmor: boolean\r\n): Periode => {\r\n    const gradert = saksperiode.graderingInnvilget !== undefined ? saksperiode.graderingInnvilget : false;\r\n    const tidsperiodeDate = convertTidsperiodeToTidsperiodeDate(saksperiode.periode);\r\n\r\n    if (saksperiode.gjelderAnnenPart) {\r\n        return mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode, erFarEllerMedmor, innvilgedePerioder);\r\n    }\r\n\r\n    const annenPartSamtidigUttakPeriode: Saksperiode | undefined = innvilgedePerioder.find(\r\n        (ip) =>\r\n            Tidsperioden(convertTidsperiodeToTidsperiodeDate(ip.periode)).erLik(tidsperiodeDate) &&\r\n            ip.guid !== saksperiode.guid\r\n    );\r\n    let samtidigUttakProsentAnnenPart;\r\n\r\n    if (annenPartSamtidigUttakPeriode) {\r\n        samtidigUttakProsentAnnenPart = annenPartSamtidigUttakPeriode.samtidigUttaksprosent;\r\n    }\r\n\r\n    const samtidigUttakProsent = beregnSamtidigUttaksProsent(\r\n        saksperiode.samtidigUttaksprosent,\r\n        samtidigUttakProsentAnnenPart,\r\n        saksperiode.utbetalingsprosent\r\n    );\r\n\r\n    let konto;\r\n    if (saksperiode.morsAktivitet === MorsAktivitet.Uføre) {\r\n        konto = StønadskontoType.AktivitetsfriKvote;\r\n    }\r\n\r\n    const { termindato, fødselsdato, omsorgsovertakelsesdato } = grunnlag;\r\n\r\n    const familiehendelseDato = getRelevantFamiliehendelseDato(termindato, fødselsdato, omsorgsovertakelsesdato);\r\n\r\n    const uttaksperiode: Uttaksperiode = {\r\n        id: guid(),\r\n        type: Periodetype.Uttak,\r\n        konto: konto !== undefined ? konto : saksperiode.stønadskontotype,\r\n        tidsperiode: tidsperiodeDate,\r\n        forelder: getForelderForPeriode(saksperiode, erFarEllerMedmor),\r\n        ønskerSamtidigUttak: samtidigUttakProsent !== undefined,\r\n        gradert,\r\n        samtidigUttakProsent,\r\n        ønskerFlerbarnsdager: saksperiode.flerbarnsdager,\r\n        stillingsprosent: gradert ? saksperiode.arbeidstidprosent.toString() : undefined,\r\n        arbeidsformer: gradert\r\n            ? saksperiode.uttakArbeidType.map((arbType) => getArbeidsformFromUttakArbeidstype(arbType))\r\n            : undefined,\r\n        orgnumre: gradert ? [saksperiode.arbeidsgiverInfo.id] : undefined,\r\n        morsAktivitetIPerioden: saksperiode.morsAktivitet,\r\n        erMorForSyk:\r\n            erFarEllerMedmor &&\r\n            !saksperiode.flerbarnsdager &&\r\n            dayjs(saksperiode.periode.fom).isBefore(dayjs(familiehendelseDato).add(6, 'weeks'))\r\n                ? true\r\n                : undefined,\r\n    };\r\n\r\n    return uttaksperiode;\r\n};\r\n\r\nconst mapUtsettelseperiodeFromSaksperiode = (saksperiode: Saksperiode, erFarEllerMedmor: boolean): Periode => {\r\n    if (saksperiode.gjelderAnnenPart) {\r\n        return mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode, erFarEllerMedmor);\r\n    }\r\n\r\n    const utsettelsesperiode: Utsettelsesperiode = {\r\n        id: guid(),\r\n        type: Periodetype.Utsettelse,\r\n        årsak: saksperiode.utsettelsePeriodeType!,\r\n        tidsperiode: convertTidsperiodeToTidsperiodeDate(saksperiode.periode),\r\n        forelder: getForelderForPeriode(saksperiode, erFarEllerMedmor),\r\n        erArbeidstaker: false,\r\n        morsAktivitetIPerioden: saksperiode.morsAktivitet,\r\n    };\r\n\r\n    if (utsettelsesperiode.årsak === UtsettelseÅrsakType.Arbeid) {\r\n        const arbeidsformer = saksperiode.uttakArbeidType.map((arbType) => getArbeidsformFromUttakArbeidstype(arbType));\r\n        const orgnummer = saksperiode.arbeidsgiverInfo.id;\r\n\r\n        return {\r\n            ...utsettelsesperiode,\r\n            arbeidsformer,\r\n            orgnumre: arbeidsformer.includes(Arbeidsform.arbeidstaker) ? [orgnummer] : undefined,\r\n            erArbeidstaker: orgnummer ? true : false,\r\n        };\r\n    }\r\n\r\n    return utsettelsesperiode;\r\n};\r\n\r\nconst mapInfoPeriodeFromAvslåttSaksperiode = (saksperiode: Saksperiode, erFarEllerMedmor: boolean): AvslåttPeriode => {\r\n    const avslåttPeriode: AvslåttPeriode = {\r\n        id: guid(),\r\n        type: Periodetype.Info,\r\n        infotype: PeriodeInfoType.avslåttPeriode,\r\n        tidsperiode: convertTidsperiodeToTidsperiodeDate(saksperiode.periode),\r\n        avslåttPeriodeType: saksperiode.utsettelsePeriodeType ? Periodetype.Utsettelse : Periodetype.Uttak,\r\n        stønadskonto: saksperiode.stønadskontotype,\r\n        forelder: getForelderForPeriode(saksperiode, erFarEllerMedmor),\r\n        overskrives: true,\r\n        visPeriodeIPlan: true,\r\n    };\r\n    return avslåttPeriode;\r\n};\r\n\r\nconst mapAnnenPartInfoPeriodeFromSaksperiode = (\r\n    saksperiode: Saksperiode,\r\n    erFarEllerMedmor: boolean,\r\n    innvilgedePerioder?: Saksperiode[]\r\n): UttakAnnenPartInfoPeriode | UtsettelseAnnenPartInfoPeriode => {\r\n    const tidsperiodeDate = convertTidsperiodeToTidsperiodeDate(saksperiode.periode);\r\n\r\n    if (saksperiode.utsettelsePeriodeType && saksperiode.periodeResultatType !== PeriodeResultatType.AVSLÅTT) {\r\n        return {\r\n            type: Periodetype.Info,\r\n            infotype: PeriodeInfoType.utsettelseAnnenPart,\r\n            id: guid(),\r\n            årsak: saksperiode.utsettelsePeriodeType,\r\n            tidsperiode: tidsperiodeDate,\r\n            forelder: getForelderForPeriode(saksperiode, erFarEllerMedmor),\r\n            overskrives: true,\r\n            resultatType: saksperiode.periodeResultatType,\r\n            visPeriodeIPlan: true,\r\n        };\r\n    }\r\n\r\n    const skalVises =\r\n        innvilgedePerioder !== undefined &&\r\n        !innvilgedePerioder.some(\r\n            (ip) =>\r\n                Tidsperioden(convertTidsperiodeToTidsperiodeDate(ip.periode)).erLik(tidsperiodeDate) &&\r\n                ip.guid !== saksperiode.guid\r\n        );\r\n    const årsak = getOppholdÅrsakFromSaksperiode(saksperiode);\r\n    const gradert = saksperiode.graderingInnvilget !== undefined ? saksperiode.graderingInnvilget : false;\r\n\r\n    const annenPartSamtidigUttakPeriode: Saksperiode | undefined =\r\n        innvilgedePerioder !== undefined\r\n            ? innvilgedePerioder.find(\r\n                  (ip) =>\r\n                      Tidsperioden(convertTidsperiodeToTidsperiodeDate(ip.periode)).erLik(tidsperiodeDate) &&\r\n                      ip.guid !== saksperiode.guid\r\n              )\r\n            : undefined;\r\n    let samtidigUttakProsentAnnenPart;\r\n\r\n    if (annenPartSamtidigUttakPeriode) {\r\n        samtidigUttakProsentAnnenPart = annenPartSamtidigUttakPeriode.samtidigUttaksprosent;\r\n    }\r\n\r\n    const samtidigUttaksprosent = beregnSamtidigUttaksProsent(\r\n        saksperiode.samtidigUttaksprosent,\r\n        samtidigUttakProsentAnnenPart,\r\n        saksperiode.utbetalingsprosent\r\n    );\r\n\r\n    return {\r\n        type: Periodetype.Info,\r\n        infotype: PeriodeInfoType.uttakAnnenPart,\r\n        id: guid(),\r\n        årsak: årsak!,\r\n        tidsperiode: tidsperiodeDate,\r\n        forelder: getForelderForPeriode(saksperiode, erFarEllerMedmor),\r\n        overskrives: true,\r\n        resultatType: saksperiode.periodeResultatType,\r\n        gradert,\r\n        ønskerSamtidigUttak: samtidigUttaksprosent !== undefined,\r\n        samtidigUttakProsent: samtidigUttaksprosent,\r\n        stillingsprosent: gradert ? saksperiode.arbeidstidprosent.toString() : undefined,\r\n        visPeriodeIPlan: skalVises,\r\n    };\r\n};\r\n\r\nconst mapOverføringsperiodeFromSaksperiode = (\r\n    saksperiode: Saksperiode,\r\n    erFarEllerMedmor: boolean\r\n): Overføringsperiode => {\r\n    return {\r\n        id: guid(),\r\n        forelder: getForelderForPeriode(saksperiode, erFarEllerMedmor),\r\n        konto: saksperiode.stønadskontotype,\r\n        tidsperiode: convertTidsperiodeToTidsperiodeDate(saksperiode.periode),\r\n        type: Periodetype.Overføring,\r\n        årsak: saksperiode.overfoeringAarsak!,\r\n    };\r\n};\r\n\r\nconst mapPeriodeFromSaksperiode = (\r\n    saksperiode: Saksperiode,\r\n    grunnlag: Saksgrunnlag,\r\n    innvilgedePerioder: Saksperiode[],\r\n    erFarEllerMedmor: boolean\r\n): Periode => {\r\n    if (saksperiode.gjelderAnnenPart) {\r\n        return mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode, erFarEllerMedmor, innvilgedePerioder);\r\n    }\r\n\r\n    if (\r\n        saksperiode.periodeResultatType === PeriodeResultatType.AVSLÅTT &&\r\n        (!saksperiode.utbetalingsprosent || saksperiode.utbetalingsprosent === 0)\r\n    ) {\r\n        return mapInfoPeriodeFromAvslåttSaksperiode(saksperiode, erFarEllerMedmor);\r\n    }\r\n\r\n    if (\r\n        saksperiode.utsettelsePeriodeType !== undefined &&\r\n        (!saksperiode.utbetalingsprosent || saksperiode.utbetalingsprosent === 0)\r\n    ) {\r\n        return mapUtsettelseperiodeFromSaksperiode(saksperiode, erFarEllerMedmor);\r\n    }\r\n\r\n    if (saksperiode.overfoeringAarsak !== undefined) {\r\n        return mapOverføringsperiodeFromSaksperiode(saksperiode, erFarEllerMedmor);\r\n    }\r\n\r\n    return mapUttaksperiodeFromSaksperiode(saksperiode, grunnlag, innvilgedePerioder, erFarEllerMedmor);\r\n};\r\n\r\nconst gyldigeSaksperioder = (saksperiode: Saksperiode): boolean => {\r\n    if (saksperiode.periodeResultatType === PeriodeResultatType.INNVILGET) {\r\n        return true;\r\n    }\r\n\r\n    if (saksperiode.periodeResultatType === PeriodeResultatType.AVSLÅTT && saksperiode.utbetalingsprosent > 0) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        saksperiode.periodeResultatType === PeriodeResultatType.AVSLÅTT &&\r\n        saksperiode.utsettelsePeriodeType !== undefined &&\r\n        saksperiode.utsettelsePeriodeType === UtsettelseÅrsakType.InstitusjonBarnet\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nconst mapSaksperioderTilUttaksperioder = (\r\n    saksperioder: Saksperiode[],\r\n    grunnlag: Saksgrunnlag,\r\n    erFarEllerMedmor: boolean,\r\n    _erEndringsøknadUtenEkisterendeSak: boolean\r\n): Periode[] => {\r\n    const innvilgedePerioder = saksperioder.filter(gyldigeSaksperioder);\r\n    const perioder = innvilgedePerioder.map((periode) =>\r\n        mapPeriodeFromSaksperiode(periode, grunnlag, innvilgedePerioder, erFarEllerMedmor)\r\n    );\r\n\r\n    const sammenslåddePerioder: Periode[] = slåSammenLikePerioder(\r\n        perioder\r\n            .sort(sorterPerioder)\r\n            .filter(harUttaksdager)\r\n            .map(korrigerTidsperiodeTilGyldigUttaksdag)\r\n            .filter(harGyldigTidsperiode)\r\n            .filter(harUttaksdager)\r\n    );\r\n\r\n    return sammenslåddePerioder;\r\n};\r\n\r\nexport default mapSaksperioderTilUttaksperioder;\r\n","import { guid } from 'nav-frontend-js-utils';\r\nimport { UttakArbeidType } from 'app/types/UttakArbeidType';\r\nimport { Arbeidsform } from 'uttaksplan/types/Periode';\r\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\nimport { OppholdÅrsakType } from 'uttaksplan/types/OppholdÅrsakType';\r\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\r\nimport { Saksperiode } from 'app/types/Saksperiode';\r\nimport { PeriodeResultatType } from 'uttaksplan/types/PeriodeResultatType';\r\nimport { Saksgrunnlag } from 'app/types/Saksgrunnlag';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { getFamiliehendelseType } from './getFamiliehendelseType';\r\nimport { convertTidsperiodeToTidsperiodeDate, getRelevantFamiliehendelseDato } from './dateUtils';\r\nimport { EksisterendeSakDTO } from 'app/types/EksisterendeSakDTO';\r\nimport { SaksperiodeDTO } from 'app/types/SaksperiodeDTO';\r\nimport mapSaksperioderTilUttaksperioder from './mapSaksperioderTilUttaksperioder';\r\nimport { Tidsperioden } from 'app/steps/uttaksplan-info/utils/Tidsperioden';\r\n\r\nexport const getArbeidsformFromUttakArbeidstype = (arbeidstype: UttakArbeidType): Arbeidsform => {\r\n    switch (arbeidstype) {\r\n        case UttakArbeidType.SELVSTENDIG_NÆRINGSDRIVENDE:\r\n            return Arbeidsform.selvstendignæringsdrivende;\r\n        case UttakArbeidType.FRILANS:\r\n            return Arbeidsform.frilans;\r\n        default:\r\n            return Arbeidsform.arbeidstaker;\r\n    }\r\n};\r\n\r\nconst getStønadskontoTypeFromOppholdÅrsakType = (årsak: OppholdÅrsakType): StønadskontoType | undefined => {\r\n    switch (årsak) {\r\n        case OppholdÅrsakType.UttakFedrekvoteAnnenForelder:\r\n            return StønadskontoType.Fedrekvote;\r\n        case OppholdÅrsakType.UttakFellesperiodeAnnenForelder:\r\n            return StønadskontoType.Fellesperiode;\r\n        case OppholdÅrsakType.UttakMødrekvoteAnnenForelder:\r\n            return StønadskontoType.Mødrekvote;\r\n        case OppholdÅrsakType.UttakForelderpengerFørFødsel:\r\n            return StønadskontoType.ForeldrepengerFørFødsel;\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\n\r\nconst erEksisterendeSakErDeltUttak = (eksisterendeSak: EksisterendeSakDTO): boolean => {\r\n    const {\r\n        grunnlag: { farMedmorErAleneOmOmsorg, farMedmorHarRett, morErAleneOmOmsorg, morHarRett },\r\n    } = eksisterendeSak;\r\n    if (farMedmorErAleneOmOmsorg || morErAleneOmOmsorg || farMedmorHarRett === false || morHarRett === false) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nconst mapSaksperiodeFromDTO = (p: SaksperiodeDTO): Saksperiode => {\r\n    const { oppholdAarsak, gjelderAnnenPart } = p;\r\n\r\n    const returnPeriode: Saksperiode = {\r\n        ...p,\r\n        guid: guid(),\r\n    };\r\n\r\n    if (oppholdAarsak !== undefined && gjelderAnnenPart === false) {\r\n        returnPeriode.gjelderAnnenPart = true;\r\n        returnPeriode.stønadskontotype = getStønadskontoTypeFromOppholdÅrsakType(oppholdAarsak)!;\r\n    }\r\n\r\n    if (oppholdAarsak !== undefined && gjelderAnnenPart) {\r\n        returnPeriode.gjelderAnnenPart = false;\r\n        returnPeriode.angittAvAnnenPart = true;\r\n        returnPeriode.stønadskontotype = getStønadskontoTypeFromOppholdÅrsakType(oppholdAarsak)!;\r\n    }\r\n\r\n    return returnPeriode as Saksperiode;\r\n};\r\n\r\nconst saksperiodeErInnvilget = (saksperiode: Saksperiode) =>\r\n    saksperiode.periodeResultatType === PeriodeResultatType.INNVILGET;\r\n\r\nconst filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode = (\r\n    periode: Saksperiode,\r\n    _index: number,\r\n    saksperioder: Saksperiode[]\r\n) => {\r\n    const likePerioder = saksperioder.filter(\r\n        (periode2) =>\r\n            periode.guid !== periode2.guid &&\r\n            Tidsperioden(convertTidsperiodeToTidsperiodeDate(periode.periode)).erLik(\r\n                convertTidsperiodeToTidsperiodeDate(periode2.periode)\r\n            ) &&\r\n            periode.gjelderAnnenPart === periode2.gjelderAnnenPart\r\n    );\r\n\r\n    if (likePerioder.length === 0) {\r\n        return true;\r\n    }\r\n\r\n    const innvilgedePerioder = likePerioder.filter(saksperiodeErInnvilget);\r\n\r\n    if (saksperiodeErInnvilget(periode) === false && innvilgedePerioder.length > 0) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst reduceDuplikateSaksperioderGrunnetArbeidsforhold = (\r\n    resultatPerioder: Saksperiode[],\r\n    periode: Saksperiode,\r\n    _index: number,\r\n    saksperioder: Saksperiode[]\r\n) => {\r\n    if (inneholderDuplikatSaksperiode(saksperioder, periode)) {\r\n        if (periode.graderingInnvilget && periode.arbeidstidprosent > 0) {\r\n            resultatPerioder.push(periode);\r\n\r\n            return resultatPerioder;\r\n        }\r\n\r\n        if (!periode.graderingInnvilget && !inneholderDuplikatSaksperiode(resultatPerioder, periode)) {\r\n            resultatPerioder.push(periode);\r\n\r\n            return resultatPerioder;\r\n        }\r\n\r\n        if (!periode.graderingInnvilget && inneholderDuplikatSaksperiode(resultatPerioder, periode)) {\r\n            const periodeSomOverlever = saksperioder.find(\r\n                (s) =>\r\n                    Tidsperioden(convertTidsperiodeToTidsperiodeDate(s.periode)).erLik(\r\n                        convertTidsperiodeToTidsperiodeDate(periode.periode)\r\n                    ) &&\r\n                    s.gjelderAnnenPart === periode.gjelderAnnenPart &&\r\n                    s.guid !== periode.guid\r\n            );\r\n            const arbeidsform = periode.uttakArbeidType[0];\r\n\r\n            if (arbeidsform !== undefined && periodeSomOverlever !== undefined) {\r\n                if (!periodeSomOverlever.uttakArbeidType.includes(arbeidsform)) {\r\n                    periodeSomOverlever.uttakArbeidType.push(arbeidsform);\r\n                }\r\n            }\r\n\r\n            return resultatPerioder;\r\n        }\r\n\r\n        return resultatPerioder;\r\n    }\r\n\r\n    resultatPerioder.push(periode);\r\n\r\n    return resultatPerioder;\r\n};\r\n\r\nconst inneholderDuplikatSaksperiode = (saksperioder: Saksperiode[], saksperiode: Saksperiode): boolean => {\r\n    if (saksperioder.length === 0) {\r\n        return false;\r\n    }\r\n\r\n    return saksperioder.some(\r\n        (s) =>\r\n            Tidsperioden(convertTidsperiodeToTidsperiodeDate(s.periode)).erLik(\r\n                convertTidsperiodeToTidsperiodeDate(saksperiode.periode)\r\n            ) &&\r\n            s.gjelderAnnenPart === saksperiode.gjelderAnnenPart &&\r\n            s.guid !== saksperiode.guid\r\n    );\r\n};\r\n\r\nexport const mapEksisterendeSakFromDTO = (\r\n    eksisterendeSak: EksisterendeSakDTO | undefined,\r\n    erFarEllerMedmor: boolean,\r\n    erAnnenPartsSak: boolean\r\n): EksisterendeSak | undefined => {\r\n    if (eksisterendeSak === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    const {\r\n        grunnlag: {\r\n            dekningsgrad,\r\n            termindato,\r\n            fødselsdato,\r\n            omsorgsovertakelsesdato,\r\n            søkerErFarEllerMedmor,\r\n            ...restGrunnlag\r\n        },\r\n        perioder,\r\n    } = eksisterendeSak;\r\n\r\n    const grunnlag: Saksgrunnlag = {\r\n        ...restGrunnlag,\r\n        erDeltUttak: erEksisterendeSakErDeltUttak(eksisterendeSak),\r\n        erBarnetFødt: fødselsdato !== undefined,\r\n        dekningsgrad: dekningsgrad === 100 ? Dekningsgrad.HUNDRE_PROSENT : Dekningsgrad.ÅTTI_PROSENT,\r\n        familiehendelseDato: getRelevantFamiliehendelseDato(termindato, fødselsdato, omsorgsovertakelsesdato),\r\n        familiehendelseType: getFamiliehendelseType(fødselsdato, termindato),\r\n        termindato,\r\n        fødselsdato,\r\n        omsorgsovertakelsesdato,\r\n    };\r\n\r\n    const saksperioder = perioder\r\n        .map(mapSaksperiodeFromDTO)\r\n        .filter(filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode)\r\n        .reduce(reduceDuplikateSaksperioderGrunnetArbeidsforhold, []);\r\n\r\n    const uttaksplan = mapSaksperioderTilUttaksperioder(saksperioder, grunnlag, erFarEllerMedmor, false);\r\n\r\n    return {\r\n        erAnnenPartsSak,\r\n        grunnlag,\r\n        saksperioder,\r\n        uttaksplan,\r\n    };\r\n};\r\n\r\n//TODO Fjern?\r\n/*const getSøkersituasjonFromSaksgrunnlag = (familiehendelseType: FamiliehendelseType): Situasjon | undefined => {\r\n    if (familiehendelseType === FamiliehendelseType.TERM || familiehendelseType === FamiliehendelseType.FØDSEL) {\r\n        return 'fødsel';\r\n    }\r\n\r\n    return 'adopsjon';\r\n};\r\n\r\nconst getSøkerFromSaksgrunnlag = (grunnlag: Saksgrunnlag, erFarEllerMedmor: boolean): Partial<Søker> => {\r\n    return {\r\n        erAleneOmOmsorg: erFarEllerMedmor ? grunnlag.farMedmorErAleneOmOmsorg : grunnlag.morErAleneOmOmsorg,\r\n    };\r\n};\r\n\r\nconst getBarnFromSaksgrunnlag = (situasjon: Situasjon, sak: Saksgrunnlag, søkerinfo: Søkerinfo): Barn | undefined => {\r\n    const nyesteBarn = søkerinfo.registrerteBarn.sort((a, b) =>\r\n        dayjs(b.fødselsdato).format('YYYY-MM-DD').localeCompare(dayjs(a.fødselsdato).format('YYYY-MM-DD'))\r\n    )[0];\r\n\r\n    let erBarnetFødt;\r\n    if (nyesteBarn === undefined) {\r\n        erBarnetFødt = sak.erBarnetFødt;\r\n    } else {\r\n        erBarnetFødt = dayjs(nyesteBarn.fødselsdato).isBetween(\r\n            dayjs(sak.familiehendelseDato).subtract(20, 'weeks'),\r\n            dayjs(sak.familiehendelseDato).add(6, 'weeks')\r\n        );\r\n    }\r\n\r\n    if (erBarnetFødt === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    switch (situasjon) {\r\n        case 'fødsel':\r\n            if (sak.fødselsdato) {\r\n                return {\r\n                    type: BarnType.FØDT,\r\n                    antallBarn: sak.antallBarn.toString(),\r\n                    fødselsdatoer: [sak.familiehendelseDato],\r\n                    termindato: sak.termindato,\r\n                };\r\n            }\r\n\r\n            return {\r\n                type: BarnType.UFØDT,\r\n                antallBarn: sak.antallBarn.toString(),\r\n                termindato: sak.familiehendelseDato,\r\n                terminbekreftelse: [],\r\n            };\r\n        case 'adopsjon':\r\n            return {\r\n                type: BarnType.ADOPTERT_STEBARN,\r\n                adopsjonsdato: sak.familiehendelseDato,\r\n                antallBarn: sak.antallBarn.toString(),\r\n                fødselsdatoer: [sak.familiehendelseDato],\r\n                omsorgsovertakelse: [],\r\n            };\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\n\r\nconst getAnnenForelderFromSaksgrunnlag = (\r\n    situasjon: Situasjon,\r\n    grunnlag: Saksgrunnlag,\r\n    annenPart: AnnenPart,\r\n    erFarEllerMedmor: boolean\r\n): AnnenForelder | undefined => {\r\n    switch (situasjon) {\r\n        case 'fødsel':\r\n        case 'adopsjon':\r\n            if (erFarEllerMedmor) {\r\n                return {\r\n                    fornavn: annenPart.navn.fornavn,\r\n                    etternavn: annenPart.navn.etternavn,\r\n                    erUfør: grunnlag.morErUfør,\r\n                    harRettPåForeldrepenger: grunnlag.morHarRett,\r\n                    fnr: annenPart.fnr,\r\n                    kanIkkeOppgis: false,\r\n                };\r\n            }\r\n            return {\r\n                fornavn: annenPart.navn.fornavn,\r\n                etternavn: annenPart.navn.etternavn,\r\n                harRettPåForeldrepenger: grunnlag.farMedmorHarRett,\r\n                fnr: annenPart.fnr,\r\n                kanIkkeOppgis: false,\r\n            };\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\n\r\nconst kanSaksperiodeKonverteresTilPeriode = (periode: Saksperiode) => {\r\n    if (periode.flerbarnsdager === false) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const kanUttaksplanGjennskapesFraSak = (perioder: Saksperiode[]): boolean => {\r\n    const noenPerioderKanIkkeGjennskapes = perioder.some(\r\n        (periode) => kanSaksperiodeKonverteresTilPeriode(periode) === false\r\n    );\r\n\r\n    return noenPerioderKanIkkeGjennskapes === false;\r\n};\r\n\r\nconst finnAnnenForelderPåFødselsdato = (\r\n    barn: RegistrertBarn[],\r\n    fødselsdato: Date | undefined,\r\n    grunnlag: Saksgrunnlag,\r\n    situasjon: Situasjon,\r\n    erFarEllerMedmor: boolean\r\n): AnnenForelder | undefined => {\r\n    if (fødselsdato === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    const barnMedGittFødselsdato = barn.find((b) => dayjs(b.fødselsdato).isSame(dayjs(fødselsdato)));\r\n\r\n    if (barnMedGittFødselsdato !== undefined) {\r\n        const annenForelder = barnMedGittFødselsdato.annenForelder;\r\n\r\n        if (annenForelder !== undefined) {\r\n            const { fnr, etternavn, fornavn } = annenForelder;\r\n            const annenPart: Partial<AnnenPart> = {\r\n                navn: {\r\n                    fornavn,\r\n                    etternavn,\r\n                },\r\n                fnr,\r\n            };\r\n            return getAnnenForelderFromSaksgrunnlag(situasjon, grunnlag, annenPart as AnnenPart, erFarEllerMedmor);\r\n        }\r\n    }\r\n};\r\n\r\nexport const opprettSøknadFraEksisterendeSak = (\r\n    søkerinfo: Søkerinfo,\r\n    eksisterendeSak: EksisterendeSak,\r\n    søkerRolle: Søkerrolle,\r\n    sak: Sak\r\n): Partial<Søknad> | undefined => {\r\n    const { grunnlag, uttaksplan } = eksisterendeSak;\r\n    const { fødselsdato, dekningsgrad, familiehendelseType } = grunnlag;\r\n    const erFarEllerMedmor = isFarEllerMedmor(søkerRolle);\r\n    const situasjon = getSøkersituasjonFromSaksgrunnlag(familiehendelseType);\r\n\r\n    if (!situasjon) {\r\n        return undefined;\r\n    }\r\n\r\n    const mockForelder: Partial<AnnenForelder> = {\r\n        fornavn: '',\r\n        etternavn: '',\r\n        fnr: '',\r\n        harRettPåForeldrepenger: false,\r\n        kanIkkeOppgis: false,\r\n    };\r\n    const søker = getSøkerFromSaksgrunnlag(grunnlag, erFarEllerMedmor);\r\n    const barn = getBarnFromSaksgrunnlag(situasjon, grunnlag, søkerinfo);\r\n    const annenForelderFraSak = sak.annenPart\r\n        ? getAnnenForelderFromSaksgrunnlag(situasjon, grunnlag, sak.annenPart, erFarEllerMedmor)\r\n        : undefined;\r\n    const annenForelderFraBarn = finnAnnenForelderPåFødselsdato(\r\n        søkerinfo.registrerteBarn,\r\n        ISOStringToDate(fødselsdato),\r\n        grunnlag,\r\n        situasjon,\r\n        erFarEllerMedmor\r\n    );\r\n\r\n    const annenForelder = annenForelderFraSak || annenForelderFraBarn || mockForelder;\r\n\r\n    if (!barn) {\r\n        return undefined;\r\n    }\r\n\r\n    const søknad: Partial<Søknad> = {\r\n        søker: søker as Søker,\r\n        søkersituasjon: {\r\n            situasjon: situasjon,\r\n            rolle: søkerRolle,\r\n        },\r\n        barn: barn,\r\n        annenForelder: annenForelder as AnnenForelder,\r\n        erEndringssøknad: true,\r\n        dekningsgrad,\r\n        uttaksplan,\r\n    };\r\n\r\n    return søknad;\r\n};\r\n*/\r\n","import { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { Kvittering } from 'app/types/Kvittering';\r\nimport Sak from 'app/types/Sak';\r\nimport { StorageKvittering } from 'app/types/StorageKvittering';\r\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\r\nimport { useRequest } from 'app/utils/hooks/useRequest';\r\nimport { AxiosResponse } from 'axios';\r\nimport getAxiosInstance from './apiInterceptor';\r\nimport { storageParser } from './storageParser';\r\nimport Environment from 'app/Environment';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { EksisterendeSakDTO } from 'app/types/EksisterendeSakDTO';\r\nimport { mapEksisterendeSakFromDTO } from 'app/utils/eksisterendeSakUtils';\r\nimport { formaterDato } from 'app/utils/dateUtils';\r\n\r\nexport interface TilgjengeligeStønadskontoerParams {\r\n    antallBarn: string;\r\n    morHarRett: boolean;\r\n    farHarRett: boolean;\r\n    dekningsgrad: Dekningsgrad.HUNDRE_PROSENT | Dekningsgrad.ÅTTI_PROSENT;\r\n    termindato: string | undefined;\r\n    fødselsdato: string | undefined;\r\n    omsorgsovertakelsesdato: string | undefined;\r\n    morHarAleneomsorg: boolean | undefined;\r\n    farHarAleneomsorg: boolean | undefined;\r\n    startdatoUttak: string;\r\n}\r\n\r\nconst formaterStønadskontoParamsDatoer = (dato: string | undefined, datoformat?: string): string | undefined => {\r\n    return dato !== undefined ? formaterDato(dato, datoformat) : undefined;\r\n};\r\n\r\nconst uttakBaseUrl = Environment.UTTAK_API_URL;\r\n// const sendSøknadUrl = '/soknad';\r\n// const sendEndringssøknadUrl = '/soknad/endre';\r\n\r\nconst useSøkerinfo = () => {\r\n    const { data, error } = useRequest<SøkerinfoDTO>('/sokerinfo', { config: { withCredentials: true } });\r\n\r\n    return {\r\n        søkerinfoData: data,\r\n        søkerinfoError: error,\r\n    };\r\n};\r\n\r\nconst useGetSaker = () => {\r\n    const { data, error } = useRequest<Sak[]>('/innsyn/saker', { fnr: '123', config: { withCredentials: true } });\r\n\r\n    return {\r\n        sakerData: data,\r\n        sakerError: error,\r\n    };\r\n};\r\n\r\nconst useGetEksisterendeSak = (saksnummer: string) => {\r\n    const { data, error } = useRequest<EksisterendeSakDTO>('/innsyn/uttaksplan', {\r\n        fnr: '123',\r\n        config: { withCredentials: true, params: saksnummer },\r\n    });\r\n\r\n    return {\r\n        eksisterendeSakData: data,\r\n        eksisterendeSakError: error,\r\n    };\r\n};\r\n\r\nconst useGetEksisterendeSakMedFnr = (søkerFnr: string, erFarEllerMedmor: boolean, annenPartFnr: string | undefined) => {\r\n    const { data, error } = useRequest<EksisterendeSakDTO>('/innsyn/uttaksplanannen', {\r\n        fnr: søkerFnr,\r\n        config: { params: { annenPart: annenPartFnr }, withCredentials: true },\r\n        isSuspended: annenPartFnr && erFarEllerMedmor ? false : true,\r\n    });\r\n\r\n    return {\r\n        eksisterendeSakAnnenPartData: mapEksisterendeSakFromDTO(data, erFarEllerMedmor, true),\r\n        eksisterendeSakAnnenPartError: error,\r\n    };\r\n};\r\n\r\nconst useStoredAppState = () => {\r\n    const { data, error } = useRequest<ForeldrepengesøknadContextState>('/storage', {\r\n        config: { transformResponse: storageParser, withCredentials: true },\r\n    });\r\n\r\n    return {\r\n        storageData: data,\r\n        storageError: error,\r\n    };\r\n};\r\n\r\nconst storeAppState = (state: ForeldrepengesøknadContextState) => {\r\n    const { søknad, version, currentRoute, uttaksplanInfo } = state;\r\n    return getAxiosInstance('123').post(\r\n        '/storage',\r\n        { søknad, version, currentRoute, uttaksplanInfo },\r\n        { withCredentials: true }\r\n    );\r\n};\r\n\r\nconst deleteStoredAppState = () => {\r\n    return getAxiosInstance('123').delete('/storage', { withCredentials: true });\r\n};\r\n\r\nconst sendStorageKvittering = (\r\n    storageKvittering: StorageKvittering,\r\n    fnr: string\r\n): Promise<AxiosResponse<Kvittering>> => {\r\n    return getAxiosInstance(fnr).post('/storage/kvittering/foreldrepenger', storageKvittering, {\r\n        withCredentials: true,\r\n        timeout: 15 * 1000,\r\n    });\r\n};\r\n\r\nconst useGetUttakskontoer = (params: TilgjengeligeStønadskontoerParams) => {\r\n    const {\r\n        antallBarn,\r\n        farHarRett,\r\n        morHarRett,\r\n        dekningsgrad,\r\n        fødselsdato,\r\n        termindato,\r\n        omsorgsovertakelsesdato,\r\n        morHarAleneomsorg,\r\n        farHarAleneomsorg,\r\n        startdatoUttak,\r\n    } = params;\r\n\r\n    const fpUttakServiceDateFormat = 'YYYYMMDD';\r\n\r\n    const urlParams = {\r\n        farHarRett,\r\n        morHarRett,\r\n        morHarAleneomsorg: morHarAleneomsorg || false,\r\n        farHarAleneomsorg: farHarAleneomsorg || false,\r\n        dekningsgrad,\r\n        antallBarn,\r\n        fødselsdato: formaterStønadskontoParamsDatoer(fødselsdato, fpUttakServiceDateFormat),\r\n        termindato: formaterStønadskontoParamsDatoer(termindato, fpUttakServiceDateFormat),\r\n        omsorgsovertakelseDato: formaterStønadskontoParamsDatoer(omsorgsovertakelsesdato, fpUttakServiceDateFormat),\r\n        startdatoUttak: formaterStønadskontoParamsDatoer(startdatoUttak, fpUttakServiceDateFormat),\r\n    };\r\n\r\n    const { data, error } = useRequest<TilgjengeligeStønadskontoerDTO>(`${uttakBaseUrl}/konto`, {\r\n        config: {\r\n            timeout: 15 * 1000,\r\n            params: urlParams,\r\n            withCredentials: false,\r\n        },\r\n        isSuspended: false,\r\n    });\r\n\r\n    return {\r\n        tilgjengeligeStønadskontoerData: data,\r\n        tilgjengeligeStønadskontoerError: error,\r\n    };\r\n};\r\n\r\n// function sendSøknad(søknad: SøknadForInnsending | EnkelEndringssøknadForInnsending) {\r\n//     const url = søknad.erEndringssøknad ? sendEndringssøknadUrl : sendSøknadUrl;\r\n\r\n//     return getAxiosInstance('123').post(url, søknad, {\r\n//         withCredentials: true,\r\n//         timeout: 120 * 1000,\r\n//         headers: {\r\n//             'content-type': 'application/json;',\r\n//         },\r\n//     });\r\n// }\r\n\r\n// function sendStorageKvittering(storageKvittering: StorageKvittering) {\r\n//     return getAxiosInstance('123').post('/storage/kvittering/foreldrepenger', storageKvittering, {\r\n//         withCredentials: true,\r\n//         timeout: 15 * 1000,\r\n//     });\r\n// }\r\n\r\n// function getStorageKvittering() {\r\n//     return getAxiosInstance('123').get('/storage/kvittering/foreldrepenger', {\r\n//         withCredentials: true,\r\n//         timeout: 15 * 1000,\r\n//     });\r\n// }\r\n\r\nconst Api = {\r\n    useGetSaker,\r\n    useGetUttakskontoer,\r\n    storeAppState,\r\n    deleteStoredAppState,\r\n    sendStorageKvittering,\r\n    useGetEksisterendeSakMedFnr,\r\n    useStoredAppState,\r\n    useSøkerinfo,\r\n    useGetEksisterendeSak,\r\n    // sendSøknad,\r\n    // getStorageKvittering,\r\n};\r\n\r\nexport default Api;\r\n","import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\r\nimport Environment from 'app/Environment';\r\n\r\nconst apiBaseUrl = Environment.REST_API_URL;\r\n\r\nconst AxiosInstance = axios.create({ baseURL: apiBaseUrl });\r\n\r\nconst getAxiosInstance = (fnr?: string) => {\r\n    AxiosInstance.interceptors.request.use((config: AxiosRequestConfig): AxiosRequestConfig => {\r\n        config.timeout = 60 * 1000;\r\n\r\n        if (process.env.NODE_ENV !== 'development' && fnr) {\r\n            config.headers.fnr = fnr;\r\n        }\r\n        return config;\r\n    });\r\n\r\n    AxiosInstance.interceptors.response.use(\r\n        (response: AxiosResponse) => {\r\n            return response;\r\n        },\r\n        (response: AxiosError) => {\r\n            if (response.response && response.response.status === 409) {\r\n            }\r\n            return Promise.reject(response);\r\n        }\r\n    );\r\n\r\n    return AxiosInstance;\r\n};\r\n\r\nexport default getAxiosInstance;\r\n","import * as React from 'react';\r\n\r\nconst CheckmarkIkon = (props: any) => (\r\n    <svg focusable=\"false\" role=\"presentation\" width={24} height={24} {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#1C6937\"\r\n                d=\"M12 .5C18.34.5 23.5 5.66 23.5 12S18.34 23.5 12 23.5C5.659 23.5.5 18.341.5 12S5.659.5 12 .5z\"\r\n            />\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M16.329 7.76a1 1 0 1 1 1.363 1.464l-7.52 7.007a1 1 0 0 1-1.388-.024L6.28 13.709a1 1 0 0 1 1.413-1.416l1.82 1.817 6.816-6.35z\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default CheckmarkIkon;\r\n","import * as React from 'react';\r\n\r\ninterface Props {\r\n    transparentBackground?: boolean;\r\n}\r\n\r\nconst VeilederNormal: React.FunctionComponent<Props> = ({ transparentBackground }) => (\r\n    <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 184 184\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n        <title>NAV veileder</title>\r\n        <defs>\r\n            <circle id=\"path-veileder-1\" cx=\"92\" cy=\"92\" r=\"92\" />\r\n            <path\r\n                d=\"M101.810133,50.0610156 L101.721719,50.0610156 C101.721719,22.7239453 81.8017601,0.5625 57.2241912,0.5625 C32.6499586,0.5625 12.73,22.7239453 12.73,50.0610156 L12.73,50.0857715 C12.721659,73.4321973 0.558823529,86.7805566 0.558823529,86.7805566 C0.558823529,86.7805566 12.5698529,101.363408 57.2258594,101.363408 C57.2408732,101.363408 57.2558869,101.363408 57.2709007,101.363408 C57.2859145,101.363408 57.2975919,101.363408 57.3126057,101.363408 C101.971949,101.363408 113.982978,86.7805566 113.982978,86.7805566 C113.982978,86.7805566 101.810133,73.4239453 101.810133,50.0610156\"\r\n                id=\"path-veileder-3\"\r\n            />\r\n            <path\r\n                d=\"M136.232308,172.688701 C123.107248,179.898969 108.032548,184 92,184 C75.3402045,184 59.7146708,179.571799 46.2362132,171.828213 L46.2362132,151.148343 C46.2362132,139.661598 59.4361654,127.337779 69.2432912,121.702281 C71.0426321,124.754626 75.7927857,136.924152 90.2482666,136.924152 C104.597596,136.924152 111.448764,124.055747 111.741134,121.033203 C121.74621,126.309309 136.318934,139.182969 136.318934,151.148343 L136.318934,170.757239 C136.318934,171.408316 136.289643,172.052553 136.232308,172.688701 Z\"\r\n                id=\"path-veileder-5\"\r\n            />\r\n        </defs>\r\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            {transparentBackground !== true && (\r\n                <use className=\"Background-veileder\" fill=\"#C1B5D0\" xlinkHref=\"#path-veileder-1\" />\r\n            )}\r\n            <g className=\"Head\" transform=\"translate(34.000000, 33.000000)\">\r\n                <use className=\"Hair\" fill=\"#D2654C\" xlinkHref=\"#path-veileder-3\" />\r\n                <path\r\n                    d=\"M35.1424429,88.7918975 C36.8828197,91.545216 41.770955,139.920311 56.4434743,139.920311 C71.1191694,139.920311 77.7445056,90.6457646 77.7445056,88.0809374 C55.2759879,75.3469309 35.1424429,88.7918975 35.1424429,88.7918975 Z\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <path\r\n                    d=\"M23.1456799,45.9823968 C23.1456799,45.9823968 22.9708433,46.9648859 22.7444922,46.8032399 C22.4291618,46.676804 22.0919769,46.6015826 21.7329373,46.5999821 C20.1859452,46.5983816 18.9277457,47.8835474 18.9246236,49.4711992 L18.9090132,60.4569161 C18.9058911,62.044568 20.1578464,63.3329346 21.7079607,63.3361355 C22.3276941,63.3361355 22.8959133,63.1248754 23.3611036,62.7743757 C27.1076033,80.46421 40.4607527,92.9571296 56.3833763,92.9843374 C72.306,93.0099447 85.7012975,80.5586369 89.4993115,62.8816062 C89.9629409,63.2321059 90.53116,63.446567 91.1524545,63.4481674 C92.7010077,63.4497679 93.9592072,62.1646021 93.9607683,60.5785507 L93.9779397,49.5912334 C93.9795008,48.0035815 92.7275454,46.7152149 91.1789922,46.712014 C90.8215137,46.712014 90.4812067,46.7872354 90.1674373,46.9120709 C54.2572378,51.1228693 41.7314405,26.9703505 40.6730543,26.96875 C40.6730543,26.96875 25.6542737,40.8769439 23.1456799,45.9823968 Z\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <g transform=\"translate(41.000000, 48.000000)\" fill=\"#635E59\">\r\n                    <path\r\n                        d=\"M3.47531756,8.31698633 C1.06143428,8.49687891 0.385813879,4.9765957 1.11314844,2.67760156 C1.24994072,2.24189844 2.04900781,0.258128906 3.46364017,0.258128906 C4.87660432,0.258128906 5.50051057,1.34243555 5.58725689,1.52892969 C6.62654458,3.77016016 6.11607583,8.11893945 3.47531756,8.31698633\"\r\n                        className=\"eye\"\r\n                    />\r\n                    <path\r\n                        d=\"M30.4157229,8.31698633 C32.8296062,8.49687891 33.5052266,4.9765957 32.777892,2.67760156 C32.6410997,2.24189844 31.8420326,0.258128906 30.4274003,0.258128906 C29.0144361,0.258128906 28.3905299,1.34243555 28.3037835,1.52892969 C27.2644959,3.77016016 27.7749646,8.11893945 30.4157229,8.31698633\"\r\n                        className=\"eye\"\r\n                    />\r\n                </g>\r\n                <path\r\n                    d=\"M58.7110091,60.364205 C60.1306218,60.1480094 61.1001552,60.2836877 61.4473734,60.7052702 C62.7579535,62.2987995 62.3387549,63.984682 60.090273,65.3686506 C58.9080828,66.0960311 57.2808371,66.3520422 56.4193636,65.9748641 C55.9981117,65.7904278 55.5054912,65.9787594 55.3190649,66.3955144 C55.1326385,66.8122694 55.3230022,67.2996313 55.744254,67.4840675 C57.1680527,68.1074478 59.3576241,67.7629673 60.9713968,66.7700417 C64.0269504,64.8893106 64.7262249,62.0770525 62.7409852,59.6632077 C61.9008785,58.6431736 60.4137473,58.4350617 58.4572041,58.7330274 C58.0019066,58.8023656 57.6896312,59.2237268 57.7597175,59.674164 C57.8298039,60.1246013 58.2557116,60.4335431 58.7110091,60.364205 Z\"\r\n                    fill=\"#D1BFA3\"\r\n                    fillRule=\"nonzero\"\r\n                    className=\"nose\"\r\n                />\r\n                <path\r\n                    d=\"M68.2190679,72.3964795 C68.1438286,72.5669742 67.9712887,72.8934138 67.6939953,73.323403 C67.2246061,74.0512684 66.6351711,74.7809912 65.9192675,75.4614735 C63.785928,77.4892605 61.0092008,78.6618137 57.4751366,78.5545725 C54.0292098,78.4500058 51.2648945,77.2955467 49.0975966,75.433905 C48.3018655,74.7503966 47.6449101,74.0184026 47.1198035,73.288772 C46.8101486,72.8585093 46.6167982,72.5322835 46.5322349,72.3622862 C46.328828,71.9533782 45.828872,71.7850263 45.4155518,71.9862618 C45.0022316,72.1874973 44.8320632,72.6821164 45.0354701,73.0910244 C45.157988,73.3373215 45.3964205,73.7396111 45.7608706,74.2460111 C46.3592725,75.0774849 47.1033887,75.9065954 48.003913,76.6801179 C50.4504998,78.7816601 53.577186,80.0874559 57.423993,80.2041873 C61.4298499,80.3257451 64.6323718,78.9733878 67.0750354,76.6515814 C67.8917829,75.8752447 68.5631498,75.0440899 69.1003465,74.2110776 C69.4270046,73.7045403 69.6394661,73.3025704 69.747911,73.056831 C69.9322296,72.6391594 69.7394062,72.1527449 69.3172278,71.9703939 C68.8950494,71.7880429 68.4033865,71.9788079 68.2190679,72.3964795 Z\"\r\n                    className=\"Mouth-happy\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M65.7877687,76.0260621 C65.5868543,75.6656528 65.1970553,75.1736864 64.5869694,74.6902823 C63.4640698,73.8005482 62.0117505,73.3136803 60.2375239,73.4377742 L56.8172845,73.6787616 C56.3577881,73.7111374 56.0118216,74.1059022 56.0445467,74.5604936 C56.0772718,75.0150849 56.4762962,75.3573583 56.9357927,75.3249825 L60.3555996,75.0840255 C61.6954851,74.9903106 62.7381985,75.3398644 63.5441367,75.9784528 C63.9659849,76.312706 64.2240389,76.6383967 64.3269996,76.8230922 C64.5494683,77.2221664 65.056819,77.3672587 65.4601993,77.1471649 C65.8635795,76.9270711 66.0102374,76.4251363 65.7877687,76.0260621 Z\"\r\n                    className=\"Mouth-unsure\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M48.5675754,75.364998 C48.5675754,75.364998 49.7987059,76.7694805 53.2268539,76.7430742 L56.65667,76.716668\"\r\n                    className=\"Mouth-hesitant\"\r\n                    stroke=\"#D19E9C\"\r\n                    strokeWidth=\"1.77023006\"\r\n                    strokeLinecap=\"round\"\r\n                />\r\n            </g>\r\n            <use fill=\"#5D4479\" xlinkHref=\"#path-veileder-5\" />\r\n            <g transform=\"translate(97.950368, 145.376465)\">\r\n                <path\r\n                    d=\"M27.9383089,20.2172852 L2.0877182,20.2172852 C0.934060587,20.2172852 0,19.2791268 0,18.120408 L0,4.16141873 C0,3.00269992 0.934060587,2.06298828 2.0877182,2.06298828 L27.9383089,2.06298828 C29.0919665,2.06298828 30.0275735,3.00269992 30.0275735,4.16141873 L30.0275735,18.120408 C30.0275735,19.2791268 29.0919665,20.2172852 27.9383089,20.2172852\"\r\n                    fill=\"#D2242A\"\r\n                />\r\n                <path\r\n                    d=\"M21.4592616,11.9790218 C21.4592616,15.4071701 18.6368027,18.1896255 15.1538943,18.1896255 C11.6650626,18.1896255 8.8411228,15.4071701 8.8411228,11.9790218 C8.8411228,8.5508734 11.6650626,5.76841796 15.1538943,5.76841796 C18.6368027,5.76841796 21.4592616,8.5508734 21.4592616,11.9790218\"\r\n                    fill=\"#FFFFFF\"\r\n                />\r\n                <polygon\r\n                    fill=\"#FFFFFF\"\r\n                    points=\"6.98001766 14.7165848 5.74944925 14.7165848 7.06442488 11.543507 8.29795494 11.543507\"\r\n                />\r\n                <polygon\r\n                    fill=\"#FFFFFF\"\r\n                    points=\"22.4888816 14.7165848 21.726255 14.7165848 23.0412306 11.543507 23.8038572 11.543507\"\r\n                />\r\n                <polygon\r\n                    fill=\"#FFFFFF\"\r\n                    points=\"24.5937311 14.7165848 24.2709105 14.7165848 25.5829245 11.543507 25.9057451 11.543507\"\r\n                />\r\n                <path\r\n                    d=\"M10.3610451,14.7012805 L11.3295068,14.7012805 C11.379855,14.7012805 11.4183566,14.6633843 11.4183566,14.6152853 L11.4183566,11.646264 C11.4183566,11.598165 11.379855,11.5602688 11.3295068,11.5602688 L10.3506793,11.5602688 C10.2855228,11.5602688 10.2381363,11.6098253 10.2381363,11.6724998 L9.85312093,12.6067868 C9.82942767,12.6548859 9.86792921,12.7131877 9.91975821,12.7131877 L10.1966731,12.7131877 C10.2381363,12.7131877 10.2736762,12.7437962 10.2736762,12.7889801 L10.2736762,14.6152853 C10.2736762,14.6633843 10.3121777,14.7012805 10.3610451,14.7012805\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M12.4651542,14.7012805 L13.4365776,14.7012805 C13.4869258,14.7012805 13.5298698,14.6633843 13.5298698,14.6152853 L13.5298698,11.646264 C13.5298698,11.598165 13.4869258,11.5602688 13.4365776,11.5602688 L11.9261326,11.5602688 C11.862457,11.5602688 11.8121088,11.6098253 11.8121088,11.6724998 L11.4256126,12.6067868 L11.2923381,12.7131877 L12.0653305,12.7131877 C12.2371066,12.7131877 12.3777853,12.8472819 12.3777853,13.0192724 L12.3777853,14.6152853 C12.3777853,14.6633843 12.4162868,14.7012805 12.4651542,14.7012805\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M16.8091643,11.5605603 L15.8377408,11.5605603 C15.7888735,11.5605603 15.7488911,11.5984565 15.7488911,11.6465555 L15.7488911,14.6155768 C15.7488911,14.6636759 15.7888735,14.7015721 15.8377408,14.7015721 L16.8195301,14.7015721 C16.8846865,14.7015721 16.932073,14.6520155 16.932073,14.589341 L17.3170884,13.655054 C17.3407817,13.6040399 17.303761,13.5486531 17.2445278,13.5486531 L16.9764979,13.5486531 C16.932073,13.5486531 16.9009756,13.513672 16.9009756,13.4743183 L16.9009756,11.6465555 C16.9009756,11.5984565 16.8565508,11.5605603 16.8091643,11.5605603\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M12.8135931,14.7012805 L13.4518301,14.7012805 C13.5140249,14.7012805 13.5643731,14.6502664 13.5643731,14.590507 L13.9493885,13.6533049 C13.9716009,13.6037484 13.9345802,13.5469041 13.8783087,13.5469041 L13.6087979,13.5469041 L12.8135931,14.7012805 Z\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M19.4086105,11.5605603 L20.5636566,11.5605603 C20.6199281,11.5605603 20.6599105,11.6130319 20.6362172,11.664046 L19.4130529,14.653473 C19.404168,14.6840815 19.3760322,14.7015721 19.3419732,14.7015721 L18.2965083,14.7015721 L19.3330882,11.6115744 C19.3449348,11.5809659 19.3760322,11.5605603 19.4086105,11.5605603\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M17.9603603,11.5605603 L16.3270065,11.5605603 C16.2115019,11.5605603 16.7964292,11.6713338 16.8378923,11.7748195 L17.9929385,14.6024589 C18.0166318,14.6651334 18.0758649,14.7015721 18.1410213,14.7015721 L19.1316955,14.7015721 L18.1128856,11.6669611 C18.0906732,11.599914 18.0284784,11.5605603 17.9603603,11.5605603\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M15.8276712,12.5677246 C15.8276712,13.2002996 15.7462256,13.2381958 15.7462256,13.2381958 C15.7462256,13.2381958 15.6544143,12.6318566 15.1790684,12.6318566 C14.7126074,12.6318566 14.6059878,12.9000451 14.6059878,13.0997289 C14.6059878,13.3314787 14.8444011,13.5486531 14.9776757,13.5486531 L15.8276712,13.5486531 L15.3256704,14.6432702 C15.3079004,14.6797089 15.2723606,14.7015721 15.2323782,14.7015721 L14.845882,14.7015721 C14.4416158,14.7015721 13.3857852,14.1797706 13.3857852,13.1696911 C13.3857852,12.1581542 14.1706242,11.5605603 14.8251504,11.5605603 C15.3656527,11.5605603 15.8276712,11.9264043 15.8276712,12.5677246 Z\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M16.5670488,4.94461292 L13.8882302,4.94461292 C13.6897992,4.94461292 13.5298698,4.78719794 13.5298698,4.59188677 L13.5298698,4.14733522 C13.5298698,3.95348159 13.6897992,3.79460907 13.8882302,3.79460907 L16.5670488,3.79460907 C16.7654798,3.79460907 16.9254093,3.95348159 16.9254093,4.14733522 L16.9254093,4.59188677 C16.9254093,4.78719794 16.7654798,4.94461292 16.5670488,4.94461292\"\r\n                    fill=\"#5A1F57\"\r\n                />\r\n                <polygon\r\n                    fill=\"#C2B5CF\"\r\n                    points=\"14.4521297 4.53857422 16.0040379 4.53857422 16.0040379 0.412597656 14.4521297 0.412597656\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default VeilederNormal;\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport NavFrontendSpinner from 'nav-frontend-spinner';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { bemUtils, intlUtils, SlettKnapp, VedleggIkon } from '@navikt/fp-common';\r\nimport { Attachment as AttachmentType } from 'app/types/Attachment';\r\nimport { bytesString } from 'app/utils/globalUtil';\r\n\r\nimport './attachment.less';\r\n\r\nexport interface Props {\r\n    attachment: AttachmentType;\r\n    showFileSize?: boolean;\r\n    onDelete?: (file: AttachmentType) => void;\r\n}\r\n\r\nconst Attachment: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('attachment');\r\n    const cls = classnames(bem.block, {\r\n        [bem.modifier('pending')]: attachment.pending,\r\n    });\r\n\r\n    return (\r\n        <div className={cls}>\r\n            {attachment.pending && (\r\n                <div className={bem.element('spinner')}>\r\n                    <NavFrontendSpinner type=\"S\" />\r\n                </div>\r\n            )}\r\n            <VedleggIkon className={bem.element('icon')} width={20} height={20} />\r\n            <div className={bem.element('filename')}>\r\n                {attachment.url ? (\r\n                    <Lenke href={attachment.url} target=\"_blank\">\r\n                        {attachment.filename}\r\n                    </Lenke>\r\n                ) : (\r\n                    <span>{attachment.filename}</span>\r\n                )}\r\n                {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\r\n            </div>\r\n            {onDelete && (\r\n                <span className={bem.element('deleteButton')}>\r\n                    <SlettKnapp\r\n                        onClick={() => onDelete(attachment)}\r\n                        ariaLabel={intlUtils(intl, 'vedlegg.arialabel.slett', { navn: attachment.filename })}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Attachment;\r\n","import * as React from 'react';\r\nimport AttachmentComponent from './Attachment';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport './attachment.less';\r\n\r\ninterface Props {\r\n    attachments: Attachment[];\r\n    showFileSize?: boolean;\r\n    onDelete?: (file: Attachment) => void;\r\n}\r\n\r\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\r\n    const { attachments, showFileSize, onDelete } = props;\r\n    return (\r\n        <ul className=\"attachmentList\">\r\n            <TransitionGroup>\r\n                {attachments.map((attachment, index) => (\r\n                    <CSSTransition classNames=\"transitionFade\" timeout={500} key={index}>\r\n                        <li>\r\n                            <AttachmentComponent\r\n                                attachment={attachment}\r\n                                onDelete={onDelete}\r\n                                showFileSize={showFileSize}\r\n                            />\r\n                        </li>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n};\r\nexport default AttachmentList;\r\n","import { bemUtils, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport links from 'app/links/links';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nimport './dinePlikter.less';\r\n\r\nconst DinePlikter = () => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('dinePlikter');\r\n\r\n    return (\r\n        <UtvidetInformasjon apneLabel=\"Les om dine plikter\">\r\n            <article className=\"velkommenDinePlikter\">\r\n                <ul className={bem.block}>\r\n                    <li>\r\n                        <Normaltekst>{intlUtils(intl, 'velkommen.dinePlikter.listeElement.1')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>\r\n                            <FormattedMessage\r\n                                id=\"velkommen.dinePlikter.listeElement.2\"\r\n                                values={{\r\n                                    link: (\r\n                                        <Lenke href={links.rettOgPlikt} target=\"_blank\">\r\n                                            <FormattedMessage id=\"velkommen.dinePlikter.listeElement.2.link\" />\r\n                                        </Lenke>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Normaltekst>\r\n                    </li>\r\n                </ul>\r\n            </article>\r\n        </UtvidetInformasjon>\r\n    );\r\n};\r\n\r\nexport default DinePlikter;\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport interface Props {\r\n    tekst?: string;\r\n    url: string;\r\n    lenkeTekst: string;\r\n}\r\n\r\nconst EksternUrl: React.FunctionComponent<Props> = ({ tekst, url, lenkeTekst }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <span>\r\n            {tekst && intlUtils(intl, tekst)}\r\n            <a href={url} className=\"lenke\" rel=\"noreferrer\" target=\"_blank\" style={{ marginLeft: 3 }}>\r\n                {lenkeTekst}\r\n                <EksternIkon />\r\n            </a>\r\n        </span>\r\n    );\r\n};\r\n\r\nconst EksternIkon = () => (\r\n    <svg\r\n        className=\"eksternIkon\"\r\n        width=\"16px\"\r\n        height=\"16px\"\r\n        viewBox=\"0 0 24 24\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n    >\r\n        <title>Ekstern lenke</title>\r\n        <g stroke=\"none\" strokeWidth=\"10\" fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                d=\"M22.5217391,16.5696841 C22.5217391,16.3055479 22.7358638,16.0914232 23,16.0914232 C23.2641362,16.0914232 23.4782609,16.3055479 23.4782609,16.5696841 L23.4782609,19.3333333 C23.4782609,21.6225136 21.6225136,23.4782609 19.3333333,23.4782609 L4.66666667,23.4782609 C2.3774864,23.4782609 0.52173913,21.6225136 0.52173913,19.3333333 L0.52173913,4.66666667 C0.52173913,2.3774864 2.3774864,0.52173913 4.66666667,0.52173913 L7.47238494,0.52173913 C7.73652113,0.52173913 7.95064581,0.735863815 7.95064581,1 C7.95064581,1.26413618 7.73652113,1.47826087 7.47238494,1.47826087 L4.66666667,1.47826087 C2.90575877,1.47826087 1.47826087,2.90575877 1.47826087,4.66666667 L1.47826087,19.3333333 C1.47826087,21.0942412 2.90575877,22.5217391 4.66666667,22.5217391 L19.3333333,22.5217391 C21.0942412,22.5217391 22.5217391,21.0942412 22.5217391,19.3333333 L22.5217391,16.5696841 Z\"\r\n                fill=\"#0067C5\"\r\n            />\r\n            <path\r\n                d=\"M10.1381815,14.5381815 C9.95140902,14.724954 9.64859098,14.724954 9.4618185,14.5381815 C9.27504601,14.351409 9.27504601,14.048591 9.4618185,13.8618185 L22.6618185,0.661818496 C22.848591,0.475046009 23.151409,0.475046009 23.3381815,0.661818496 C23.524954,0.848590983 23.524954,1.15140902 23.3381815,1.3381815 L10.1381815,14.5381815 Z\"\r\n                fill=\"#0067C5\"\r\n            />\r\n            <path\r\n                d=\"M22.5217391,1.47826087 L14.2158243,1.47826087 C13.9516881,1.47826087 13.7375634,1.26413618 13.7375634,1 C13.7375634,0.735863815 13.9516881,0.52173913 14.2158243,0.52173913 L23.4782609,0.52173913 L23.4782609,9.93487469 C23.4782609,10.1990109 23.2641362,10.4131356 23,10.4131356 C22.7358638,10.4131356 22.5217391,10.1990109 22.5217391,9.93487469 L22.5217391,1.47826087 Z\"\r\n                fill=\"#0067C5\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default EksternUrl;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n    legend: React.ReactNode;\r\n    children: React.ReactNode;\r\n    className?: string;\r\n}\r\n\r\nconst Fieldset: React.FunctionComponent<Props> = ({ legend, className, children }) => {\r\n    return (\r\n        <fieldset\r\n            className={className}\r\n            style={{ display: 'flex', flexDirection: 'column', border: 'none', padding: '0', margin: '0' }}\r\n        >\r\n            <legend style={{ margin: '0 0 0.5rem 0' }}>{legend}</legend>\r\n            {children}\r\n        </fieldset>\r\n    );\r\n};\r\n\r\nexport default Fieldset;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\ninterface IconRef {\r\n    id: string;\r\n    viewBox: string;\r\n}\r\n\r\ninterface Props {\r\n    iconRef: IconRef;\r\n    height?: number;\r\n    width?: number | string;\r\n    className?: string;\r\n}\r\n\r\nconst FlexibleSvg: FunctionComponent<Props> = ({ iconRef, height, width, className, ...other }) => {\r\n    const viewBox = { 'view-box': iconRef.viewBox };\r\n    return (\r\n        <svg\r\n            focusable=\"false\"\r\n            role=\"presentation\"\r\n            className={className}\r\n            height={height}\r\n            width={width}\r\n            {...viewBox}\r\n            {...other}\r\n        >\r\n            <use xlinkHref={`#${iconRef.id}`} />\r\n        </svg>\r\n    );\r\n};\r\nexport default FlexibleSvg;\r\n","import React from 'react';\r\nimport { bemUtils } from '@navikt/fp-common';\r\nimport { ForeldreparForelder, ForeldreparIllustrasjonsvariant } from 'app/types/ForeldreparSituasjonTypes';\r\nimport FlexibleSvg from '../flexible-svg/FlexibleSVG';\r\n\r\nimport './foreldrepar.less';\r\n\r\ninterface Props {\r\n    forelder1: ForeldreparForelder;\r\n    forelder2?: ForeldreparForelder;\r\n    variant?: ForeldreparIllustrasjonsvariant;\r\n    kompakt?: boolean;\r\n}\r\n\r\nconst bem = bemUtils('foreldrepar');\r\n\r\nconst Foreldrepar: React.FunctionComponent<Props> = ({ forelder1, forelder2, variant, kompakt }) => {\r\n    const firstSvg = require(`./assets/${forelder1}.svg`).default;\r\n    const secondSvg = forelder2 ? require(`./assets/${forelder2}.svg`).default : undefined;\r\n\r\n    return (\r\n        <div role=\"presentation\" className={bem.classNames(bem.block, bem.modifierConditional('kompakt', kompakt))}>\r\n            <Forelder\r\n                className={bem.element('firstParent')}\r\n                svg={firstSvg}\r\n                lessOpacity={variant === 'førsteForelderHalvtSynlig'}\r\n            />\r\n            {secondSvg && (\r\n                <>\r\n                    {variant && variant === 'foreldreSeparert' && <span className={bem.element('parentSeparator')} />}\r\n                    <Forelder\r\n                        className={bem.element('secondParent')}\r\n                        svg={secondSvg}\r\n                        lessOpacity={variant === 'andreForelderHalvtSynlig'}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Forelder = ({ className, svg, lessOpacity }: { className: string; svg: any; lessOpacity?: boolean }) => {\r\n    const svgToRender = (\r\n        <FlexibleSvg\r\n            className={bem.classNames(className, bem.modifierConditional('halfOpacity', lessOpacity))}\r\n            iconRef={svg}\r\n            width={31}\r\n            height={45}\r\n        />\r\n    );\r\n\r\n    return svgToRender;\r\n};\r\n\r\nexport default Foreldrepar;\r\n","import Environment from 'app/Environment';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport getAxiosInstance from './apiInterceptor';\r\n\r\nfunction saveAttachment(attachment: Attachment) {\r\n    const config = {\r\n        withCredentials: true,\r\n        timeout: 45 * 1000,\r\n        headers: {\r\n            'content-type': 'multipart/form-data',\r\n        },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('id', attachment.id);\r\n    formData.append('vedlegg', attachment.file, attachment.filename);\r\n\r\n    const url = `${Environment.REST_API_URL}/storage/vedlegg`;\r\n    return getAxiosInstance().post(url, formData, config);\r\n}\r\n\r\nconst AttachmentApi = { saveAttachment };\r\n\r\nexport default AttachmentApi;\r\n","import React, { useState } from 'react';\r\nimport { ArrayHelpers, useFormikContext } from 'formik';\r\nimport FormikFileInput from '@navikt/sif-common-formik/lib/components/formik-file-input/FormikFileInput';\r\nimport { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport AttachmentApi from 'app/api/attachmentApi';\r\nimport AttachmentList from '../attachment/AttachmentList';\r\nimport { deleteAttachment } from 'app/utils/globalUtil';\r\nimport { IntlShape, useIntl } from 'react-intl';\r\nimport { isAttachmentWithError, mapFilTilVedlegg } from 'app/utils/vedleggUtils';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\n\r\nexport type FieldArrayReplaceFn = (index: number, value: any) => void;\r\nexport type FieldArrayPushFn = (obj: any) => void;\r\nexport type FieldArrayRemoveFn = (index: number) => undefined;\r\n\r\nexport interface Props {\r\n    attachments: Attachment[];\r\n    name: any;\r\n    label: string;\r\n    attachmentType: AttachmentType;\r\n    skjemanummer: Skjemanummer;\r\n    onFileInputClick?: () => void;\r\n}\r\n\r\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\r\n\r\nconst mapFilerTilPendingVedlegg = (\r\n    filer: File[],\r\n    attachmentType: AttachmentType,\r\n    skjemanummer: Skjemanummer\r\n): Attachment[] => {\r\n    return filer.map((fil) => {\r\n        const nyttVedlegg = mapFilTilVedlegg(fil, attachmentType, skjemanummer);\r\n        nyttVedlegg.pending = true;\r\n        return nyttVedlegg;\r\n    });\r\n};\r\n\r\nconst fileExtensionIsValid = (filename: string): boolean => {\r\n    const ext = filename.split('.').pop();\r\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\r\n};\r\n\r\nconst sjekkFiltypeVedlegg = (\r\n    alleNyeVedlegg: Attachment[],\r\n    setErrors: React.Dispatch<React.SetStateAction<string[]>>,\r\n    intl: IntlShape\r\n): Attachment[] => {\r\n    return alleNyeVedlegg.filter((vedlegg) => {\r\n        const erGyldig = fileExtensionIsValid(vedlegg.filename);\r\n        if (!erGyldig) {\r\n            setErrors((oldState) =>\r\n                oldState.concat(intlUtils(intl, 'vedlegg.feilmelding.ugyldig.type', { filename: vedlegg.filename }))\r\n            );\r\n        }\r\n        return erGyldig;\r\n    });\r\n};\r\n\r\nconst lastOppVedlegg = (\r\n    alleNyeVedlegg: Attachment[],\r\n    replaceFn: FieldArrayReplaceFn,\r\n    removeFn: FieldArrayRemoveFn,\r\n    setErrors: React.Dispatch<React.SetStateAction<string[]>>,\r\n    antallEksisterendeVedlegg: number,\r\n    intl: IntlShape\r\n): void => {\r\n    alleNyeVedlegg.forEach(async (vedlegg, index) => {\r\n        try {\r\n            const response = await AttachmentApi.saveAttachment(vedlegg);\r\n            vedlegg.pending = false;\r\n            vedlegg.url = response.headers.location;\r\n            vedlegg.uploaded = true;\r\n            vedlegg.uuid = response.data;\r\n            replaceFn(antallEksisterendeVedlegg + index, vedlegg);\r\n        } catch (error) {\r\n            removeFn(antallEksisterendeVedlegg + index);\r\n            setErrors((oldState) =>\r\n                oldState.concat(\r\n                    intlUtils(intl, 'vedlegg.feilmelding.opplasting.feilet', { filename: vedlegg.filename })\r\n                )\r\n            );\r\n        }\r\n    });\r\n};\r\n\r\nconst FormikFileUploader: React.FunctionComponent<Props> = ({\r\n    attachments,\r\n    name,\r\n    onFileInputClick,\r\n    attachmentType,\r\n    skjemanummer,\r\n    ...otherProps\r\n}) => {\r\n    const intl = useIntl();\r\n    const { setFieldValue } = useFormikContext<any>();\r\n    const [errors, setErrors] = useState<string[]>([]);\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\">\r\n                <FormikFileInput\r\n                    name={name}\r\n                    acceptedExtensions={VALID_EXTENSIONS.join(', ')}\r\n                    onFilesSelect={(files: File[], { push, replace, remove }: ArrayHelpers) => {\r\n                        const alleNyeVedlegg = mapFilerTilPendingVedlegg(files, attachmentType, skjemanummer);\r\n                        const alleNyeGyldigeVedlegg = sjekkFiltypeVedlegg(alleNyeVedlegg, setErrors, intl);\r\n                        alleNyeGyldigeVedlegg.forEach((nyttVedlegg) => push(nyttVedlegg));\r\n                        lastOppVedlegg(alleNyeGyldigeVedlegg, replace, remove, setErrors, attachments.length, intl);\r\n                    }}\r\n                    onClick={onFileInputClick}\r\n                    feil={\r\n                        errors.length > 0\r\n                            ? errors.map((error) => <Normaltekst key={error}>{error}</Normaltekst>)\r\n                            : undefined\r\n                    }\r\n                    {...otherProps}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={attachments.length > 0}>\r\n                <AttachmentList\r\n                    attachments={attachments.filter((a) => !isAttachmentWithError(a))}\r\n                    showFileSize={true}\r\n                    onDelete={(file: Attachment) => {\r\n                        setFieldValue(name, deleteAttachment(attachments, file));\r\n                    }}\r\n                />\r\n            </Block>\r\n            <Block>\r\n                <UtvidetInformasjon apneLabel={intlUtils(intl, 'pictureScanninGuide.apneLabel')}>\r\n                    <PictureScanningGuide />\r\n                </UtvidetInformasjon>\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormikFileUploader;\r\n","export type ForeldreparForelder = 'far1' | 'far2' | 'far3' | 'far4' | 'medmor1' | 'medmor2' | 'mor1' | 'mor2';\r\n\r\nexport type ForeldreparIllustrasjonsvariant =\r\n    | 'førsteForelderHalvtSynlig'\r\n    | 'andreForelderHalvtSynlig'\r\n    | 'foreldreSeparert'\r\n    | 'foreldreNærmere';\r\n\r\nexport enum ForeldreparSituasjon {\r\n    farOgMor = 'farOgMor',\r\n    bareFar = 'bareFar',\r\n    bareMor = 'bareMor',\r\n    aleneomsorg = 'aleneomsorg',\r\n    farOgFar = 'farOgFar',\r\n    morOgMedmor = 'morOgMedmor',\r\n}\r\n","import { Kjønn } from '@navikt/fp-common';\r\nimport { ForeldreparSituasjon } from 'app/types/ForeldreparSituasjonTypes';\r\nimport { SituasjonForelderSvg } from 'app/types/SituasjonForelderSvg';\r\n\r\nexport const getForeldreparSituasjon = (\r\n    søkerKjønn: Kjønn,\r\n    annenForelderKjønn: Kjønn | undefined,\r\n    erDeltUttak: boolean,\r\n    morErAleneOmOmsorg: boolean,\r\n    farMedmorErAleneOmOmsorg: boolean\r\n): ForeldreparSituasjon => {\r\n    if (erDeltUttak) {\r\n        if (søkerKjønn !== annenForelderKjønn) {\r\n            return ForeldreparSituasjon.farOgMor;\r\n        }\r\n        return søkerKjønn === 'M' ? ForeldreparSituasjon.farOgFar : ForeldreparSituasjon.morOgMedmor;\r\n    } else {\r\n        if (søkerKjønn === 'K') {\r\n            return morErAleneOmOmsorg ? ForeldreparSituasjon.aleneomsorg : ForeldreparSituasjon.bareMor;\r\n        } else {\r\n            return farMedmorErAleneOmOmsorg ? ForeldreparSituasjon.aleneomsorg : ForeldreparSituasjon.bareFar;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getAntallForeldreISituasjon = (situasjon: ForeldreparSituasjon) => {\r\n    switch (situasjon) {\r\n        case ForeldreparSituasjon.aleneomsorg:\r\n        case ForeldreparSituasjon.bareFar:\r\n        case ForeldreparSituasjon.bareMor:\r\n            return 1;\r\n        default:\r\n            return 2;\r\n    }\r\n};\r\n\r\nexport const getSituasjonForelderSvg = (situasjon: ForeldreparSituasjon): SituasjonForelderSvg => {\r\n    switch (situasjon) {\r\n        case ForeldreparSituasjon.farOgMor:\r\n            return {\r\n                mor: 'mor1',\r\n                farMedmor: 'far1',\r\n            };\r\n        case ForeldreparSituasjon.bareFar:\r\n            return {\r\n                mor: 'mor1',\r\n                farMedmor: 'far1',\r\n                variant: 'førsteForelderHalvtSynlig',\r\n            };\r\n        case ForeldreparSituasjon.bareMor:\r\n            return {\r\n                mor: 'mor1',\r\n                farMedmor: 'far1',\r\n                variant: 'andreForelderHalvtSynlig',\r\n            };\r\n        case ForeldreparSituasjon.aleneomsorg:\r\n            return {\r\n                mor: 'mor2',\r\n                farMedmor: 'far2',\r\n                variant: 'foreldreSeparert',\r\n            };\r\n        case ForeldreparSituasjon.morOgMedmor:\r\n            return {\r\n                mor: 'medmor2',\r\n                farMedmor: 'medmor1',\r\n            };\r\n        case ForeldreparSituasjon.farOgFar:\r\n            return {\r\n                mor: 'far3',\r\n                farMedmor: 'far4',\r\n            };\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { bemUtils } from '@navikt/fp-common';\r\nimport { ForeldreparSituasjon } from 'app/types/ForeldreparSituasjonTypes';\r\nimport Sirkelmaske from 'app/components/sirkelmaske/Sirkelmaske';\r\nimport { getAntallForeldreISituasjon, getSituasjonForelderSvg } from 'app/utils/foreldreparSituasjonUtils';\r\nimport Foreldrepar from 'app/components/foreldrepar/Foreldrepar';\r\n\r\nimport './situasjonSirkel.less';\r\n\r\ninterface Props {\r\n    situasjon: ForeldreparSituasjon;\r\n    valgtForelder?: Forelder;\r\n}\r\n\r\nconst SituasjonSirkel: React.FunctionComponent<Props> = ({ situasjon, valgtForelder }) => {\r\n    const info = getSituasjonForelderSvg(situasjon);\r\n    const bem = bemUtils('situasjonSirkel');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <div className={bem.element('ikon')}>\r\n                <Sirkelmaske diameter=\"5rem\">\r\n                    {getAntallForeldreISituasjon(situasjon) === 1 && valgtForelder ? (\r\n                        <Foreldrepar forelder1={valgtForelder === Forelder.mor ? info.mor : info.farMedmor} />\r\n                    ) : (\r\n                        <Foreldrepar\r\n                            forelder1={info.mor}\r\n                            forelder2={info.farMedmor}\r\n                            variant={info.variant}\r\n                            kompakt={true}\r\n                        />\r\n                    )}\r\n                </Sirkelmaske>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SituasjonSirkel;\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { IntlShape } from 'react-intl';\r\nimport { OppholdÅrsakType } from '../types/OppholdÅrsakType';\r\nimport { PeriodeInfoType } from '../types/PeriodeInfoType';\r\nimport { StønadskontoType } from '../types/StønadskontoType';\r\nimport { Periode, Periodetype } from './../types/Periode';\r\nimport { getNavnGenitivEierform } from './../../app/utils/personUtils';\r\nimport { NavnPåForeldre } from './../../app/types/NavnPåForeldre';\r\nimport { Forelder } from './../../app/types/Forelder';\r\n\r\nconst isValidStillingsprosent = (pst: string | undefined): boolean =>\r\n    pst !== undefined && isNaN(parseFloat(pst)) === false;\r\n\r\nconst prettifyProsent = (pst: string | undefined): number | undefined => {\r\n    if (pst === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    const nbr = parseFloat(pst);\r\n    if (isNaN(nbr)) {\r\n        return undefined;\r\n    }\r\n    if (Math.round(nbr) === nbr) {\r\n        return Math.round(nbr);\r\n    }\r\n    return nbr;\r\n};\r\n\r\nexport const getStønadskontoNavn = (intl: IntlShape, konto: StønadskontoType, navnPåForeldre: NavnPåForeldre) => {\r\n    let navn;\r\n    switch (konto) {\r\n        case StønadskontoType.Mødrekvote:\r\n            navn = navnPåForeldre.mor;\r\n            break;\r\n        case StønadskontoType.Fedrekvote:\r\n            navn = navnPåForeldre.farMedmor;\r\n            break;\r\n        default:\r\n            navn = undefined;\r\n    }\r\n    if (navn) {\r\n        return intl.formatMessage(\r\n            { id: `stønadskontotype.foreldernavn.kvote` },\r\n            { navn: getNavnGenitivEierform(navn, intl.locale) }\r\n        );\r\n    }\r\n    return intl.formatMessage({ id: `stønadskontotype.${konto}` });\r\n};\r\n\r\nexport const getUttaksprosentFromStillingsprosent = (\r\n    stillingsPst: number | undefined,\r\n    samtidigUttakPst: number | undefined\r\n): number | undefined => {\r\n    if (samtidigUttakPst) {\r\n        return samtidigUttakPst;\r\n    }\r\n    if (stillingsPst) {\r\n        return 100 - stillingsPst;\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const getOppholdskontoNavn = (\r\n    intl: IntlShape,\r\n    årsak: OppholdÅrsakType,\r\n    foreldernavn: string,\r\n    erMor: boolean\r\n) => {\r\n    return erMor\r\n        ? intlUtils(intl, `oppholdsårsaktype.foreldernavn.far.${årsak}`, { foreldernavn })\r\n        : intlUtils(intl, `oppholdsårsaktype.foreldernavn.mor.${årsak}`, { foreldernavn });\r\n};\r\n\r\nexport const getStønadskontoFromOppholdsårsak = (årsak: OppholdÅrsakType): StønadskontoType => {\r\n    if (årsak === OppholdÅrsakType.UttakFedrekvoteAnnenForelder) {\r\n        return StønadskontoType.Fedrekvote;\r\n    }\r\n\r\n    if (årsak === OppholdÅrsakType.UttakMødrekvoteAnnenForelder) {\r\n        return StønadskontoType.Mødrekvote;\r\n    }\r\n\r\n    if (årsak === OppholdÅrsakType.UttakFellesperiodeAnnenForelder) {\r\n        return StønadskontoType.Fellesperiode;\r\n    }\r\n\r\n    return StønadskontoType.ForeldrepengerFørFødsel;\r\n};\r\n\r\nexport const getForelderNavn = (forelder: Forelder, navnPåForeldre: NavnPåForeldre): string => {\r\n    if (navnPåForeldre.farMedmor) {\r\n        return forelder === Forelder.mor ? navnPåForeldre.mor : navnPåForeldre.farMedmor;\r\n    }\r\n    return forelder === Forelder.mor ? navnPåForeldre.mor : forelder;\r\n};\r\n\r\nexport const getPeriodeTittel = (intl: IntlShape, periode: Periode, navnPåForeldre: NavnPåForeldre): string => {\r\n    switch (periode.type) {\r\n        case Periodetype.Uttak:\r\n            const tittel = getStønadskontoNavn(intl, periode.konto, navnPåForeldre);\r\n            if (\r\n                (periode.gradert && isValidStillingsprosent(periode.stillingsprosent)) ||\r\n                (periode.ønskerSamtidigUttak && isValidStillingsprosent(periode.samtidigUttakProsent))\r\n            ) {\r\n                return `${tittel} ${intlUtils(intl, 'gradering.prosent', {\r\n                    stillingsprosent: getUttaksprosentFromStillingsprosent(\r\n                        prettifyProsent(periode.stillingsprosent),\r\n                        periode.samtidigUttakProsent ? prettifyProsent(periode.samtidigUttakProsent) : undefined\r\n                    ),\r\n                })}`;\r\n            }\r\n\r\n            return tittel;\r\n\r\n        case Periodetype.Overføring:\r\n            return getStønadskontoNavn(intl, periode.konto, navnPåForeldre);\r\n        case Periodetype.Utsettelse:\r\n            if (periode.årsak) {\r\n                return intlUtils(intl, `periodeliste.utsettelsesårsak`, {\r\n                    årsak: intlUtils(intl, `utsettelsesårsak.${periode.årsak}`),\r\n                });\r\n            }\r\n            return intlUtils(intl, `periodeliste.utsettelsesårsak.ukjent`);\r\n        case Periodetype.Opphold:\r\n            return getOppholdskontoNavn(\r\n                intl,\r\n                periode.årsak,\r\n                getForelderNavn(periode.forelder, navnPåForeldre),\r\n                periode.forelder === 'mor'\r\n            );\r\n        case Periodetype.Hull:\r\n            return intlUtils(intl, `periodetype.hull.tittel`);\r\n        case Periodetype.Info:\r\n            switch (periode.infotype) {\r\n                case PeriodeInfoType.uttakAnnenPart:\r\n                    return getStønadskontoNavn(intl, getStønadskontoFromOppholdsårsak(periode.årsak), navnPåForeldre);\r\n                case PeriodeInfoType.utsettelseAnnenPart:\r\n                    return intlUtils(intl, `periodetype.info.utsettelse.${periode.årsak}`, {\r\n                        navn: getForelderNavn(periode.forelder, navnPåForeldre),\r\n                    });\r\n                default:\r\n                    return intlUtils(intl, `periodetype.info.${periode.infotype}`);\r\n            }\r\n    }\r\n};\r\n","import { bemUtils } from '@navikt/fp-common';\r\nimport { NavnPåForeldre } from 'app/types/NavnPåForeldre';\r\nimport { formaterDato } from 'app/utils/dateUtils';\r\nimport { getNavnGenitivEierform } from 'app/utils/personUtils';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Periode } from 'uttaksplan/types/Periode';\r\nimport { getPeriodeTittel } from 'uttaksplan/utils/periodeUtils';\r\n\r\nimport './infoEksisterendePerioder.less';\r\n\r\ninterface Props {\r\n    oppgittePerioder: Periode[];\r\n    navnForOverskrift?: string;\r\n    navnPåForeldre: NavnPåForeldre;\r\n}\r\n\r\nconst InfoEksisterendePerioder: FunctionComponent<Props> = ({\r\n    oppgittePerioder,\r\n    navnForOverskrift,\r\n    navnPåForeldre,\r\n}) => {\r\n    const intl = useIntl();\r\n    const dateFormat = 'DD. MMM YYYY';\r\n    const bem = bemUtils('infoEksisterendePerioder');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            {navnForOverskrift && (\r\n                <Normaltekst>\r\n                    <FormattedMessage\r\n                        id=\"eksisterendeSak.label.annenPartsPlan\"\r\n                        values={{\r\n                            navn: getNavnGenitivEierform(navnForOverskrift, intl.locale),\r\n                        }}\r\n                    />\r\n                </Normaltekst>\r\n            )}\r\n            <ol className={bem.element('list')}>\r\n                {oppgittePerioder.map((periode) => {\r\n                    return (\r\n                        <li key={guid()}>\r\n                            <div className={bem.element('listInfo')}>\r\n                                <Element className={bem.element('listInfoPeriode')}>\r\n                                    {formaterDato(periode.tidsperiode.fom, dateFormat)} -{' '}\r\n                                    {formaterDato(periode.tidsperiode.tom, dateFormat)}:\r\n                                </Element>\r\n                                <Normaltekst>{getPeriodeTittel(intl, periode, navnPåForeldre)}</Normaltekst>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoEksisterendePerioder;\r\n","import React from 'react';\r\nimport { useIntl, IntlShape, FormattedMessage } from 'react-intl';\r\nimport SituasjonSirkel from './illustrasjoner/situasjon-sirkel/SituasjonSirkel';\r\nimport UkerSirkel from './illustrasjoner/uker-sirkel/UkerSirkel';\r\nimport { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\r\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\r\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\r\nimport { bemUtils, Block, hasValue, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { getAntallUker } from 'app/steps/uttaksplan-info/utils/stønadskontoer';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\r\nimport {\r\n    getFarMedmorErAleneOmOmsorg,\r\n    getKjønnFromFnr,\r\n    getMorErAleneOmOmsorg,\r\n    getNavnGenitivEierform,\r\n    getNavnPåForeldre,\r\n} from 'app/utils/personUtils';\r\nimport { InfoPeriode, isInfoPeriode, Periodetype } from 'uttaksplan/types/Periode';\r\nimport InnholdMedIllustrasjon from '../innhold-med-illustrasjon/InnholdMedIllustrasjon';\r\nimport { formaterDato, getVarighetString } from 'app/utils/dateUtils';\r\nimport links from 'app/links/links';\r\nimport { getForeldreparSituasjon } from 'app/utils/foreldreparSituasjonUtils';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport { Periodene } from 'app/steps/uttaksplan-info/utils/Periodene';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport InfoEksisterendePerioder from './InfoEksisterendePerioder';\r\n\r\nimport './infoOmSøknaden.less';\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer: TilgjengeligStønadskonto[];\r\n    eksisterendeSak: EksisterendeSak | undefined;\r\n    erIUttaksplanenSteg: boolean;\r\n}\r\n\r\nconst getHvem = (\r\n    intl: IntlShape,\r\n    erDeltUttak: boolean,\r\n    navnAnnenForelder: string | undefined,\r\n    erAnnenPartsEksisterendeSak?: boolean\r\n): string => {\r\n    if (erDeltUttak && navnAnnenForelder !== undefined) {\r\n        return erAnnenPartsEksisterendeSak\r\n            ? intlUtils(intl, 'eksisterendeSak.tekst.benevning.førstegangssøknaMedEkisterndeSakAnnenPart', {\r\n                  navn: navnAnnenForelder,\r\n              })\r\n            : intlUtils(intl, 'eksisterendeSak.tekst.benevning.deltOmsorg', { navn: navnAnnenForelder });\r\n    }\r\n\r\n    return intlUtils(intl, 'eksisterendeSak.tekst.benevning.aleneomsorg');\r\n};\r\n\r\nconst InfoOmSøknaden: React.FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer,\r\n    eksisterendeSak,\r\n    erIUttaksplanenSteg,\r\n}) => {\r\n    const bem = bemUtils('infoOmSøknaden');\r\n    const intl = useIntl();\r\n    const søkerinfo = useSøkerinfo();\r\n    const søknad = useSøknad();\r\n\r\n    const { annenForelder, søker } = søknad;\r\n    const { person } = søkerinfo;\r\n    const uker = getAntallUker(tilgjengeligeStønadskontoer);\r\n    const annenForelderKjønn = getKjønnFromFnr(annenForelder);\r\n    const erFarEllerMedmor = isFarEllerMedmor(søknad.søkersituasjon.rolle);\r\n    const annenForelderNavn = isAnnenForelderOppgitt(annenForelder) ? annenForelder.fornavn : '';\r\n    const erDeltUttak = isAnnenForelderOppgitt(annenForelder) ? !!annenForelder.harRettPåForeldrepenger : false;\r\n    const erAleneOmOmsorg = søker.erAleneOmOmsorg;\r\n    const morErAleneOmOmsorg = getMorErAleneOmOmsorg(!erFarEllerMedmor, erAleneOmOmsorg, annenForelder);\r\n    const farMedmorErAleneOmOmsorg = getFarMedmorErAleneOmOmsorg(erFarEllerMedmor, erAleneOmOmsorg, annenForelder);\r\n    const { dekningsgrad } = søknad;\r\n    const situasjon = getForeldreparSituasjon(\r\n        person.kjønn,\r\n        annenForelderKjønn,\r\n        erDeltUttak,\r\n        morErAleneOmOmsorg,\r\n        farMedmorErAleneOmOmsorg\r\n    );\r\n    const skalViseInfoOmMorsSak = hasValue(annenForelderNavn) && erFarEllerMedmor && erDeltUttak;\r\n\r\n    const forelderVedAleneomsorg = erDeltUttak ? undefined : erFarEllerMedmor ? Forelder.farMedmor : Forelder.mor;\r\n\r\n    const hvem = getHvem(\r\n        intl,\r\n        erDeltUttak,\r\n        annenForelderNavn,\r\n        eksisterendeSak ? eksisterendeSak.erAnnenPartsSak : false\r\n    );\r\n    const navnPåForeldre = getNavnPåForeldre(person, annenForelder, erFarEllerMedmor);\r\n\r\n    let sisteInfoPeriode;\r\n    if (eksisterendeSak) {\r\n        sisteInfoPeriode = eksisterendeSak.uttaksplan\r\n            ? Periodene(eksisterendeSak.uttaksplan).finnSisteInfoperiode()\r\n            : undefined;\r\n    }\r\n    const nesteMuligeUttaksdagEtterAnnenPart =\r\n        eksisterendeSak && eksisterendeSak.uttaksplan && sisteInfoPeriode\r\n            ? Uttaksdagen(sisteInfoPeriode.tidsperiode.tom).neste()\r\n            : undefined;\r\n\r\n    const navnGenitivEierform = getNavnGenitivEierform(annenForelderNavn, intl.locale);\r\n\r\n    const infoperioder: InfoPeriode[] =\r\n        eksisterendeSak !== undefined ? eksisterendeSak.uttaksplan.filter(isInfoPeriode) : [];\r\n\r\n    const visPlanTekst: string = erIUttaksplanenSteg\r\n        ? 'eksisterendeSak.label.seAnnenPartsPlanIPlanen'\r\n        : 'eksisterendeSak.label.seAnnenPartsPlan';\r\n\r\n    const søkersPerioder =\r\n        eksisterendeSak &&\r\n        eksisterendeSak.uttaksplan &&\r\n        eksisterendeSak.uttaksplan.filter((p) => p.type !== Periodetype.Info);\r\n\r\n    return (\r\n        <Block padBottom=\"l\" className={bem.block}>\r\n            <InnholdMedIllustrasjon\r\n                tittel={intlUtils(intl, `eksisterendeSak.tittel.${erDeltUttak ? 'deltUttak' : 'aleneomsorg'}`)}\r\n                illustrasjoner={[\r\n                    <SituasjonSirkel key=\"situasjon\" situasjon={situasjon} valgtForelder={forelderVedAleneomsorg} />,\r\n                    <UkerSirkel key=\"uker\" uker={uker} />,\r\n                ]}\r\n            >\r\n                <Normaltekst>\r\n                    <FormattedMessage\r\n                        id=\"eksisterendeSak.tekst.html\"\r\n                        values={{\r\n                            uker: <strong>{getVarighetString(uker * 5, intl)}</strong>,\r\n                            dekningsgrad: <strong>{dekningsgrad}</strong>,\r\n                            navn: hvem,\r\n                        }}\r\n                    />\r\n                </Normaltekst>\r\n                {skalViseInfoOmMorsSak && hasValue(annenForelderNavn) && nesteMuligeUttaksdagEtterAnnenPart && (\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"eksisterendeSak.tekst.nesteMuligeUttaksdato\"\r\n                            values={{\r\n                                dato: formaterDato(nesteMuligeUttaksdagEtterAnnenPart, 'DD. MMM YYYY'),\r\n                                navn: annenForelderNavn,\r\n                                b: (msg: any) => <b>{msg}</b>,\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                )}\r\n\r\n                {skalViseInfoOmMorsSak &&\r\n                    hasValue(annenForelderNavn) &&\r\n                    infoperioder !== undefined &&\r\n                    infoperioder.length > 0 && (\r\n                        <UtvidetInformasjon\r\n                            apneLabel={intlUtils(intl, visPlanTekst, {\r\n                                navn: navnGenitivEierform,\r\n                            })}\r\n                        >\r\n                            <InfoEksisterendePerioder\r\n                                oppgittePerioder={infoperioder}\r\n                                navnForOverskrift={annenForelderNavn}\r\n                                navnPåForeldre={navnPåForeldre}\r\n                            />\r\n                        </UtvidetInformasjon>\r\n                    )}\r\n            </InnholdMedIllustrasjon>\r\n            {skalViseInfoOmMorsSak && søkersPerioder !== undefined && søkersPerioder.length > 0 && (\r\n                <InnholdMedIllustrasjon\r\n                    tittel={intlUtils(intl, 'eksisterendeSak.tittel.dineDagerMedForeldrepenger')}\r\n                    illustrasjoner={[]}\r\n                    infoboks={\r\n                        erIUttaksplanenSteg === false ? (\r\n                            <>\r\n                                <Systemtittel>Dine dager med foreldrepenger</Systemtittel>\r\n                                <UtvidetInformasjon apneLabel=\"Se perioder oppgitt av annen forelder\">\r\n                                    Periodene med foreldrepenger oppgitt av annen forelder\r\n                                    <InfoEksisterendePerioder\r\n                                        oppgittePerioder={søkersPerioder}\r\n                                        navnPåForeldre={navnPåForeldre}\r\n                                    />\r\n                                </UtvidetInformasjon>\r\n                            </>\r\n                        ) : undefined\r\n                    }\r\n                ></InnholdMedIllustrasjon>\r\n            )}\r\n            <Normaltekst>\r\n                <FormattedMessage\r\n                    id=\"uttaksplan.informasjon.lesMer\"\r\n                    values={{\r\n                        a: (msg: any) => (\r\n                            <a href={links.viktigeFrister} className=\"lenke\" rel=\"noreferrer\" target=\"_blank\">\r\n                                {msg}\r\n                            </a>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Normaltekst>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default InfoOmSøknaden;\r\n","import * as React from 'react';\r\n\r\nconst KalenderBakgrunnIkon = (props: any) => (\r\n    <svg focusable=\"false\" role=\"presentation\" width={48} height={42} {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path d=\"M48 36a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V7h48v29z\" fill=\"#FFF\" stroke=\"#dfdfdf\" strokeWidth=\"1\" />\r\n            <path\r\n                d=\"M6 0h36a6 6 0 0 1 6 6v4H0V6a6 6 0 0 1 6-6zm29.5 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm-23 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"\r\n                fill=\"#BA3A26\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default KalenderBakgrunnIkon;\r\n","import React from 'react';\r\nimport { bemUtils } from '@navikt/fp-common';\r\nimport KalenderBakgrunnIkon from 'app/assets/KalenderBakgrunnIkon';\r\n\r\nimport './antallUkerKalenderIkon.less';\r\n\r\ninterface Props {\r\n    uker: number;\r\n}\r\n\r\nconst AntallUkerKalenderIkon: React.FunctionComponent<Props> = ({ uker }) => {\r\n    const bem = bemUtils('antallUkerKalenderIkon');\r\n    return (\r\n        <div className={bem.classNames(bem.block, bem.modifierConditional('over99', uker > 99))}>\r\n            <div className={bem.element('ikon')}>\r\n                <KalenderBakgrunnIkon />\r\n            </div>\r\n            <div className={bem.element('uker')}>{uker}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AntallUkerKalenderIkon;\r\n","import React from 'react';\r\nimport AntallUkerKalenderIkon from './antallUkerKalenderIkon/AntallUkerKalenderIkon';\r\nimport { bemUtils } from '@navikt/fp-common';\r\nimport Sirkelmaske from 'app/components/sirkelmaske/Sirkelmaske';\r\n\r\nimport './ukerSirkel.less';\r\n\r\ninterface Props {\r\n    uker: number;\r\n}\r\n\r\nconst UkerSirkel: React.FunctionComponent<Props> = ({ uker }) => {\r\n    const bem = bemUtils('ukerSirkel');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <div className={bem.element('ikon')}>\r\n                <Sirkelmaske diameter=\"5rem\">\r\n                    <AntallUkerKalenderIkon uker={uker} />\r\n                </Sirkelmaske>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UkerSirkel;\r\n","import React from 'react';\r\nimport { Systemtittel } from 'nav-frontend-typografi';\r\nimport { bemUtils } from '@navikt/fp-common';\r\n\r\nimport './innholdMedIllustrasjon.less';\r\n\r\ninterface Props {\r\n    tittel: string;\r\n    illustrasjoner?: React.ReactNode;\r\n    infoboks?: React.ReactNode;\r\n}\r\n\r\nconst InnholdMedIllustrasjon: React.FunctionComponent<Props> = ({ tittel, illustrasjoner, infoboks, children }) => {\r\n    const bem = bemUtils('innholdMedIllustrasjon');\r\n\r\n    return (\r\n        <div\r\n            className={bem.classNames(\r\n                bem.block,\r\n                bem.modifierConditional('medIllustrasjoner', illustrasjoner !== undefined)\r\n            )}\r\n        >\r\n            <div className={bem.element('contentWrapper')}>\r\n                <div className={bem.element('headerWrapper')}>\r\n                    <header>\r\n                        <Systemtittel tag=\"h2\" className={bem.element('tittel')}>\r\n                            {tittel}\r\n                        </Systemtittel>\r\n                        {infoboks !== undefined && infoboks}\r\n                    </header>\r\n                </div>\r\n                <div className={bem.element('content')}>{children}</div>\r\n            </div>\r\n            {illustrasjoner && (\r\n                <div className={bem.element('illustrasjoner')} role=\"presentation\" aria-hidden={true}>\r\n                    {React.Children.map(illustrasjoner, (ill, index) => (\r\n                        <div className={bem.element('illustrasjon')} key={index}>\r\n                            {ill}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InnholdMedIllustrasjon;\r\n","import React from 'react';\r\n\r\nconst Pencil = () => {\r\n    return (\r\n        <svg width={24} height={24} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <title>{'Rediger'}</title>\r\n            <path\r\n                d=\"M7.709 20.66L2 22l1.34-5.708L17.111 2.517a1.766 1.766 0 012.498 0l1.874 1.874c.688.69.688 1.806 0 2.498L7.709 20.66zM20.86 7.515l-4.374-4.372 4.374 4.372zm-1.26 1.26L15.24 4.39 19.6 8.774zM7.931 20.44l-4.37-4.371 4.37 4.37z\"\r\n                stroke=\"#0067C5\"\r\n                strokeWidth={0.9}\r\n                fill=\"none\"\r\n                fillRule=\"evenodd\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Pencil;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Normaltekst from 'nav-frontend-typografi/lib/normaltekst';\r\nimport { bemUtils } from '@navikt/fp-common';\r\nimport Pencil from './Pencil';\r\nimport { EtikettFokus } from 'nav-frontend-etiketter';\r\n\r\nimport './interactiveListElement.less';\r\n\r\ninterface Props {\r\n    onEdit: () => void;\r\n    onDelete: () => void;\r\n    editButtonAriaText: string;\r\n    deleteButtonAriaText: string;\r\n    title: string;\r\n    text: string;\r\n    deleteLinkText: string;\r\n    missingDocumentation?: boolean;\r\n}\r\n\r\nconst InteractiveListElement: FunctionComponent<Props> = ({\r\n    title,\r\n    text,\r\n    deleteLinkText,\r\n    deleteButtonAriaText,\r\n    editButtonAriaText,\r\n    missingDocumentation,\r\n    onDelete,\r\n    onEdit,\r\n}) => {\r\n    const bem = bemUtils('interactiveListElement');\r\n\r\n    return (\r\n        <li className={bem.block}>\r\n            <div className={bem.element('top')}>\r\n                <Normaltekst className=\"title\">{title}</Normaltekst>\r\n                <button\r\n                    type=\"button\"\r\n                    className={bem.element('editButton')}\r\n                    onClick={onEdit}\r\n                    aria-label={editButtonAriaText}\r\n                >\r\n                    <Pencil />\r\n                </button>\r\n            </div>\r\n            <Normaltekst className={bem.element('text')}>{text}</Normaltekst>\r\n            <div className={bem.element('bottom')}>\r\n                {missingDocumentation && <EtikettFokus>Mangler dokumentasjon</EtikettFokus>}\r\n                <button\r\n                    className={bem.element('deleteButton')}\r\n                    onClick={onDelete}\r\n                    type=\"button\"\r\n                    aria-label={deleteButtonAriaText}\r\n                >\r\n                    {deleteLinkText}\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default InteractiveListElement;\r\n","import { Normaltekst } from 'nav-frontend-typografi';\r\nimport React from 'react';\r\n\r\nimport './lenkeKnapp.less';\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    text: string | React.ReactNode;\r\n}\r\n\r\nconst LenkeKnapp: React.FunctionComponent<Props> = ({ text, onClick }) => {\r\n    return (\r\n        <button\r\n            className=\"lenkeKnapp lenke\"\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick();\r\n            }}\r\n        >\r\n            <Normaltekst>{text}</Normaltekst>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default LenkeKnapp;\r\n","import * as React from 'react';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\n\r\nimport './personkort.less';\r\nimport { bemUtils } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    tittel?: string;\r\n    children: React.ReactNode;\r\n    ikon?: React.ReactNode;\r\n    invertert?: boolean;\r\n    textValign?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\nconst Personkort: React.FunctionComponent<Props> = ({ tittel, children, ikon, invertert, textValign = 'top' }) => {\r\n    const bem = bemUtils('personkort');\r\n\r\n    return (\r\n        <div\r\n            className={bem.classNames(\r\n                bem.block,\r\n                bem.modifierConditional('invertert', invertert === true),\r\n                bem.modifier(`valign-${textValign}`)\r\n            )}\r\n        >\r\n            {ikon && <div className={bem.element('ikon')}>{ikon}</div>}\r\n            <div className={bem.element('innhold')}>\r\n                {tittel && <Normaltekst className=\"tittel\">{tittel}</Normaltekst>}\r\n                <div className={bem.element('tekst')}>{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Personkort;\r\n","import React, { CSSProperties } from 'react';\r\nimport { bemUtils } from '@navikt/fp-common';\r\nimport { UttaksplanHexFarge } from 'uttaksplan/types/UttaksplanHexFarge';\r\n\r\nimport './sirkelmaske.less';\r\n\r\ninterface Props {\r\n    aktiv?: boolean;\r\n    farge?: UttaksplanHexFarge;\r\n    diameter: string;\r\n}\r\n\r\nconst Sirkelmaske: React.FunctionComponent<Props> = ({ farge, diameter, aktiv = true, children }) => {\r\n    const bem = bemUtils('sirkelmaske');\r\n    const style: Partial<CSSProperties> = {\r\n        backgroundColor: farge,\r\n    };\r\n\r\n    if (diameter) {\r\n        style.width = diameter;\r\n        style.height = diameter;\r\n    }\r\n\r\n    return (\r\n        <div className={bem.classNames(bem.block, bem.modifierConditional('inaktiv', aktiv === false))} style={style}>\r\n            <div className={bem.element('content')}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sirkelmaske;\r\n","import * as React from 'react';\r\n\r\nexport interface Props {\r\n    svgProps: any;\r\n    transparentBackground?: boolean;\r\n}\r\n\r\nconst VeilederKompakt: React.FunctionComponent<Props> = ({ svgProps }) => (\r\n    <svg\r\n        role=\"presentation\"\r\n        focusable=\"false\"\r\n        viewBox=\"0 0 96 96\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        {...svgProps}\r\n    >\r\n        <title>NAV veileder</title>\r\n        <defs>\r\n            <path\r\n                d=\"M67.557 34.114h-.059c0-18.7-13.188-33.859-29.46-33.859-16.269 0-29.457 15.16-29.457 33.86v.016c-.006 15.97-8.058 25.1-8.058 25.1s7.952 9.976 37.516 9.976H38.097c29.567 0 37.519-9.975 37.519-9.975s-8.06-9.137-8.06-25.118\"\r\n                id=\"kompakt-veileder-a\"\r\n            />\r\n            <path\r\n                d=\"M20.143 87.094v-2.77c0-7.466 8.327-15.476 14.514-19.14 1.135 1.985 4.132 9.894 13.25 9.894 9.053 0 13.375-8.363 13.56-10.328 6.311 3.43 15.504 11.796 15.504 19.573v1.951A47.789 47.789 0 0 1 48 96a47.781 47.781 0 0 1-27.857-8.906z\"\r\n                id=\"kompakt-veileder-b\"\r\n            />\r\n        </defs>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <circle className=\"Background-veileder\" fill=\"#C1B5D0\" cx={48} cy={48} r={48} />\r\n            <g className=\"Head\" transform=\"translate(10 5)\">\r\n                <use className=\"Hair\" fill=\"#D2654C\" xlinkHref=\"#kompakt-veileder-a\" />\r\n                <path\r\n                    d=\"M44.017 90.627c-1.971.246-3.98.373-6.017.373-1.966 0-3.904-.118-5.808-.348-5.426-8.936-7.576-28.387-8.476-29.804 0 0 13.547-9.003 28.665-.476 0 1.322-2.642 21.184-8.364 30.255z\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <path\r\n                    d=\"M15.477 31.324s-.116.672-.266.562a1.76 1.76 0 0 0-.67-.14c-1.024 0-1.857.879-1.859 1.965l-.01 7.514c-.002 1.086.827 1.968 1.853 1.97.41 0 .786-.145 1.094-.384 2.48 12.1 11.321 20.646 21.863 20.664 10.541.018 19.41-8.5 21.924-20.591.307.24.683.386 1.095.388 1.025 0 1.858-.879 1.859-1.963l.011-7.516c.001-1.086-.828-1.967-1.853-1.97-.236 0-.462.052-.67.137-23.774 2.88-32.067-13.64-32.767-13.642 0 0-9.943 9.514-11.604 13.006z\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <g transform=\"translate(27.03 31.865)\" fill=\"#635E59\">\r\n                    <path\r\n                        d=\"M2.569 6.528C.97 6.651.523 4.243 1.005 2.671c.09-.298.62-1.655 1.556-1.655.935 0 1.348.741 1.406.869.688 1.533.35 4.508-1.398 4.643\"\r\n                        className=\"eye\"\r\n                    />\r\n                    <path\r\n                        d=\"M20.404 6.528c1.599.123 2.046-2.285 1.564-3.857-.09-.298-.62-1.655-1.556-1.655-.935 0-1.348.741-1.406.869-.688 1.533-.35 4.508 1.398 4.643\"\r\n                        className=\"eye\"\r\n                    />\r\n                </g>\r\n                <path\r\n                    d=\"M39.023 41.162c.94-.148 1.581-.055 1.811.233.868 1.09.59 2.243-.898 3.19-.783.498-1.86.673-2.43.415a.548.548 0 0 0-.729.288.57.57 0 0 0 .282.744c.942.427 2.392.191 3.46-.488 2.023-1.287 2.486-3.21 1.172-4.862-.556-.697-1.541-.84-2.836-.636a.563.563 0 0 0-.462.644c.046.308.328.52.63.472z\"\r\n                    className=\"nose\"\r\n                    fill=\"#D1BFA3\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M45.318 49.392c-.05.117-.164.34-.348.635-.31.497-.701.997-1.175 1.462-1.412 1.387-3.25 2.19-5.59 2.116-2.282-.072-4.112-.861-5.547-2.135a8.352 8.352 0 0 1-1.31-1.467 5.156 5.156 0 0 1-.388-.634.547.547 0 0 0-.74-.257.57.57 0 0 0-.251.756c.08.168.239.443.48.79a9.467 9.467 0 0 0 1.485 1.665c1.62 1.437 3.69 2.33 6.237 2.41 2.652.083 4.772-.842 6.39-2.43a9.09 9.09 0 0 0 1.34-1.67c.216-.346.357-.62.429-.789a.57.57 0 0 0-.285-.743.548.548 0 0 0-.727.291z\"\r\n                    className=\"Mouth-happy\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M43.852 52.464c-.132-.24-.386-.568-.784-.89-.732-.593-1.68-.918-2.837-.835l-2.231.16a.548.548 0 0 0-.504.588.546.546 0 0 0 .581.51l2.23-.16c.875-.063 1.555.17 2.08.595.276.223.444.44.512.563a.541.541 0 0 0 .739.216.553.553 0 0 0 .214-.747z\"\r\n                    className=\"Mouth-unsure\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M32.057 51.462s.869 1.021 3.286 1.002l2.42-.02\"\r\n                    className=\"Mouth-hesitant\"\r\n                    stroke=\"#D19E9C\"\r\n                    strokeLinecap=\"round\"\r\n                />\r\n            </g>\r\n            <use fill=\"#5C4378\" xlinkHref=\"#kompakt-veileder-b\" />\r\n            <g transform=\"translate(52.457 80.5)\">\r\n                <path\r\n                    d=\"M11.677 12.721H1.317c-.728 0-1.317-.59-1.317-1.32V2.619c0-.729.59-1.32 1.317-1.32h16.308a1.32 1.32 0 0 1 1.318 1.32V9.42a47.753 47.753 0 0 1-7.266 3.301z\"\r\n                    fill=\"#D2242A\"\r\n                />\r\n                <path\r\n                    d=\"M13.538 7.537c0 2.158-1.781 3.908-3.978 3.908-2.201 0-3.983-1.75-3.983-3.908C5.577 5.38 7.36 3.63 9.56 3.63c2.197 0 3.978 1.75 3.978 3.907\"\r\n                    fill=\"#FFF\"\r\n                />\r\n                <path fill=\"#FFF\" d=\"M4.403 9.26h-.776l.83-1.997h.778z\" />\r\n                <path fill=\"#FFF\" d=\"M14.187 9.26h-.481l.83-1.997h.48z\" />\r\n                <path fill=\"#FFF\" d=\"M15.515 9.26h-.204l.828-1.997h.204z\" />\r\n                <path\r\n                    d=\"M6.536 9.25h.611a.054.054 0 0 0 .056-.054V7.328a.054.054 0 0 0-.056-.054H6.53a.07.07 0 0 0-.071.07l-.243.588c-.015.03.01.067.042.067h.175c.026 0 .048.02.048.048v1.15c0 .03.024.053.055.053\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M7.864 9.25h.612c.032 0 .06-.023.06-.054V7.328c0-.03-.028-.054-.06-.054h-.952a.07.07 0 0 0-.072.07l-.244.588L7.124 8h.487c.109 0 .198.085.198.193v1.004c0 .03.024.054.055.054\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M10.604 7.274h-.613a.055.055 0 0 0-.056.054v1.868c0 .03.025.055.056.055h.62a.07.07 0 0 0 .07-.071l.243-.588c.015-.032-.008-.067-.045-.067h-.17a.047.047 0 0 1-.047-.047v-1.15c0-.03-.028-.054-.058-.054\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M8.083 9.25h.403a.07.07 0 0 0 .071-.07l.243-.589a.048.048 0 0 0-.045-.067h-.17l-.502.726z\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M12.244 7.274h.729c.035 0 .06.033.045.065l-.771 1.881c-.006.02-.024.03-.045.03h-.66l.654-1.944a.052.052 0 0 1 .048-.032\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M11.33 7.274H10.3c-.073 0 .296.07.322.135l.729 1.78c.015.039.052.062.093.062h.625l-.643-1.91a.1.1 0 0 0-.096-.067\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M9.985 7.908c0 .398-.052.422-.052.422s-.057-.382-.357-.382c-.295 0-.362.169-.362.295 0 .145.15.282.235.282h.536l-.317.689a.065.065 0 0 1-.059.037h-.243c-.256 0-.922-.329-.922-.964 0-.637.496-1.013.908-1.013.341 0 .633.23.633.634z\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M10.451 3.111h-1.69a.224.224 0 0 1-.226-.222v-.28c0-.121.101-.221.226-.221h1.69c.125 0 .226.1.226.222v.28c0 .122-.1.221-.226.221\"\r\n                    fill=\"#5A1F57\"\r\n                />\r\n                <path fill=\"#C2B5CF\" d=\"M9.117 2.856h.98V.26h-.98z\" />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default VeilederKompakt;\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport VeilederKompakt from 'app/assets/VeilederKompaktSvg';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\n\r\nimport './veileder.less';\r\n\r\nexport type VeilederAnsiktstype = 'glad' | 'undrende' | 'skeptisk';\r\nexport type VeilederStil = 'normal' | 'kompakt';\r\n\r\nexport interface VeilederProps {\r\n    ansikt?: VeilederAnsiktstype;\r\n    farge?: 'lilla' | 'gronn' | 'bla' | 'transparent';\r\n    stil?: VeilederStil;\r\n    height?: string;\r\n}\r\n\r\ninterface OwnProps {\r\n    className?: string;\r\n}\r\n\r\ntype Props = VeilederProps & OwnProps;\r\n\r\nconst Veileder = (props: Props) => {\r\n    const { className, farge = 'lilla', ansikt = 'glad', stil = 'normal', height = '184', ...rest } = props;\r\n\r\n    const svgProps = {\r\n        ...rest,\r\n        width: '184',\r\n        height,\r\n        className: classnames(\r\n            'veileder',\r\n            `veileder--${ansikt}`,\r\n            `veileder--tema-${farge}`,\r\n            `veileder--stil-${stil}`,\r\n            props.className\r\n        ),\r\n    };\r\n\r\n    return stil === 'kompakt' ? (\r\n        <VeilederKompakt svgProps={svgProps} transparentBackground={farge === 'transparent'} />\r\n    ) : (\r\n        <VeilederNormal transparentBackground={farge === 'transparent'} />\r\n    );\r\n};\r\n\r\nexport default Veileder;\r\n","const MAKS_PERMISJONSLENGDE_I_ÅR = 3;\r\nconst MAKS_FERIEDAGER_ETT_ÅR = 21;\r\nconst MAKS_FERIEDAGER_MED_OVERFØRING = 52;\r\nconst ANTALL_UKER_MØDREKVOTE_ETTER_FØDSEL = 6;\r\nconst ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL = 3;\r\nconst MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL = 12;\r\n\r\nconst uttaksConstants = {\r\n    MAKS_PERMISJONSLENGDE_I_ÅR,\r\n    MAKS_FERIEDAGER_ETT_ÅR,\r\n    MAKS_FERIEDAGER_MED_OVERFØRING,\r\n    ANTALL_UKER_MØDREKVOTE_ETTER_FØDSEL,\r\n    ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL,\r\n    MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL,\r\n};\r\n\r\nexport default uttaksConstants;\r\n","import SøknadRoutes from 'app/routes/routes';\r\nimport Sak from 'app/types/Sak';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { Søknad } from './types/Søknad';\r\nimport UttaksplanInfo from './types/UttaksplanInfo';\r\n\r\nexport interface ForeldrepengesøknadContextState {\r\n    version: number;\r\n    currentRoute: SøknadRoutes;\r\n    søknad: Søknad;\r\n    søkerinfo: Søkerinfo;\r\n    harEksisterendeSak?: boolean;\r\n    harAnnenPartEksisterendeSak?: boolean;\r\n    annenPartEksisterendeSakSaksnummer?: string;\r\n    saker: Sak[];\r\n    uttaksplanInfo?: UttaksplanInfo;\r\n}\r\n\r\nexport const foreldrepengesøknadInitialState: ForeldrepengesøknadContextState = {\r\n    version: 2,\r\n    currentRoute: SøknadRoutes.VELKOMMEN,\r\n    søknad: {\r\n        type: 'foreldrepenger',\r\n        harGodkjentVilkår: false,\r\n        søkersituasjon: {\r\n            rolle: '',\r\n            situasjon: '',\r\n        },\r\n        barn: undefined!,\r\n        annenForelder: {\r\n            kanIkkeOppgis: false,\r\n        },\r\n        søker: {\r\n            harHattAnnenInntektSiste10Mnd: undefined!,\r\n            harJobbetSomFrilansSiste10Mnd: undefined!,\r\n            harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: undefined!,\r\n            erAleneOmOmsorg: undefined!,\r\n            språkkode: 'nb',\r\n        },\r\n        informasjonOmUtenlandsopphold: {\r\n            iNorgeNeste12Mnd: undefined!,\r\n            iNorgeSiste12Mnd: undefined!,\r\n            tidligereOpphold: [],\r\n            senereOpphold: [],\r\n        },\r\n        erEndringssøknad: false,\r\n        dekningsgrad: undefined!,\r\n        uttaksplan: [],\r\n    },\r\n    søkerinfo: undefined!,\r\n    saker: [],\r\n    uttaksplanInfo: undefined,\r\n};\r\n","import { Attachment } from 'app/types/Attachment';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { ForeldrepengesøknadContextAction, ForeldrepengesøknadContextActionKeys } from '../action/actionCreator';\r\nimport { ForeldrepengesøknadContextState, foreldrepengesøknadInitialState } from '../ForeldrepengesøknadContextConfig';\r\n\r\nconst finnVedleggAvType = (type: AttachmentType, alleVedlegg: Attachment[]): Attachment[] | undefined => {\r\n    const vedleggAvType = alleVedlegg.filter((v) => v.type === type);\r\n    return vedleggAvType.length > 0 ? vedleggAvType : undefined;\r\n};\r\n\r\nconst foreldrepengesøknadReducer = (\r\n    state: ForeldrepengesøknadContextState,\r\n    action: ForeldrepengesøknadContextAction\r\n): ForeldrepengesøknadContextState => {\r\n    switch (action.type) {\r\n        case ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    harGodkjentVilkår: action.payload,\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    søkersituasjon: action.payload,\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_OMBARNET:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    barn: {\r\n                        ...action.payload,\r\n                    },\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    annenForelder: action.payload,\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    informasjonOmUtenlandsopphold: {\r\n                        ...state.søknad.informasjonOmUtenlandsopphold,\r\n                        ...action.payload,\r\n                    },\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...foreldrepengesøknadInitialState.søknad,\r\n                },\r\n                uttaksplanInfo: undefined,\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE:\r\n            return {\r\n                ...state,\r\n                currentRoute: action.payload,\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_SØKERINFO:\r\n            return {\r\n                ...state,\r\n                søkerinfo: { ...action.payload },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_SØKER:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    søker: {\r\n                        ...action.payload,\r\n                    },\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO:\r\n            return {\r\n                ...state,\r\n                uttaksplanInfo: { ...action.payload },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD:\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    dekningsgrad: action.dekningsgrad,\r\n                },\r\n            };\r\n        case ForeldrepengesøknadContextActionKeys.SET_VEDLEGG:\r\n            //TODO Legg til håndtering av fleire vedlegg\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    ...state.søknad,\r\n                    barn: {\r\n                        ...state.søknad.barn,\r\n                        dokumentasjonAvAleneomsorg:\r\n                            finnVedleggAvType(AttachmentType.ALENEOMSORG, action.vedlegg) ||\r\n                            state.søknad.barn.dokumentasjonAvAleneomsorg,\r\n                    },\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default foreldrepengesøknadReducer;\r\n","import React, { createContext, Dispatch, FunctionComponent, ReactNode, useMemo, useReducer } from 'react';\r\nimport { ForeldrepengesøknadContextAction } from './action/actionCreator';\r\nimport { ForeldrepengesøknadContextState, foreldrepengesøknadInitialState } from './ForeldrepengesøknadContextConfig';\r\nimport foreldrepengesøknadReducer from './reducer/foreldrepengesøknadReducer';\r\n\r\ninterface ForeldrepengesøknadContextData {\r\n    state: ForeldrepengesøknadContextState;\r\n    dispatch: Dispatch<ForeldrepengesøknadContextAction>;\r\n}\r\n\r\nexport const ForeldrepengesøknadContext = createContext<ForeldrepengesøknadContextData>(null!);\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nconst ForeldrepengesøknadContextProvider: FunctionComponent<Props> = ({ children }) => {\r\n    const [state, dispatch] = useReducer(foreldrepengesøknadReducer, foreldrepengesøknadInitialState);\r\n\r\n    const contextValue = useMemo(() => {\r\n        return { state, dispatch };\r\n    }, [state, dispatch]);\r\n\r\n    return <ForeldrepengesøknadContext.Provider value={contextValue}>{children}</ForeldrepengesøknadContext.Provider>;\r\n};\r\n\r\nexport default ForeldrepengesøknadContextProvider;\r\n","import SøknadRoutes from 'app/routes/routes';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport Sak from 'app/types/Sak';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { ForeldrepengesøknadContextState } from '../ForeldrepengesøknadContextConfig';\r\nimport AnnenForelder from '../types/AnnenForelder';\r\nimport Barn from '../types/Barn';\r\nimport InformasjonOmUtenlandsopphold from '../types/InformasjonOmUtenlandsopphold';\r\nimport Søker from '../types/Søker';\r\nimport Søkersituasjon from '../types/Søkersituasjon';\r\nimport UttaksplanInfo from '../types/UttaksplanInfo';\r\n\r\nexport enum ForeldrepengesøknadContextActionKeys {\r\n    SET_HARGODKJENTVILKÅR = 'setVelkommen',\r\n    SET_SØKERSITUASJON = 'setSøkersituasjon',\r\n    SET_OMBARNET = 'setOmBarnet',\r\n    AVBRYT_SØKNAD = 'avbrytSøknad',\r\n    UPDATE_CURRENT_ROUTE = 'updateCurrentRoute',\r\n    APPLY_STORED_STATE = 'applyStoredState',\r\n    SET_ANNENFORELDER = 'setAnnenForelder',\r\n    SET_SØKERINFO = 'setSøkerinfo',\r\n    SET_SØKER = 'setSøker',\r\n    SET_INFORMASJON_OM_UTENLANDSOPPHOLD = 'setInformasjonOmUtenlandsopphold',\r\n    SET_INFORMASJON_OM_ANDRE_INNTEKTER = 'setInformasjonOmAndreInntekter',\r\n    SET_SAKER = 'setSaker',\r\n    SET_UTTAKSPLAN_INFO = 'setUttaksplanInfo',\r\n    SET_DEKNINGSGRAD = 'setDekningsgrad',\r\n    SET_VEDLEGG = 'setVedlegg',\r\n}\r\n\r\ninterface SetVelkommen {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR;\r\n    payload: boolean;\r\n}\r\n\r\nconst setVelkommen = (payload: boolean): SetVelkommen => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR,\r\n    payload,\r\n});\r\n\r\ninterface SetSøkersituasjon {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON;\r\n    payload: Søkersituasjon;\r\n}\r\n\r\nconst setSøkersituasjon = (payload: Søkersituasjon): SetSøkersituasjon => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON,\r\n    payload,\r\n});\r\n\r\ninterface SetOmBarnet {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_OMBARNET;\r\n    payload: Barn;\r\n}\r\n\r\nconst setOmBarnet = (payload: Barn): SetOmBarnet => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_OMBARNET,\r\n    payload,\r\n});\r\n\r\ninterface AvbrytSøknad {\r\n    type: ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD;\r\n}\r\n\r\nconst avbrytSøknad = (): AvbrytSøknad => ({\r\n    type: ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD,\r\n});\r\n\r\ninterface UpdateCurrentRoute {\r\n    type: ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE;\r\n    payload: SøknadRoutes;\r\n}\r\n\r\nconst updateCurrentRoute = (payload: SøknadRoutes): UpdateCurrentRoute => ({\r\n    type: ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE,\r\n    payload,\r\n});\r\n\r\ninterface ApplyStoredState {\r\n    type: ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE;\r\n    payload: ForeldrepengesøknadContextState;\r\n}\r\n\r\nconst applyStoredState = (payload: ForeldrepengesøknadContextState): ApplyStoredState => ({\r\n    type: ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE,\r\n    payload,\r\n});\r\n\r\ninterface SetAnnenForelder {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER;\r\n    payload: AnnenForelder;\r\n}\r\n\r\nconst setAnnenForelder = (payload: AnnenForelder): SetAnnenForelder => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER,\r\n    payload,\r\n});\r\n\r\ninterface SetSøkerinfo {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERINFO;\r\n    payload: Søkerinfo;\r\n}\r\n\r\nconst setSøkerinfo = (payload: Søkerinfo): SetSøkerinfo => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERINFO,\r\n    payload,\r\n});\r\n\r\ninterface SetSøker {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKER;\r\n    payload: Søker;\r\n}\r\n\r\nconst setSøker = (payload: Søker): SetSøker => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKER,\r\n    payload,\r\n});\r\n\r\ninterface SetInformasjonOmUtenlandsopphold {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD;\r\n    payload: InformasjonOmUtenlandsopphold;\r\n}\r\n\r\nconst setInformasjonOmUtenlandsopphold = (\r\n    payload: InformasjonOmUtenlandsopphold\r\n): SetInformasjonOmUtenlandsopphold => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD,\r\n    payload,\r\n});\r\n\r\ninterface SetSaker {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SAKER;\r\n    payload: Sak[];\r\n}\r\n\r\nconst setSaker = (payload: Sak[]): SetSaker => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_SAKER,\r\n    payload,\r\n});\r\n\r\ninterface SetUttaksplanInfo {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO;\r\n    payload: UttaksplanInfo;\r\n}\r\n\r\nconst setUttaksplanInfo = (payload: UttaksplanInfo): SetUttaksplanInfo => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO,\r\n    payload,\r\n});\r\n\r\ninterface SetDekningsgrad {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD;\r\n    dekningsgrad: Dekningsgrad;\r\n}\r\n\r\nconst setDekningsgrad = (dekningsgrad: Dekningsgrad): SetDekningsgrad => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD,\r\n    dekningsgrad,\r\n});\r\n\r\ninterface SetVedlegg {\r\n    type: ForeldrepengesøknadContextActionKeys.SET_VEDLEGG;\r\n    vedlegg: Attachment[];\r\n}\r\n\r\nconst setVedlegg = (vedlegg: Attachment[]): SetVedlegg => ({\r\n    type: ForeldrepengesøknadContextActionKeys.SET_VEDLEGG,\r\n    vedlegg,\r\n});\r\n\r\nexport type ForeldrepengesøknadContextAction =\r\n    | SetVelkommen\r\n    | SetSøkersituasjon\r\n    | SetOmBarnet\r\n    | AvbrytSøknad\r\n    | UpdateCurrentRoute\r\n    | SetAnnenForelder\r\n    | SetSøkerinfo\r\n    | SetSøker\r\n    | SetInformasjonOmUtenlandsopphold\r\n    | SetSaker\r\n    | SetUttaksplanInfo\r\n    | SetDekningsgrad\r\n    | ApplyStoredState\r\n    | SetVedlegg;\r\n\r\nexport default {\r\n    setVelkommen,\r\n    setSøkersituasjon,\r\n    setOmBarnet,\r\n    avbrytSøknad,\r\n    updateCurrentRoute,\r\n    applyStoredState,\r\n    setAnnenForelder,\r\n    setSøkerinfo,\r\n    setSøker,\r\n    setInformasjonOmUtenlandsopphold,\r\n    setSaker,\r\n    setUttaksplanInfo,\r\n    setDekningsgrad,\r\n    setVedlegg,\r\n};\r\n","import { useContext } from 'react';\r\nimport { ForeldrepengesøknadContext } from '../ForeldrepengesøknadContext';\r\n\r\nexport const useForeldrepengesøknadContext = () => useContext(ForeldrepengesøknadContext);\r\n","interface Common {\r\n    kanIkkeOppgis: boolean;\r\n}\r\n\r\nexport interface AnnenForelderOppgitt extends Common {\r\n    fornavn: string;\r\n    etternavn: string;\r\n    fnr: string;\r\n    utenlandskFnr?: boolean;\r\n    bostedsland?: string;\r\n    harRettPåForeldrepenger?: boolean;\r\n    erInformertOmSøknaden?: boolean;\r\n    erForSyk?: boolean;\r\n    erUfør?: boolean;\r\n}\r\n\r\nexport type AnnenForelderIkkeOppgitt = Common;\r\n\r\ntype AnnenForelder = AnnenForelderIkkeOppgitt | AnnenForelderOppgitt;\r\n\r\nexport const isAnnenForelderOppgitt = (annenForelder: AnnenForelder): annenForelder is AnnenForelderOppgitt => {\r\n    return annenForelder.kanIkkeOppgis === false;\r\n};\r\n\r\nexport const isAnnenForelderIkkeOppgitt = (annenForelder: AnnenForelder): annenForelder is AnnenForelderIkkeOppgitt => {\r\n    return annenForelder.kanIkkeOppgis === true;\r\n};\r\n\r\nexport default AnnenForelder;\r\n","import { TidsperiodeMedValgfriSluttdato } from '@navikt/fp-common';\r\nimport { Attachment } from 'app/types/Attachment';\r\n\r\nexport enum AnnenInntektType {\r\n    SLUTTPAKKE = 'ETTERLØNN_SLUTTPAKKE',\r\n    MILITÆRTJENESTE = 'MILITÆR_ELLER_SIVILTJENESTE',\r\n    VENTELØNN = 'VENTELØNN_VARTPENGER',\r\n    JOBB_I_UTLANDET = 'JOBB_I_UTLANDET',\r\n}\r\n\r\ninterface AnnenInntektBase {\r\n    type: AnnenInntektType;\r\n    tidsperiode: TidsperiodeMedValgfriSluttdato;\r\n    pågående: boolean;\r\n    vedlegg: Attachment[];\r\n}\r\n\r\nexport interface SluttpakkeInntekt extends AnnenInntektBase {\r\n    type: AnnenInntektType.SLUTTPAKKE;\r\n}\r\n\r\nexport interface MilitærtjenesteInntekt extends AnnenInntektBase {\r\n    type: AnnenInntektType.MILITÆRTJENESTE;\r\n}\r\n\r\nexport interface JobbIUtlandetInntekt extends AnnenInntektBase {\r\n    type: AnnenInntektType.JOBB_I_UTLANDET;\r\n    arbeidsgiverNavn: string;\r\n    land: string;\r\n}\r\n\r\nexport interface VentelønnInntekt extends AnnenInntektBase {\r\n    type: AnnenInntektType.VENTELØNN;\r\n}\r\n\r\nexport type AnnenInntekt = SluttpakkeInntekt | MilitærtjenesteInntekt | JobbIUtlandetInntekt | VentelønnInntekt;\r\n\r\nexport interface AnnenInntektBaseInnsending extends Omit<AnnenInntektBase, 'tidsperiode'> {\r\n    tidsperiode: TidsperiodeMedValgfriSluttdato;\r\n}\r\n\r\nexport interface SluttpakkeInntektInnsending extends AnnenInntektBaseInnsending {\r\n    type: AnnenInntektType.SLUTTPAKKE;\r\n}\r\n\r\nexport interface MilitærtjenesteInntektInnsending extends AnnenInntektBaseInnsending {\r\n    type: AnnenInntektType.MILITÆRTJENESTE;\r\n}\r\n\r\nexport interface JobbIUtlandetInntektInnsending extends AnnenInntektBaseInnsending {\r\n    type: AnnenInntektType.JOBB_I_UTLANDET;\r\n    arbeidsgiverNavn: string;\r\n    land: string;\r\n}\r\n\r\nexport interface VentelønnInntektInnsending extends AnnenInntektBaseInnsending {\r\n    type: AnnenInntektType.VENTELØNN;\r\n}\r\n\r\nexport type AnnenInntektInnsending =\r\n    | SluttpakkeInntektInnsending\r\n    | MilitærtjenesteInntektInnsending\r\n    | JobbIUtlandetInntektInnsending\r\n    | VentelønnInntektInnsending;\r\n","import { Attachment } from 'app/types/Attachment';\r\n\r\nexport enum BarnType {\r\n    FØDT = 'født',\r\n    UFØDT = 'ufødt',\r\n    ADOPTERT_STEBARN = 'adoptertStebarn',\r\n    ADOPTERT_ANNET_BARN = 'adoptertAnnetBarn',\r\n    IKKE_UTFYLT = 'ikkeUtfylt',\r\n}\r\n\r\ninterface Common {\r\n    type: BarnType;\r\n    antallBarn: string;\r\n    dokumentasjonAvAleneomsorg?: any[];\r\n    datoForAleneomsorg?: string;\r\n}\r\n\r\nexport interface FødtBarn extends Common {\r\n    type: BarnType.FØDT;\r\n    fødselsdatoer: string[];\r\n    termindato?: string;\r\n}\r\n\r\nexport interface UfødtBarn extends Common {\r\n    type: BarnType.UFØDT;\r\n    termindato: string;\r\n    terminbekreftelse: any[];\r\n    terminbekreftelsedato?: string;\r\n}\r\n\r\nexport interface AdoptertBarn extends Common {\r\n    type: BarnType.ADOPTERT_STEBARN | BarnType.ADOPTERT_ANNET_BARN;\r\n    adopsjonsdato: string;\r\n    fødselsdatoer: string[];\r\n    omsorgsovertakelse: Attachment[];\r\n}\r\n\r\nexport interface AdoptertStebarn extends AdoptertBarn {\r\n    type: BarnType.ADOPTERT_STEBARN;\r\n}\r\n\r\nexport interface AdoptertAnnetBarn extends AdoptertBarn {\r\n    type: BarnType.ADOPTERT_ANNET_BARN;\r\n    adoptertIUtlandet: boolean;\r\n    ankomstdato?: string;\r\n}\r\n\r\ntype Barn = FødtBarn | UfødtBarn | AdoptertBarn | AdoptertStebarn | AdoptertAnnetBarn;\r\n\r\nexport const isFødtBarn = (barn: Barn): barn is FødtBarn => {\r\n    return barn.type === BarnType.FØDT;\r\n};\r\n\r\nexport const isUfødtBarn = (barn: Barn): barn is UfødtBarn => {\r\n    return barn.type === BarnType.UFØDT;\r\n};\r\n\r\nexport const isAdoptertBarn = (barn: Barn): barn is AdoptertBarn => {\r\n    return barn.type === BarnType.ADOPTERT_STEBARN || barn.type === BarnType.ADOPTERT_ANNET_BARN;\r\n};\r\n\r\nexport const isAdoptertStebarn = (barn: Barn): barn is AdoptertStebarn => {\r\n    return barn.type === BarnType.ADOPTERT_STEBARN;\r\n};\r\n\r\nexport const isAdoptertAnnetBarn = (barn: Barn): barn is AdoptertAnnetBarn => {\r\n    return barn.type === BarnType.ADOPTERT_ANNET_BARN;\r\n};\r\n\r\nexport default Barn;\r\n","import { TidsperiodeMedValgfriSluttdato, TidsperiodeMedValgfriSluttdatoDate } from '@navikt/fp-common';\r\n\r\nexport enum Næringstype {\r\n    FISKER = 'FISKE',\r\n    JORDBRUK = 'JORDBRUK_SKOGBRUK',\r\n    DAGMAMMA = 'DAGMAMMA',\r\n    ANNET = 'ANNEN',\r\n}\r\n\r\nexport interface Næring {\r\n    næringstyper: Næringstype[];\r\n    tidsperiode: TidsperiodeMedValgfriSluttdato;\r\n    næringsinntekt?: string;\r\n    pågående: boolean;\r\n    navnPåNæringen: string;\r\n    organisasjonsnummer?: string;\r\n    registrertINorge: boolean;\r\n    registrertILand?: string;\r\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene?: boolean;\r\n    oppstartsdato?: string;\r\n    hattVarigEndringAvNæringsinntektSiste4Kalenderår?: boolean;\r\n    endringAvNæringsinntektInformasjon?: EndringAvNæringsinntektInformasjon;\r\n    harRegnskapsfører: boolean;\r\n    regnskapsfører?: Næringsrelasjon;\r\n}\r\n\r\nexport interface NæringInnsending\r\n    extends Omit<Næring, 'tidsperiode' | 'endringAvNæringsinntektInformasjon' | 'oppstartsdato' | 'næringsinntekt'> {\r\n    næringsinntekt: number;\r\n    tidsperiode: TidsperiodeMedValgfriSluttdatoDate;\r\n    oppstartsdato?: Date;\r\n    endringAvNæringsinntektInformasjon?: EndringAvNæringsinntektInformasjonInnsending;\r\n}\r\n\r\nexport interface EndringAvNæringsinntektInformasjon {\r\n    dato: string;\r\n    næringsinntektEtterEndring: number;\r\n    forklaring: string;\r\n}\r\n\r\nexport interface EndringAvNæringsinntektInformasjonInnsending extends Omit<EndringAvNæringsinntektInformasjon, 'dato'> {\r\n    dato: Date;\r\n}\r\n\r\nexport interface Næringsrelasjon {\r\n    navn: string;\r\n    telefonnummer: string;\r\n    erNærVennEllerFamilie: boolean;\r\n}\r\n","export default {\r\n    adoptere: 'https://familie.nav.no/om-foreldrepenger#adoptere',\r\n    rettOgPlikt: 'https://nav.no/rettOgPlikt',\r\n    fleksibeltuttak: 'https://familie.nav.no/om-foreldrepenger#hjemme-samtidig',\r\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\r\n    viktigeFrister: 'https://familie.nav.no/om-foreldrepenger#nar-kan-du-soke',\r\n    nav_aktivitetskrav: 'https://familie.nav.no/om-foreldrepenger#hvor-lenge-kan-du-fa-foreldrepenger',\r\n    brukerstøtte:\r\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\r\n    innsyn: 'https://foreldrepenger.nav.no',\r\n    morsAktivitetskrav: 'https://familie.nav.no/om-foreldrepenger',\r\n    frilanserInfoBoks:\r\n        'https://www.skatteetaten.no/bedrift-og-organisasjon/arbeidsgiver/a-meldingen/veiledning/arbeidsforholdet/type-arbeidsforhold/frilanser-oppdragstaker-og-personer-som-mottar-honorarer/',\r\n    næringsdrivendeInfoBoks:\r\n        'https://www.skatteetaten.no/bedrift-og-organisasjon/starte-og-drive/er-jeg-naringsdrivende/',\r\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\r\n    familie: 'https://familie.nav.no/',\r\n    graderingInfo: 'https://familie.nav.no/om-foreldrepenger#hvis-du-vil-jobbe',\r\n    hvordanSendeInntektsmelding:\r\n        'https://www.nav.no/no/bedrift/tjenester-og-skjemaer/nav-og-altinn-tjenester/foreldrepenger-og-svangerskapspenger2',\r\n    omLottOgHyre: 'https://www.skatteetaten.no/rettskilder/type/handboker/skatte-abc/2019/fiske/F-14.014/F-14.048/',\r\n};\r\n","import * as React from 'react';\r\nimport Modal from 'nav-frontend-modal';\r\nimport { Ingress, Normaltekst, Systemtittel } from 'nav-frontend-typografi';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { bemUtils, Block, intlUtils } from '@navikt/fp-common';\r\n\r\nimport './dinePersonopplysningerModal.less';\r\n\r\ninterface DineRettigheterModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose: () => void;\r\n}\r\n\r\ntype Props = DineRettigheterModalProps;\r\n\r\nconst DinePersonopplysningerModal = (props: Props) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('dinePersonopplysningerModal');\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={props.isOpen}\r\n            onRequestClose={() => props.onRequestClose()}\r\n            closeButton={true}\r\n            className={bem.block}\r\n            contentLabel={intlUtils(intl, 'velkommen.dinePersonopplysninger.sectionheading')}\r\n        >\r\n            <article className=\"velkommenModalContent velkommenModalContent--50\">\r\n                <Block padBottom=\"s\">\r\n                    <Systemtittel tag=\"h1\" className=\"velkommenModalContent__header\">\r\n                        {intlUtils(intl, 'velkommen.dinePersonopplysninger.sectionheading')}\r\n                    </Systemtittel>\r\n                </Block>\r\n                <Block padBottom=\"s\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"velkommen.dinePersonopplysninger.behandling.html\"\r\n                            values={{\r\n                                a: (msg: any) => (\r\n                                    <a\r\n                                        href=\"https://www.nav.no/foreldrepenger\"\r\n                                        className=\"lenke\"\r\n                                        rel=\"noreferrer\"\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block padBottom=\"s\">\r\n                    <Ingress>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.tittel\" />\r\n                    </Ingress>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.del1\" />\r\n                    </Normaltekst>\r\n                    <ul>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.punkt1\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.punkt2\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.punkt3\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.punkt4\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                    </ul>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.innhenting.del2\" />\r\n                    </Normaltekst>\r\n                </Block>\r\n                <Block padBottom=\"s\">\r\n                    <Ingress>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.tittel\" />\r\n                    </Ingress>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.del1\" />\r\n                    </Normaltekst>\r\n                    <ul>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.punkt1\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.punkt2\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.punkt3\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.punkt4\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.automatiskBehandling.punkt5\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                    </ul>\r\n                </Block>\r\n                <Block padBottom=\"s\">\r\n                    <Ingress>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.svarPaSoknaden.tittel\" />\r\n                    </Ingress>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.svarPaSoknaden.del1\" />\r\n                    </Normaltekst>\r\n                    <ul>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.svarPaSoknaden.punkt1\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.svarPaSoknaden.punkt2\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                        <li>\r\n                            <Normaltekst>\r\n                                <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.svarPaSoknaden.punkt3\" />\r\n                            </Normaltekst>\r\n                        </li>\r\n                    </ul>\r\n                </Block>\r\n                <Block padBottom=\"s\">\r\n                    <Ingress tag=\"h2\">\r\n                        <FormattedMessage id=\"velkommen.dinePersonopplysninger.avsnitt.personvernerklaringen.tittel\" />\r\n                    </Ingress>\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"velkommen.dinePersonopplysninger.avsnitt.personvernerklaringen.html\"\r\n                            values={{\r\n                                a: (msg: any) => (\r\n                                    <a\r\n                                        className=\"lenke\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        href=\"https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten\"\r\n                                    >\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </Block>\r\n            </article>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DinePersonopplysningerModal;\r\n","enum SøknadRoutes {\r\n    VELKOMMEN = '/',\r\n    SØKERSITUASJON = '/soknad/sokersituasjon',\r\n    OM_BARNET = '/soknad/om-barnet',\r\n    ANNEN_FORELDER = '/soknad/annen-forelder',\r\n    UTTAKSPLAN_INFO = '/soknad/uttaksplan-info',\r\n    UTTAKSPLAN = '/soknad/uttaksplan',\r\n    UTENLANDSOPPHOLD = '/soknad/utenlandsopphold',\r\n    INNTEKTSINFORMASJON = '/soknad/inntektsinformasjon',\r\n    MANGLENDE_VEDLEGG = '/soknad/manglende-vedlegg',\r\n    OPPSUMMERING = '/soknad/oppsummering',\r\n    SØKNAD_SENDT = '/soknad/soknad-sendt',\r\n}\r\n\r\nexport default SøknadRoutes;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport { bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\n\r\ninterface Props {\r\n    arbeidsforhold: Arbeidsforhold[];\r\n    harArbeidsforhold: boolean;\r\n}\r\n\r\nconst HarArbeidsforhold: FunctionComponent<Props> = ({ arbeidsforhold, harArbeidsforhold }: Props) => {\r\n    const intl = useIntl();\r\n\r\n    if (!harArbeidsforhold) {\r\n        return null;\r\n    }\r\n\r\n    const bem = bemUtils('arbeidsforholdInfoBox');\r\n\r\n    return (\r\n        <ul className=\"arbeidsforholdList\">\r\n            {arbeidsforhold.map((arbforhold: Arbeidsforhold) => (\r\n                <li key={arbforhold.arbeidsgiverId}>\r\n                    <div className={bem.block}>\r\n                        <div className={bem.element('topRow')}>\r\n                            {arbforhold.arbeidsgiverIdType === 'orgnr' && (\r\n                                <Normaltekst>\r\n                                    {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.organisasjonsnummer', {\r\n                                        organisasjonsnummer: arbforhold.arbeidsgiverId,\r\n                                    })}\r\n                                </Normaltekst>\r\n                            )}\r\n                            <Normaltekst className={bem.element('stillingsprosent')}>\r\n                                {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.stillingsprosent', {\r\n                                    stillingsprosent: arbforhold.stillingsprosent,\r\n                                })}\r\n                            </Normaltekst>\r\n                        </div>\r\n                        <Element>\r\n                            {arbforhold.arbeidsgiverIdType === 'orgnr'\r\n                                ? arbforhold.arbeidsgiverNavn\r\n                                : intlUtils(intl, 'arbeidsgiver')}\r\n                        </Element>\r\n                        <Normaltekst>\r\n                            {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.periode', {\r\n                                fom: formatDate(arbforhold.fom),\r\n                                tom: arbforhold.tom ? formatDate(arbforhold.tom) : intlUtils(intl, 'pågående'),\r\n                            })}\r\n                        </Normaltekst>\r\n                    </div>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nexport default HarArbeidsforhold;\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    harArbeidsforhold: boolean;\r\n}\r\n\r\nconst HarIkkeArbeidsforhold: FunctionComponent<Props> = ({ harArbeidsforhold }) => {\r\n    const intl = useIntl();\r\n\r\n    if (harArbeidsforhold) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"arbeidsforholdInfoBox\" style={{ marginBottom: '1rem' }}>\r\n            <Element>{intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.ingenRegistrerteArbeidsforhold')}</Element>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HarIkkeArbeidsforhold;\r\n","import { assertUnreachable } from 'app/utils/globalUtil';\r\n\r\ntype SøkersituasjonStepId = 'søkersituasjon';\r\ntype OmBarnetStepId = 'omBarnet';\r\ntype AnnenForelderId = 'annenForelder';\r\ntype UttaksplanInfo = 'uttaksplanInfo';\r\ntype Uttaksplan = 'uttaksplan';\r\ntype UtenlandsoppholdStepId = 'utenlandsopphold';\r\ntype Inntektsinformasjon = 'inntektsinformasjon';\r\ntype PåkrevdDokumentasjonStepId = 'dokumentasjon';\r\ntype OppsummeringStepId = 'oppsummering';\r\n\r\ntype StepIdWithBackHref =\r\n    | OmBarnetStepId\r\n    | AnnenForelderId\r\n    | UttaksplanInfo\r\n    | Uttaksplan\r\n    | UtenlandsoppholdStepId\r\n    | Inntektsinformasjon\r\n    | PåkrevdDokumentasjonStepId\r\n    | OppsummeringStepId;\r\n\r\nexport type StepId = SøkersituasjonStepId | StepIdWithBackHref;\r\n\r\ninterface StepConfig {\r\n    id: StepId;\r\n    index: number;\r\n    label: string;\r\n}\r\n\r\n//TODO Her er vel både labels feil og burde hentast fra i18n-fila\r\nconst stepConfig: StepConfig[] = [\r\n    {\r\n        id: 'søkersituasjon',\r\n        index: 0,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'omBarnet',\r\n        index: 1,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'annenForelder',\r\n        index: 2,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'uttaksplanInfo',\r\n        index: 3,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'uttaksplan',\r\n        index: 4,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'utenlandsopphold',\r\n        index: 5,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'inntektsinformasjon',\r\n        index: 6,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'dokumentasjon',\r\n        index: 7,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'oppsummering',\r\n        index: 8,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n];\r\n\r\nexport const getPreviousStepHref = (id: StepIdWithBackHref): string => {\r\n    let href;\r\n    switch (id) {\r\n        case 'omBarnet':\r\n            href = '/soknad/sokersituasjon';\r\n            break;\r\n        case 'annenForelder':\r\n            href = '/soknad/om-barnet';\r\n            break;\r\n        case 'uttaksplanInfo':\r\n            href = '/soknad/annen-forelder';\r\n            break;\r\n        case 'uttaksplan':\r\n            href = '/soknad/uttaksplan-info';\r\n            break;\r\n        case 'utenlandsopphold':\r\n            href = '/soknad/uttaksplan';\r\n            break;\r\n        case 'inntektsinformasjon':\r\n            href = '/soknad/utenlandsopphold';\r\n            break;\r\n        case 'dokumentasjon':\r\n            href = '/soknad/dokumentasjon';\r\n            break;\r\n        case 'oppsummering':\r\n            href = '/soknad/inntektsinformasjon';\r\n            break;\r\n        default:\r\n            return assertUnreachable(id);\r\n    }\r\n    return href;\r\n};\r\nexport default stepConfig;\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum FarMedmorFødselBeggeHarRettFormField {\r\n    dekningsgrad = 'dekningsgrad',\r\n    morsSisteDag = 'morsSisteDag',\r\n    farMedmorsFørsteDag = 'farMedmorsFørsteDag',\r\n    antallUkerFellesperiode = 'antallUkerFellesperiode',\r\n    antallDagerFellesperiode = 'antallDagerFellesperiode',\r\n}\r\n\r\nexport interface FarMedmorFødselBeggeHarRettFormData {\r\n    [FarMedmorFødselBeggeHarRettFormField.dekningsgrad]: string;\r\n    [FarMedmorFødselBeggeHarRettFormField.morsSisteDag]: string;\r\n    [FarMedmorFødselBeggeHarRettFormField.farMedmorsFørsteDag]: string;\r\n    [FarMedmorFødselBeggeHarRettFormField.antallUkerFellesperiode]: string;\r\n    [FarMedmorFødselBeggeHarRettFormField.antallDagerFellesperiode]: string;\r\n}\r\n\r\nexport const FarMedmorFødselBeggeHarRettFormComponents = getTypedFormComponents<\r\n    FarMedmorFødselBeggeHarRettFormField,\r\n    FarMedmorFødselBeggeHarRettFormData,\r\n    string\r\n>();\r\n","import { FarMedmorFødselBeggeHarRettUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport {\r\n    FarMedmorFødselBeggeHarRettFormData,\r\n    FarMedmorFødselBeggeHarRettFormField,\r\n} from './farMedmorFødselBeggeHarRettFormConfig';\r\n\r\nconst initialFarMedmorFødselBeggeHarRettValues: FarMedmorFødselBeggeHarRettFormData = {\r\n    [FarMedmorFødselBeggeHarRettFormField.dekningsgrad]: '',\r\n    [FarMedmorFødselBeggeHarRettFormField.morsSisteDag]: '',\r\n    [FarMedmorFødselBeggeHarRettFormField.farMedmorsFørsteDag]: '',\r\n    [FarMedmorFødselBeggeHarRettFormField.antallUkerFellesperiode]: '0',\r\n    [FarMedmorFødselBeggeHarRettFormField.antallDagerFellesperiode]: '0',\r\n};\r\n\r\nexport const mapFarMedmorFødselBeggeHarRettToState = (\r\n    values: Partial<FarMedmorFødselBeggeHarRettFormData>\r\n): FarMedmorFødselBeggeHarRettUttaksplanInfo => {\r\n    return {\r\n        antallDagerFellesperiode: values.antallDagerFellesperiode!,\r\n        antallUkerFellesperiode: values.antallUkerFellesperiode!,\r\n        farMedmorsFørsteDag: values.farMedmorsFørsteDag!,\r\n        morsSisteDag: values.morsSisteDag!,\r\n    };\r\n};\r\n\r\nexport const getInitialFarMedmorFødselBeggeHarRettValues = (\r\n    state: FarMedmorFødselBeggeHarRettUttaksplanInfo | undefined,\r\n    dekningsgrad: Dekningsgrad\r\n): FarMedmorFødselBeggeHarRettFormData => {\r\n    if (!state) {\r\n        return initialFarMedmorFødselBeggeHarRettValues;\r\n    }\r\n\r\n    return {\r\n        ...initialFarMedmorFødselBeggeHarRettValues,\r\n        antallDagerFellesperiode: state.antallDagerFellesperiode,\r\n        antallUkerFellesperiode: state.antallUkerFellesperiode,\r\n        morsSisteDag: state.morsSisteDag,\r\n        farMedmorsFørsteDag: state.farMedmorsFørsteDag,\r\n        dekningsgrad,\r\n    };\r\n};\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport {\r\n    FarMedmorFødselBeggeHarRettFormData,\r\n    FarMedmorFødselBeggeHarRettFormField,\r\n} from './farMedmorFødselBeggeHarRettFormConfig';\r\n\r\nconst FarMedmorFødselBeggeHarRettFormConfig: QuestionConfig<\r\n    FarMedmorFødselBeggeHarRettFormData,\r\n    FarMedmorFødselBeggeHarRettFormField\r\n> = {\r\n    [FarMedmorFødselBeggeHarRettFormField.dekningsgrad]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n    },\r\n    [FarMedmorFødselBeggeHarRettFormField.morsSisteDag]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ morsSisteDag }) => hasValue(morsSisteDag),\r\n        visibilityFilter: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n    },\r\n    [FarMedmorFødselBeggeHarRettFormField.farMedmorsFørsteDag]: {\r\n        isIncluded: ({ morsSisteDag }) => hasValue(morsSisteDag),\r\n        isAnswered: ({ farMedmorsFørsteDag }) => hasValue(farMedmorsFørsteDag),\r\n    },\r\n    [FarMedmorFødselBeggeHarRettFormField.antallDagerFellesperiode]: {\r\n        isIncluded: ({ farMedmorsFørsteDag }) => hasValue(farMedmorsFørsteDag),\r\n        isAnswered: ({ antallDagerFellesperiode }) => hasValue(antallDagerFellesperiode),\r\n    },\r\n    [FarMedmorFødselBeggeHarRettFormField.antallUkerFellesperiode]: {\r\n        isIncluded: ({ farMedmorsFørsteDag }) => hasValue(farMedmorsFørsteDag),\r\n        isAnswered: ({ antallUkerFellesperiode }) => hasValue(antallUkerFellesperiode),\r\n    },\r\n};\r\n\r\nconst farMedmorFødselBeggeHarRettQuestionsConfig = Questions<\r\n    FarMedmorFødselBeggeHarRettFormData,\r\n    FarMedmorFødselBeggeHarRettFormField\r\n>(FarMedmorFødselBeggeHarRettFormConfig);\r\n\r\nexport default farMedmorFødselBeggeHarRettQuestionsConfig;\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate, TypedFormComponents } from '@navikt/sif-common-formik/lib';\r\nimport { uttaksplanDatoavgrensninger } from 'app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    FormComponents: TypedFormComponents<any, any, string>;\r\n    fieldName: string;\r\n    navnMor: string;\r\n    familiehendelsesdato: string;\r\n}\r\n\r\nconst MorsSisteDagSpørsmål: FunctionComponent<Props> = ({\r\n    FormComponents,\r\n    fieldName,\r\n    familiehendelsesdato,\r\n    navnMor,\r\n}) => {\r\n    const intl = useIntl();\r\n\r\n    const maxDate = ISOStringToDate(uttaksplanDatoavgrensninger.morsSisteUttaksdag(familiehendelsesdato).maxDate);\r\n    const minDate = ISOStringToDate(uttaksplanDatoavgrensninger.morsSisteUttaksdag(familiehendelsesdato).minDate);\r\n\r\n    return (\r\n        <FormComponents.DatePicker\r\n            name={fieldName}\r\n            label={intlUtils(intl, 'uttaksplaninfo.morSinSisteUttaksdag.label', { navnMor })}\r\n            maxDate={maxDate}\r\n            minDate={minDate}\r\n            showYearSelector={true}\r\n            disableWeekend={true}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MorsSisteDagSpørsmål;\r\n","import { Block, formatDate, intlUtils } from '@navikt/fp-common';\r\nimport { dateToISOString, ISOStringToDate, TypedFormComponents } from '@navikt/sif-common-formik/lib';\r\nimport LenkeKnapp from 'app/components/lenke-knapp/LenkeKnapp';\r\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\r\nimport { uttaksplanDatoavgrensninger } from 'app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    FormComponents: TypedFormComponents<any, any, string>;\r\n    fieldName: string;\r\n    familiehendelsesdato: string;\r\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\r\n    morsSisteDag: Date | undefined;\r\n    navnMor: string;\r\n}\r\n\r\nconst FarMedmorsFørsteDag: FunctionComponent<Props> = ({\r\n    FormComponents,\r\n    fieldName,\r\n    familiehendelsesdato,\r\n    morsSisteDag,\r\n    setFieldValue,\r\n    navnMor,\r\n}) => {\r\n    const intl = useIntl();\r\n\r\n    const maxDate = ISOStringToDate(\r\n        uttaksplanDatoavgrensninger.startdatoPermisjonFarMedmor(familiehendelsesdato).maxDate\r\n    );\r\n    const minDate = ISOStringToDate(\r\n        uttaksplanDatoavgrensninger.startdatoPermisjonFarMedmor(familiehendelsesdato).minDate\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\">\r\n                <FormComponents.DatePicker\r\n                    name={fieldName}\r\n                    label={intlUtils(intl, 'uttaksplaninfo.farSinFørsteUttaksdagSpørsmål.label')}\r\n                    maxDate={maxDate}\r\n                    minDate={minDate}\r\n                    showYearSelector={true}\r\n                    disableWeekend={true}\r\n                />\r\n            </Block>\r\n            <LenkeKnapp\r\n                text={\r\n                    <FormattedMessage\r\n                        id=\"uttaksplaninfo.farSinFørsteUttaksdagSpørsmål.førsteUttaksdagEtterAnnenPart\"\r\n                        values={{\r\n                            navn: navnMor,\r\n                            dato: formatDate(Uttaksdagen(morsSisteDag!).neste()),\r\n                        }}\r\n                    />\r\n                }\r\n                onClick={() => {\r\n                    const farSinFørsteUttaksdag: string | undefined = morsSisteDag\r\n                        ? dateToISOString(Uttaksdagen(morsSisteDag).neste())\r\n                        : undefined;\r\n\r\n                    setFieldValue(fieldName, farSinFørsteUttaksdag);\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FarMedmorsFørsteDag;\r\n","import React from 'react';\r\n\r\ninterface RangeIconProps {\r\n    type: 'plus' | 'minus';\r\n}\r\n\r\nexport default class RangeIcon extends React.Component<RangeIconProps> {\r\n    renderPlusIcon() {\r\n        return (\r\n            <path\r\n                d=\"M18.2616283,12.5217391 L12.5222595,12.5217391 L12.5222595,18.2608696 C12.5222595,18.5488696 12.2874672,18.7826087 12.0004988,18.7826087 C11.7124868,18.7826087 11.478738,18.5488696 11.478738,18.2608696 L11.478738,12.5217391 L5.73936926,12.5217391 C5.4513573,12.5206957 5.21656494,12.288 5.21760846,12 C5.21760846,11.7130435 5.4513573,11.4782609 5.73936926,11.4782609 L11.478738,11.4782609 L11.478738,5.73913043 C11.478738,5.45113043 11.7124868,5.2173913 12.0004988,5.2173913 C12.2874672,5.2173913 12.5222595,5.45113043 12.5222595,5.73913043 L12.5222595,11.4782609 L18.2616283,11.4782609 C18.5485967,11.4782609 18.7844326,11.712 18.783389,12 C18.783389,12.288 18.5496402,12.5217391 18.2616283,12.5217391 Z\"\r\n                id=\"Inner\"\r\n                fill=\"#FFFFFF\"\r\n            />\r\n        );\r\n    }\r\n\r\n    renderMinusIcon() {\r\n        return (\r\n            <path\r\n                d=\"M18.2616283,12.5217391 L5.73936926,12.5217391 C5.4513573,12.5206957 5.21656494,12.288 5.21760846,12 C5.21760846,11.7130435 5.4513573,11.4782609 5.73936926,11.4782609 L18.2616283,11.4782609 C18.5485967,11.4782609 18.7844326,11.712 18.783389,12 C18.783389,12.288 18.5496402,12.5217391 18.2616283,12.5217391 Z\"\r\n                id=\"Inner\"\r\n                fill=\"#FFFFFF\"\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { type } = this.props;\r\n        const icon = type === 'minus' ? this.renderMinusIcon() : this.renderPlusIcon();\r\n\r\n        return (\r\n            <svg\r\n                focusable=\"false\"\r\n                role=\"presentation\"\r\n                width=\"24px\"\r\n                height=\"24px\"\r\n                viewBox=\"0 0 24 24\"\r\n                className=\"rangeIcon\"\r\n            >\r\n                <g id=\"Icons/subtract/default\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                    {icon}\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n","// Ensure touches occur rapidly\r\nconst delay = 500;\r\n// Sequential touches must be in close vicinity\r\nconst minZoomTouchDelta = 10;\r\n\r\n// Track state of the last touch\r\nlet lastTapAt = 0;\r\nlet lastClientX = 0;\r\nlet lastClientY = 0;\r\n\r\nexport default function preventDoubleTapZoom(event: React.TouchEvent<any>) {\r\n    // Exit early if this involves more than one finger (e.g. pinch to zoom)\r\n    if (event.touches.length > 1) {\r\n        return;\r\n    }\r\n\r\n    const tapAt = new Date().getTime();\r\n    const timeDiff = tapAt - lastTapAt;\r\n    const { clientX, clientY } = event.touches[0];\r\n    const xDiff = Math.abs(lastClientX - clientX);\r\n    const yDiff = Math.abs(lastClientY - clientY);\r\n    if (xDiff < minZoomTouchDelta && yDiff < minZoomTouchDelta && event.touches.length === 1 && timeDiff < delay) {\r\n        event.preventDefault();\r\n        // Trigger a fake click for the tap we just prevented\r\n        (event.target as any).click();\r\n    }\r\n    lastClientX = clientX;\r\n    lastClientY = clientY;\r\n    lastTapAt = tapAt;\r\n}\r\n","import React from 'react';\r\n\r\n/**\r\n *  Skjuler tekst slik at den ikke er synlig på skjerm, men leses av skjermleser\r\n */\r\nexport interface AriaTextProps {\r\n    id?: string;\r\n    children?: React.ReactNode;\r\n    tag?: string;\r\n}\r\n\r\nconst AriaText: React.FunctionComponent<AriaTextProps> = ({ id, children, tag }) => {\r\n    const tagName = tag || 'span';\r\n    return React.createElement(tagName, { id, className: 'sr-only' }, children);\r\n};\r\nexport default AriaText;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport preventDoubleTapZoom from '../preventDoubleTapZoom';\r\nimport AriaText from '../AriaText';\r\nimport './sirkelknapp.less';\r\n\r\nexport type Stil = 'hvit' | 'bla' | 'info';\r\n\r\nexport interface SirkelknappProps {\r\n    /** Tekst som blir lest opp og satt som tittel på knappen */\r\n    ariaLabel: string;\r\n    /** Ikon som brukes inne i knappen */\r\n    ikon: React.ReactNode;\r\n    /** Funksjon som kalles knappen klikkes på */\r\n    onClick: () => void;\r\n    /** Om knappen er disabled eller ikke. Default false. */\r\n    disabled?: boolean;\r\n    /** Om knappen skal ha tilstanded pressed/valgt. Default false. */\r\n    toggle?: {\r\n        pressed: boolean;\r\n    };\r\n    /** Layout varianter */\r\n    stil?: Stil;\r\n    /** Størrelse - default normal */\r\n    size?: 'normal' | 'stor';\r\n    posisjoneringFraHøyre?: number;\r\n}\r\n\r\nconst Sirkelknapp: React.FunctionComponent<SirkelknappProps> = ({\r\n    onClick,\r\n    ariaLabel,\r\n    ikon,\r\n    toggle,\r\n    disabled,\r\n    stil = 'info',\r\n    size = 'normal',\r\n    posisjoneringFraHøyre,\r\n}) => {\r\n    const labelId = guid();\r\n    return (\r\n        <button\r\n            style={{ left: posisjoneringFraHøyre }}\r\n            type=\"button\"\r\n            onClick={() => onClick()}\r\n            onTouchStart={preventDoubleTapZoom}\r\n            aria-labelledby={labelId}\r\n            className={classnames(`sirkelknapp`, `sirkelknapp--${stil}`, `sirkelknapp--${size}`, {\r\n                'sirkelknapp--pressed': toggle && toggle.pressed,\r\n                'sirkelknapp--disabled': disabled,\r\n            })}\r\n            disabled={disabled}\r\n            aria-pressed={toggle ? toggle.pressed : undefined}\r\n        >\r\n            <span className=\"sirkelknapp__ikon\" role=\"presentation\">\r\n                {ikon}\r\n            </span>\r\n            <AriaText id={labelId}>{ariaLabel}</AriaText>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Sirkelknapp;\r\n","import { bemUtils, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { getNumberFromNumberInputValue, TypedFormComponents } from '@navikt/sif-common-formik/lib';\r\nimport { SkjemaGruppe } from 'nav-frontend-skjema';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport RangeIcon from '../../fordelingFellesperiode/range-input/RangeIcon';\r\nimport Sirkelknapp from '../../fordelingFellesperiode/range-input/sirkelknapp/Sirkelknapp';\r\n\r\nimport './antallUkerOgDagerFellesperiodeFarMedmorSpørsmål.less';\r\n\r\ninterface Props {\r\n    FormComponents: TypedFormComponents<any, any, string>;\r\n    ukerFieldName: string;\r\n    dagerFieldName: string;\r\n    antallUker: string;\r\n    antallDager: string;\r\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\r\n    ukerMedFellesperiode: number;\r\n}\r\n\r\nconst leggTilUke = (currentAntall: string, max: number): string => {\r\n    const number = getNumberFromNumberInputValue(currentAntall);\r\n\r\n    if (number === undefined || Math.round(number) !== number) {\r\n        return currentAntall;\r\n    }\r\n\r\n    if (number + 1 > max) {\r\n        return max.toString();\r\n    }\r\n\r\n    return (number + 1).toString();\r\n};\r\n\r\nconst trekkFraUke = (currentAntall: string, min: number): string => {\r\n    const number = getNumberFromNumberInputValue(currentAntall);\r\n\r\n    if (number === undefined || Math.round(number) !== number) {\r\n        return currentAntall;\r\n    }\r\n\r\n    if (number - 1 < min) {\r\n        return min.toString();\r\n    }\r\n\r\n    return (number - 1).toString();\r\n};\r\n\r\nconst leggTilDag = (currentAntall: string, max: number): string => {\r\n    const number = getNumberFromNumberInputValue(currentAntall);\r\n\r\n    if (number === undefined || Math.round(number) !== number) {\r\n        return currentAntall;\r\n    }\r\n\r\n    if (number + 1 > max) {\r\n        return max.toString();\r\n    }\r\n\r\n    return (number + 1).toString();\r\n};\r\n\r\nconst trekkFraDag = (currentAntall: string, min: number): string => {\r\n    const number = getNumberFromNumberInputValue(currentAntall);\r\n\r\n    if (number === undefined || Math.round(number) !== number) {\r\n        return currentAntall;\r\n    }\r\n\r\n    if (number - 1 < min) {\r\n        return min.toString();\r\n    }\r\n\r\n    return (number - 1).toString();\r\n};\r\n\r\nconst AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål: FunctionComponent<Props> = ({\r\n    FormComponents,\r\n    ukerFieldName,\r\n    dagerFieldName,\r\n    antallDager,\r\n    antallUker,\r\n    setFieldValue,\r\n    ukerMedFellesperiode,\r\n}) => {\r\n    const bem = bemUtils('antallUkerOgDagerFellesperiodeFarMedmorSpørsmål');\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <SkjemaGruppe\r\n            legend={\r\n                <Element>\r\n                    <FormattedMessage id=\"uttaksplaninfo.fellesperiode.tittel\" />\r\n                </Element>\r\n            }\r\n            description={\r\n                <UtvidetInformasjon apneLabel={intlUtils(intl, 'uttaksplaninfo.fellesperiode.apneLabel')}>\r\n                    <FormattedMessage id=\"uttaksplaninfo.fellesperiode.lesMerInfo\" />\r\n                </UtvidetInformasjon>\r\n            }\r\n        >\r\n            <div className={bem.block}>\r\n                <div className={bem.element('stepper')}>\r\n                    <div className={bem.element('icon')}>\r\n                        <Sirkelknapp\r\n                            stil=\"hvit\"\r\n                            ariaLabel=\"Mink antall uker med en uke\"\r\n                            ikon={<RangeIcon type=\"minus\" />}\r\n                            disabled={parseInt(antallUker, 10) === 0 ? true : false}\r\n                            onClick={() => setFieldValue(ukerFieldName, trekkFraUke(antallUker, 0))}\r\n                        />\r\n                    </div>\r\n                    <FormComponents.NumberInput\r\n                        className={bem.element('uker')}\r\n                        integerValue={true}\r\n                        name={ukerFieldName}\r\n                        label=\"Uker\"\r\n                        bredde=\"XS\"\r\n                        step=\"1\"\r\n                    />\r\n                    <div className={bem.element('icon')}>\r\n                        <Sirkelknapp\r\n                            stil=\"hvit\"\r\n                            ariaLabel=\"Øk antall uker med en uke\"\r\n                            ikon={<RangeIcon type=\"plus\" />}\r\n                            disabled={parseInt(antallUker, 10) >= ukerMedFellesperiode ? true : false}\r\n                            onClick={() => setFieldValue(ukerFieldName, leggTilUke(antallUker, ukerMedFellesperiode))}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={bem.element('stepper')}>\r\n                    <div className={bem.element('icon')}>\r\n                        <Sirkelknapp\r\n                            stil=\"hvit\"\r\n                            ariaLabel=\"Mink antall dager med en dag\"\r\n                            ikon={<RangeIcon type=\"minus\" />}\r\n                            onClick={() => setFieldValue(dagerFieldName, trekkFraDag(antallDager, 0))}\r\n                            disabled={parseInt(antallDager, 10) === 0 ? true : false}\r\n                        />\r\n                    </div>\r\n                    <FormComponents.NumberInput\r\n                        className={bem.element('uker')}\r\n                        integerValue={true}\r\n                        name={dagerFieldName}\r\n                        label=\"Dager\"\r\n                        bredde=\"XS\"\r\n                        step=\"1\"\r\n                    />\r\n                    <div className={bem.element('icon')}>\r\n                        <Sirkelknapp\r\n                            stil=\"hvit\"\r\n                            ariaLabel=\"Øk antall dager med en dag\"\r\n                            ikon={<RangeIcon type=\"plus\" />}\r\n                            onClick={() => setFieldValue(dagerFieldName, leggTilDag(antallDager, 4))}\r\n                            disabled={parseInt(antallDager, 10) === 4 ? true : false}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SkjemaGruppe>\r\n    );\r\n};\r\n\r\nexport default AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål;\r\n","import AnnenForelder, { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\n\r\nexport const getErMorUfør = (annenForelder: AnnenForelder, erFarEllerMedmor: boolean) => {\r\n    if (isAnnenForelderOppgitt(annenForelder) && erFarEllerMedmor) {\r\n        return !!annenForelder.erUfør;\r\n    }\r\n\r\n    return false;\r\n};\r\n","import { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport React, { FunctionComponent } from 'react';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport { getNavnGenitivEierform } from 'app/utils/personUtils';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport {\r\n    FarMedmorFødselBeggeHarRettFormComponents,\r\n    FarMedmorFødselBeggeHarRettFormData,\r\n    FarMedmorFødselBeggeHarRettFormField,\r\n} from './farMedmorFødselBeggeHarRettFormConfig';\r\nimport {\r\n    getInitialFarMedmorFødselBeggeHarRettValues,\r\n    mapFarMedmorFødselBeggeHarRettToState,\r\n} from './farMedmorFødselBeggeHarRettUtils';\r\nimport TilgjengeligeDagerGraf from '../../tilgjengeligeDagerGraf/TilgjengeligeDagerGraf';\r\nimport { getTilgjengeligeDager } from '../../tilgjengeligeDagerGraf/tilgjengeligeDagerUtils';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport farMedmorFødselBeggeHarRettQuestionsConfig from './farMedmorFødselBeggeHarRettQuestionsConfig';\r\nimport MorsSisteDagSpørsmål from '../spørsmål/MorsSisteDagSpørsmål';\r\nimport FarMedmorsFørsteDag from '../spørsmål/FarMedmorsFørsteDag';\r\nimport AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål from '../spørsmål/AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport { getErMorUfør } from 'app/utils/annenForelderUtils';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\r\nimport DekningsgradSpørsmål from '../spørsmål/DekningsgradSpørsmål';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useUttaksplanInfo from 'app/utils/hooks/useUttaksplanInfo';\r\nimport { FarMedmorFødselBeggeHarRettUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { getDekningsgradFromString } from 'app/utils/getDekningsgradFromString';\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n    eksisterendeSakAnnenPart: EksisterendeSak | undefined;\r\n}\r\n\r\nconst FarMedmorFødselFørsteganggsøknadBeggeHarRett: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer100DTO,\r\n    tilgjengeligeStønadskontoer80DTO,\r\n    eksisterendeSakAnnenPart,\r\n}) => {\r\n    const intl = useIntl();\r\n    const { annenForelder, søkersituasjon, barn, dekningsgrad } = useSøknad();\r\n    const { person } = useSøkerinfo();\r\n    const erFarEllerMedmor = isFarEllerMedmor(søkersituasjon.rolle);\r\n    const erFødsel = søkersituasjon.situasjon === 'fødsel';\r\n    const annenForelderHarRett = isAnnenForelderOppgitt(annenForelder)\r\n        ? !!annenForelder.harRettPåForeldrepenger\r\n        : false;\r\n    const lagretUttaksplanInfo = useUttaksplanInfo<FarMedmorFødselBeggeHarRettUttaksplanInfo>();\r\n\r\n    const onValidSubmitHandler = (values: Partial<FarMedmorFødselBeggeHarRettFormData>) => {\r\n        return [\r\n            actionCreator.setUttaksplanInfo(mapFarMedmorFødselBeggeHarRettToState(values)),\r\n            actionCreator.setDekningsgrad(getDekningsgradFromString(values.dekningsgrad)),\r\n        ];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN);\r\n    const shouldRender = erFarEllerMedmor && erFødsel && annenForelderHarRett && eksisterendeSakAnnenPart === undefined;\r\n\r\n    if (!shouldRender) {\r\n        return null;\r\n    }\r\n\r\n    const navnFar = erFarEllerMedmor\r\n        ? person.fornavn\r\n        : isAnnenForelderOppgitt(annenForelder)\r\n        ? annenForelder.fornavn\r\n        : '';\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n    const navnMor = erFarEllerMedmor && isAnnenForelderOppgitt(annenForelder) ? annenForelder.fornavn : person.fornavn;\r\n\r\n    const erMorUfør = getErMorUfør(annenForelder, erFarEllerMedmor);\r\n    const tilgjengeligeStønadskontoer = getValgtStønadskontoFor80Og100Prosent(\r\n        tilgjengeligeStønadskontoer80DTO,\r\n        tilgjengeligeStønadskontoer100DTO,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n\r\n    return (\r\n        <FarMedmorFødselBeggeHarRettFormComponents.FormikWrapper\r\n            initialValues={getInitialFarMedmorFødselBeggeHarRettValues(lagretUttaksplanInfo, dekningsgrad)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues, setFieldValue }) => {\r\n                const visibility = farMedmorFødselBeggeHarRettQuestionsConfig.getVisbility(formValues);\r\n\r\n                const valgtStønadskonto = tilgjengeligeStønadskontoer[formValues.dekningsgrad];\r\n                const tilgjengeligeDager = valgtStønadskonto\r\n                    ? getTilgjengeligeDager(valgtStønadskonto, false, Forelder.farMedmor)\r\n                    : undefined;\r\n\r\n                return (\r\n                    <FarMedmorFødselBeggeHarRettFormComponents.Form\r\n                        includeButtons={false}\r\n                        includeValidationSummary={true}\r\n                    >\r\n                        <Block padBottom=\"l\">\r\n                            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                <FormattedMessage\r\n                                    id=\"uttaksplaninfo.veileder.informasjonTilAnnenForelder\"\r\n                                    values={{\r\n                                        navn: isAnnenForelderOppgitt(annenForelder)\r\n                                            ? getNavnGenitivEierform(annenForelder.fornavn, intl.locale)\r\n                                            : '',\r\n                                    }}\r\n                                />\r\n                            </Veilederpanel>\r\n                        </Block>\r\n                        <Block padBottom=\"l\">\r\n                            <DekningsgradSpørsmål\r\n                                FormKomponent={FarMedmorFødselBeggeHarRettFormComponents}\r\n                                dekningsgradFeltNavn={FarMedmorFødselBeggeHarRettFormField.dekningsgrad}\r\n                                tilgjengeligeStønadskontoer={tilgjengeligeStønadskontoer}\r\n                            />\r\n                        </Block>\r\n                        <Block visible={formValues.dekningsgrad !== ''}>\r\n                            {tilgjengeligeDager && (\r\n                                <TilgjengeligeDagerGraf\r\n                                    erDeltUttak={true}\r\n                                    erFarEllerMedmor={true}\r\n                                    navnFarMedmor={navnFar}\r\n                                    navnMor={navnMor}\r\n                                    tilgjengeligeDager={tilgjengeligeDager}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block padBottom=\"l\" visible={erFarEllerMedmor && formValues.dekningsgrad !== ''}>\r\n                            <Veilederpanel svg={<VeilederNormal transparentBackground={true} />}>\r\n                                <FormattedMessage\r\n                                    id=\"uttaksplaninfo.veileder.farMedmor.infoOmTidsromMellomMorsSisteDagOgFarsFørsteDag\"\r\n                                    values={{ navnMor }}\r\n                                />\r\n                            </Veilederpanel>\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isVisible(FarMedmorFødselBeggeHarRettFormField.morsSisteDag)}\r\n                        >\r\n                            <MorsSisteDagSpørsmål\r\n                                FormComponents={FarMedmorFødselBeggeHarRettFormComponents}\r\n                                fieldName={FarMedmorFødselBeggeHarRettFormField.morsSisteDag}\r\n                                navnMor={navnMor}\r\n                                familiehendelsesdato={familiehendelsesdato}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isVisible(FarMedmorFødselBeggeHarRettFormField.farMedmorsFørsteDag)}\r\n                        >\r\n                            <FarMedmorsFørsteDag\r\n                                FormComponents={FarMedmorFødselBeggeHarRettFormComponents}\r\n                                fieldName={FarMedmorFødselBeggeHarRettFormField.farMedmorsFørsteDag}\r\n                                familiehendelsesdato={familiehendelsesdato}\r\n                                setFieldValue={setFieldValue}\r\n                                morsSisteDag={ISOStringToDate(formValues.morsSisteDag)}\r\n                                navnMor={navnMor}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isVisible(\r\n                                FarMedmorFødselBeggeHarRettFormField.antallDagerFellesperiode\r\n                            )}\r\n                        >\r\n                            {tilgjengeligeDager && (\r\n                                <AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål\r\n                                    FormComponents={FarMedmorFødselBeggeHarRettFormComponents}\r\n                                    ukerFieldName={FarMedmorFødselBeggeHarRettFormField.antallUkerFellesperiode}\r\n                                    dagerFieldName={FarMedmorFødselBeggeHarRettFormField.antallDagerFellesperiode}\r\n                                    antallDager={formValues.antallDagerFellesperiode}\r\n                                    antallUker={formValues.antallUkerFellesperiode}\r\n                                    setFieldValue={setFieldValue}\r\n                                    ukerMedFellesperiode={tilgjengeligeDager.dagerFelles / 5}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                            <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                        </Block>\r\n                    </FarMedmorFødselBeggeHarRettFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FarMedmorFødselFørsteganggsøknadBeggeHarRett;\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum MorFødselFormField {\r\n    dekningsgrad = 'dekningsgrad',\r\n    permisjonStartdato = 'permisjonStartdato',\r\n    skalIkkeHaUttakFørTermin = 'skalIkkeHaUttakFørTermin',\r\n    fellesperiodeukerMor = 'fellesperiodeukerMor',\r\n}\r\n\r\nexport interface MorFødselFormData {\r\n    [MorFødselFormField.dekningsgrad]: string;\r\n    [MorFødselFormField.permisjonStartdato]: string;\r\n    [MorFødselFormField.skalIkkeHaUttakFørTermin]: boolean;\r\n    [MorFødselFormField.fellesperiodeukerMor]: number | undefined;\r\n}\r\n\r\nexport const MorFødselFormComponents = getTypedFormComponents<MorFødselFormField, MorFødselFormData, string>();\r\n","import { Periode, isUttaksperiode } from 'uttaksplan/types/Periode';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { finnAntallDagerÅTrekke } from './uttaksPlanStatus';\r\n\r\nexport const getFlerbarnsuker = (dekningsgrad: string, antallBarn: number): number => {\r\n    if (antallBarn === 2) {\r\n        if (dekningsgrad === Dekningsgrad.HUNDRE_PROSENT) {\r\n            return 17;\r\n        } else {\r\n            return 21;\r\n        }\r\n    } else {\r\n        if (dekningsgrad === Dekningsgrad.HUNDRE_PROSENT) {\r\n            return 46;\r\n        } else {\r\n            return 56;\r\n        }\r\n    }\r\n};\r\n\r\nexport const uttaksplanHarForMangeFlerbarnsdager = (\r\n    uttaksplan: Periode[],\r\n    dekningsgrad: Dekningsgrad,\r\n    antallBarn: number\r\n) => {\r\n    const result: number = uttaksplan\r\n        .slice()\r\n        .filter((periode) => isUttaksperiode(periode) && periode.ønskerFlerbarnsdager === true)\r\n        .reduce((sum: number, periode: Periode) => {\r\n            if (isUttaksperiode(periode)) {\r\n                return finnAntallDagerÅTrekke(periode) + sum;\r\n            } else {\r\n                return sum;\r\n            }\r\n        }, 0);\r\n\r\n    return result > getFlerbarnsuker(dekningsgrad, antallBarn) * 5;\r\n};\r\n","import { dateToISOString } from '@navikt/sif-common-formik/lib';\r\nimport { MorFødselUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { MorFødselFormData, MorFødselFormField } from './morFødselFormConfig';\r\n\r\nconst initialMorFødselValues: MorFødselFormData = {\r\n    [MorFødselFormField.dekningsgrad]: '',\r\n    [MorFødselFormField.permisjonStartdato]: '',\r\n    [MorFødselFormField.skalIkkeHaUttakFørTermin]: false,\r\n    [MorFødselFormField.fellesperiodeukerMor]: undefined,\r\n};\r\n\r\nexport const mapMorFødselFormToState = (values: Partial<MorFødselFormData>): MorFødselUttaksplanInfo => {\r\n    return {\r\n        permisjonStartdato: values.permisjonStartdato!,\r\n        skalIkkeHaUttakFørTermin: values.skalIkkeHaUttakFørTermin!,\r\n        fellesperiodeukerMor: values.fellesperiodeukerMor,\r\n    };\r\n};\r\n\r\nexport const getInitialMorFødselValues = (\r\n    defaultPermisjonStartdato: Date,\r\n    lagretUttaksplanInfo: MorFødselUttaksplanInfo | undefined,\r\n    dekningsgrad: Dekningsgrad\r\n): MorFødselFormData => {\r\n    if (lagretUttaksplanInfo) {\r\n        return {\r\n            ...lagretUttaksplanInfo,\r\n            [MorFødselFormField.dekningsgrad]: dekningsgrad,\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...initialMorFødselValues,\r\n        [MorFødselFormField.permisjonStartdato]: dateToISOString(defaultPermisjonStartdato),\r\n    };\r\n};\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport dayjs from 'dayjs';\r\nimport { IntlShape } from 'react-intl';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { dateToISOString, ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport uttaksConstants from 'app/constants';\r\nimport { Uttaksdagen } from '../../../../utils/Uttaksdagen';\r\nimport { uttaksplanDatoavgrensninger } from '../../../../utils/uttaksplanDatoavgrensninger';\r\n\r\nexport const validateErStartdatoFørTermindato =\r\n    (intl: IntlShape, familiehendelsedato: Date, skalIkkeHaUttakFørTermin: boolean) => (permisjonStartdato: string) => {\r\n        if (!(permisjonStartdato === undefined && skalIkkeHaUttakFørTermin)) {\r\n            if (!isISODateString(permisjonStartdato)) {\r\n                return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoPermisjon.gyldigDato');\r\n            }\r\n        }\r\n\r\n        if (permisjonStartdato !== undefined && skalIkkeHaUttakFørTermin) {\r\n            return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoFørTermin');\r\n        }\r\n\r\n        if (permisjonStartdato !== undefined && !Uttaksdagen(ISOStringToDate(permisjonStartdato)!).erUttaksdag()) {\r\n            return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoHelg');\r\n        }\r\n\r\n        if (!skalIkkeHaUttakFørTermin) {\r\n            const avgrensninger = uttaksplanDatoavgrensninger.startdatoFørTermin(dateToISOString(familiehendelsedato));\r\n            if (\r\n                avgrensninger.minDate &&\r\n                avgrensninger.maxDate &&\r\n                dayjs(permisjonStartdato).isSameOrAfter(avgrensninger.minDate, 'day') &&\r\n                dayjs(permisjonStartdato).isSameOrBefore(avgrensninger.maxDate, 'day')\r\n            ) {\r\n                return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoUtenforGyldigTidsrom', {\r\n                    uker: uttaksConstants.MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL,\r\n                });\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n","import * as React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport dayjs from 'dayjs';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport { formaterDato, getVarighetString } from 'app/utils/dateUtils';\r\nimport Veileder from 'app/components/veileder/Veileder';\r\nimport { Uttaksdagen } from '../../../utils/Uttaksdagen';\r\n\r\ntype ugyldigStartdatoÅrsak = undefined | 'helgedag' | 'fortidlig';\r\n\r\nexport interface Props {\r\n    startdato: Date | undefined;\r\n    antallDager: number;\r\n    antallDagerFørFødselIhtRegler: number;\r\n    skalIkkeHaUttakFørTermin: boolean | undefined;\r\n    førsteMuligeStartdato: Date | undefined;\r\n    visKunFeil?: boolean;\r\n}\r\n\r\nexport const getÅrsakDersomUgyldigStartdato = (\r\n    startdato: Date | undefined,\r\n    førsteMuligeStartdato: Date | undefined\r\n): ugyldigStartdatoÅrsak => {\r\n    if (startdato === undefined) {\r\n        return;\r\n    }\r\n    if (Uttaksdagen(startdato).erUttaksdag() === false) {\r\n        return 'helgedag';\r\n    } else if (førsteMuligeStartdato && dayjs(startdato).isBefore(førsteMuligeStartdato)) {\r\n        return 'fortidlig';\r\n    }\r\n    return;\r\n};\r\n\r\nconst VeilederStartdatoPermisjon: React.FunctionComponent<Props> = ({\r\n    startdato,\r\n    antallDager,\r\n    antallDagerFørFødselIhtRegler,\r\n    skalIkkeHaUttakFørTermin,\r\n    førsteMuligeStartdato,\r\n    visKunFeil,\r\n}) => {\r\n    const intl = useIntl();\r\n\r\n    const ugyldigDatoÅrsak = startdato && getÅrsakDersomUgyldigStartdato(startdato, førsteMuligeStartdato);\r\n\r\n    const msg = React.useMemo(() => {\r\n        if (ugyldigDatoÅrsak && førsteMuligeStartdato) {\r\n            return ugyldigDatoÅrsak === 'fortidlig'\r\n                ? intlUtils(intl, 'uttaksplaninfo.veileder.forTidligStartdato', {\r\n                      dato: formaterDato(førsteMuligeStartdato),\r\n                  })\r\n                : intlUtils(intl, 'uttaksplaninfo.veileder.helgedag');\r\n        }\r\n        if (visKunFeil) {\r\n            return undefined;\r\n        }\r\n        if (skalIkkeHaUttakFørTermin === true) {\r\n            return <FormattedMessage id=\"uttaksplaninfo.informasjon.foreldrepengerFørFødselSkalIkkeHa\" />;\r\n        } else if (antallDager < antallDagerFørFødselIhtRegler) {\r\n            return (\r\n                <FormattedMessage\r\n                    id=\"uttaksplaninfo.informasjon.foreldrepengerFørFødselMindreEnnTreUker\"\r\n                    values={{\r\n                        varighet: getVarighetString(antallDagerFørFødselIhtRegler - antallDager, intl),\r\n                    }}\r\n                />\r\n            );\r\n        } else if (antallDager > antallDagerFørFødselIhtRegler) {\r\n            return (\r\n                <FormattedMessage\r\n                    id=\"uttaksplaninfo.informasjon.foreldrepengerFørFødselMerEnnTreUker\"\r\n                    values={{\r\n                        varighet: getVarighetString(antallDager - antallDagerFørFødselIhtRegler, intl),\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        return undefined;\r\n    }, [\r\n        ugyldigDatoÅrsak,\r\n        antallDager,\r\n        antallDagerFørFødselIhtRegler,\r\n        førsteMuligeStartdato,\r\n        intl,\r\n        skalIkkeHaUttakFørTermin,\r\n        visKunFeil,\r\n    ]);\r\n\r\n    const erFeilmelding = ugyldigDatoÅrsak !== undefined;\r\n\r\n    return (\r\n        <Block margin=\"none\" visible={msg !== undefined}>\r\n            <Veilederpanel svg={<Veileder farge=\"lilla\" ansikt={erFeilmelding ? 'skeptisk' : 'glad'} stil=\"kompakt\" />}>\r\n                {msg}\r\n            </Veilederpanel>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default VeilederStartdatoPermisjon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { IntlShape, useIntl } from 'react-intl';\r\nimport dayjs from 'dayjs';\r\nimport { Block, intlUtils, bemUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport { MorFødselFormComponents, MorFødselFormField } from './morFødselFormConfig';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { isFødtBarn } from 'app/context/types/Barn';\r\nimport { Tidsperioden, getValidTidsperiode } from 'app/steps/uttaksplan-info/utils/Tidsperioden';\r\nimport uttaksConstants from 'app/constants';\r\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport { validateErStartdatoFørTermindato } from './validation/morFodselValidering';\r\nimport VeilederStartdatoPermisjon from './VeilederStartdatoPermisjon';\r\nimport { uttaksplanDatoavgrensninger } from 'app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger';\r\nimport { getVarighetString } from 'app/utils/dateUtils';\r\n\r\nimport './startdatoPermisjonMor.less';\r\n\r\nconst getVarighetForStartdato = (antallDager: number, barnetErFødt: boolean, intl: IntlShape): string | undefined =>\r\n    antallDager > 0\r\n        ? barnetErFødt\r\n            ? intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjon.barnetErFødt.varighet', {\r\n                  varighet: getVarighetString(antallDager, intl),\r\n              })\r\n            : intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjon.varighet', {\r\n                  varighet: getVarighetString(antallDager, intl),\r\n              })\r\n        : undefined;\r\n\r\ninterface Props {\r\n    permisjonStartdato: string;\r\n    skalIkkeHaUttakFørTermin: boolean;\r\n}\r\n\r\nconst StartdatoPermisjonMor: FunctionComponent<Props> = ({ permisjonStartdato, skalIkkeHaUttakFørTermin }) => {\r\n    const intl = useIntl();\r\n    const { barn } = useSøknad();\r\n    const bem = bemUtils('datoInput');\r\n\r\n    const erBarnFødt = isFødtBarn(barn);\r\n    const spørsmålNår = erBarnFødt\r\n        ? intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjon.barnetErFødt.label')\r\n        : intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjon.label');\r\n\r\n    const spørsmålHaddeIkke = erBarnFødt\r\n        ? intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjon.skalIkkeHaUttak.barnetErFødt.label')\r\n        : intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjon.skalIkkeHaUttak.label');\r\n\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n    const familiehendelsesdatoDate = dayjs(familiehendelsesdato).toDate();\r\n    const sisteUttaksdagFørTermin = Uttaksdagen(familiehendelsesdatoDate).forrige();\r\n    const tidsperiode = getValidTidsperiode({\r\n        fom: ISOStringToDate(permisjonStartdato)!,\r\n        tom: sisteUttaksdagFørTermin,\r\n    });\r\n    const antallDager = tidsperiode ? Tidsperioden(tidsperiode).getAntallUttaksdager() : 0;\r\n    const antallDagerFørFødselIhtRegler = uttaksConstants.ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5;\r\n    const visVeileder = antallDager !== antallDagerFørFødselIhtRegler;\r\n\r\n    const datoAvgrensninger = uttaksplanDatoavgrensninger.startdatoFørTermin(familiehendelsesdato);\r\n    const startdato = skalIkkeHaUttakFørTermin !== true ? permisjonStartdato : undefined;\r\n\r\n    const maksDato = Uttaksdagen(familiehendelsesdatoDate).forrige();\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\">\r\n                <div className={bem.block}>\r\n                    <MorFødselFormComponents.DatePicker\r\n                        name={MorFødselFormField.permisjonStartdato}\r\n                        label={spørsmålNår}\r\n                        disabled={skalIkkeHaUttakFørTermin}\r\n                        maxDate={maksDato}\r\n                        dayPickerProps={{\r\n                            initialMonth: ISOStringToDate(permisjonStartdato) || familiehendelsesdatoDate,\r\n                        }}\r\n                        validate={validateErStartdatoFørTermindato(\r\n                            intl,\r\n                            familiehendelsesdatoDate,\r\n                            skalIkkeHaUttakFørTermin\r\n                        )}\r\n                        disableWeekend\r\n                    />\r\n                    <div className={bem.element('postfix')}>\r\n                        {getVarighetForStartdato(antallDager, erBarnFødt, intl)}\r\n                    </div>\r\n                </div>\r\n            </Block>\r\n            <Block padBottom={visVeileder ? 'l' : 'm'}>\r\n                <MorFødselFormComponents.Checkbox\r\n                    name={MorFødselFormField.skalIkkeHaUttakFørTermin}\r\n                    label={spørsmålHaddeIkke}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </Block>\r\n            <Block padBottom={visVeileder ? 'l' : 'm'} visible={visVeileder}>\r\n                <VeilederStartdatoPermisjon\r\n                    startdato={ISOStringToDate(startdato)}\r\n                    antallDager={antallDager}\r\n                    skalIkkeHaUttakFørTermin={skalIkkeHaUttakFørTermin === true}\r\n                    antallDagerFørFødselIhtRegler={antallDagerFørFødselIhtRegler}\r\n                    førsteMuligeStartdato={datoAvgrensninger.minDate ? new Date(datoAvgrensninger.minDate) : undefined}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StartdatoPermisjonMor;\r\n","import * as React from 'react';\r\nimport RangeIcon from './RangeIcon';\r\nimport Sirkelknapp from './sirkelknapp/Sirkelknapp';\r\n\r\nimport './rangeStepper.less';\r\n\r\nexport type Direction = 'next' | 'previous';\r\n\r\nexport interface Props {\r\n    onClick: () => void;\r\n    direction: Direction;\r\n    label: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst RangeStepper: React.FunctionComponent<Props> = ({ direction, onClick, label, disabled }) => (\r\n    <Sirkelknapp\r\n        stil=\"hvit\"\r\n        onClick={() => onClick()}\r\n        ariaLabel={label}\r\n        disabled={disabled}\r\n        ikon={direction === 'previous' ? <RangeIcon type=\"minus\" /> : <RangeIcon type=\"plus\" />}\r\n    />\r\n);\r\n\r\nexport default RangeStepper;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport { bemUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport Fieldset from 'app/components/fieldset/Fieldset';\r\nimport AriaText from './AriaText';\r\nimport RangeStepper from './RangeStepper';\r\nimport './rangeInput.less';\r\n\r\nexport interface RangeInputElementRendererOptions {\r\n    value: number;\r\n    min: number;\r\n    max: number;\r\n}\r\n\r\nexport type RangeInputElementRenderer = (options: RangeInputElementRendererOptions) => React.ReactElement<any>;\r\n\r\nexport type RangeValueLabelPlacement = 'above' | 'below';\r\n\r\ninterface Props {\r\n    label: string;\r\n    hjelpetekst?: React.ReactNode;\r\n    ariaLabelText: string;\r\n    hjelpetekstApneLabel: string;\r\n    value: number;\r\n    min: number;\r\n    max: number;\r\n    step?: number;\r\n    inputId?: string;\r\n    bottomContentRenderer?: RangeInputElementRenderer;\r\n    valueLabelRenderer?: RangeInputElementRenderer;\r\n    valueLabelPlacement?: RangeValueLabelPlacement;\r\n    ariaValueChangedMessage?: (value: number) => string;\r\n    steppers?: {\r\n        increaseLabel: string;\r\n        reduceLabel: string;\r\n    };\r\n    onChange: (value: number) => void;\r\n}\r\n\r\ninterface State {\r\n    active: boolean;\r\n}\r\n\r\nconst defaultValueLabelRenderer: RangeInputElementRenderer = (options: RangeInputElementRendererOptions) => (\r\n    <div className=\"rangeInput__valueLabels\">\r\n        <div className=\"rangeInput__valueLabels__left\">{options.min}</div>\r\n        <div className=\"rangeInput__valueLabels__right\">{options.max}</div>\r\n    </div>\r\n);\r\n\r\nconst defaultBottomContentRenderer: RangeInputElementRenderer = (options: RangeInputElementRendererOptions) => (\r\n    <div className=\"rangeInput__bottomContent\">\r\n        <span className=\"typo-normaltekst\">{options.max - options.min}</span>\r\n    </div>\r\n);\r\n\r\nclass RangeInput extends React.Component<Props, State> {\r\n    container: HTMLDivElement | null = null;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleFocus = this.handleFocus.bind(this);\r\n        this.deactivateIfOutside = this.deactivateIfOutside.bind(this);\r\n        this.state = {\r\n            active: false,\r\n        };\r\n    }\r\n    handleBlur(_e: React.FocusEvent<HTMLDivElement>) {\r\n        if (!this.container) {\r\n            return;\r\n        }\r\n        setTimeout(() => this.deactivateIfOutside(), 0);\r\n    }\r\n    handleFocus(_e: React.FocusEvent<HTMLDivElement>) {\r\n        this.setState({\r\n            active: true,\r\n        });\r\n    }\r\n    deactivateIfOutside() {\r\n        if (\r\n            this.container &&\r\n            window.document.activeElement &&\r\n            !this.container.contains(window.document.activeElement)\r\n        ) {\r\n            this.setState({\r\n                active: false,\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            label,\r\n            hjelpetekst,\r\n            ariaLabelText,\r\n            inputId,\r\n            valueLabelRenderer,\r\n            steppers,\r\n            ariaValueChangedMessage,\r\n            bottomContentRenderer,\r\n            hjelpetekstApneLabel,\r\n            valueLabelPlacement = 'above',\r\n            ...rest\r\n        } = this.props;\r\n\r\n        const { value, min, max, onChange } = this.props;\r\n        const id = inputId || guid();\r\n        const labelRenderer = valueLabelRenderer || defaultValueLabelRenderer;\r\n        const ariaLabelId = `${id}_label`;\r\n        const bottomRenderer = bottomContentRenderer || defaultBottomContentRenderer;\r\n\r\n        const bemWrapper = bemUtils('rangeInputWrapper');\r\n        const bemRangeInput = bemUtils('rangeInput');\r\n        const bemStepper = bemUtils('rangeInput__stepper');\r\n\r\n        return (\r\n            <div className={bemWrapper.block}>\r\n                <Fieldset\r\n                    legend={\r\n                        <>\r\n                            <Element>{label}</Element>\r\n                            <UtvidetInformasjon apneLabel={hjelpetekstApneLabel}>{hjelpetekst}</UtvidetInformasjon>\r\n                        </>\r\n                    }\r\n                    className={'uttakfordeler'}\r\n                >\r\n                    <div aria-live=\"polite\">\r\n                        {valueLabelPlacement === 'above' && labelRenderer({ value, min, max })}\r\n                    </div>\r\n                    <div\r\n                        className={classnames(bemRangeInput.block, {\r\n                            [bemRangeInput.modifier('withSteppers')]: steppers !== undefined,\r\n                        })}\r\n                        ref={(c) => (this.container = c)}\r\n                        onBlur={this.handleBlur}\r\n                        onFocus={this.handleFocus}\r\n                    >\r\n                        {steppers && (\r\n                            <div className={`${bemStepper.block} ${bemStepper.modifier('previous')}`}>\r\n                                <RangeStepper\r\n                                    direction=\"previous\"\r\n                                    onClick={() => (value > min ? onChange(value - 1) : null)}\r\n                                    label={steppers ? steppers.reduceLabel : 'Mindre'}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className={bemRangeInput.element('range')}>\r\n                            <AriaText id={ariaLabelId}>{ariaLabelText}</AriaText>\r\n                            <input\r\n                                {...rest}\r\n                                id={id}\r\n                                aria-labelledby={ariaLabelId}\r\n                                className=\"nav-frontend-range-input\"\r\n                                type=\"range\"\r\n                                onChange={(e) => onChange(parseInt(e.target.value, 10))}\r\n                            />\r\n                            <div role=\"alert\" aria-live=\"assertive\" className=\"sr-only\">\r\n                                {ariaValueChangedMessage && this.state.active\r\n                                    ? ariaValueChangedMessage(value)\r\n                                    : undefined}\r\n                            </div>\r\n                        </div>\r\n                        {steppers && (\r\n                            <div className={`${bemStepper.block} ${bemStepper.modifier('next')}`}>\r\n                                <RangeStepper\r\n                                    direction=\"next\"\r\n                                    onClick={() => (value < max ? onChange(value + 1) : null)}\r\n                                    label={steppers ? steppers.increaseLabel : 'Mer'}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div aria-live=\"polite\">\r\n                        {valueLabelPlacement === 'below' && labelRenderer({ value, min, max })}\r\n                    </div>\r\n                    {bottomRenderer({ value, min, max })}\r\n                </Fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeInput;\r\n","import React, { useEffect } from 'react';\r\nimport { useIntl, FormattedMessage } from 'react-intl';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Ingress, Normaltekst } from 'nav-frontend-typografi';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport lenker from 'app/links/links';\r\nimport RangeInput from './range-input/RangeInput';\r\n\r\nimport './fordelingFellesperiodeSpørsmål.less';\r\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\r\nimport {\r\n    getAntallUkerFedrekvote,\r\n    getAntallUkerFellesperiode,\r\n    getAntallUkerMødrekvote,\r\n} from '../../utils/stønadskontoer';\r\n\r\nexport interface OwnProps {\r\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\r\n    valgtFellesperiodeukerMor: number | undefined;\r\n    mor: string;\r\n    farMedmor: string;\r\n    annenForelderErFarEllerMedmor: boolean;\r\n    valgtStønadskonto: TilgjengeligStønadskonto[] | undefined;\r\n}\r\n\r\nconst FordelingFellesperiodeSpørsmål: React.FunctionComponent<OwnProps> = ({\r\n    setFieldValue,\r\n    valgtFellesperiodeukerMor,\r\n    annenForelderErFarEllerMedmor,\r\n    mor,\r\n    farMedmor,\r\n    valgtStønadskonto,\r\n}) => {\r\n    const intl = useIntl();\r\n\r\n    const fellesperiodeukerMor =\r\n        valgtFellesperiodeukerMor || !valgtStønadskonto\r\n            ? valgtFellesperiodeukerMor\r\n            : Math.round((getAntallUkerFellesperiode(valgtStønadskonto) || 0) / 2);\r\n\r\n    useEffect(() => {\r\n        setFieldValue('fellesperiodeukerMor', fellesperiodeukerMor);\r\n    }, []);\r\n\r\n    if (!valgtStønadskonto) {\r\n        return null;\r\n    }\r\n\r\n    const ukerFellesperiode = Math.floor(getAntallUkerFellesperiode(valgtStønadskonto));\r\n    const antallUkerFedreKvote = getAntallUkerFedrekvote(valgtStønadskonto);\r\n    const antallUkerMødreKvote = getAntallUkerMødrekvote(valgtStønadskonto);\r\n\r\n    const infotekst = intlUtils(intl, 'uttaksplaninfo.fordeling.veiledning', {\r\n        pakrevdForelder1: antallUkerMødreKvote,\r\n        pakrevdForelder2: antallUkerFedreKvote,\r\n        navnForelder1: mor,\r\n        navnForelder2: farMedmor,\r\n    });\r\n\r\n    const annenForeldersNavn = annenForelderErFarEllerMedmor ? farMedmor : mor;\r\n    return (\r\n        <RangeInput\r\n            label={intlUtils(intl, 'uttaksplaninfo.spørsmål.fordeling')}\r\n            hjelpetekst={\r\n                <Normaltekst tag=\"div\">\r\n                    <Block padBottom=\"l\">{infotekst}</Block>\r\n                    <Lenke href={lenker.nav_aktivitetskrav} target=\"_blank\">\r\n                        <FormattedMessage id=\"uttaksplaninfo.fordeling.veiledning.lenketekst\" />\r\n                    </Lenke>\r\n                </Normaltekst>\r\n            }\r\n            hjelpetekstApneLabel={intlUtils(intl, 'uttaksplaninfo.fordeling.veiledning.lenketekst.apneLabel')}\r\n            ariaLabelText={intlUtils(intl, 'uttaksplaninfo.spørsmål.fordeling')}\r\n            value={fellesperiodeukerMor!}\r\n            min={0}\r\n            max={ukerFellesperiode}\r\n            onChange={(fellesperiodeukerMor) => setFieldValue('fellesperiodeukerMor', fellesperiodeukerMor)}\r\n            steppers={{\r\n                reduceLabel: intl.formatMessage({ id: 'uttaksplaninfo.fordeling.reduser.tooltip' }),\r\n                increaseLabel: intl.formatMessage({ id: 'uttaksplaninfo.fordeling.øk.tooltip' }),\r\n            }}\r\n            ariaValueChangedMessage={(value) =>\r\n                intl.formatMessage(\r\n                    { id: 'uttaksplaninfo.fordeling.valgtVerdi' },\r\n                    {\r\n                        ukerForelder: value,\r\n                        ukerTotalt: ukerFellesperiode,\r\n                        navnForelder: mor || intl.formatMessage({ id: 'uttaksplan.mor' }),\r\n                    }\r\n                )\r\n            }\r\n            valueLabelRenderer={(options) => (\r\n                <Ingress tag=\"p\" className=\"m-text-center fordelingFellesperiode--valgtVerdi\">\r\n                    <FormattedMessage\r\n                        id=\"uttaksplaninfo.fordeling.valgtVerdi\"\r\n                        values={{\r\n                            ukerForelder: options.value,\r\n                            ukerTotalt: options.max,\r\n                            navnForelder: mor || intl.formatMessage({ id: 'uttaksplan.mor' }),\r\n                        }}\r\n                    />\r\n                </Ingress>\r\n            )}\r\n            valueLabelPlacement=\"above\"\r\n            bottomContentRenderer={(options) => (\r\n                <Normaltekst className=\"m-text-center fordelingFellesperiode--bottomContent\">\r\n                    <FormattedMessage\r\n                        id=\"uttaksplaninfo.fordeling.annenForeldersFellesperiode\"\r\n                        values={{ annenForeldersNavn, antallUker: options.max - options.value }}\r\n                    />\r\n                </Normaltekst>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FordelingFellesperiodeSpørsmål;\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { hasValue } from '@navikt/fp-common';\r\nimport { MorFødselFormData, MorFødselFormField } from './morFødselFormConfig';\r\n\r\ninterface MorFødselQuestionsPayload extends MorFødselFormData {\r\n    harRettPåForeldrepenger: boolean | undefined;\r\n    erAleneOmOmsorg: boolean | undefined;\r\n}\r\n\r\nconst MorFødselFormConfig: QuestionConfig<MorFødselQuestionsPayload, MorFødselFormField> = {\r\n    [MorFødselFormField.dekningsgrad]: {\r\n        isAnswered: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n        isIncluded: () => true,\r\n    },\r\n    [MorFødselFormField.permisjonStartdato]: {\r\n        isAnswered: ({ permisjonStartdato }) => hasValue(permisjonStartdato),\r\n        isIncluded: () => true,\r\n        visibilityFilter: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n    },\r\n    [MorFødselFormField.skalIkkeHaUttakFørTermin]: {\r\n        isAnswered: ({ skalIkkeHaUttakFørTermin }) => hasValue(skalIkkeHaUttakFørTermin),\r\n        isIncluded: () => true,\r\n        visibilityFilter: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n    },\r\n    [MorFødselFormField.fellesperiodeukerMor]: {\r\n        isAnswered: ({ fellesperiodeukerMor }) => hasValue(fellesperiodeukerMor),\r\n        isIncluded: ({ harRettPåForeldrepenger, erAleneOmOmsorg }) =>\r\n            !!harRettPåForeldrepenger && erAleneOmOmsorg === false,\r\n        visibilityFilter: ({ dekningsgrad, permisjonStartdato, skalIkkeHaUttakFørTermin }) =>\r\n            hasValue(dekningsgrad) && (hasValue(permisjonStartdato) || skalIkkeHaUttakFørTermin === true),\r\n    },\r\n};\r\n\r\nexport const morFødselQuestionsConfig = Questions<MorFødselQuestionsPayload, MorFødselFormField>(MorFødselFormConfig);\r\n","import React, { FunctionComponent } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { isFødtBarn } from 'app/context/types/Barn';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport { formaterNavn } from 'app/utils/personUtils';\r\nimport { getFlerbarnsuker } from '../../../utils/uttaksplanHarForMangeFlerbarnsuker';\r\nimport { MorFødselFormComponents, MorFødselFormData, MorFødselFormField } from './morFødselFormConfig';\r\nimport { getTilgjengeligeDager } from '../../tilgjengeligeDagerGraf/tilgjengeligeDagerUtils';\r\nimport TilgjengeligeDagerGraf from '../../tilgjengeligeDagerGraf/TilgjengeligeDagerGraf';\r\nimport { Tidsperioden } from '../../../utils/Tidsperioden';\r\nimport { getInitialMorFødselValues, mapMorFødselFormToState } from './morFødselUtils';\r\nimport StartdatoPermisjonMor from './StartdatoPermisjonMor';\r\nimport FordelingFellesperiodeSpørsmål from '../../fordelingFellesperiode/FordelingFellesperiodeSpørsmål';\r\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\r\nimport uttaksConstants from 'app/constants';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { MorFødselUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { morFødselQuestionsConfig } from './morFødselQuestionsConfig';\r\nimport useUttaksplanInfo from 'app/utils/hooks/useUttaksplanInfo';\r\nimport DekningsgradSpørsmål from '../spørsmål/DekningsgradSpørsmål';\r\nimport { getDekningsgradFromString } from 'app/utils/getDekningsgradFromString';\r\n\r\nconst skalViseInfoOmPrematuruker = (fødselsdato: Date | undefined, termindato: Date | undefined): boolean => {\r\n    if (fødselsdato === undefined || termindato === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const fødselsdatoEtterEllerLikFørsteJuli = dayjs(fødselsdato).isSameOrAfter(dayjs(new Date('2019-07-01')));\r\n\r\n    return (\r\n        dayjs(fødselsdato).add(7, 'weeks').add(3, 'days').isBefore(dayjs(termindato)) &&\r\n        fødselsdatoEtterEllerLikFørsteJuli\r\n    );\r\n};\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n}\r\n\r\nconst MorFødsel: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer100DTO,\r\n    tilgjengeligeStønadskontoer80DTO,\r\n}) => {\r\n    const intl = useIntl();\r\n    const {\r\n        annenForelder,\r\n        søkersituasjon,\r\n        barn,\r\n        søker: { erAleneOmOmsorg },\r\n        dekningsgrad,\r\n    } = useSøknad();\r\n    const {\r\n        person: { fornavn, mellomnavn, etternavn },\r\n    } = useSøkerinfo();\r\n    const lagretUttaksplanInfo = useUttaksplanInfo<MorFødselUttaksplanInfo>();\r\n\r\n    const erMor = !isFarEllerMedmor(søkersituasjon.rolle);\r\n    const erFødsel = søkersituasjon.situasjon === 'fødsel';\r\n\r\n    const shouldRender = erMor && erFødsel;\r\n\r\n    const onValidSubmitHandler = (values: Partial<MorFødselFormData>) => {\r\n        return [\r\n            actionCreator.setUttaksplanInfo(mapMorFødselFormToState(values)),\r\n            actionCreator.setDekningsgrad(getDekningsgradFromString(values.dekningsgrad)),\r\n        ];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN);\r\n\r\n    if (!shouldRender) {\r\n        return null;\r\n    }\r\n\r\n    const antallBarn = parseInt(barn.antallBarn, 10);\r\n\r\n    const fødselsdato = isFødtBarn(barn) ? ISOStringToDate(barn.fødselsdatoer[0]) : undefined;\r\n    const termindato = isFødtBarn(barn) ? ISOStringToDate(barn.termindato) : undefined;\r\n    const visInfoOmPrematuruker =\r\n        søkersituasjon.situasjon === 'fødsel' ? skalViseInfoOmPrematuruker(fødselsdato, termindato) : false;\r\n    const ekstraDagerGrunnetPrematurFødsel = visInfoOmPrematuruker\r\n        ? Tidsperioden({ fom: fødselsdato!, tom: termindato! }).getAntallUttaksdager() - 1\r\n        : undefined;\r\n\r\n    const oppgittAnnenForelder = isAnnenForelderOppgitt(annenForelder) ? annenForelder : undefined;\r\n    const erMorUfør = !!oppgittAnnenForelder?.erUfør;\r\n    const annenForelderFornavn = oppgittAnnenForelder?.fornavn;\r\n    const harRettPåForeldrepenger = !!oppgittAnnenForelder?.harRettPåForeldrepenger;\r\n    const navnFarMedmor = oppgittAnnenForelder\r\n        ? formaterNavn(oppgittAnnenForelder.fornavn, oppgittAnnenForelder.etternavn)\r\n        : '';\r\n\r\n    const navnMor = formaterNavn(fornavn, etternavn, mellomnavn);\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n    const førsteUttaksdag = Uttaksdagen(ISOStringToDate(familiehendelsesdato)!).denneEllerNeste();\r\n    const defaultPermisjonStartdato = Uttaksdagen(førsteUttaksdag).trekkFra(\r\n        uttaksConstants.ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5\r\n    );\r\n\r\n    const erDeltUttak = isAnnenForelderOppgitt(annenForelder) ? !!annenForelder.harRettPåForeldrepenger : false;\r\n\r\n    const tilgjengeligeStønadskontoer = getValgtStønadskontoFor80Og100Prosent(\r\n        tilgjengeligeStønadskontoer80DTO,\r\n        tilgjengeligeStønadskontoer100DTO,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n\r\n    return (\r\n        <MorFødselFormComponents.FormikWrapper\r\n            initialValues={getInitialMorFødselValues(defaultPermisjonStartdato, lagretUttaksplanInfo, dekningsgrad)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues, setFieldValue }) => {\r\n                const visibility = morFødselQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    harRettPåForeldrepenger,\r\n                    erAleneOmOmsorg,\r\n                });\r\n\r\n                const valgtStønadskonto = tilgjengeligeStønadskontoer[formValues.dekningsgrad];\r\n\r\n                return (\r\n                    <MorFødselFormComponents.Form includeButtons={false} includeValidationSummary={true}>\r\n                        <Block padBottom=\"l\">\r\n                            <DekningsgradSpørsmål\r\n                                FormKomponent={MorFødselFormComponents}\r\n                                dekningsgradFeltNavn={MorFødselFormField.dekningsgrad}\r\n                                tilgjengeligeStønadskontoer={tilgjengeligeStønadskontoer}\r\n                            />\r\n                        </Block>\r\n                        <Block padBottom=\"l\" visible={visibility.isAnswered(MorFødselFormField.dekningsgrad)}>\r\n                            {valgtStønadskonto && (\r\n                                <TilgjengeligeDagerGraf\r\n                                    erDeltUttak={erDeltUttak}\r\n                                    erFarEllerMedmor={false}\r\n                                    navnFarMedmor={navnFarMedmor}\r\n                                    navnMor={navnMor}\r\n                                    tilgjengeligeDager={getTilgjengeligeDager(\r\n                                        valgtStønadskonto,\r\n                                        false,\r\n                                        Forelder.farMedmor\r\n                                    )}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block padBottom=\"l\" visible={visInfoOmPrematuruker === true}>\r\n                            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                <FormattedMessage\r\n                                    id=\"uttaksplaninfo.veileder.informasjonPrematuruker\"\r\n                                    values={{\r\n                                        antallprematuruker: Math.floor(ekstraDagerGrunnetPrematurFødsel! / 5),\r\n                                        antallprematurdager: ekstraDagerGrunnetPrematurFødsel! % 5,\r\n                                    }}\r\n                                />\r\n                            </Veilederpanel>\r\n                        </Block>\r\n                        <Block visible={visibility.isAnswered(MorFødselFormField.dekningsgrad)}>\r\n                            <StartdatoPermisjonMor\r\n                                permisjonStartdato={formValues.permisjonStartdato}\r\n                                skalIkkeHaUttakFørTermin={formValues.skalIkkeHaUttakFørTermin}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            visible={\r\n                                erAleneOmOmsorg === false &&\r\n                                harRettPåForeldrepenger &&\r\n                                visibility.isAnswered(MorFødselFormField.dekningsgrad)\r\n                            }\r\n                        >\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={\r\n                                    antallBarn > 1 &&\r\n                                    (formValues.permisjonStartdato !== undefined ||\r\n                                        formValues.skalIkkeHaUttakFørTermin === true)\r\n                                }\r\n                            >\r\n                                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                    <FormattedMessage\r\n                                        id=\"uttaksplaninfo.veileder.flerbarnsInformasjon\"\r\n                                        values={{\r\n                                            uker: getFlerbarnsuker(formValues.dekningsgrad!, antallBarn),\r\n                                            navnFar: navnFarMedmor,\r\n                                            navnMor: navnMor,\r\n                                        }}\r\n                                    />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isVisible(MorFødselFormField.fellesperiodeukerMor)}\r\n                            >\r\n                                <FordelingFellesperiodeSpørsmål\r\n                                    setFieldValue={setFieldValue}\r\n                                    valgtStønadskonto={valgtStønadskonto}\r\n                                    valgtFellesperiodeukerMor={formValues.fellesperiodeukerMor}\r\n                                    mor={navnMor}\r\n                                    farMedmor={navnFarMedmor}\r\n                                    annenForelderErFarEllerMedmor={navnFarMedmor === annenForelderFornavn}\r\n                                />\r\n                            </Block>\r\n                        </Block>\r\n                        <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                            <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                        </Block>\r\n                    </MorFødselFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MorFødsel;\r\n","enum AdopsjonStartdatoValg {\r\n    ANKOMST = 'ankomst',\r\n    OMSORGSOVERTAKELSE = 'omsorgsovertakelse',\r\n    ANNEN = 'annen',\r\n}\r\n\r\nexport const finnEnum = (valg?: string): AdopsjonStartdatoValg | undefined => {\r\n    if (valg === AdopsjonStartdatoValg.ANKOMST) {\r\n        return AdopsjonStartdatoValg.ANKOMST;\r\n    }\r\n    if (valg === AdopsjonStartdatoValg.OMSORGSOVERTAKELSE) {\r\n        return AdopsjonStartdatoValg.OMSORGSOVERTAKELSE;\r\n    }\r\n    if (valg === AdopsjonStartdatoValg.ANNEN) {\r\n        return AdopsjonStartdatoValg.ANNEN;\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport default AdopsjonStartdatoValg;\r\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport AdopsjonStartdatoValg from './adopsjonStartdatoValg';\r\n\r\nexport enum MorFarAdopsjonFormField {\r\n    harAnnenForelderSøktFP = 'harAnnenForelderSøktFP',\r\n    dekningsgrad = 'dekningsgrad',\r\n    startdatoAdopsjonValg = 'startdatoAdopsjonValg',\r\n    annenStartdatoAdopsjon = 'annenStartdatoAdopsjon',\r\n    morsSisteDag = 'morsSisteDag',\r\n    farMedmorsFørsteDag = 'farMedmorsFørsteDag',\r\n    antallUkerFellesperiode = 'antallUkerFellesperiode',\r\n    antallDagerFellesperiode = 'antallDagerFellesperiode',\r\n    fellesperiodeukerMor = 'fellesperiodeukerMor',\r\n}\r\n\r\nexport interface MorFarAdopsjonFormData {\r\n    [MorFarAdopsjonFormField.harAnnenForelderSøktFP]: YesOrNo;\r\n    [MorFarAdopsjonFormField.dekningsgrad]: string;\r\n    [MorFarAdopsjonFormField.startdatoAdopsjonValg]: AdopsjonStartdatoValg | undefined;\r\n    [MorFarAdopsjonFormField.annenStartdatoAdopsjon]: string;\r\n    [MorFarAdopsjonFormField.morsSisteDag]: string;\r\n    [MorFarAdopsjonFormField.farMedmorsFørsteDag]: string;\r\n    [MorFarAdopsjonFormField.antallUkerFellesperiode]: string;\r\n    [MorFarAdopsjonFormField.antallDagerFellesperiode]: string;\r\n    [MorFarAdopsjonFormField.fellesperiodeukerMor]: number | undefined;\r\n}\r\n\r\nexport const MorFarAdopsjonFormComponents = getTypedFormComponents<\r\n    MorFarAdopsjonFormField,\r\n    MorFarAdopsjonFormData,\r\n    string\r\n>();\r\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { MorFarAdopsjonUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { finnEnum } from './adopsjonStartdatoValg';\r\nimport { MorFarAdopsjonFormData, MorFarAdopsjonFormField } from './morFarAdopsjonFormConfig';\r\n\r\nconst initialMorFarAdopsjonValues: MorFarAdopsjonFormData = {\r\n    [MorFarAdopsjonFormField.harAnnenForelderSøktFP]: YesOrNo.UNANSWERED,\r\n    [MorFarAdopsjonFormField.dekningsgrad]: '',\r\n    [MorFarAdopsjonFormField.startdatoAdopsjonValg]: undefined,\r\n    [MorFarAdopsjonFormField.annenStartdatoAdopsjon]: '',\r\n    [MorFarAdopsjonFormField.morsSisteDag]: '',\r\n    [MorFarAdopsjonFormField.farMedmorsFørsteDag]: '',\r\n    [MorFarAdopsjonFormField.antallUkerFellesperiode]: '0',\r\n    [MorFarAdopsjonFormField.antallDagerFellesperiode]: '0',\r\n    [MorFarAdopsjonFormField.fellesperiodeukerMor]: undefined,\r\n};\r\n\r\nexport const mapMorFarAdopsjonFormToState = (values: Partial<MorFarAdopsjonFormData>): MorFarAdopsjonUttaksplanInfo => {\r\n    return {\r\n        harAnnenForelderSøktFP: values.harAnnenForelderSøktFP!,\r\n        startdatoAdopsjonValg: values.startdatoAdopsjonValg!,\r\n        annenStartdatoAdopsjon: values.annenStartdatoAdopsjon!,\r\n        morsSisteDag: values.morsSisteDag!,\r\n        farMedmorsFørsteDag: values.farMedmorsFørsteDag!,\r\n        antallUkerFellesperiode: values.antallUkerFellesperiode!,\r\n        antallDagerFellesperiode: values.antallDagerFellesperiode!,\r\n        fellesperiodeukerMor: values.fellesperiodeukerMor,\r\n    };\r\n};\r\n\r\nexport const getInitialMorFarAdopsjonValues = (\r\n    lagretUttaksplanInfo: MorFarAdopsjonUttaksplanInfo | undefined,\r\n    dekningsgrad: Dekningsgrad\r\n): MorFarAdopsjonFormData => {\r\n    if (lagretUttaksplanInfo) {\r\n        return {\r\n            ...lagretUttaksplanInfo,\r\n            [MorFarAdopsjonFormField.dekningsgrad]: dekningsgrad,\r\n            [MorFarAdopsjonFormField.startdatoAdopsjonValg]: finnEnum(lagretUttaksplanInfo.startdatoAdopsjonValg),\r\n            [MorFarAdopsjonFormField.harAnnenForelderSøktFP]: lagretUttaksplanInfo.harAnnenForelderSøktFP\r\n                ? YesOrNo.YES\r\n                : YesOrNo.NO,\r\n        };\r\n    }\r\n\r\n    return initialMorFarAdopsjonValues;\r\n};\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { hasValue } from '@navikt/fp-common';\r\nimport { MorFarAdopsjonFormData, MorFarAdopsjonFormField } from './morFarAdopsjonFormConfig';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport AdopsjonStartdatoValg from './adopsjonStartdatoValg';\r\n\r\ninterface MorFarAdopsjonQuestionsPayload extends MorFarAdopsjonFormData {\r\n    harAnnenForeldreRettPåForeldrepenger: boolean | undefined;\r\n    erAleneOmOmsorg: boolean | undefined;\r\n}\r\n\r\nconst MorFarAdopsjonFormConfig: QuestionConfig<MorFarAdopsjonQuestionsPayload, MorFarAdopsjonFormField> = {\r\n    [MorFarAdopsjonFormField.harAnnenForelderSøktFP]: {\r\n        isAnswered: ({ harAnnenForelderSøktFP }) => hasValue(harAnnenForelderSøktFP),\r\n        isIncluded: ({ harAnnenForeldreRettPåForeldrepenger }) => !!harAnnenForeldreRettPåForeldrepenger,\r\n    },\r\n    [MorFarAdopsjonFormField.dekningsgrad]: {\r\n        isAnswered: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n        isIncluded: ({ harAnnenForelderSøktFP, harAnnenForeldreRettPåForeldrepenger }) =>\r\n            harAnnenForelderSøktFP !== YesOrNo.UNANSWERED || !harAnnenForeldreRettPåForeldrepenger,\r\n    },\r\n    [MorFarAdopsjonFormField.startdatoAdopsjonValg]: {\r\n        isAnswered: ({ startdatoAdopsjonValg }) => hasValue(startdatoAdopsjonValg),\r\n        isIncluded: ({ dekningsgrad, harAnnenForelderSøktFP }) =>\r\n            hasValue(dekningsgrad) && harAnnenForelderSøktFP !== YesOrNo.YES,\r\n    },\r\n    [MorFarAdopsjonFormField.annenStartdatoAdopsjon]: {\r\n        isAnswered: ({ annenStartdatoAdopsjon }) => hasValue(annenStartdatoAdopsjon),\r\n        isIncluded: ({ dekningsgrad, harAnnenForelderSøktFP, startdatoAdopsjonValg }) =>\r\n            startdatoAdopsjonValg === AdopsjonStartdatoValg.ANNEN &&\r\n            hasValue(dekningsgrad) &&\r\n            harAnnenForelderSøktFP !== YesOrNo.YES,\r\n    },\r\n    [MorFarAdopsjonFormField.morsSisteDag]: {\r\n        isAnswered: ({ morsSisteDag }) => hasValue(morsSisteDag),\r\n        isIncluded: ({ dekningsgrad, harAnnenForelderSøktFP }) =>\r\n            hasValue(dekningsgrad) && harAnnenForelderSøktFP === YesOrNo.YES,\r\n    },\r\n    [MorFarAdopsjonFormField.farMedmorsFørsteDag]: {\r\n        isAnswered: ({ farMedmorsFørsteDag }) => hasValue(farMedmorsFørsteDag),\r\n        isIncluded: ({ morsSisteDag, harAnnenForelderSøktFP }) =>\r\n            hasValue(morsSisteDag) && harAnnenForelderSøktFP === YesOrNo.YES,\r\n    },\r\n    [MorFarAdopsjonFormField.antallDagerFellesperiode]: {\r\n        isAnswered: ({ antallDagerFellesperiode }) => hasValue(antallDagerFellesperiode),\r\n        isIncluded: ({ farMedmorsFørsteDag }) => hasValue(farMedmorsFørsteDag),\r\n    },\r\n    [MorFarAdopsjonFormField.antallUkerFellesperiode]: {\r\n        isAnswered: ({ antallUkerFellesperiode }) => hasValue(antallUkerFellesperiode),\r\n        isIncluded: ({ farMedmorsFørsteDag }) => hasValue(farMedmorsFørsteDag),\r\n    },\r\n    [MorFarAdopsjonFormField.fellesperiodeukerMor]: {\r\n        isAnswered: ({ fellesperiodeukerMor }) => hasValue(fellesperiodeukerMor),\r\n        isIncluded: ({\r\n            startdatoAdopsjonValg,\r\n            harAnnenForelderSøktFP,\r\n            harAnnenForeldreRettPåForeldrepenger,\r\n            erAleneOmOmsorg,\r\n        }) =>\r\n            startdatoAdopsjonValg !== undefined &&\r\n            harAnnenForelderSøktFP !== YesOrNo.YES &&\r\n            !!harAnnenForeldreRettPåForeldrepenger &&\r\n            erAleneOmOmsorg === false,\r\n    },\r\n};\r\n\r\nexport const morFarAdopsjonQuestionsConfig = Questions<MorFarAdopsjonQuestionsPayload, MorFarAdopsjonFormField>(\r\n    MorFarAdopsjonFormConfig\r\n);\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateErAnnenStartdatoAdopsjonGyldig = (intl: IntlShape) => (annenStartdatoAdopsjon: string) => {\r\n    if (!isISODateString(annenStartdatoAdopsjon)) {\r\n        return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoAdopsjon.annenDato.gyldigDato');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport { MorFarAdopsjonFormComponents, MorFarAdopsjonFormField } from './morFarAdopsjonFormConfig';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { isAdoptertAnnetBarn, isAdoptertBarn } from 'app/context/types/Barn';\r\nimport { DateRange, ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport { formaterDatoUtenDag } from 'app/utils/dateUtils';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport { uttaksplanDatoavgrensninger } from 'app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger';\r\nimport { DatepickerDateRange } from 'nav-datovelger';\r\nimport { validateErAnnenStartdatoAdopsjonGyldig } from './validation/morFarAdopsjonValidering';\r\nimport AdopsjonStartdatoValg from './adopsjonStartdatoValg';\r\n\r\nexport const finnStartdatoAdopsjon = (\r\n    startdatoAdopsjonValg: AdopsjonStartdatoValg,\r\n    annenStartdatoAdopsjon?: string,\r\n    adopsjonsdato?: string,\r\n    ankomstdato?: string\r\n): string => {\r\n    if (startdatoAdopsjonValg === AdopsjonStartdatoValg.ANKOMST) {\r\n        return ankomstdato!;\r\n    }\r\n    if (startdatoAdopsjonValg === AdopsjonStartdatoValg.OMSORGSOVERTAKELSE) {\r\n        return adopsjonsdato!;\r\n    }\r\n    return annenStartdatoAdopsjon!;\r\n};\r\n\r\nconst konverterStringTilDate = (invalidDateRanges?: DatepickerDateRange[]): DateRange[] | undefined => {\r\n    if (!invalidDateRanges) {\r\n        return undefined;\r\n    }\r\n\r\n    return invalidDateRanges.map((r) => ({\r\n        from: ISOStringToDate(r.from)!,\r\n        to: ISOStringToDate(r.to)!,\r\n    }));\r\n};\r\n\r\ninterface Props {\r\n    valgtStartdatoAdopsjon?: AdopsjonStartdatoValg;\r\n}\r\n\r\nconst StartdatoAdopsjon: FunctionComponent<Props> = ({ valgtStartdatoAdopsjon }) => {\r\n    const intl = useIntl();\r\n    const { barn } = useSøknad();\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n\r\n    const radios = [];\r\n    if (isAdoptertAnnetBarn(barn) && barn.ankomstdato) {\r\n        radios.push({\r\n            label: intlUtils(intl, 'uttaksplaninfo.startdatoAdopsjon.alternativ.ankomst', {\r\n                dato: formaterDatoUtenDag(ISOStringToDate(barn.ankomstdato)!),\r\n            }),\r\n            value: AdopsjonStartdatoValg.ANKOMST,\r\n        });\r\n    }\r\n\r\n    if (isAdoptertBarn(barn)) {\r\n        radios.push({\r\n            label: intlUtils(intl, 'uttaksplaninfo.startdatoAdopsjon.alternativ.omsorgsovertakelse', {\r\n                dato: formaterDatoUtenDag(ISOStringToDate(barn.adopsjonsdato)!),\r\n            }),\r\n            value: AdopsjonStartdatoValg.OMSORGSOVERTAKELSE,\r\n        });\r\n    }\r\n\r\n    radios.push({\r\n        label: intlUtils(intl, 'uttaksplaninfo.startdatoAdopsjon.alternativ.annen'),\r\n        value: AdopsjonStartdatoValg.ANNEN,\r\n    });\r\n\r\n    const datoAvgrensninger = uttaksplanDatoavgrensninger.startdatoPermisjonAdopsjon(familiehendelsesdato);\r\n\r\n    return (\r\n        <>\r\n            <Block padBottom=\"l\">\r\n                <MorFarAdopsjonFormComponents.RadioPanelGroup\r\n                    name={MorFarAdopsjonFormField.startdatoAdopsjonValg}\r\n                    radios={radios}\r\n                    legend={intlUtils(intl, 'uttaksplaninfo.startdatoAdopsjon.spørsmål')}\r\n                    useTwoColumns={true}\r\n                />\r\n            </Block>\r\n            <Block padBottom=\"l\" visible={valgtStartdatoAdopsjon === AdopsjonStartdatoValg.ANNEN}>\r\n                <MorFarAdopsjonFormComponents.DatePicker\r\n                    name={MorFarAdopsjonFormField.annenStartdatoAdopsjon}\r\n                    label={intlUtils(intl, 'uttaksplaninfo.startdatoAdopsjon.annenDato.spørsmål')}\r\n                    minDate={datoAvgrensninger.minDate ? ISOStringToDate(datoAvgrensninger.minDate) : undefined}\r\n                    maxDate={datoAvgrensninger.maxDate ? ISOStringToDate(datoAvgrensninger.maxDate) : undefined}\r\n                    disabledDateRanges={konverterStringTilDate(datoAvgrensninger.invalidDateRanges)}\r\n                    disableWeekend={datoAvgrensninger.weekendsNotSelectable}\r\n                    validate={validateErAnnenStartdatoAdopsjonGyldig(intl)}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StartdatoAdopsjon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport dayjs from 'dayjs';\r\nimport { dateToISOString, ISOStringToDate, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport { getNavnGenitivEierform, formaterNavn } from 'app/utils/personUtils';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { getInitialMorFarAdopsjonValues, mapMorFarAdopsjonFormToState } from './morFarAdopsjonUtils';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { getFlerbarnsuker } from 'app/steps/uttaksplan-info/utils/uttaksplanHarForMangeFlerbarnsuker';\r\nimport { isAdoptertAnnetBarn, isAdoptertBarn, isAdoptertStebarn } from 'app/context/types/Barn';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport { dateIsSameOrAfter, findEldsteDato } from 'app/utils/dateUtils';\r\nimport {\r\n    MorFarAdopsjonFormComponents,\r\n    MorFarAdopsjonFormData,\r\n    MorFarAdopsjonFormField,\r\n} from './morFarAdopsjonFormConfig';\r\nimport { morFarAdopsjonQuestionsConfig } from './morFarAdopsjonQuestionsConfig';\r\nimport { getTilgjengeligeDager } from '../../tilgjengeligeDagerGraf/tilgjengeligeDagerUtils';\r\nimport TilgjengeligeDagerGraf from '../../tilgjengeligeDagerGraf/TilgjengeligeDagerGraf';\r\nimport StartdatoAdopsjon, { finnStartdatoAdopsjon } from './StartdatoAdopsjon';\r\nimport MorsSisteDagSpørsmål from '../spørsmål/MorsSisteDagSpørsmål';\r\nimport FarMedmorsFørsteDag from '../spørsmål/FarMedmorsFørsteDag';\r\nimport AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål from '../spørsmål/AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål';\r\nimport FordelingFellesperiodeSpørsmål from '../../fordelingFellesperiode/FordelingFellesperiodeSpørsmål';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport useUttaksplanInfo from 'app/utils/hooks/useUttaksplanInfo';\r\nimport { MorFarAdopsjonUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport DekningsgradSpørsmål from '../spørsmål/DekningsgradSpørsmål';\r\nimport { getDekningsgradFromString } from 'app/utils/getDekningsgradFromString';\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n}\r\n\r\nconst MorFarAdopsjon: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer80DTO,\r\n    tilgjengeligeStønadskontoer100DTO,\r\n}) => {\r\n    const intl = useIntl();\r\n    const {\r\n        søkersituasjon,\r\n        annenForelder,\r\n        barn,\r\n        søker: { erAleneOmOmsorg },\r\n        dekningsgrad,\r\n    } = useSøknad();\r\n    const {\r\n        person: { fornavn, mellomnavn, etternavn },\r\n    } = useSøkerinfo();\r\n    const lagretUttaksplanInfo = useUttaksplanInfo<MorFarAdopsjonUttaksplanInfo>();\r\n\r\n    const erAdopsjon = søkersituasjon.situasjon === 'adopsjon';\r\n    const søkerErAleneOmOmsorg = !!erAleneOmOmsorg;\r\n    const annenForelderOppgittIkkeAleneOmOmsorg = isAnnenForelderOppgitt(annenForelder)\r\n        ? annenForelder.harRettPåForeldrepenger !== undefined\r\n        : false;\r\n\r\n    const shouldRender =\r\n        erAdopsjon && (annenForelderOppgittIkkeAleneOmOmsorg || annenForelder.kanIkkeOppgis || søkerErAleneOmOmsorg);\r\n\r\n    const onValidSubmitHandler = (values: Partial<MorFarAdopsjonFormData>) => {\r\n        return [\r\n            actionCreator.setUttaksplanInfo(mapMorFarAdopsjonFormToState(values)),\r\n            actionCreator.setDekningsgrad(getDekningsgradFromString(values.dekningsgrad)),\r\n        ];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN);\r\n\r\n    if (!shouldRender || !isAdoptertBarn(barn)) {\r\n        return null;\r\n    }\r\n\r\n    const erSøkerMor = søkersituasjon.rolle === 'mor';\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n\r\n    const oppgittAnnenForelder = isAnnenForelderOppgitt(annenForelder) ? annenForelder : undefined;\r\n    const harAnnenForeldreRettPåForeldrepenger = !!oppgittAnnenForelder?.harRettPåForeldrepenger;\r\n    const fornavnAnnenForeldre = oppgittAnnenForelder?.fornavn;\r\n    const erAnnenPartUfør = !!oppgittAnnenForelder?.erUfør;\r\n    const navnAnnenPart = oppgittAnnenForelder\r\n        ? formaterNavn(oppgittAnnenForelder.fornavn, oppgittAnnenForelder.etternavn)\r\n        : '';\r\n\r\n    const erDeltUttak = isAnnenForelderOppgitt(annenForelder) ? !!annenForelder.harRettPåForeldrepenger : false;\r\n    const erMorUfør = erSøkerMor ? false : erAnnenPartUfør;\r\n\r\n    const navnSøker = formaterNavn(fornavn, etternavn, mellomnavn);\r\n    const navnMor = erSøkerMor ? navnSøker : navnAnnenPart;\r\n    const navnFarMedmor = erSøkerMor ? navnAnnenPart : navnSøker;\r\n\r\n    const erAdoptertIUtlandet = isAdoptertAnnetBarn(barn) ? barn.adoptertIUtlandet : false;\r\n    const ankomstdato = isAdoptertAnnetBarn(barn) ? barn.ankomstdato : undefined;\r\n    const ankomstdatoDate = ankomstdato ? ISOStringToDate(ankomstdato) : undefined;\r\n    const antallBarn = parseInt(barn.antallBarn, 10);\r\n    const adopsjonsdatoDate = ISOStringToDate(barn.adopsjonsdato);\r\n    const latestDate =\r\n        ankomstdatoDate !== undefined && adopsjonsdatoDate !== undefined\r\n            ? dateToISOString(findEldsteDato([ankomstdatoDate, adopsjonsdatoDate])) // todo - sjekk logikk her\r\n            : barn.adopsjonsdato;\r\n\r\n    const tilgjengeligeStønadskontoer = getValgtStønadskontoFor80Og100Prosent(\r\n        tilgjengeligeStønadskontoer80DTO,\r\n        tilgjengeligeStønadskontoer100DTO,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n\r\n    return (\r\n        <MorFarAdopsjonFormComponents.FormikWrapper\r\n            initialValues={getInitialMorFarAdopsjonValues(lagretUttaksplanInfo, dekningsgrad)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues, setFieldValue }) => {\r\n                const visibility = morFarAdopsjonQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    harAnnenForeldreRettPåForeldrepenger,\r\n                    erAleneOmOmsorg,\r\n                });\r\n\r\n                const valgtStønadskonto = tilgjengeligeStønadskontoer[formValues.dekningsgrad];\r\n\r\n                const tilgjengeligeDager = valgtStønadskonto\r\n                    ? getTilgjengeligeDager(valgtStønadskonto, false, Forelder.farMedmor)\r\n                    : undefined;\r\n\r\n                return (\r\n                    <MorFarAdopsjonFormComponents.Form includeButtons={false} includeValidationSummary={true}>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isIncluded(MorFarAdopsjonFormField.harAnnenForelderSøktFP)}\r\n                        >\r\n                            <MorFarAdopsjonFormComponents.YesOrNoQuestion\r\n                                name={MorFarAdopsjonFormField.harAnnenForelderSøktFP}\r\n                                legend={intlUtils(intl, 'uttaksplaninfo.spørsmål.harAnnenForelderSøktFP.label', {\r\n                                    navnAnnenForelder: fornavnAnnenForeldre,\r\n                                })}\r\n                            />\r\n                        </Block>\r\n                        {formValues.harAnnenForelderSøktFP === YesOrNo.YES && (\r\n                            <Block padBottom=\"l\">\r\n                                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                    <FormattedMessage\r\n                                        id=\"uttaksplaninfo.informasjon.tilAnnenForelder\"\r\n                                        values={{\r\n                                            navn: getNavnGenitivEierform(fornavnAnnenForeldre!, intl.locale),\r\n                                        }}\r\n                                    />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                        )}\r\n                        <Block padBottom=\"l\" visible={visibility.isIncluded(MorFarAdopsjonFormField.dekningsgrad)}>\r\n                            <DekningsgradSpørsmål\r\n                                FormKomponent={MorFarAdopsjonFormComponents}\r\n                                dekningsgradFeltNavn={MorFarAdopsjonFormField.dekningsgrad}\r\n                                tilgjengeligeStønadskontoer={tilgjengeligeStønadskontoer}\r\n                            />\r\n                        </Block>\r\n                        <Block padBottom=\"l\" visible={visibility.isAnswered(MorFarAdopsjonFormField.dekningsgrad)}>\r\n                            {tilgjengeligeDager && (\r\n                                <TilgjengeligeDagerGraf\r\n                                    erDeltUttak={erDeltUttak}\r\n                                    erFarEllerMedmor={!erSøkerMor}\r\n                                    navnFarMedmor={navnFarMedmor}\r\n                                    navnMor={navnMor}\r\n                                    tilgjengeligeDager={tilgjengeligeDager}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block visible={visibility.isIncluded(MorFarAdopsjonFormField.startdatoAdopsjonValg)}>\r\n                            <StartdatoAdopsjon valgtStartdatoAdopsjon={formValues.startdatoAdopsjonValg} />\r\n                        </Block>\r\n                        <Block padBottom=\"l\" visible={visibility.isIncluded(MorFarAdopsjonFormField.morsSisteDag)}>\r\n                            <MorsSisteDagSpørsmål\r\n                                FormComponents={MorFarAdopsjonFormComponents}\r\n                                fieldName={MorFarAdopsjonFormField.morsSisteDag}\r\n                                navnMor={navnMor}\r\n                                familiehendelsesdato={familiehendelsesdato}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isIncluded(MorFarAdopsjonFormField.farMedmorsFørsteDag)}\r\n                        >\r\n                            <FarMedmorsFørsteDag\r\n                                FormComponents={MorFarAdopsjonFormComponents}\r\n                                fieldName={MorFarAdopsjonFormField.farMedmorsFørsteDag}\r\n                                familiehendelsesdato={familiehendelsesdato}\r\n                                setFieldValue={setFieldValue}\r\n                                morsSisteDag={ISOStringToDate(formValues.morsSisteDag)}\r\n                                navnMor={navnMor}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={\r\n                                visibility.isAnswered(MorFarAdopsjonFormField.farMedmorsFørsteDag) &&\r\n                                !dateIsSameOrAfter(\r\n                                    ISOStringToDate(formValues.morsSisteDag),\r\n                                    ISOStringToDate(formValues.farMedmorsFørsteDag)\r\n                                ) &&\r\n                                formValues.harAnnenForelderSøktFP === YesOrNo.YES\r\n                            }\r\n                        >\r\n                            {tilgjengeligeDager && (\r\n                                <AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål\r\n                                    FormComponents={MorFarAdopsjonFormComponents}\r\n                                    ukerFieldName={MorFarAdopsjonFormField.antallUkerFellesperiode}\r\n                                    dagerFieldName={MorFarAdopsjonFormField.antallDagerFellesperiode}\r\n                                    antallDager={formValues.antallDagerFellesperiode}\r\n                                    antallUker={formValues.antallUkerFellesperiode}\r\n                                    setFieldValue={setFieldValue}\r\n                                    ukerMedFellesperiode={tilgjengeligeDager.dagerFelles / 5}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={\r\n                                formValues.startdatoAdopsjonValg !== undefined &&\r\n                                dayjs(ISOStringToDate(latestDate)).isBefore(\r\n                                    dayjs(\r\n                                        finnStartdatoAdopsjon(\r\n                                            formValues.startdatoAdopsjonValg,\r\n                                            formValues.annenStartdatoAdopsjon,\r\n                                            barn.adopsjonsdato,\r\n                                            ankomstdato\r\n                                        )\r\n                                    )\r\n                                ) &&\r\n                                !isAdoptertStebarn(barn)\r\n                            }\r\n                        >\r\n                            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                <FormattedMessage\r\n                                    id={\r\n                                        erAdoptertIUtlandet === false\r\n                                            ? 'uttaksplaninfo.info.ikkeAdoptertIUtlandet'\r\n                                            : 'uttaksplaninfo.info.adoptertIUtlandet'\r\n                                    }\r\n                                />\r\n                            </Veilederpanel>\r\n                        </Block>\r\n                        <Block visible={erAleneOmOmsorg === false && harAnnenForeldreRettPåForeldrepenger}>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={\r\n                                    antallBarn > 1 &&\r\n                                    formValues.startdatoAdopsjonValg !== undefined &&\r\n                                    formValues.harAnnenForelderSøktFP !== YesOrNo.YES\r\n                                }\r\n                            >\r\n                                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                    <FormattedMessage\r\n                                        id=\"uttaksplaninfo.veileder.flerbarnsInformasjon\"\r\n                                        values={{\r\n                                            uker: getFlerbarnsuker(formValues.dekningsgrad!, antallBarn),\r\n                                            navnFar: navnFarMedmor,\r\n                                            navnMor: navnMor,\r\n                                        }}\r\n                                    />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                            <Block\r\n                                padBottom=\"l\"\r\n                                visible={visibility.isIncluded(MorFarAdopsjonFormField.fellesperiodeukerMor)}\r\n                            >\r\n                                <FordelingFellesperiodeSpørsmål\r\n                                    setFieldValue={setFieldValue}\r\n                                    valgtStønadskonto={valgtStønadskonto}\r\n                                    valgtFellesperiodeukerMor={formValues.fellesperiodeukerMor}\r\n                                    mor={navnMor}\r\n                                    farMedmor={navnFarMedmor}\r\n                                    annenForelderErFarEllerMedmor={!erSøkerMor}\r\n                                />\r\n                            </Block>\r\n                        </Block>\r\n                        <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                            <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                        </Block>\r\n                    </MorFarAdopsjonFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MorFarAdopsjon;\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum FarMedmorAleneomsorgFødselFormField {\r\n    dekningsgrad = 'dekningsgrad',\r\n    startPåOmsorgsovertakelse = 'startPåOmsorgsovertakelse',\r\n    startdatoUttak = 'startdatoUttak',\r\n}\r\n\r\nexport interface FarMedmorAleneomsorgFødselFormData {\r\n    [FarMedmorAleneomsorgFødselFormField.dekningsgrad]: string;\r\n    [FarMedmorAleneomsorgFødselFormField.startPåOmsorgsovertakelse]: string;\r\n    [FarMedmorAleneomsorgFødselFormField.startdatoUttak]: string;\r\n}\r\n\r\nexport const FarMedmorAleneomsorgFødselFormComponents = getTypedFormComponents<\r\n    FarMedmorAleneomsorgFødselFormField,\r\n    FarMedmorAleneomsorgFødselFormData,\r\n    string\r\n>();\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport {\r\n    FarMedmorAleneomsorgFødselFormData,\r\n    FarMedmorAleneomsorgFødselFormField,\r\n} from './farMedmorAleneomsorgFødselFormConfig';\r\n\r\nconst FarMedmorAleneomsorgFødselFormConfig: QuestionConfig<\r\n    FarMedmorAleneomsorgFødselFormData,\r\n    FarMedmorAleneomsorgFødselFormField\r\n> = {\r\n    [FarMedmorAleneomsorgFødselFormField.dekningsgrad]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n    },\r\n    [FarMedmorAleneomsorgFødselFormField.startPåOmsorgsovertakelse]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ startPåOmsorgsovertakelse }) => startPåOmsorgsovertakelse !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n    },\r\n    [FarMedmorAleneomsorgFødselFormField.startdatoUttak]: {\r\n        isIncluded: ({ startPåOmsorgsovertakelse }) => startPåOmsorgsovertakelse === YesOrNo.NO,\r\n        isAnswered: ({ startdatoUttak }) => hasValue(startdatoUttak),\r\n        visibilityFilter: ({ startPåOmsorgsovertakelse }) => startPåOmsorgsovertakelse === YesOrNo.NO,\r\n    },\r\n};\r\n\r\nconst farMedmorAleneomsorgFødselQuestionsConfig = Questions<\r\n    FarMedmorAleneomsorgFødselFormData,\r\n    FarMedmorAleneomsorgFødselFormField\r\n>(FarMedmorAleneomsorgFødselFormConfig);\r\n\r\nexport default farMedmorAleneomsorgFødselQuestionsConfig;\r\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { FarMedmorAleneomsorgFødselUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n    FarMedmorAleneomsorgFødselFormData,\r\n    FarMedmorAleneomsorgFødselFormField,\r\n} from './farMedmorAleneomsorgFødselFormConfig';\r\n\r\nconst initialFarMedmorAleneomsorgFødselValues: FarMedmorAleneomsorgFødselFormData = {\r\n    [FarMedmorAleneomsorgFødselFormField.dekningsgrad]: '',\r\n    [FarMedmorAleneomsorgFødselFormField.startPåOmsorgsovertakelse]: YesOrNo.UNANSWERED,\r\n    [FarMedmorAleneomsorgFødselFormField.startdatoUttak]: '',\r\n};\r\n\r\nexport const mapFarMedmorAleneomsorgFødselFormToState = (\r\n    values: Partial<FarMedmorAleneomsorgFødselFormData>,\r\n    familiehendelsesdato: string\r\n): FarMedmorAleneomsorgFødselUttaksplanInfo => {\r\n    return {\r\n        fellesperiodeukerMor: undefined,\r\n        startdatoUttak:\r\n            values.startPåOmsorgsovertakelse === YesOrNo.YES ? familiehendelsesdato : values.startdatoUttak!,\r\n    };\r\n};\r\n\r\nexport const getInitialFarMedmorAleneomsorgFødselValues = (\r\n    lagretUttaksplanInfo: FarMedmorAleneomsorgFødselUttaksplanInfo | undefined,\r\n    familiehendelsesdato: string,\r\n    dekningsgrad: Dekningsgrad\r\n): FarMedmorAleneomsorgFødselFormData => {\r\n    if (lagretUttaksplanInfo) {\r\n        const startetPåOmsorgsovertakelse = dayjs(lagretUttaksplanInfo.startdatoUttak).isSame(\r\n            dayjs(familiehendelsesdato)\r\n        );\r\n\r\n        return {\r\n            dekningsgrad,\r\n            startPåOmsorgsovertakelse: startetPåOmsorgsovertakelse ? YesOrNo.YES : YesOrNo.NO,\r\n            startdatoUttak: startetPåOmsorgsovertakelse ? '' : lagretUttaksplanInfo.startdatoUttak,\r\n        };\r\n    }\r\n\r\n    return initialFarMedmorAleneomsorgFødselValues;\r\n};\r\n","import { formatDate, hasValue, intlUtils } from '@navikt/fp-common';\r\nimport { isDateABeforeDateB } from 'app/utils/dateUtils';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateStartdatoUttakFarMedmorAleneomsorgFødsel =\r\n    (intl: IntlShape, familiehendelsesdato: string) => (startdatoUttak: string) => {\r\n        if (!hasValue(startdatoUttak)) {\r\n            return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.farMedmorAleneomsorgFødsel.startdatoUttak.påkrevd');\r\n        }\r\n\r\n        if (!isISODateString(startdatoUttak)) {\r\n            return intlUtils(\r\n                intl,\r\n                'valideringsfeil.uttaksplaninfo.farMedmorAleneomsorgFødsel.startdatoUttak.gyldigDato'\r\n            );\r\n        }\r\n\r\n        if (isDateABeforeDateB(startdatoUttak, familiehendelsesdato)) {\r\n            return intlUtils(\r\n                intl,\r\n                'valideringsfeil.uttaksplaninfo.farMedmorAleneomsorgFødsel.startdatoUttak.etterFamiliehendelsesdato',\r\n                { familiehendelsesdato: formatDate(familiehendelsesdato) }\r\n            );\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport { FarMedmorAleneomsorgFødselUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { getErMorUfør } from 'app/utils/annenForelderUtils';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport { formaterDatoUtenDag } from 'app/utils/dateUtils';\r\nimport { getDekningsgradFromString } from 'app/utils/getDekningsgradFromString';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useUttaksplanInfo from 'app/utils/hooks/useUttaksplanInfo';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport TilgjengeligeDagerGraf from '../../tilgjengeligeDagerGraf/TilgjengeligeDagerGraf';\r\nimport { getTilgjengeligeDager } from '../../tilgjengeligeDagerGraf/tilgjengeligeDagerUtils';\r\nimport DekningsgradSpørsmål from '../spørsmål/DekningsgradSpørsmål';\r\nimport {\r\n    FarMedmorAleneomsorgFødselFormComponents,\r\n    FarMedmorAleneomsorgFødselFormData,\r\n    FarMedmorAleneomsorgFødselFormField,\r\n} from './farMedmorAleneomsorgFødselFormConfig';\r\nimport farMedmorAleneomsorgFødselAdopsjonQuestionsConfig from './farMedmorAleneomsorgFødselQuestionsConfig';\r\nimport {\r\n    getInitialFarMedmorAleneomsorgFødselValues,\r\n    mapFarMedmorAleneomsorgFødselFormToState,\r\n} from './farMedmorAleneomsorgFødselUtils';\r\nimport { validateStartdatoUttakFarMedmorAleneomsorgFødsel } from './validation/farMedmorAleneomsorgFødselValidation';\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n}\r\n\r\nconst FarMedmorAleneomsorgFødsel: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer100DTO,\r\n    tilgjengeligeStønadskontoer80DTO,\r\n}) => {\r\n    const { søkersituasjon, søker, annenForelder, barn, dekningsgrad } = useSøknad();\r\n    const { person } = useSøkerinfo();\r\n    const erFarEllerMedmor = isFarEllerMedmor(søkersituasjon.rolle);\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n    const intl = useIntl();\r\n\r\n    const erFødsel = søkersituasjon.situasjon === 'fødsel';\r\n    const lagretUttaksplanInfo = useUttaksplanInfo<FarMedmorAleneomsorgFødselUttaksplanInfo>();\r\n\r\n    const onValidSubmitHandler = (values: Partial<FarMedmorAleneomsorgFødselFormData>) => {\r\n        const uttaksplanInfo: FarMedmorAleneomsorgFødselUttaksplanInfo = mapFarMedmorAleneomsorgFødselFormToState(\r\n            values,\r\n            familiehendelsesdato\r\n        );\r\n        return [\r\n            actionCreator.setUttaksplanInfo(uttaksplanInfo),\r\n            actionCreator.setDekningsgrad(getDekningsgradFromString(values.dekningsgrad)),\r\n        ];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN);\r\n\r\n    const shouldRender = erFødsel && erFarEllerMedmor && (!!søker.erAleneOmOmsorg || annenForelder.kanIkkeOppgis);\r\n\r\n    if (!shouldRender) {\r\n        return null;\r\n    }\r\n\r\n    const navnFar = erFarEllerMedmor\r\n        ? person.fornavn\r\n        : isAnnenForelderOppgitt(annenForelder)\r\n        ? annenForelder.fornavn\r\n        : '';\r\n\r\n    const erMorUfør = getErMorUfør(annenForelder, erFarEllerMedmor);\r\n    const tilgjengeligeStønadskontoer = getValgtStønadskontoFor80Og100Prosent(\r\n        tilgjengeligeStønadskontoer80DTO,\r\n        tilgjengeligeStønadskontoer100DTO,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n\r\n    return (\r\n        <FarMedmorAleneomsorgFødselFormComponents.FormikWrapper\r\n            initialValues={getInitialFarMedmorAleneomsorgFødselValues(\r\n                lagretUttaksplanInfo,\r\n                familiehendelsesdato,\r\n                dekningsgrad\r\n            )}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = farMedmorAleneomsorgFødselAdopsjonQuestionsConfig.getVisbility(formValues);\r\n\r\n                const valgtStønadskonto = tilgjengeligeStønadskontoer[formValues.dekningsgrad];\r\n\r\n                return (\r\n                    <FarMedmorAleneomsorgFødselFormComponents.Form\r\n                        includeButtons={false}\r\n                        includeValidationSummary={true}\r\n                    >\r\n                        <Block\r\n                            padBottom=\"xxl\"\r\n                            visible={visibility.isVisible(FarMedmorAleneomsorgFødselFormField.dekningsgrad)}\r\n                        >\r\n                            <DekningsgradSpørsmål\r\n                                FormKomponent={FarMedmorAleneomsorgFødselFormComponents}\r\n                                dekningsgradFeltNavn={FarMedmorAleneomsorgFødselFormField.dekningsgrad}\r\n                                tilgjengeligeStønadskontoer={tilgjengeligeStønadskontoer}\r\n                            />\r\n                        </Block>\r\n                        <Block visible={formValues.dekningsgrad !== ''}>\r\n                            {valgtStønadskonto && (\r\n                                <TilgjengeligeDagerGraf\r\n                                    erDeltUttak={false}\r\n                                    erFarEllerMedmor={true}\r\n                                    navnFarMedmor={navnFar}\r\n                                    navnMor=\"\"\r\n                                    tilgjengeligeDager={getTilgjengeligeDager(\r\n                                        valgtStønadskonto,\r\n                                        false,\r\n                                        Forelder.farMedmor\r\n                                    )}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isVisible(\r\n                                FarMedmorAleneomsorgFødselFormField.startPåOmsorgsovertakelse\r\n                            )}\r\n                        >\r\n                            <FarMedmorAleneomsorgFødselFormComponents.YesOrNoQuestion\r\n                                name={FarMedmorAleneomsorgFødselFormField.startPåOmsorgsovertakelse}\r\n                                legend={intlUtils(intl, 'uttaksplaninfo.startdatoAleneomsorgFarMedmor.spørsmål')}\r\n                                labels={{\r\n                                    yes: intlUtils(\r\n                                        intl,\r\n                                        'uttaksplaninfo.startdatoAdopsjon.alternativ.omsorgsovertakelse',\r\n                                        {\r\n                                            dato: formaterDatoUtenDag(ISOStringToDate(familiehendelsesdato)!),\r\n                                        }\r\n                                    ),\r\n                                    no: intlUtils(intl, 'uttaksplaninfo.startdatoAleneomsorgFarMedmor.annenDato'),\r\n                                }}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isVisible(FarMedmorAleneomsorgFødselFormField.startdatoUttak)}\r\n                        >\r\n                            <FarMedmorAleneomsorgFødselFormComponents.DatePicker\r\n                                name={FarMedmorAleneomsorgFødselFormField.startdatoUttak}\r\n                                label=\"Startdato\"\r\n                                validate={validateStartdatoUttakFarMedmorAleneomsorgFødsel(intl, familiehendelsesdato)}\r\n                                minDate={ISOStringToDate(familiehendelsesdato)}\r\n                            />\r\n                        </Block>\r\n                        <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                            <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                        </Block>\r\n                    </FarMedmorAleneomsorgFødselFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FarMedmorAleneomsorgFødsel;\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum FarMedmorFørstegangssøknadMedAnnenPartFormField {\r\n    permisjonStartdato = 'permisjonStartdato',\r\n}\r\n\r\nexport interface FarMedmorFørstegangssøknadMedAnnenPartFormData {\r\n    [FarMedmorFørstegangssøknadMedAnnenPartFormField.permisjonStartdato]: string;\r\n}\r\n\r\nexport const FarMedmorFørstegangssøknadMedAnnenPartFormComponents = getTypedFormComponents<\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormField,\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormData,\r\n    string\r\n>();\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { hasValue } from '@navikt/fp-common';\r\nimport {\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormData,\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormField,\r\n} from './farMedmorFørstegangssøknadMedAnnenPartFormConfig';\r\n\r\nconst FarMedmorFørstegangssøknadMedAnnenPartFormConfig: QuestionConfig<\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormData,\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormField\r\n> = {\r\n    [FarMedmorFørstegangssøknadMedAnnenPartFormField.permisjonStartdato]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ permisjonStartdato }) => hasValue(permisjonStartdato),\r\n    },\r\n};\r\n\r\nexport const farMedmorFørstegangssøknadMedAnnenPartQuestionsConfig = Questions<\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormData,\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormField\r\n>(FarMedmorFørstegangssøknadMedAnnenPartFormConfig);\r\n","import { FarMedmorFørstegangssøknadMedAnnenPartUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { FarMedmorFørstegangssøknadMedAnnenPartFormData } from './farMedmorFørstegangssøknadMedAnnenPartFormConfig';\r\n\r\nexport const getFarMedmorFørstegangssøknadMedAnnenPartInitialValues = (\r\n    state: FarMedmorFørstegangssøknadMedAnnenPartUttaksplanInfo | undefined\r\n): FarMedmorFørstegangssøknadMedAnnenPartFormData => {\r\n    if (!state) {\r\n        return {\r\n            permisjonStartdato: '',\r\n        };\r\n    }\r\n\r\n    return {\r\n        permisjonStartdato: state.permisjonStartdato,\r\n    };\r\n};\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport InfoOmSøknaden from 'app/components/info-eksisterende-sak/InfoOmSøknaden';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport { FarMedmorFørstegangssøknadMedAnnenPartUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { getErMorUfør } from 'app/utils/annenForelderUtils';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport useUttaksplanInfo from 'app/utils/hooks/useUttaksplanInfo';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { isInfoPeriode } from 'uttaksplan/types/Periode';\r\nimport FarMedmorsFørsteDag from '../spørsmål/FarMedmorsFørsteDag';\r\nimport {\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormComponents,\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormData,\r\n    FarMedmorFørstegangssøknadMedAnnenPartFormField,\r\n} from './farMedmorFørstegangssøknadMedAnnenPartFormConfig';\r\nimport { farMedmorFørstegangssøknadMedAnnenPartQuestionsConfig } from './farMedmorFørstegangssøknadMedAnnenPartQuestionsConfig';\r\nimport { getFarMedmorFørstegangssøknadMedAnnenPartInitialValues } from './farMedmorFørstegangssøknadMedAnnenPartUtils';\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n    eksisterendeSakAnnenPart: EksisterendeSak | undefined;\r\n}\r\n\r\nconst FarMedmorFørstegangssøknadMedAnnenPart: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer100DTO,\r\n    tilgjengeligeStønadskontoer80DTO,\r\n    eksisterendeSakAnnenPart,\r\n}) => {\r\n    const søknad = useSøknad();\r\n    const intl = useIntl();\r\n    const { barn, søkersituasjon, annenForelder } = søknad;\r\n    const erFarEllerMedmor = isFarEllerMedmor(søkersituasjon.rolle);\r\n    const lagretUttaksplanInfo = useUttaksplanInfo<FarMedmorFørstegangssøknadMedAnnenPartUttaksplanInfo>();\r\n\r\n    const onValidSubmitHandler = (values: Partial<FarMedmorFørstegangssøknadMedAnnenPartFormData>) => {\r\n        const uttaksplanInfo: FarMedmorFørstegangssøknadMedAnnenPartUttaksplanInfo = {\r\n            permisjonStartdato: values.permisjonStartdato!,\r\n        };\r\n\r\n        return [actionCreator.setUttaksplanInfo(uttaksplanInfo), actionCreator.setDekningsgrad(grunnlag.dekningsgrad)];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN);\r\n\r\n    if (!eksisterendeSakAnnenPart || !erFarEllerMedmor) {\r\n        return null;\r\n    }\r\n\r\n    const familiehendelsedato = getFamiliehendelsedato(barn);\r\n    const erMorUfør = getErMorUfør(annenForelder, erFarEllerMedmor);\r\n    const navnMor = isAnnenForelderOppgitt(annenForelder) ? annenForelder.fornavn : '';\r\n    const { grunnlag, uttaksplan } = eksisterendeSakAnnenPart;\r\n    const morsPerioder = uttaksplan.filter((p) => isInfoPeriode(p) && p.forelder === Forelder.mor);\r\n    const morsSisteDag = morsPerioder.reverse()[0].tidsperiode.tom;\r\n\r\n    const tilgjengeligeStønadskontoer = getValgtStønadskontoFor80Og100Prosent(\r\n        tilgjengeligeStønadskontoer80DTO,\r\n        tilgjengeligeStønadskontoer100DTO,\r\n        familiehendelsedato,\r\n        erMorUfør\r\n    );\r\n\r\n    return (\r\n        <FarMedmorFørstegangssøknadMedAnnenPartFormComponents.FormikWrapper\r\n            initialValues={getFarMedmorFørstegangssøknadMedAnnenPartInitialValues(lagretUttaksplanInfo)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues, setFieldValue }) => {\r\n                const visibility = farMedmorFørstegangssøknadMedAnnenPartQuestionsConfig.getVisbility(formValues);\r\n                const valgtMengdeStønadskonto = tilgjengeligeStønadskontoer[grunnlag.dekningsgrad];\r\n\r\n                return (\r\n                    <FarMedmorFørstegangssøknadMedAnnenPartFormComponents.Form\r\n                        includeButtons={false}\r\n                        includeValidationSummary={true}\r\n                    >\r\n                        <Block padBottom=\"l\">\r\n                            <InfoOmSøknaden\r\n                                eksisterendeSak={eksisterendeSakAnnenPart}\r\n                                erIUttaksplanenSteg={false}\r\n                                tilgjengeligeStønadskontoer={valgtMengdeStønadskonto}\r\n                            />\r\n                        </Block>\r\n                        <Block padBottom=\"l\">\r\n                            <FarMedmorsFørsteDag\r\n                                FormComponents={FarMedmorFørstegangssøknadMedAnnenPartFormComponents}\r\n                                fieldName={FarMedmorFørstegangssøknadMedAnnenPartFormField.permisjonStartdato}\r\n                                familiehendelsesdato={familiehendelsedato}\r\n                                setFieldValue={setFieldValue}\r\n                                morsSisteDag={morsSisteDag}\r\n                                navnMor={navnMor}\r\n                            />\r\n                        </Block>\r\n                        <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                            <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                        </Block>\r\n                    </FarMedmorFørstegangssøknadMedAnnenPartFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FarMedmorFørstegangssøknadMedAnnenPart;\r\n","import { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport React, { FunctionComponent } from 'react';\r\nimport FarMedmorFødselFørsteganggsøknadBeggeHarRett from './scenarios/far-medmor-fødsel-begge-har-rett/FarMedmorFødselBeggeHarRett';\r\nimport MorFødsel from './scenarios/mor-fodsel/MorFødsel';\r\nimport MorFarAdopsjon from './scenarios/mor-far-adopsjon/MorFarAdopsjon';\r\nimport FarMedmorAleneomsorgFødselAdopsjon from './scenarios/far-medmor-aleneomsorg-fødsel/FarMedmorAleneomsorgFødsel';\r\nimport FarMedmorFødselOgMorHarIkkeRett from './scenarios/far-medmor-fødsel-og-mor-har-ikke-rett/FarMedmorFødselOgMorHarIkkeRett';\r\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\r\nimport FarMedmorFørstegangssøknadMedAnnenPart from './scenarios/farMedmor-førstegangssøknad-med-annen-part/FarMedmorFørstegangssøknadMedAnnenPart';\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n    eksisterendeSakAnnenPart: EksisterendeSak | undefined;\r\n}\r\n\r\nconst UttaksplanInfoScenarios: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer100DTO,\r\n    tilgjengeligeStønadskontoer80DTO,\r\n    eksisterendeSakAnnenPart,\r\n}) => {\r\n    return (\r\n        <>\r\n            <FarMedmorFødselFørsteganggsøknadBeggeHarRett\r\n                tilgjengeligeStønadskontoer100DTO={tilgjengeligeStønadskontoer100DTO}\r\n                tilgjengeligeStønadskontoer80DTO={tilgjengeligeStønadskontoer80DTO}\r\n                eksisterendeSakAnnenPart={eksisterendeSakAnnenPart}\r\n            />\r\n            <MorFødsel\r\n                tilgjengeligeStønadskontoer100DTO={tilgjengeligeStønadskontoer100DTO}\r\n                tilgjengeligeStønadskontoer80DTO={tilgjengeligeStønadskontoer80DTO}\r\n            />\r\n            <MorFarAdopsjon\r\n                tilgjengeligeStønadskontoer100DTO={tilgjengeligeStønadskontoer100DTO}\r\n                tilgjengeligeStønadskontoer80DTO={tilgjengeligeStønadskontoer80DTO}\r\n            />\r\n            <FarMedmorAleneomsorgFødselAdopsjon\r\n                tilgjengeligeStønadskontoer100DTO={tilgjengeligeStønadskontoer100DTO}\r\n                tilgjengeligeStønadskontoer80DTO={tilgjengeligeStønadskontoer80DTO}\r\n            />\r\n            <FarMedmorFødselOgMorHarIkkeRett\r\n                tilgjengeligeStønadskontoer100DTO={tilgjengeligeStønadskontoer100DTO}\r\n                tilgjengeligeStønadskontoer80DTO={tilgjengeligeStønadskontoer80DTO}\r\n            />\r\n            <FarMedmorFørstegangssøknadMedAnnenPart\r\n                tilgjengeligeStønadskontoer100DTO={tilgjengeligeStønadskontoer100DTO}\r\n                tilgjengeligeStønadskontoer80DTO={tilgjengeligeStønadskontoer80DTO}\r\n                eksisterendeSakAnnenPart={eksisterendeSakAnnenPart}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UttaksplanInfoScenarios;\r\n","import AnnenForelder, { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport Barn, { isAdoptertAnnetBarn, isAdoptertStebarn, isFødtBarn, isUfødtBarn } from 'app/context/types/Barn';\r\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport { TilgjengeligeStønadskontoerParams } from './api';\r\n\r\nconst getFarHarRett = (erFarMedmor: boolean, annenForelder: AnnenForelder) => {\r\n    if (erFarMedmor) {\r\n        return true;\r\n    }\r\n\r\n    if (isAnnenForelderOppgitt(annenForelder)) {\r\n        return !!annenForelder.harRettPåForeldrepenger;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nconst getMorHarRett = (erFarMedmor: boolean, annenForelder: AnnenForelder) => {\r\n    if (!erFarMedmor) {\r\n        return true;\r\n    }\r\n\r\n    if (isAnnenForelderOppgitt(annenForelder)) {\r\n        return !!annenForelder.harRettPåForeldrepenger;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nconst getStønadskontoParams = (\r\n    dekningsgrad: Dekningsgrad,\r\n    barn: Barn,\r\n    annenForelder: AnnenForelder,\r\n    søkersituasjon: Søkersituasjon\r\n): TilgjengeligeStønadskontoerParams => {\r\n    const erFarMedmor = isFarEllerMedmor(søkersituasjon.rolle);\r\n\r\n    return {\r\n        antallBarn: barn.antallBarn,\r\n        startdatoUttak: getFamiliehendelsedato(barn),\r\n        dekningsgrad: dekningsgrad,\r\n        farHarRett: getFarHarRett(erFarMedmor, annenForelder),\r\n        morHarRett: getMorHarRett(erFarMedmor, annenForelder),\r\n        morHarAleneomsorg: !erFarMedmor && barn.datoForAleneomsorg !== undefined,\r\n        farHarAleneomsorg: erFarMedmor && barn.datoForAleneomsorg !== undefined,\r\n        fødselsdato: isFødtBarn(barn) ? barn.fødselsdatoer[0] : undefined,\r\n        omsorgsovertakelsesdato: isAdoptertAnnetBarn(barn) || isAdoptertStebarn(barn) ? barn.adopsjonsdato : undefined,\r\n        termindato: isFødtBarn(barn) || isUfødtBarn(barn) ? barn.termindato : undefined,\r\n    };\r\n};\r\n\r\nexport default getStønadskontoParams;\r\n\r\n// export const getStønadskontoParams = (\r\n//     søknadsinfo: Søknadsinfo,\r\n//     startdatoPermisjon: Date | undefined,\r\n//     barn: Barn,\r\n//     grunnlag?: Saksgrunnlag\r\n// ): GetTilgjengeligeStønadskontoerParams => {\r\n//     const {\r\n//         søknaden: { familiehendelsesdato, dekningsgrad, antallBarn, erFødsel, erBarnFødt, erEndringssøknad },\r\n//         mor,\r\n//         farMedmor,\r\n//     } = søknadsinfo;\r\n\r\n//     if (grunnlag && (skalKunneViseMorsUttaksplanForFarEllerMedmor(grunnlag, søknadsinfo) || erEndringssøknad)) {\r\n//         const params = {\r\n//             antallBarn: grunnlag.antallBarn,\r\n//             fødselsdato: undefined,\r\n//             termindato: undefined,\r\n//             omsorgsovertakelsesdato: undefined,\r\n//             dekningsgrad: grunnlag.dekningsgrad,\r\n//             morHarRett: grunnlag.morHarRett,\r\n//             morHarAleneomsorg: grunnlag.morErAleneOmOmsorg,\r\n//             farHarRett: grunnlag.farMedmorHarRett,\r\n//             farHarAleneomsorg: grunnlag.farMedmorErAleneOmOmsorg,\r\n//             startdatoUttak: startdatoPermisjon || ISOStringToDate(grunnlag.familieHendelseDato)!,\r\n//         };\r\n\r\n//         if (erFødsel) {\r\n//             if (erBarnFødt) {\r\n//                 return {\r\n//                     ...params,\r\n//                     termindato: ISOStringToDate(grunnlag.termindato),\r\n//                     fødselsdato: ISOStringToDate((barn as FødtBarn).fødselsdatoer[0]),\r\n//                 };\r\n//             } else {\r\n//                 return { ...params, termindato: ISOStringToDate((barn as UfødtBarn).termindato) };\r\n//             }\r\n//         } else {\r\n//             return { ...params, omsorgsovertakelsesdato: ISOStringToDate((barn as Adopsjonsbarn).adopsjonsdato) };\r\n//         }\r\n//     } else {\r\n//         const params = {\r\n//             antallBarn,\r\n//             fødselsdato: undefined,\r\n//             termindato: undefined,\r\n//             omsorgsovertakelsesdato: undefined,\r\n//             dekningsgrad:\r\n//                 dekningsgrad === Dekningsgrad.ÅTTI_PROSENT ? Dekningsgrad.ÅTTI_PROSENT : Dekningsgrad.HUNDRE_PROSENT,\r\n//             morHarRett: mor.harRett,\r\n//             morHarAleneomsorg: mor.erAleneOmOmsorg,\r\n//             farHarRett: farMedmor.harRett,\r\n//             farHarAleneomsorg: farMedmor.erAleneOmOmsorg,\r\n//             startdatoUttak: startdatoPermisjon || familiehendelsesdato,\r\n//         };\r\n\r\n//         if (erFødsel) {\r\n//             if (erBarnFødt) {\r\n//                 return {\r\n//                     ...params,\r\n//                     termindato: ISOStringToDate((barn as FødtBarn).termindato),\r\n//                     fødselsdato: ISOStringToDate((barn as FødtBarn).fødselsdatoer[0]),\r\n//                 };\r\n//             } else {\r\n//                 return { ...params, termindato: ISOStringToDate((barn as UfødtBarn).termindato) };\r\n//             }\r\n//         } else {\r\n//             return { ...params, omsorgsovertakelsesdato: ISOStringToDate((barn as Adopsjonsbarn).adopsjonsdato) };\r\n//         }\r\n//     }\r\n// };\r\n","import { intlUtils, Step } from '@navikt/fp-common';\r\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport Api from 'app/api/api';\r\nimport UttaksplanInfoScenarios from './components/UttaksplanInfoScenarios';\r\nimport getStønadskontoParams from 'app/api/getStønadskontoParams';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport NavFrontendSpinner from 'nav-frontend-spinner';\r\nimport { getRegistrertBarnOmDetFinnes } from 'app/utils/barnUtils';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\n\r\nconst UttaksplanInfo = () => {\r\n    const intl = useIntl();\r\n\r\n    const søkerinfo = useSøkerinfo();\r\n    const søknad = useSøknad();\r\n\r\n    const { barn, annenForelder, søkersituasjon } = søknad;\r\n    const { registrerteBarn } = søkerinfo;\r\n    const erFarEllerMedmor = isFarEllerMedmor(søkersituasjon.rolle);\r\n\r\n    const registrertBarn = getRegistrertBarnOmDetFinnes(barn, registrerteBarn);\r\n\r\n    const { eksisterendeSakAnnenPartData } = Api.useGetEksisterendeSakMedFnr(\r\n        søkerinfo.person.fnr,\r\n        erFarEllerMedmor,\r\n        registrertBarn?.annenForelder?.fnr\r\n    );\r\n    const { tilgjengeligeStønadskontoerData: stønadskontoer100 } = Api.useGetUttakskontoer(\r\n        getStønadskontoParams(Dekningsgrad.HUNDRE_PROSENT, barn, annenForelder, søkersituasjon)\r\n    );\r\n    const { tilgjengeligeStønadskontoerData: stønadskontoer80 } = Api.useGetUttakskontoer(\r\n        getStønadskontoParams(Dekningsgrad.ÅTTI_PROSENT, barn, annenForelder, søkersituasjon)\r\n    );\r\n    const onAvbrytSøknad = useAvbrytSøknad();\r\n\r\n    if (\r\n        !stønadskontoer100 ||\r\n        !stønadskontoer80 ||\r\n        (!!registrertBarn && !eksisterendeSakAnnenPartData && erFarEllerMedmor)\r\n    ) {\r\n        return (\r\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\r\n                <NavFrontendSpinner type=\"XXL\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Step\r\n            bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n            backLinkHref={getPreviousStepHref('uttaksplanInfo')}\r\n            activeStepId=\"uttaksplanInfo\"\r\n            pageTitle={intlUtils(intl, 'søknad.søkersituasjon')}\r\n            stepTitle={intlUtils(intl, 'søknad.søkersituasjon')}\r\n            onCancel={onAvbrytSøknad}\r\n            steps={stepConfig}\r\n            kompakt={true}\r\n        >\r\n            <UttaksplanInfoScenarios\r\n                tilgjengeligeStønadskontoer100DTO={stønadskontoer100}\r\n                tilgjengeligeStønadskontoer80DTO={stønadskontoer80}\r\n                eksisterendeSakAnnenPart={eksisterendeSakAnnenPartData}\r\n            />\r\n        </Step>\r\n    );\r\n};\r\n\r\nexport default UttaksplanInfo;\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum FarMedmorFødselOgMorHarIkkeRettFormField {\r\n    dekningsgrad = 'dekningsgrad',\r\n    permisjonStartdato = 'permisjonStartdato',\r\n}\r\n\r\nexport interface FarMedmorFødselOgMorHarIkkeRettFormData {\r\n    [FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad]: string;\r\n    [FarMedmorFødselOgMorHarIkkeRettFormField.permisjonStartdato]: string;\r\n}\r\n\r\nexport const FarMedmorFødselOgMorHarIkkeRettFormComponents = getTypedFormComponents<\r\n    FarMedmorFødselOgMorHarIkkeRettFormField,\r\n    FarMedmorFødselOgMorHarIkkeRettFormData,\r\n    string\r\n>();\r\n","import { FarMedmorFødselOgMorHarIkkeRettUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport {\r\n    FarMedmorFødselOgMorHarIkkeRettFormData,\r\n    FarMedmorFødselOgMorHarIkkeRettFormField,\r\n} from './farMedmorFødselOgMorHarIkkeRettFormConfig';\r\n\r\nconst initialFarMedmorFødselOgMorHarIkkeRettValues: FarMedmorFødselOgMorHarIkkeRettFormData = {\r\n    [FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad]: '',\r\n    [FarMedmorFødselOgMorHarIkkeRettFormField.permisjonStartdato]: '',\r\n};\r\n\r\nexport const mapFarMedmorFødselOgMorHarIkkeRettFormToState = (\r\n    values: Partial<FarMedmorFødselOgMorHarIkkeRettFormData>\r\n): FarMedmorFødselOgMorHarIkkeRettUttaksplanInfo => {\r\n    return {\r\n        permisjonStartdato: values.permisjonStartdato!,\r\n    };\r\n};\r\n\r\nexport const getInitialFarMedmorFødselOgMorHarIkkeRettValues = (\r\n    dekningsgrad: Dekningsgrad,\r\n    lagretUttaksplanInfo: FarMedmorFødselOgMorHarIkkeRettUttaksplanInfo | undefined\r\n): FarMedmorFødselOgMorHarIkkeRettFormData => {\r\n    if (lagretUttaksplanInfo) {\r\n        return {\r\n            ...lagretUttaksplanInfo,\r\n            [FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad]: dekningsgrad,\r\n        };\r\n    }\r\n\r\n    return initialFarMedmorFødselOgMorHarIkkeRettValues;\r\n};\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { hasValue } from '@navikt/fp-common';\r\nimport {\r\n    FarMedmorFødselOgMorHarIkkeRettFormData,\r\n    FarMedmorFødselOgMorHarIkkeRettFormField,\r\n} from './farMedmorFødselOgMorHarIkkeRettFormConfig';\r\n\r\ninterface FarMedmorFødselOgMorHarIkkeRettQuestionsPayload extends FarMedmorFødselOgMorHarIkkeRettFormData {\r\n    erMorUfør: boolean;\r\n}\r\n\r\nconst FarMedmorFødselOgMorHarIkkeRettFormConfig: QuestionConfig<\r\n    FarMedmorFødselOgMorHarIkkeRettQuestionsPayload,\r\n    FarMedmorFødselOgMorHarIkkeRettFormField\r\n> = {\r\n    [FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad]: {\r\n        isAnswered: ({ dekningsgrad }) => hasValue(dekningsgrad),\r\n        isIncluded: () => true,\r\n    },\r\n    [FarMedmorFødselOgMorHarIkkeRettFormField.permisjonStartdato]: {\r\n        isAnswered: ({ permisjonStartdato }) => hasValue(permisjonStartdato),\r\n        isIncluded: ({ dekningsgrad, erMorUfør }) => hasValue(dekningsgrad) && erMorUfør,\r\n    },\r\n};\r\n\r\nexport const farMedmorFødselOgMorHarIkkeRettQuestionsConfig = Questions<\r\n    FarMedmorFødselOgMorHarIkkeRettQuestionsPayload,\r\n    FarMedmorFødselOgMorHarIkkeRettFormField\r\n>(FarMedmorFødselOgMorHarIkkeRettFormConfig);\r\n","import { intlUtils } from '@navikt/fp-common';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { IntlShape } from 'react-intl';\r\nimport { Uttaksdagen } from '../../../../utils/Uttaksdagen';\r\nimport { ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\n\r\nexport const validateStartdatoFarMedmor = (intl: IntlShape) => (permisjonStartdato: string) => {\r\n    if (!isISODateString(permisjonStartdato)) {\r\n        return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoPermisjon.gyldigDato');\r\n    }\r\n    if (!Uttaksdagen(ISOStringToDate(permisjonStartdato)!).erUttaksdag()) {\r\n        return intlUtils(intl, 'valideringsfeil.uttaksplaninfo.startdatoHelg');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport useSøknad from 'app/utils/hooks/useSøknad';\r\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\r\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\r\nimport {\r\n    FarMedmorFødselOgMorHarIkkeRettFormComponents,\r\n    FarMedmorFødselOgMorHarIkkeRettFormData,\r\n    FarMedmorFødselOgMorHarIkkeRettFormField,\r\n} from './farMedmorFødselOgMorHarIkkeRettFormConfig';\r\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\r\nimport {\r\n    getInitialFarMedmorFødselOgMorHarIkkeRettValues,\r\n    mapFarMedmorFødselOgMorHarIkkeRettFormToState,\r\n} from './farMedmorFødselOgMorHarIkkeRettUtils';\r\nimport { FarMedmorFødselOgMorHarIkkeRettUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport useUttaksplanInfo from 'app/utils/hooks/useUttaksplanInfo';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { farMedmorFødselOgMorHarIkkeRettQuestionsConfig } from './farMedmorFødselOgMorHarIkkeRettQuestionsConfig';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport TilgjengeligeDagerGraf from '../../tilgjengeligeDagerGraf/TilgjengeligeDagerGraf';\r\nimport { getTilgjengeligeDager } from '../../tilgjengeligeDagerGraf/tilgjengeligeDagerUtils';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { formaterNavn } from 'app/utils/personUtils';\r\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport VeilederNormal from 'app/assets/VeilederNormal';\r\nimport dayjs from 'dayjs';\r\nimport { isFødtBarn } from 'app/context/types/Barn';\r\nimport { DateRange, dateToISOString, ISOStringToDate } from '@navikt/sif-common-formik/lib';\r\nimport { Tidsperioden } from 'app/steps/uttaksplan-info/utils/Tidsperioden';\r\nimport { uttaksplanDatoavgrensninger } from 'app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger';\r\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\r\nimport { DatepickerDateRange } from 'nav-datovelger';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { validateStartdatoFarMedmor } from './validation/farMedmorFødselOgMorHarIkkeRettValidering';\r\nimport DekningsgradSpørsmål from '../spørsmål/DekningsgradSpørsmål';\r\nimport { getDekningsgradFromString } from 'app/utils/getDekningsgradFromString';\r\n\r\nconst skalViseInfoOmPrematuruker = (fødselsdato: Date | undefined, termindato: Date | undefined): boolean => {\r\n    if (fødselsdato === undefined || termindato === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const fødselsdatoEtterEllerLikFørsteJuli = dayjs(fødselsdato).isSameOrAfter(dayjs(new Date('2019-07-01')));\r\n\r\n    return (\r\n        dayjs(fødselsdato).add(7, 'weeks').add(3, 'days').isBefore(dayjs(termindato)) &&\r\n        fødselsdatoEtterEllerLikFørsteJuli\r\n    );\r\n};\r\n\r\nconst konverterStringTilDate = (invalidDateRanges?: DatepickerDateRange[]): DateRange[] | undefined => {\r\n    if (!invalidDateRanges) {\r\n        return undefined;\r\n    }\r\n\r\n    return invalidDateRanges.map((r) => ({\r\n        from: ISOStringToDate(r.from)!,\r\n        to: ISOStringToDate(r.to)!,\r\n    }));\r\n};\r\n\r\ninterface Props {\r\n    tilgjengeligeStønadskontoer100DTO: TilgjengeligeStønadskontoerDTO;\r\n    tilgjengeligeStønadskontoer80DTO: TilgjengeligeStønadskontoerDTO;\r\n}\r\n\r\nconst FarMedmorFødselOgMorHarIkkeRett: FunctionComponent<Props> = ({\r\n    tilgjengeligeStønadskontoer80DTO,\r\n    tilgjengeligeStønadskontoer100DTO,\r\n}) => {\r\n    const intl = useIntl();\r\n    const { søkersituasjon, annenForelder, barn, dekningsgrad } = useSøknad();\r\n    const {\r\n        person: { fornavn, mellomnavn, etternavn },\r\n    } = useSøkerinfo();\r\n    const lagretUttaksplanInfo = useUttaksplanInfo<FarMedmorFødselOgMorHarIkkeRettUttaksplanInfo>();\r\n\r\n    const erFarEllerMedmor = isFarEllerMedmor(søkersituasjon.rolle);\r\n    const erFødsel = søkersituasjon.situasjon === 'fødsel';\r\n    const annenForelderHarIkkeRett = isAnnenForelderOppgitt(annenForelder)\r\n        ? annenForelder.harRettPåForeldrepenger === false\r\n        : false;\r\n\r\n    const onValidSubmitHandler = (values: Partial<FarMedmorFødselOgMorHarIkkeRettFormData>) => {\r\n        return [\r\n            actionCreator.setUttaksplanInfo(mapFarMedmorFødselOgMorHarIkkeRettFormToState(values)),\r\n            actionCreator.setDekningsgrad(getDekningsgradFromString(values.dekningsgrad)),\r\n        ];\r\n    };\r\n\r\n    const onValidSubmit = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTTAKSPLAN);\r\n\r\n    const shouldRender = erFarEllerMedmor && erFødsel && annenForelderHarIkkeRett;\r\n\r\n    if (!shouldRender) {\r\n        return null;\r\n    }\r\n\r\n    const erDeltUttak = isAnnenForelderOppgitt(annenForelder) ? !!annenForelder.harRettPåForeldrepenger : false;\r\n\r\n    const erMorUfør = isAnnenForelderOppgitt(annenForelder) ? !!annenForelder.erUfør : false;\r\n    const navnMor = isAnnenForelderOppgitt(annenForelder)\r\n        ? formaterNavn(annenForelder.fornavn, annenForelder.etternavn)\r\n        : '';\r\n    const navnFarMedmor = formaterNavn(fornavn, etternavn, mellomnavn);\r\n\r\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\r\n    const førsteUttaksdag = Uttaksdagen(ISOStringToDate(familiehendelsesdato)!).denneEllerNeste();\r\n    const datoAvgrensinger = uttaksplanDatoavgrensninger.startdatoPermisjonFarMedmor(dateToISOString(førsteUttaksdag));\r\n\r\n    const fødselsdato = isFødtBarn(barn) ? ISOStringToDate(barn.fødselsdatoer[0]) : undefined;\r\n    const termindato = isFødtBarn(barn) ? ISOStringToDate(barn.termindato) : undefined;\r\n    const visInfoOmPrematuruker =\r\n        søkersituasjon.situasjon === 'fødsel' ? skalViseInfoOmPrematuruker(fødselsdato, termindato) : false;\r\n    const ekstraDagerGrunnetPrematurFødsel = visInfoOmPrematuruker\r\n        ? Tidsperioden({ fom: fødselsdato!, tom: termindato! }).getAntallUttaksdager() - 1\r\n        : undefined;\r\n\r\n    const tilgjengeligeStønadskontoer = getValgtStønadskontoFor80Og100Prosent(\r\n        tilgjengeligeStønadskontoer80DTO,\r\n        tilgjengeligeStønadskontoer100DTO,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n\r\n    return (\r\n        <FarMedmorFødselOgMorHarIkkeRettFormComponents.FormikWrapper\r\n            initialValues={getInitialFarMedmorFødselOgMorHarIkkeRettValues(dekningsgrad, lagretUttaksplanInfo)}\r\n            onSubmit={onValidSubmit}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = farMedmorFødselOgMorHarIkkeRettQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    erMorUfør,\r\n                });\r\n\r\n                const valgtStønadskonto = tilgjengeligeStønadskontoer[formValues.dekningsgrad];\r\n\r\n                return (\r\n                    <FarMedmorFødselOgMorHarIkkeRettFormComponents.Form\r\n                        includeButtons={false}\r\n                        includeValidationSummary={true}\r\n                    >\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isIncluded(FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad)}\r\n                        >\r\n                            <DekningsgradSpørsmål\r\n                                FormKomponent={FarMedmorFødselOgMorHarIkkeRettFormComponents}\r\n                                dekningsgradFeltNavn={FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad}\r\n                                tilgjengeligeStønadskontoer={tilgjengeligeStønadskontoer}\r\n                            />\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isAnswered(FarMedmorFødselOgMorHarIkkeRettFormField.dekningsgrad)}\r\n                        >\r\n                            {valgtStønadskonto && (\r\n                                <TilgjengeligeDagerGraf\r\n                                    erDeltUttak={erDeltUttak}\r\n                                    erFarEllerMedmor\r\n                                    navnFarMedmor={navnFarMedmor}\r\n                                    navnMor={navnMor}\r\n                                    tilgjengeligeDager={getTilgjengeligeDager(\r\n                                        valgtStønadskonto,\r\n                                        erDeltUttak,\r\n                                        Forelder.farMedmor\r\n                                    )}\r\n                                />\r\n                            )}\r\n                        </Block>\r\n                        <Block padBottom=\"l\" visible={visInfoOmPrematuruker === true}>\r\n                            <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\r\n                                <FormattedMessage\r\n                                    id=\"uttaksplaninfo.veileder.informasjonPrematuruker\"\r\n                                    values={{\r\n                                        antallprematuruker: Math.floor(ekstraDagerGrunnetPrematurFødsel! / 5),\r\n                                        antallprematurdager: ekstraDagerGrunnetPrematurFødsel! % 5,\r\n                                    }}\r\n                                />\r\n                            </Veilederpanel>\r\n                        </Block>\r\n                        <Block\r\n                            padBottom=\"l\"\r\n                            visible={visibility.isIncluded(FarMedmorFødselOgMorHarIkkeRettFormField.permisjonStartdato)}\r\n                        >\r\n                            <FarMedmorFødselOgMorHarIkkeRettFormComponents.DatePicker\r\n                                name={FarMedmorFødselOgMorHarIkkeRettFormField.permisjonStartdato}\r\n                                label={intlUtils(intl, 'uttaksplaninfo.spørsmål.startdatoPermisjonFarMedmor.label')}\r\n                                minDate={ISOStringToDate(datoAvgrensinger.minDate)}\r\n                                maxDate={ISOStringToDate(datoAvgrensinger.maxDate)}\r\n                                disabledDateRanges={konverterStringTilDate(datoAvgrensinger.invalidDateRanges)}\r\n                                disableWeekend={datoAvgrensinger.weekendsNotSelectable}\r\n                                validate={validateStartdatoFarMedmor(intl)}\r\n                            />\r\n                        </Block>\r\n                        <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\r\n                            <Hovedknapp>{intlUtils(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                        </Block>\r\n                    </FarMedmorFødselOgMorHarIkkeRettFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FarMedmorFødselOgMorHarIkkeRett;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { TypedFormComponents } from '@navikt/sif-common-formik/lib';\r\nimport { intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { getAntallUker } from 'app/steps/uttaksplan-info/utils/stønadskontoer';\r\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\r\n\r\ninterface Props {\r\n    FormKomponent: TypedFormComponents<any, any, any>;\r\n    dekningsgradFeltNavn: string;\r\n    tilgjengeligeStønadskontoer: {\r\n        [Dekningsgrad.ÅTTI_PROSENT]: TilgjengeligStønadskonto[];\r\n        [Dekningsgrad.HUNDRE_PROSENT]: TilgjengeligStønadskonto[];\r\n    };\r\n}\r\n\r\nconst DekningsgradSpørsmål: FunctionComponent<Props> = ({\r\n    FormKomponent,\r\n    dekningsgradFeltNavn,\r\n    tilgjengeligeStønadskontoer,\r\n}) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <FormKomponent.RadioPanelGroup\r\n            name={dekningsgradFeltNavn}\r\n            radios={[\r\n                {\r\n                    label: intlUtils(intl, 'uttaksplaninfo.49Uker', {\r\n                        antallUker: getAntallUker(tilgjengeligeStønadskontoer[Dekningsgrad.HUNDRE_PROSENT]),\r\n                    }),\r\n                    value: Dekningsgrad.HUNDRE_PROSENT,\r\n                },\r\n                {\r\n                    label: intlUtils(intl, 'uttaksplaninfo.59Uker', {\r\n                        antallUker: getAntallUker(tilgjengeligeStønadskontoer[Dekningsgrad.ÅTTI_PROSENT]),\r\n                    }),\r\n                    value: Dekningsgrad.ÅTTI_PROSENT,\r\n                },\r\n            ]}\r\n            legend={intlUtils(intl, 'uttaksplaninfo.dekningsgrad.label.deltUttak')}\r\n            description={\r\n                <UtvidetInformasjon apneLabel=\"Les mer om lengden på foreldrepengeperioden\">\r\n                    Den totale utbetalingen blir høyere hvis du velger 100 prosent. Valget gjelder dere begge, og kan\r\n                    ikke endres senere.\r\n                </UtvidetInformasjon>\r\n            }\r\n            useTwoColumns={true}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DekningsgradSpørsmål;\r\n","export enum UttaksplanHexFarge {\r\n    lilla = '#544066',\r\n    blaa = '#0067C5',\r\n    gronn = '#06893a',\r\n    yellow = '#ff9100',\r\n    graa = '#7f756c',\r\n    rammeGraa = '#c6c2bf',\r\n    rod = '#BA3A26',\r\n}\r\n","import React from 'react';\r\nimport { bemUtils } from '@navikt/fp-common';\r\n\r\nimport './multibar.less';\r\n\r\ninterface BarProps {\r\n    width: number;\r\n    color: string;\r\n    color2?: string;\r\n    text?: React.ReactNode;\r\n}\r\n\r\ninterface Props {\r\n    borderColor: string;\r\n    leftBar?: BarProps;\r\n    rightBar?: BarProps;\r\n    centerBar?: BarProps;\r\n}\r\n\r\nconst getBarStyle = ({ width, color, color2 }: BarProps): React.CSSProperties => {\r\n    return {\r\n        width: `${width}%`,\r\n        background: color2 ? `linear-gradient(to right bottom, ${color} 49%, ${color2} 51%)` : color,\r\n    };\r\n};\r\n\r\nconst Multibar: React.FunctionComponent<Props> = ({ leftBar, rightBar, centerBar, borderColor }) => {\r\n    const bem = bemUtils('multibar');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <div className={bem.element('bars')}>\r\n                {leftBar && leftBar.width > 0 && (\r\n                    <div className={bem.element('bar', 'left')} style={getBarStyle(leftBar)}>\r\n                        {leftBar && leftBar.text}\r\n                    </div>\r\n                )}\r\n                {centerBar && (\r\n                    <div\r\n                        className={bem.element('bar', 'center')}\r\n                        style={{ ...getBarStyle(centerBar), left: leftBar ? `${leftBar.width}%` : undefined }}\r\n                    >\r\n                        {centerBar && centerBar.text}\r\n                    </div>\r\n                )}\r\n                {rightBar && rightBar.width > 0 && (\r\n                    <div className={bem.element('bar', 'right')} style={getBarStyle(rightBar)}>\r\n                        {rightBar && rightBar.text}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={bem.element('background')} style={{ borderColor }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Multibar;\r\n","import React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport { getNavnGenitivEierform } from 'app/utils/personUtils';\r\nimport { bemUtils, intlUtils } from '@navikt/fp-common';\r\nimport { UttaksplanHexFarge } from 'uttaksplan/types/UttaksplanHexFarge';\r\nimport { getVarighetString } from 'app/utils/dateUtils';\r\nimport Multibar from './multibar/Multibar';\r\nimport { TilgjengeligeDager } from 'app/types/TilgjengeligeDager';\r\nimport Personkort from 'app/components/personkort/Personkort';\r\n\r\nimport './tilgjengeligeDagerGraf.less';\r\n\r\ninterface Props {\r\n    tilgjengeligeDager: TilgjengeligeDager;\r\n    navnMor: string;\r\n    navnFarMedmor: string;\r\n    erFarEllerMedmor: boolean;\r\n    erDeltUttak: boolean;\r\n}\r\n\r\nexport const getProsentFordelingPerDel = (\r\n    tilgjengeligeDager: TilgjengeligeDager,\r\n    inkluderForeldrepengerFørTermin: boolean\r\n): {\r\n    pstMor: number;\r\n    pstFelles: number;\r\n    pstFarMedmor: number;\r\n} => {\r\n    const pstMultiplikator =\r\n        100 / (inkluderForeldrepengerFørTermin ? tilgjengeligeDager.dagerTotalt : tilgjengeligeDager.dagerEtterTermin);\r\n\r\n    const pstMor =\r\n        pstMultiplikator * tilgjengeligeDager.dagerMor +\r\n        (inkluderForeldrepengerFørTermin ? tilgjengeligeDager.dagerForeldrepengerFørFødsel : 0);\r\n    const pstFarMedmor = pstMultiplikator * tilgjengeligeDager.dagerFarMedmor;\r\n    const pstFelles = 100 - pstMor - pstFarMedmor;\r\n\r\n    return {\r\n        pstMor,\r\n        pstFarMedmor,\r\n        pstFelles,\r\n    };\r\n};\r\n\r\nconst DeltOmsorgGraf: React.FunctionComponent<Props> = ({\r\n    tilgjengeligeDager,\r\n    navnFarMedmor,\r\n    navnMor,\r\n    erFarEllerMedmor,\r\n}) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('tilgjengeligeDagerGraf');\r\n    const fordeling = getProsentFordelingPerDel(tilgjengeligeDager, true);\r\n    const txtMor =\r\n        tilgjengeligeDager.dagerForeldrepengerFørFødsel > 0\r\n            ? `${tilgjengeligeDager.dagerForeldrepengerFørFødsel / 5} + ${tilgjengeligeDager.dagerMor / 5} ${intlUtils(\r\n                  intl,\r\n                  'uker',\r\n                  { uker: 15 }\r\n              )}`\r\n            : getVarighetString(tilgjengeligeDager.dagerMor, intl);\r\n    return (\r\n        <div className={bem.classNames(bem.block, bem.modifier('flereForeldre'))}>\r\n            <div className={bem.element('bars')}>\r\n                <div className={bem.element('forelder1')} style={{ width: `${fordeling.pstMor}%` }}>\r\n                    <div className={bem.element('barTitle')}>\r\n                        <Personkort textValign=\"bottom\">\r\n                            <FormattedMessage\r\n                                id=\"tilgjengeligeDagerGraf.person.del\"\r\n                                values={{ navnEierform: getNavnGenitivEierform(navnMor, intl.locale) }}\r\n                            />\r\n                        </Personkort>\r\n                    </div>\r\n                    <Multibar\r\n                        borderColor={UttaksplanHexFarge.graa}\r\n                        leftBar={{\r\n                            color: UttaksplanHexFarge.lilla,\r\n                            width: 100,\r\n                            text: <div className={bem.element('barTekst')}>{txtMor}</div>,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={bem.element('felles')} style={{ width: `${fordeling.pstFelles}%` }}>\r\n                    <div className={bem.element('barTitle')}>\r\n                        <FormattedMessage id=\"tilgjengeligeDagerGraf.fellesperiode\" />\r\n                    </div>\r\n                    <Multibar\r\n                        borderColor={UttaksplanHexFarge.graa}\r\n                        leftBar={{\r\n                            color: UttaksplanHexFarge.lilla,\r\n                            color2: UttaksplanHexFarge.blaa,\r\n                            width: 100,\r\n                            text: (\r\n                                <div className={bem.element('barTekst')}>\r\n                                    {getVarighetString(tilgjengeligeDager.dagerFelles, intl)}\r\n                                </div>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </div>\r\n                {navnFarMedmor && (\r\n                    <div className={bem.element('forelder2')} style={{ width: `${fordeling.pstFarMedmor}%` }}>\r\n                        <div className={bem.element('barTitle')}>\r\n                            <Personkort invertert={true} textValign=\"bottom\">\r\n                                <FormattedMessage\r\n                                    id=\"tilgjengeligeDagerGraf.person.del\"\r\n                                    values={{\r\n                                        navnEierform: getNavnGenitivEierform(navnFarMedmor, intl.locale),\r\n                                    }}\r\n                                />\r\n                            </Personkort>\r\n                        </div>\r\n                        <Multibar\r\n                            borderColor={UttaksplanHexFarge.graa}\r\n                            leftBar={{\r\n                                color: UttaksplanHexFarge.blaa,\r\n                                width: 100,\r\n                                text: (\r\n                                    <div className={bem.element('barTekst')}>\r\n                                        {getVarighetString(tilgjengeligeDager.dagerFarMedmor, intl)}\r\n                                    </div>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {!erFarEllerMedmor && tilgjengeligeDager.dagerForeldrepengerFørFødsel > 0 && (\r\n                <div style={{ paddingTop: '0.625rem' }}>\r\n                    <Element>\r\n                        <FormattedMessage id=\"tilgjengeligeDagerGraf.uttakFørFødselInfo\" values={{ navn: navnMor }} />\r\n                    </Element>\r\n                </div>\r\n            )}\r\n            {erFarEllerMedmor && tilgjengeligeDager.dagerForeldrepengerFørFødsel > 0 && (\r\n                <div style={{ paddingTop: '0.625rem' }}>\r\n                    <Element>\r\n                        <FormattedMessage\r\n                            id=\"tilgjengeligeDagerGraf.uttakFørFødselInfoFarMedmor\"\r\n                            values={{ navn: navnMor }}\r\n                        />\r\n                    </Element>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AleneomsorgGraf: React.FunctionComponent<Props> = ({ tilgjengeligeDager, erFarEllerMedmor }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('tilgjengeligeDagerGraf');\r\n    const txt =\r\n        tilgjengeligeDager.dagerForeldrepengerFørFødsel > 0\r\n            ? `${tilgjengeligeDager.dagerForeldrepengerFørFødsel / 5} + ${\r\n                  tilgjengeligeDager.dagerForeldrepenger / 5\r\n              } uker`\r\n            : getVarighetString(tilgjengeligeDager.dagerEtterTermin, intl);\r\n    return (\r\n        <div className={bem.block}>\r\n            <div style={{ position: 'relative' }}>\r\n                <div className={bem.element('barTitle')}>\r\n                    <Element>\r\n                        <FormattedMessage id=\"tilgjengeligeDagerGraf.periodeMedForeldrepenger\" />\r\n                    </Element>\r\n                </div>\r\n            </div>\r\n            <Multibar\r\n                borderColor={UttaksplanHexFarge.graa}\r\n                leftBar={{\r\n                    color: erFarEllerMedmor ? UttaksplanHexFarge.blaa : UttaksplanHexFarge.lilla,\r\n                    width: 100,\r\n                    text: <div className={bem.element('barTekst')}>{txt}</div>,\r\n                }}\r\n            />\r\n            {!erFarEllerMedmor && tilgjengeligeDager.dagerForeldrepengerFørFødsel > 0 && (\r\n                <div style={{ paddingTop: '0.625rem' }}>\r\n                    <Element>\r\n                        <FormattedMessage id=\"tilgjengeligeDagerGraf.uttakFørFødselInfoIkkeDeltUttak\" />\r\n                    </Element>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TilgjengeligeDagerGraf: React.FunctionComponent<Props> = (props) => {\r\n    return props.erDeltUttak ? <DeltOmsorgGraf {...props} /> : <AleneomsorgGraf {...props} />;\r\n};\r\n\r\nexport default TilgjengeligeDagerGraf;\r\n","import { Forelder } from 'app/types/Forelder';\r\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\r\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\nimport { TilgjengeligeDager } from './../../../../types/TilgjengeligeDager';\r\n\r\nexport const summerAntallDagerIKontoer = (kontoer: TilgjengeligStønadskonto[]): number => {\r\n    return kontoer.reduce((dager, konto) => konto.dager + dager, 0);\r\n};\r\n\r\nconst getMorsStønadskontoer = (kontoer: TilgjengeligStønadskonto[]): TilgjengeligStønadskonto[] =>\r\n    kontoer.filter((konto) => konto.konto === StønadskontoType.Mødrekvote);\r\n\r\nconst getFarsStønadskontoer = (kontoer: TilgjengeligStønadskonto[]): TilgjengeligStønadskonto[] =>\r\n    kontoer.filter((konto) => konto.konto === StønadskontoType.Fedrekvote);\r\n\r\nconst getForeldrepengeKontoer = (kontoer: TilgjengeligStønadskonto[]): TilgjengeligStønadskonto[] =>\r\n    kontoer.filter((konto) => konto.konto === StønadskontoType.Foreldrepenger);\r\n\r\nconst getFlerbarnskonto = (kontoer: TilgjengeligStønadskonto[]): TilgjengeligStønadskonto[] =>\r\n    kontoer.filter((konto) => konto.konto === StønadskontoType.Flerbarnsdager);\r\n\r\nconst getFellesStønadskontoer = (kontoer: TilgjengeligStønadskonto[]): TilgjengeligStønadskonto[] =>\r\n    kontoer.filter(\r\n        (konto) => konto.konto === StønadskontoType.Fellesperiode || konto.konto === StønadskontoType.Flerbarnsdager\r\n    );\r\n\r\nconst kontoErFørTermin = (konto: TilgjengeligStønadskonto): boolean => {\r\n    return konto.konto === StønadskontoType.ForeldrepengerFørFødsel;\r\n};\r\n\r\nconst kontoErEtterTermin = (konto: TilgjengeligStønadskonto): boolean => {\r\n    return konto.konto !== StønadskontoType.ForeldrepengerFørFødsel;\r\n};\r\n\r\nexport const getTilgjengeligeDager = (\r\n    kontoer: TilgjengeligStønadskonto[],\r\n    erDeltUttak: boolean,\r\n    forelderVedAleneomsorg: Forelder | undefined\r\n): TilgjengeligeDager => {\r\n    const kontoerEtterTermin = kontoer.filter(kontoErEtterTermin);\r\n\r\n    const dagerTotalt = summerAntallDagerIKontoer(kontoer);\r\n    const dagerForeldrepengerFørFødsel = summerAntallDagerIKontoer(kontoer.filter(kontoErFørTermin));\r\n    const dagerEtterTermin = summerAntallDagerIKontoer(kontoerEtterTermin);\r\n    const dagerForeldrepenger = summerAntallDagerIKontoer(getForeldrepengeKontoer(kontoerEtterTermin));\r\n    const dagerMor = summerAntallDagerIKontoer(getMorsStønadskontoer(kontoerEtterTermin));\r\n    const dagerFar = summerAntallDagerIKontoer(getFarsStønadskontoer(kontoerEtterTermin));\r\n    const dagerFelles = summerAntallDagerIKontoer(getFellesStønadskontoer(kontoerEtterTermin));\r\n    const flerbarnsdager = summerAntallDagerIKontoer(getFlerbarnskonto(kontoerEtterTermin));\r\n\r\n    const dagerKunTilMor = erDeltUttak === false && forelderVedAleneomsorg === Forelder.mor;\r\n    const dagerKunTilFar = erDeltUttak === false && forelderVedAleneomsorg === Forelder.farMedmor;\r\n\r\n    const maksDagerFar = dagerKunTilFar ? dagerForeldrepenger : dagerFar + dagerFelles;\r\n    const maksDagerMor = dagerKunTilMor ? dagerForeldrepenger + dagerForeldrepengerFørFødsel : dagerMor + dagerFelles;\r\n\r\n    return {\r\n        dagerTotalt,\r\n        dagerForeldrepengerFørFødsel,\r\n        dagerEtterTermin,\r\n        dagerForeldrepenger,\r\n        dagerMor,\r\n        dagerFarMedmor: dagerFar,\r\n        dagerFelles,\r\n        flerbarnsdager,\r\n        maksDagerFar,\r\n        maksDagerMor,\r\n        stønadskontoer: kontoer,\r\n    };\r\n};\r\n","import dayjs from 'dayjs';\r\nimport { Periode, Periodetype, isForeldrepengerFørFødselUttaksperiode } from 'uttaksplan/types/Periode';\r\nimport { getTidsperiode, Tidsperioden } from './Tidsperioden';\r\nimport { Uttaksdagen } from './Uttaksdagen';\r\nimport { formaterDatoKompakt } from 'app/utils/dateUtils';\r\n\r\nexport const Perioden = (periode: Periode) => ({\r\n    setStartdato: (fom: Date) => flyttPeriode(periode, fom),\r\n    setUttaksdager: (uttaksdager: number) =>\r\n        (periode.tidsperiode = getTidsperiode(periode.tidsperiode.fom, uttaksdager)),\r\n    getAntallUttaksdager: () => Tidsperioden(periode.tidsperiode).getAntallUttaksdager(),\r\n    getAntallFridager: () => Tidsperioden(periode.tidsperiode).getAntallFridager(),\r\n    erLik: (periode2: Periode, inkluderTidsperiode = false, inkluderUtsettelser = false) =>\r\n        erPerioderLike(periode, periode2, inkluderTidsperiode, inkluderUtsettelser),\r\n    erSammenhengende: (periode2: Periode) => erPerioderSammenhengende(periode, periode2),\r\n    inneholderFridager: () => Tidsperioden(periode.tidsperiode).getAntallFridager() > 0,\r\n    starterFør: (dato: Date) => dayjs(periode.tidsperiode.fom).isBefore(dato, 'day'),\r\n    slutterEtter: (dato: Date) => dayjs(periode.tidsperiode.tom).isAfter(dato, 'day'),\r\n    slutterSammeDagEllerEtter: (dato: Date) => dayjs(periode.tidsperiode.tom).isSameOrAfter(dato, 'day'),\r\n});\r\n\r\nfunction erPerioderSammenhengende(p1: Periode, p2: Periode) {\r\n    const p1NesteUttaksdato = Uttaksdagen(dayjs(p1.tidsperiode.tom).toDate()).neste();\r\n    const p2Startdato = p2.tidsperiode.fom;\r\n    return dayjs(p1NesteUttaksdato).isSame(p2Startdato, 'day');\r\n}\r\n\r\nfunction erPerioderLike(p1: Periode, p2: Periode, inkluderTidsperiode = false, inkluderUtsettelser = false) {\r\n    if (p1.type !== p2.type) {\r\n        return false;\r\n    }\r\n    if (inkluderUtsettelser === false && (p1.type === Periodetype.Utsettelse || p2.type === Periodetype.Utsettelse)) {\r\n        return false;\r\n    }\r\n    if (p1.type === Periodetype.Hull && p2.type === Periodetype.Hull) {\r\n        return true;\r\n    }\r\n    if (isForeldrepengerFørFødselUttaksperiode(p1) && isForeldrepengerFørFødselUttaksperiode(p2)) {\r\n        const fff1 = getPeriodeFootprint(\r\n            { ...p1, skalIkkeHaUttakFørTermin: p1.skalIkkeHaUttakFørTermin || false },\r\n            inkluderTidsperiode\r\n        );\r\n        const fff2 = getPeriodeFootprint(\r\n            { ...p2, skalIkkeHaUttakFørTermin: p2.skalIkkeHaUttakFørTermin || false },\r\n            inkluderTidsperiode\r\n        );\r\n        return fff1 === fff2;\r\n    }\r\n    const k1 = getPeriodeFootprint(p1, inkluderTidsperiode);\r\n    const k2 = getPeriodeFootprint(p2, inkluderTidsperiode);\r\n    return k1 === k2;\r\n}\r\n\r\nfunction getPeriodeFootprint(periode: Periode, inkluderTidsperiode = false) {\r\n    const { tidsperiode, id, ...rest } = periode;\r\n    const sortedPeriode: any = {};\r\n    Object.keys(rest)\r\n        .sort()\r\n        .filter((key) => rest[key] !== undefined)\r\n        .forEach((key) => {\r\n            sortedPeriode[key] = rest[key];\r\n        });\r\n    if (inkluderTidsperiode && tidsperiode) {\r\n        sortedPeriode.tidsperiode = {\r\n            fom: tidsperiode.fom ? formaterDatoKompakt(tidsperiode.fom) : undefined,\r\n            tom: tidsperiode.tom ? formaterDatoKompakt(tidsperiode.tom) : undefined,\r\n        };\r\n    }\r\n    return JSON.stringify({ ...sortedPeriode });\r\n}\r\n\r\nfunction flyttPeriode(periode: Periode, fom: Date): Periode {\r\n    const { tidsperiode } = periode;\r\n\r\n    return {\r\n        ...periode,\r\n        tidsperiode: Tidsperioden({\r\n            fom: tidsperiode.fom,\r\n            tom: tidsperiode.tom,\r\n        }).setStartdato(fom),\r\n    };\r\n}\r\n","import { Forelder } from 'app/types/Forelder';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n    ForeldrepengerFørFødselUttaksperiode,\r\n    InfoPeriode,\r\n    isForeldrepengerFørFødselUttaksperiode,\r\n    isHull,\r\n    isInfoPeriode,\r\n    isOppholdsperiode,\r\n    isOverføringsperiode,\r\n    isUtsettelsePgaFerie,\r\n    isUtsettelsesperiode,\r\n    isUttaksperiode,\r\n    Oppholdsperiode,\r\n    Overføringsperiode,\r\n    Periode,\r\n    PeriodeHull,\r\n    Utsettelsesperiode,\r\n    Uttaksperiode,\r\n} from 'uttaksplan/types/Periode';\r\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\nimport { Perioden } from './Perioden';\r\nimport { datoErInnenforTidsperiode, isValidTidsperiode, Tidsperioden } from './Tidsperioden';\r\nimport { Uttaksdagen } from './Uttaksdagen';\r\n\r\nexport const Periodene = (perioder: Periode[]) => ({\r\n    getPeriode: (id: string) => getPeriode(perioder, id),\r\n    getOpphold: () => getOpphold(perioder),\r\n    getUttak: () => getUttaksperioder(perioder),\r\n    getOverføringer: () => getOverføringer(perioder),\r\n    getHull: () => getHull(perioder),\r\n    getHullOgInfo: () => getHullOgInfo(perioder),\r\n    getInfoperioder: () => getInfoperioder(perioder),\r\n    getUtsettelser: () => getUtsettelser(perioder),\r\n    getPerioderEtterFamiliehendelsesdato: (dato: Date) => getPerioderEtterFamiliehendelsesdato(perioder, dato),\r\n    getPerioderFørFamiliehendelsesdato: (dato: Date) => getPerioderFørFamiliehendelsesdato(perioder, dato),\r\n    getPerioderMedUgyldigTidsperiode: () => getPeriodeMedUgyldigTidsperiode(perioder),\r\n    getPerioderMedFerieForForelder: (forelder: Forelder) => getPerioderMedFerieForForelder(perioder, forelder),\r\n    getFørstePerioderEtterFamiliehendelsesdato: (dato: Date) =>\r\n        getFørstePeriodeEtterFamiliehendelsesdato(perioder, dato),\r\n    getForeldrepengerFørTermin: () => getForeldrepengerFørTermin(perioder),\r\n    getFørsteUttaksdag: () => getFørsteUttaksdag(perioder),\r\n    getFørsteUttaksdagEtterSistePeriode: () => getFørsteUttaksdagEtterSistePeriode(perioder),\r\n    getFørsteUttaksdagEksluderInfoperioder: () => getFørsteUttaksdagEksluderInfoperioder(perioder),\r\n    getAntallUttaksdager: () => getAntallUttaksdager(perioder),\r\n    getAntallFeriedager: (forelder?: Forelder) => getAntallFeriedager(perioder, forelder),\r\n    finnOverlappendePerioder: (periode: Periode) => finnOverlappendePerioder(perioder, periode),\r\n    finnPeriodeMedDato: (dato: Date) => finnPeriodeMedDato(perioder, dato),\r\n    finnFørstePeriodeEtterDato: (dato: Date) => finnFørstePeriodeEtterDato(perioder, dato),\r\n    finnAlleForegåendePerioder: (periode: Periode) => finnPerioderFørPeriode(perioder, periode),\r\n    finnAllePåfølgendePerioder: (periode: Periode) => finnPerioderEtterPeriode(perioder, periode),\r\n    finnDenForegåendePerioden: (periode: Periode) => finnForrigePeriode(perioder, periode),\r\n    finnPåfølgendePeriode: (periode: Periode) => finnPåfølgendePeriode(perioder, periode),\r\n    forskyvPerioder: (uttaksdager: number) => forskyvPerioder(perioder, uttaksdager),\r\n    sort: () => perioder.sort(sorterPerioder),\r\n    finnSisteInfoperiode: () => finnSisteInfoperiode(perioder),\r\n});\r\n\r\nexport function sorterPerioder(p1: Periode, p2: Periode) {\r\n    if (isValidTidsperiode(p1.tidsperiode) === false || isValidTidsperiode(p2.tidsperiode) === false) {\r\n        if (isForeldrepengerFørFødselUttaksperiode(p1) && p1.skalIkkeHaUttakFørTermin) {\r\n            return -1;\r\n        }\r\n        return isValidTidsperiode(p1.tidsperiode) ? -1 : 1;\r\n    }\r\n    if (dayjs(p1.tidsperiode.fom).isSame(p2.tidsperiode.fom, 'day')) {\r\n        return isInfoPeriode(p1) ? -1 : 1;\r\n    }\r\n\r\n    if (Tidsperioden(p2.tidsperiode).erOmsluttetAv(p1.tidsperiode)) {\r\n        return 1;\r\n    }\r\n\r\n    return dayjs(p1.tidsperiode.fom).isBefore(p2.tidsperiode.fom, 'day') ? -1 : 1;\r\n}\r\n\r\nfunction getPeriode(perioder: Periode[], id: string): Periode | undefined {\r\n    return perioder.find((p) => p.id === id);\r\n}\r\n\r\nfunction getUttaksperioder(perioder: Periode[]): Uttaksperiode[] {\r\n    return perioder.filter((periode) => isUttaksperiode(periode)) as Uttaksperiode[];\r\n}\r\n\r\nfunction getUtsettelser(perioder: Periode[]): Utsettelsesperiode[] {\r\n    return perioder.filter((periode) => isUtsettelsesperiode(periode)) as Utsettelsesperiode[];\r\n}\r\n\r\nfunction getFerieUtsettelser(perioder: Periode[]): Utsettelsesperiode[] {\r\n    return perioder.filter((periode) => isUtsettelsePgaFerie(periode)) as Utsettelsesperiode[];\r\n}\r\n\r\nfunction getOverføringer(perioder: Periode[]): Overføringsperiode[] {\r\n    return perioder.filter((periode) => isOverføringsperiode(periode)) as Overføringsperiode[];\r\n}\r\n\r\nfunction getHull(perioder: Periode[]): PeriodeHull[] {\r\n    return perioder.filter((periode) => isHull(periode)) as PeriodeHull[];\r\n}\r\n\r\nfunction getHullOgInfo(perioder: Periode[]): (PeriodeHull | InfoPeriode)[] {\r\n    return perioder.filter((periode) => isHull(periode) || isInfoPeriode(periode)) as (PeriodeHull | InfoPeriode)[];\r\n}\r\n\r\nfunction getInfoperioder(perioder: Periode[]): InfoPeriode[] {\r\n    return perioder.filter((periode) => isInfoPeriode(periode)) as InfoPeriode[];\r\n}\r\n\r\nfunction getOpphold(perioder: Periode[]): Oppholdsperiode[] {\r\n    return perioder.filter((periode) => isOppholdsperiode(periode)) as Oppholdsperiode[];\r\n}\r\n\r\nfunction finnOverlappendePerioder(perioder: Periode[], periode: Periode): Periode[] {\r\n    return perioder.filter((p) => {\r\n        if (p.id === periode.id || !isValidTidsperiode(periode.tidsperiode)) {\r\n            return false;\r\n        }\r\n        const { fom, tom } = p.tidsperiode;\r\n        if (!fom || !tom) {\r\n            return false;\r\n        }\r\n        const fomEllerTomErInnenforTidsperiode =\r\n            datoErInnenforTidsperiode(fom, periode.tidsperiode) || datoErInnenforTidsperiode(tom, periode.tidsperiode);\r\n\r\n        const fomTomOmkranserTidsperiode =\r\n            dayjs(periode.tidsperiode.fom).isSameOrAfter(fom, 'day') &&\r\n            dayjs(periode.tidsperiode.tom).isSameOrBefore(tom, 'day');\r\n\r\n        return fomEllerTomErInnenforTidsperiode || fomTomOmkranserTidsperiode;\r\n    });\r\n}\r\n\r\nfunction finnPeriodeMedDato(perioder: Periode[], dato: Date): Periode | undefined {\r\n    return perioder.find((periode) => {\r\n        return dayjs(dato).isBetween(periode.tidsperiode.fom, periode.tidsperiode.tom, 'day', '[]');\r\n    });\r\n}\r\n\r\nfunction finnFørstePeriodeEtterDato(perioder: Periode[], dato: Date): Periode | undefined {\r\n    return perioder.find((periode) => {\r\n        return dayjs(periode.tidsperiode.fom).isAfter(dato, 'day');\r\n    });\r\n}\r\n\r\nfunction finnPerioderFørPeriode(perioder: Periode[], periode: Periode): Periode[] {\r\n    return perioder.filter((p) => dayjs(p.tidsperiode.tom).isBefore(periode.tidsperiode.fom, 'day'));\r\n}\r\n\r\nfunction finnPerioderEtterPeriode(perioder: Periode[], periode: Periode): Periode[] {\r\n    return perioder.filter((p) => dayjs(p.tidsperiode.fom).isAfter(periode.tidsperiode.tom, 'day'));\r\n}\r\n\r\nfunction finnForrigePeriode(perioder: Periode[], periode: Periode): Periode | undefined {\r\n    const foregåendePerioder = finnPerioderFørPeriode(perioder, periode);\r\n    if (foregåendePerioder.length > 0) {\r\n        return foregåendePerioder.pop();\r\n    }\r\n    return undefined;\r\n}\r\nfunction finnPåfølgendePeriode(perioder: Periode[], periode: Periode): Periode | undefined {\r\n    const påfølgendePerioder = finnPerioderEtterPeriode(perioder, periode);\r\n    if (påfølgendePerioder.length > 0) {\r\n        return påfølgendePerioder[0];\r\n    }\r\n    return undefined;\r\n}\r\nfunction forskyvPerioder(perioder: Periode[], uttaksdager: number): Periode[] {\r\n    let uttaksdagerCurrent = uttaksdager;\r\n\r\n    return perioder.reduce((result: Periode[], periode: Periode) => {\r\n        if (isUtsettelsesperiode(periode)) {\r\n            result.push(periode);\r\n\r\n            const dagerIPerioden = Perioden(periode).getAntallUttaksdager();\r\n\r\n            if (dagerIPerioden >= uttaksdagerCurrent) {\r\n                uttaksdagerCurrent = 0;\r\n            } else {\r\n                uttaksdagerCurrent -= dagerIPerioden;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        if (isInfoPeriode(periode) || isOppholdsperiode(periode)) {\r\n            const dagerIPerioden = Perioden(periode).getAntallUttaksdager();\r\n\r\n            if (dagerIPerioden > uttaksdagerCurrent) {\r\n                const forskyvetStartdato = Uttaksdagen(Uttaksdagen(periode.tidsperiode.fom).denneEllerNeste()).leggTil(\r\n                    uttaksdagerCurrent\r\n                );\r\n                const justertPeriode: Periode = {\r\n                    ...periode,\r\n                    tidsperiode: {\r\n                        fom: forskyvetStartdato,\r\n                        tom: periode.tidsperiode.tom,\r\n                    },\r\n                };\r\n\r\n                uttaksdagerCurrent = 0;\r\n\r\n                result.push(justertPeriode);\r\n                return result;\r\n            } else if (dagerIPerioden === uttaksdagerCurrent) {\r\n                uttaksdagerCurrent = 0;\r\n                return result;\r\n            } else {\r\n                uttaksdagerCurrent -= dagerIPerioden;\r\n                return result;\r\n            }\r\n        }\r\n\r\n        result.push(forskyvPeriode(periode, uttaksdagerCurrent));\r\n        return result;\r\n    }, []);\r\n}\r\n\r\nfunction forskyvPeriode(periode: Periode, uttaksdager: number): Periode {\r\n    const forskyvetStartdato = Uttaksdagen(Uttaksdagen(periode.tidsperiode.fom).denneEllerNeste()).leggTil(uttaksdager);\r\n    return Perioden(periode).setStartdato(forskyvetStartdato);\r\n}\r\n\r\nfunction getPerioderFørFamiliehendelsesdato(perioder: Periode[], familiehendelsesdato: Date) {\r\n    return perioder.filter(\r\n        (periode) =>\r\n            isForeldrepengerFørFødselUttaksperiode(periode) ||\r\n            (isValidTidsperiode(periode.tidsperiode) &&\r\n                dayjs(periode.tidsperiode.fom).isBefore(familiehendelsesdato, 'day'))\r\n    );\r\n}\r\n\r\nfunction getPerioderEtterFamiliehendelsesdato(perioder: Periode[], familiehendelsesdato: Date) {\r\n    return perioder.filter(\r\n        (periode) =>\r\n            isValidTidsperiode(periode.tidsperiode) &&\r\n            dayjs(periode.tidsperiode.fom).isSameOrAfter(familiehendelsesdato, 'day') &&\r\n            isForeldrepengerFørFødselUttaksperiode(periode) === false\r\n    );\r\n}\r\n\r\nfunction getFørstePeriodeEtterFamiliehendelsesdato(\r\n    perioder: Periode[],\r\n    familiehendelsesdato: Date\r\n): Periode | undefined {\r\n    const aktuellePerioder = getPerioderEtterFamiliehendelsesdato(perioder, familiehendelsesdato).sort(sorterPerioder);\r\n    return aktuellePerioder.length > 0 ? aktuellePerioder[0] : undefined;\r\n}\r\n\r\nfunction getPeriodeMedUgyldigTidsperiode(perioder: Periode[]) {\r\n    return perioder.filter(\r\n        (periode) =>\r\n            isValidTidsperiode(periode.tidsperiode) === false &&\r\n            isForeldrepengerFørFødselUttaksperiode(periode) === false\r\n    );\r\n}\r\n\r\nfunction getFørsteUttaksdag(perioder: Periode[]): Date | undefined {\r\n    const førstePeriode = perioder\r\n        .filter((p) => p.tidsperiode.fom !== undefined)\r\n        .sort(sorterPerioder)\r\n        .shift();\r\n    if (førstePeriode) {\r\n        return førstePeriode.tidsperiode.fom;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getFørsteUttaksdagEksluderInfoperioder(perioder: Periode[]): Date | undefined {\r\n    const førstePeriode = perioder\r\n        .filter((p) => p.tidsperiode.fom !== undefined && !isInfoPeriode(p))\r\n        .sort(sorterPerioder)\r\n        .shift();\r\n    if (førstePeriode) {\r\n        return førstePeriode.tidsperiode.fom;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getAntallUttaksdager(perioder: Periode[]): number {\r\n    return perioder.reduce((dager, periode) => {\r\n        return dager + Perioden(periode).getAntallUttaksdager();\r\n    }, 0);\r\n}\r\n\r\nfunction getAntallFeriedager(perioder: Periode[], forelder?: Forelder): number {\r\n    return getFerieUtsettelser(perioder)\r\n        .filter((p) => (isValidTidsperiode(p.tidsperiode) && forelder ? p.forelder === forelder : true))\r\n        .map((p) => Tidsperioden(p.tidsperiode).getAntallUttaksdager())\r\n        .reduce((tot = 0, curr) => tot + curr, 0);\r\n}\r\n\r\nfunction getPerioderMedFerieForForelder(perioder: Periode[], forelder: Forelder): Periode[] {\r\n    return perioder.filter((periode) => erPeriodeMedFerieForForelder(periode, forelder));\r\n}\r\n\r\nfunction getForeldrepengerFørTermin(perioder: Periode[]): ForeldrepengerFørFødselUttaksperiode | undefined {\r\n    const periode: Periode | undefined = perioder.find(\r\n        (p) => isUttaksperiode(p) && p.konto === StønadskontoType.ForeldrepengerFørFødsel\r\n    );\r\n    return periode ? (periode as ForeldrepengerFørFødselUttaksperiode) : undefined;\r\n}\r\n\r\nfunction getFørsteUttaksdagEtterSistePeriode(perioder: Periode[]): Date | undefined {\r\n    if (perioder.length === 0) {\r\n        return undefined;\r\n    }\r\n    return Uttaksdagen(perioder[perioder.length - 1].tidsperiode.tom).neste();\r\n}\r\n\r\nexport const erPeriodeMedFerieForForelder = (periode: Periode, forelder: Forelder): boolean => {\r\n    return isUtsettelsePgaFerie(periode) && periode.forelder === forelder;\r\n};\r\n\r\nfunction finnSisteInfoperiode(perioder: Periode[]) {\r\n    return perioder\r\n        .filter((p) => isInfoPeriode(p))\r\n        .sort(sorterPerioder)\r\n        .reverse()[0];\r\n}\r\n","import dayjs from 'dayjs';\r\nimport DateHolidays, { Holiday } from 'date-holidays';\r\nimport { Tidsperiode } from 'app/types/Tidsperiode';\r\n\r\nconst holidays = new DateHolidays('no');\r\n\r\nexport const getOffentligeFridager = (tidsperiode: Tidsperiode): Holiday[] => {\r\n    const fraÅr = tidsperiode.fom.getFullYear();\r\n    const tilÅr = tidsperiode.tom.getFullYear();\r\n    let days = [] as Holiday[];\r\n    if (fraÅr === tilÅr) {\r\n        days = holidays.getHolidays(fraÅr);\r\n    } else {\r\n        let år = fraÅr;\r\n        while (år <= tilÅr) {\r\n            days = [...days, ...holidays.getHolidays(år)];\r\n            år++;\r\n        }\r\n    }\r\n    const start = dayjs(tidsperiode.fom).subtract(24, 'hours');\r\n    const slutt = dayjs(tidsperiode.tom).add(24, 'hours');\r\n    return days\r\n        .filter((d) => d.type === 'public')\r\n        .filter((d) => dayjs(d.date).isAfter(start, 'day') && dayjs(d.date).isBefore(slutt, 'day'));\r\n};\r\n\r\nexport const getOffentligeFridagerIMåned = (måned: Date): Holiday[] => {\r\n    const days: Holiday[] = holidays.getHolidays(måned.getFullYear());\r\n    const start = dayjs(måned).startOf('month');\r\n    const slutt = dayjs(måned).endOf('month');\r\n    return days\r\n        .filter((d) => d.type === 'public')\r\n        .filter((d) => dayjs(d.date).isAfter(start, 'day') && dayjs(d.date).isBefore(slutt, 'day'));\r\n};\r\n\r\n/* Default - hente ut helligdager i default tidsrom */\r\nexport const fridager = getOffentligeFridager({\r\n    fom: new Date(dayjs().subtract(4, 'years').toDate()),\r\n    tom: new Date(dayjs().add(4, 'years').toDate()),\r\n});\r\n\r\nexport const erFridag = (dato: Date): string | undefined => {\r\n    const fridag = fridager.find((fr) => dayjs(new Date(fr.date)).isSame(dato, 'day'));\r\n    return fridag ? fridag.name : undefined;\r\n};\r\n","import dayjs from 'dayjs';\r\nimport { IntlShape } from 'react-intl';\r\nimport { Holiday } from 'date-holidays';\r\nimport { getOffentligeFridager } from 'app/utils/fridagerUtils';\r\nimport { formaterDatoUtenDag, dateIsSameOrBefore, dateIsSameOrAfter } from 'app/utils/dateUtils';\r\nimport { Uttaksdagen } from './Uttaksdagen';\r\nimport { TidsperiodeDate } from '@navikt/fp-common';\r\n\r\nexport const Tidsperioden = (tidsperiode: TidsperiodeDate) => ({\r\n    erLik: (tidsperiode2: TidsperiodeDate) => erTidsperioderLike(tidsperiode, tidsperiode2),\r\n    erOmsluttetAv: (tidsperiode2: TidsperiodeDate) => erTidsperiodeOmsluttetAvTidsperiode(tidsperiode, tidsperiode2),\r\n    erUtenfor: (tidsperiode2: TidsperiodeDate) => erTidsperiodeUtenforTidsperiode(tidsperiode, tidsperiode2),\r\n    getAntallUttaksdager: () => getAntallUttaksdagerITidsperiode(tidsperiode),\r\n    getAntallFridager: () => getUttaksdagerSomErFridager(tidsperiode).length,\r\n    setStartdato: (fom: Date) => (isValidTidsperiode(tidsperiode) ? flyttTidsperiode(tidsperiode, fom) : tidsperiode),\r\n    setUttaksdager: (uttaksdager: number) =>\r\n        tidsperiode.fom ? getTidsperiode(tidsperiode.fom, uttaksdager) : tidsperiode,\r\n    formaterString: (intl: IntlShape) => tidsperiodeToString(tidsperiode, intl),\r\n    formaterStringKort: (intl: IntlShape) => tidsperiodeToStringKort(tidsperiode, intl),\r\n    erFomEllerEtterDato: (dato: Date) => erTidsperiodeFomEllerEtterDato(tidsperiode, dato),\r\n    erFørDato: (dato: Date) => erTidsperiodeFomEllerEtterDato(tidsperiode, dato) === false,\r\n    inneholderDato: (dato: Date) => inneholderTidsperiodeDato(tidsperiode, dato),\r\n});\r\n\r\nfunction inneholderTidsperiodeDato(tidsperiode: TidsperiodeDate, dato: Date): boolean {\r\n    if (!tidsperiode.fom || !tidsperiode.tom) {\r\n        return false;\r\n    }\r\n\r\n    return dayjs(dato).isBetween(tidsperiode.fom, tidsperiode.tom, 'days', '[]');\r\n}\r\n\r\nexport function isValidTidsperiode(tidsperiode: any): tidsperiode is TidsperiodeDate {\r\n    return (\r\n        tidsperiode.fom !== undefined &&\r\n        tidsperiode.tom !== undefined &&\r\n        dayjs(tidsperiode.fom).isSameOrBefore(tidsperiode.tom, 'day')\r\n    );\r\n}\r\n\r\nexport function resetTidsperiodeTomIfBeforeFom(tidsperiode: TidsperiodeDate): TidsperiodeDate {\r\n    return {\r\n        fom: tidsperiode.fom,\r\n        tom:\r\n            tidsperiode.fom && tidsperiode.tom && dayjs(tidsperiode.fom).isAfter(tidsperiode.tom, 'day')\r\n                ? tidsperiode.fom\r\n                : tidsperiode.tom,\r\n    };\r\n}\r\n\r\nexport function getValidTidsperiode(tidsperiode: TidsperiodeDate | undefined): TidsperiodeDate | undefined {\r\n    if (tidsperiode === undefined) {\r\n        return undefined;\r\n    }\r\n    if (isValidTidsperiode(tidsperiode)) {\r\n        return tidsperiode;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function getTidsperiode(fom: Date, uttaksdager: number): TidsperiodeDate {\r\n    if (!Uttaksdagen(fom).erUttaksdag()) {\r\n        throw new Error('FOM er ikke en uttaksdag');\r\n    }\r\n    return {\r\n        fom,\r\n        tom: Uttaksdagen(fom).leggTil(uttaksdager - 1),\r\n    };\r\n}\r\n\r\nexport function datoErInnenforTidsperiode(dato: Date, tidsperiode: TidsperiodeDate): boolean {\r\n    const { fom, tom } = tidsperiode;\r\n    if (!fom || !tom) {\r\n        return false;\r\n    }\r\n    return dayjs(dato).isBetween(fom, tom, 'days', '[]');\r\n}\r\n\r\nfunction getAntallUttaksdagerITidsperiode(tidsperiode: TidsperiodeDate): number {\r\n    if (!isValidTidsperiode(tidsperiode)) {\r\n        return 0;\r\n    }\r\n    let fom = dayjs(tidsperiode.fom);\r\n    const tom = dayjs(tidsperiode.tom);\r\n    let antall = 0;\r\n    while (fom.isSameOrBefore(tom, 'day')) {\r\n        if (Uttaksdagen(fom.toDate()).erUttaksdag()) {\r\n            antall++;\r\n        }\r\n        fom = fom.add(24, 'hours');\r\n    }\r\n    return antall;\r\n}\r\n\r\nfunction getUttaksdagerSomErFridager(tidsperiode: TidsperiodeDate): Holiday[] {\r\n    return isValidTidsperiode(tidsperiode)\r\n        ? getOffentligeFridager(tidsperiode).filter((dag) => Uttaksdagen(new Date(dag.date)).erUttaksdag())\r\n        : [];\r\n}\r\n\r\nfunction flyttTidsperiode(tidsperiode: TidsperiodeDate, fom: Date): TidsperiodeDate {\r\n    const uttaksdager = getAntallUttaksdagerITidsperiode(tidsperiode);\r\n    return getTidsperiode(fom, uttaksdager);\r\n}\r\n\r\nexport function erTidsperioderLike(t1: TidsperiodeDate, t2: TidsperiodeDate) {\r\n    if (isValidTidsperiode(t1) && isValidTidsperiode(t2)) {\r\n        return dayjs(t1.fom).isSame(t2.fom, 'day') && dayjs(t1.tom).isSame(t2.tom, 'day');\r\n    }\r\n    return JSON.stringify(t1) === JSON.stringify(t2);\r\n}\r\n\r\nfunction erTidsperiodeOmsluttetAvTidsperiode(tidsperiode1: TidsperiodeDate, tidsperiode2: TidsperiodeDate): boolean {\r\n    if (isValidTidsperiode(tidsperiode1) && isValidTidsperiode(tidsperiode2)) {\r\n        return (\r\n            dateIsSameOrAfter(tidsperiode1.fom, tidsperiode2.fom) &&\r\n            dateIsSameOrBefore(tidsperiode1.tom, tidsperiode2.tom)\r\n        );\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction erTidsperiodeUtenforTidsperiode(tidsperiode1: TidsperiodeDate, tidsperiode2: TidsperiodeDate): boolean {\r\n    if (isValidTidsperiode(tidsperiode1) && isValidTidsperiode(tidsperiode2)) {\r\n        return (\r\n            dayjs(tidsperiode1.fom).isAfter(tidsperiode2.tom, 'day') ||\r\n            dayjs(tidsperiode1.tom).isBefore(tidsperiode2.fom, 'day')\r\n        );\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction tidsperiodeToString(tidsperiode: TidsperiodeDate, intl: IntlShape) {\r\n    const { fom, tom } = tidsperiode;\r\n    if (fom && tom && dayjs(fom).isSame(tom, 'day')) {\r\n        return formaterDatoUtenDag(fom ? fom : tom);\r\n    }\r\n    return intl.formatMessage(\r\n        { id: 'tidsperiode' },\r\n        {\r\n            fom: fom ? formaterDatoUtenDag(fom) : '',\r\n            tom: tom ? formaterDatoUtenDag(tom) : '',\r\n        }\r\n    );\r\n}\r\n\r\nfunction tidsperiodeToStringKort(tidsperiode: TidsperiodeDate, intl: IntlShape) {\r\n    const { fom, tom } = tidsperiode;\r\n    if (fom && tom && dayjs(fom).isSame(tom, 'day')) {\r\n        return formaterDatoUtenDag(fom ? fom : tom);\r\n    }\r\n    return intl.formatMessage(\r\n        { id: 'tidsperiode.kort' },\r\n        {\r\n            fom: fom ? formaterDatoUtenDag(fom) : '',\r\n            tom: tom ? formaterDatoUtenDag(tom) : '',\r\n        }\r\n    );\r\n}\r\n\r\nconst erTidsperiodeFomEllerEtterDato = (tidsperiode: TidsperiodeDate, dato: Date): boolean => {\r\n    return (\r\n        tidsperiode.fom !== undefined &&\r\n        tidsperiode.tom !== undefined &&\r\n        dayjs(tidsperiode.fom).isSameOrAfter(dato, 'day') &&\r\n        dayjs(tidsperiode.tom).isSameOrAfter(dato, 'day')\r\n    );\r\n};\r\n","import isoWeek from 'dayjs/plugin/isoWeek';\r\nimport dayjs from 'dayjs';\r\nimport { Tidsperioden } from './Tidsperioden';\r\n\r\ndayjs.extend(isoWeek);\r\n\r\n/**\r\n * Wrapper en dato med uttaksdager-funksjonalitet\r\n * @param dato\r\n */\r\nexport const Uttaksdagen = (dato: Date) => ({\r\n    erUttaksdag: (): boolean => erUttaksdag(dato),\r\n    forrige: (): Date => getUttaksdagFørDato(dato),\r\n    neste: (): Date => getUttaksdagEtterDato(dato),\r\n    denneEllerNeste: (): Date => getUttaksdagFraOgMedDato(dato),\r\n    denneEllerForrige: (): Date => getUttaksdagTilOgMedDato(dato),\r\n    getUttaksdagerFremTilDato: (tildato: Date) => getUttaksdagerFremTilDato(dato, tildato),\r\n    leggTil: (uttaksdager: number): Date => {\r\n        if (uttaksdager < 0) {\r\n            return trekkUttaksdagerFraDato(dato, uttaksdager);\r\n        } else if (uttaksdager > 0) {\r\n            return leggUttaksdagerTilDato(dato, uttaksdager);\r\n        }\r\n        return dato;\r\n    },\r\n    trekkFra: (uttaksdager: number): Date => trekkUttaksdagerFraDato(dato, uttaksdager),\r\n});\r\n\r\nfunction getUkedag(dato: Date): number {\r\n    return dayjs(dato).isoWeekday();\r\n}\r\n\r\nexport function erUttaksdag(dato: Date): boolean {\r\n    return getUkedag(dato) !== 6 && getUkedag(dato) !== 7;\r\n}\r\n\r\nfunction getUttaksdagFørDato(dato: Date): Date {\r\n    return getUttaksdagTilOgMedDato(dayjs(dato).subtract(24, 'hours').toDate());\r\n}\r\n\r\n/**\r\n * Sjekker om dato er en ukedag, dersom ikke finner den foregående fredag\r\n * @param dato\r\n */\r\nfunction getUttaksdagTilOgMedDato(dato: Date): Date {\r\n    switch (getUkedag(dato)) {\r\n        case 6:\r\n            return dayjs(dato).subtract(24, 'hours').toDate();\r\n        case 7:\r\n            return dayjs(dato).subtract(48, 'hours').toDate();\r\n        default:\r\n            return dato;\r\n    }\r\n}\r\n\r\n/**\r\n * Første gyldige uttaksdag etter dato\r\n * @param termin\r\n */\r\nfunction getUttaksdagEtterDato(dato: Date): Date {\r\n    return getUttaksdagFraOgMedDato(dayjs(dato).add(24, 'hours').toDate());\r\n}\r\n\r\n/**\r\n * Sjekker om dato er en ukedag, dersom ikke finner den nærmeste påfølgende mandag\r\n * @param dato\r\n */\r\nfunction getUttaksdagFraOgMedDato(dato: Date): Date {\r\n    switch (getUkedag(dato)) {\r\n        case 6:\r\n            return dayjs(dato).add(48, 'hours').toDate();\r\n        case 7:\r\n            return dayjs(dato).add(24, 'hours').toDate();\r\n        default:\r\n            return dato;\r\n    }\r\n}\r\n\r\n/**\r\n * Legger uttaksdager til en dato og returnerer ny dato\r\n * @param dato\r\n * @param uttaksdager\r\n */\r\nfunction leggUttaksdagerTilDato(dato: Date, uttaksdager: number): Date {\r\n    if (erUttaksdag(dato) === false) {\r\n        throw new Error('leggUttaksdagerTilDato: Dato må være uttaksdag');\r\n    }\r\n    let nyDato = dato;\r\n    let dagteller = 0;\r\n    let uttaksdageteller = 0;\r\n    while (uttaksdageteller <= uttaksdager) {\r\n        const tellerdato = dayjs(dato)\r\n            .add(dagteller++ * 24, 'hours')\r\n            .toDate();\r\n        if (erUttaksdag(tellerdato)) {\r\n            nyDato = tellerdato;\r\n            uttaksdageteller++;\r\n        }\r\n    }\r\n    return nyDato;\r\n}\r\n\r\n/**\r\n * Trekker uttaksdager fra en dato og returnerer ny dato\r\n * @param dato\r\n * @param uttaksdager\r\n */\r\nfunction trekkUttaksdagerFraDato(dato: Date, uttaksdager: number): Date {\r\n    if (erUttaksdag(dato) === false) {\r\n        throw new Error('trekkUttaksdagerFraDato: Dato må være uttaksdag');\r\n    }\r\n    let nyDato = dato;\r\n    let dagteller = 0;\r\n    let uttaksdageteller = 0;\r\n    while (uttaksdageteller < Math.abs(uttaksdager)) {\r\n        const tellerdato = dayjs(dato)\r\n            .add(--dagteller * 24, 'hours')\r\n            .toDate();\r\n        if (erUttaksdag(tellerdato)) {\r\n            nyDato = tellerdato;\r\n            uttaksdageteller++;\r\n        }\r\n    }\r\n    return nyDato;\r\n}\r\n\r\n/**\r\n * Finner antall uttaksdager som er mellom to datoer. Dvs. fra og med startdato, og\r\n * frem til sluttdato (ikke til og med)\r\n * @param fra\r\n * @param til\r\n */\r\nfunction getUttaksdagerFremTilDato(fom: Date, tom: Date): number {\r\n    if (dayjs(fom).isSame(tom, 'day')) {\r\n        return 0;\r\n    }\r\n    if (dayjs(fom).isBefore(tom, 'day')) {\r\n        return Tidsperioden({ fom, tom }).getAntallUttaksdager() - 1;\r\n    }\r\n    return (\r\n        -1 *\r\n        (Tidsperioden({\r\n            fom: tom,\r\n            tom: fom,\r\n        }).getAntallUttaksdager() -\r\n            1)\r\n    );\r\n}\r\n","import { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\r\n\r\nexport const getVelgbareStønadskontotyper = (stønadskontoTyper: TilgjengeligStønadskonto[]): StønadskontoType[] =>\r\n    stønadskontoTyper\r\n        .filter(\r\n            (kontoType) =>\r\n                kontoType.konto === StønadskontoType.Flerbarnsdager ||\r\n                kontoType.konto === StønadskontoType.Fellesperiode ||\r\n                kontoType.konto === StønadskontoType.Fedrekvote ||\r\n                kontoType.konto === StønadskontoType.Mødrekvote ||\r\n                kontoType.konto === StønadskontoType.Foreldrepenger ||\r\n                kontoType.konto === StønadskontoType.AktivitetsfriKvote\r\n        )\r\n        .map((kontoType) => kontoType.konto);\r\n\r\nexport const getStønadskontoSortOrder = (konto: StønadskontoType): number => stønadskontoSortOrder[konto];\r\n\r\nexport const stønadskontoSortOrder = {\r\n    [StønadskontoType.ForeldrepengerFørFødsel]: 1,\r\n    [StønadskontoType.Mødrekvote]: 2,\r\n    [StønadskontoType.Fedrekvote]: 3,\r\n    [StønadskontoType.Fellesperiode]: 4,\r\n    [StønadskontoType.Foreldrepenger]: 5,\r\n    [StønadskontoType.Flerbarnsdager]: 6,\r\n    [StønadskontoType.AktivitetsfriKvote]: 7,\r\n};\r\n\r\nexport const getAntallUker = (kontoer: TilgjengeligStønadskonto[]): number => {\r\n    return kontoer\r\n        .filter((konto: TilgjengeligStønadskonto) => konto.konto !== StønadskontoType.Flerbarnsdager)\r\n        .reduce((sum: number, konto: TilgjengeligStønadskonto) => sum + konto.dager / 5, 0);\r\n};\r\n\r\nexport const getAntallUkerMødrekvote = (kontoer: TilgjengeligStønadskonto[]): number => {\r\n    return kontoer\r\n        .filter((konto: TilgjengeligStønadskonto) => konto.konto === StønadskontoType.Mødrekvote)\r\n        .reduce((sum: number, konto: TilgjengeligStønadskonto) => sum + konto.dager / 5, 0);\r\n};\r\n\r\nexport const getAntallUkerFedrekvote = (kontoer: TilgjengeligStønadskonto[]): number => {\r\n    return kontoer\r\n        .filter((konto: TilgjengeligStønadskonto) => konto.konto === StønadskontoType.Fedrekvote)\r\n        .reduce((sum: number, konto: TilgjengeligStønadskonto) => sum + konto.dager / 5, 0);\r\n};\r\n\r\nexport const getAntallUkerFellesperiode = (kontoer: TilgjengeligStønadskonto[]): number => {\r\n    return kontoer\r\n        .filter((konto: TilgjengeligStønadskonto) => konto.konto === StønadskontoType.Fellesperiode)\r\n        .reduce((sum: number, konto: TilgjengeligStønadskonto) => sum + konto.dager / 5, 0);\r\n};\r\n","import dayjs from 'dayjs';\r\nimport { Uttaksdagen } from './Uttaksdagen';\r\nimport uttaksConstants from 'app/constants';\r\nimport { DatepickerLimitations } from 'nav-datovelger';\r\nimport { dateToISOString } from '@navikt/sif-common-formik/lib';\r\n\r\nfunction sisteMuligePermisjonsdag(familiehendelsedato: Date): Date {\r\n    const startDato = Uttaksdagen(familiehendelsedato).denneEllerNeste();\r\n    return Uttaksdagen(\r\n        dayjs(startDato).add(uttaksConstants.MAKS_PERMISJONSLENGDE_I_ÅR, 'years').toDate()\r\n    ).denneEllerNeste();\r\n}\r\n\r\nconst konverterMinOgMaxDatoerTilString = (minDate: Date, maxDate: Date) => ({\r\n    minDate: dateToISOString(minDate),\r\n    maxDate: dateToISOString(maxDate),\r\n});\r\n\r\nconst defaultPermisjonsperiodeAvgrensning = (familiehendelsesdato: Date): DatepickerLimitations => {\r\n    const minDato = Uttaksdagen(familiehendelsesdato).denneEllerNeste();\r\n    const maksDato = sisteMuligePermisjonsdag(familiehendelsesdato);\r\n    return {\r\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\r\n        weekendsNotSelectable: true,\r\n    };\r\n};\r\n\r\nconst startdatoFørTermin = (familiehendelsesdato: string): DatepickerLimitations => {\r\n    const maksDato = Uttaksdagen(dayjs(familiehendelsesdato).toDate()).forrige();\r\n    const minDato = Uttaksdagen(maksDato).trekkFra(uttaksConstants.MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1);\r\n    return {\r\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\r\n        weekendsNotSelectable: true,\r\n    };\r\n};\r\n\r\nconst startdatoFørTerminForeldrepengerFørFødselKonto = (familiehendelsesdato: string): DatepickerLimitations => {\r\n    const maksDato = Uttaksdagen(dayjs(familiehendelsesdato).toDate()).forrige();\r\n    const minDato = Uttaksdagen(maksDato).trekkFra(uttaksConstants.ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1);\r\n    return {\r\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\r\n        weekendsNotSelectable: true,\r\n    };\r\n};\r\n\r\nconst ekstrauttakFørFødsel = (familiehendelsesdato: string): DatepickerLimitations => {\r\n    const sisteDagFørFødsel = Uttaksdagen(dayjs(familiehendelsesdato).toDate()).forrige();\r\n    const minDato = Uttaksdagen(sisteDagFørFødsel).trekkFra(\r\n        uttaksConstants.MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1\r\n    );\r\n    const maksDato = Uttaksdagen(sisteDagFørFødsel).trekkFra(\r\n        uttaksConstants.ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1\r\n    );\r\n    return {\r\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\r\n        weekendsNotSelectable: true,\r\n    };\r\n};\r\n\r\nconst startdatoPermisjonAleneomsorgFarMedmor = (\r\n    datoForAleneomsorg: string,\r\n    familiehendelsesdato: string\r\n): DatepickerLimitations => {\r\n    const minDato = Uttaksdagen(dayjs(datoForAleneomsorg).toDate()).denneEllerNeste();\r\n    const maksDato = sisteMuligePermisjonsdag(dayjs(familiehendelsesdato).toDate());\r\n    return {\r\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\r\n        weekendsNotSelectable: true,\r\n    };\r\n};\r\n\r\nconst startdatoPermisjonAdopsjon = (familiehendelsesdato: string): DatepickerLimitations => {\r\n    return defaultPermisjonsperiodeAvgrensning(dayjs(familiehendelsesdato).toDate());\r\n};\r\n\r\nconst morsSisteUttaksdag = (familiehendelsesdato: string): DatepickerLimitations => {\r\n    return defaultPermisjonsperiodeAvgrensning(dayjs(familiehendelsesdato).toDate());\r\n};\r\n\r\nconst startdatoPermisjonFarMedmor = (familiehendelsesdato: string): DatepickerLimitations => {\r\n    return defaultPermisjonsperiodeAvgrensning(dayjs(familiehendelsesdato).toDate());\r\n};\r\n\r\nexport const uttaksplanDatoavgrensninger = {\r\n    startdatoFørTermin,\r\n    morsSisteUttaksdag,\r\n    startdatoPermisjonFarMedmor,\r\n    startdatoPermisjonAdopsjon,\r\n    startdatoPermisjonAleneomsorgFarMedmor,\r\n    startdatoFørTerminForeldrepengerFørFødselKonto,\r\n    ekstrauttakFørFødsel,\r\n};\r\n","import { AttachmentType } from './AttachmentType';\r\nimport { Skjemanummer } from './Skjemanummer';\r\n\r\nexport enum InnsendingsType {\r\n    SEND_SENERE = 'SEND_SENERE',\r\n}\r\n\r\nexport interface Attachment {\r\n    id: string;\r\n    filename: string;\r\n    filesize: number;\r\n    file: File;\r\n    url?: string;\r\n    uuid?: string;\r\n    pending: boolean;\r\n    uploaded: boolean;\r\n    type: AttachmentType;\r\n    skjemanummer: Skjemanummer;\r\n    innsendingsType?: InnsendingsType;\r\n    error?: any;\r\n    beskrivelse?: string;\r\n}\r\n","export enum AttachmentType {\r\n    OMSORGSOVERTAKELSE = 'omsorgsovertakelse',\r\n    ADOPSJONSVEDTAK = 'adopsjonsvedtak',\r\n    TERMINBEKREFTELSE = 'terminbekreftelse',\r\n    FØDSELSATTEST = 'fødselsattest',\r\n    ANNEN_INNTEKT = 'anneninntektDokumentasjon',\r\n    UTSETTELSE_SYKDOM = 'utsettelseSykdomUttaksplan',\r\n    MORS_AKTIVITET_DOKUMENTASJON = 'morsaktivitetdokumentasjon',\r\n    OVERFØRING_KVOTE = 'dokumentasjonOverføringAvKvote',\r\n    ALENEOMSORG = 'dokumentasjonAvAleneomsorg',\r\n    SEN_ENDRING = 'senEndring',\r\n    HV_ØVELSE = 'hvØvelse',\r\n    NAV_TILTAK = 'navTiltak',\r\n}\r\n","export enum Dekningsgrad {\r\n    ÅTTI_PROSENT = '80',\r\n    HUNDRE_PROSENT = '100',\r\n}\r\n","export enum Forelder {\r\n    mor = 'mor',\r\n    farMedmor = 'farMedmor',\r\n}\r\n","export enum Skjemanummer {\r\n    ANNET = 'I000060',\r\n    BEKREFTELSE_DELTAR_KVALIFISERINGSPROGRAM = 'I000051',\r\n    BEKREFTELSE_FRA_STUDIESTED = 'I000061',\r\n    DOKUMENTASJON_AV_TERMIN_ELLER_FØDSEL = 'I000041',\r\n    DOK_AV_ALENEOMSORG = 'I000110',\r\n    DOK_BEGRUNNELSE_SØKE_TILBAKE_I_TID = 'I000111',\r\n    DOK_DELTAKELSE_I_INTRODUKSJONSPROGRAMMET = 'I000112',\r\n    DOK_INNLEGGELSE = 'I000037',\r\n    DOK_MILITÆR_SILVIL_TJENESTE = 'I000039',\r\n    DOK_MORS_UTDANNING_ARBEID_SYKDOM = 'I000038',\r\n    DOK_OVERFØRING_FOR_SYK = 'I000023',\r\n    ETTERLØNN_ELLER_SLUTTVEDERLAG = 'I000044',\r\n    INNTEKTSOPPLYSNINGER_FRILANS_ELLER_SELVSTENDIG = 'I000007',\r\n    OMSORGSOVERTAKELSESDATO = 'I000042',\r\n    TERMINBEKREFTELSE = 'I000062',\r\n    HV_ØVELSE = 'I000116',\r\n    NAV_TILTAK = 'I000117',\r\n}\r\n","import Barn, { isFødtBarn, isUfødtBarn } from 'app/context/types/Barn';\r\nimport { RegistrertBarn } from 'app/types/Person';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const getFamiliehendelsedato = (barn: Barn): string => {\r\n    if (isFødtBarn(barn)) {\r\n        return barn.fødselsdatoer[0];\r\n    }\r\n    if (isUfødtBarn(barn)) {\r\n        return barn.termindato;\r\n    }\r\n\r\n    return barn.adopsjonsdato;\r\n};\r\n\r\nexport const getRegistrertBarnOmDetFinnes = (\r\n    barn: Barn,\r\n    registrerteBarn: RegistrertBarn[]\r\n): RegistrertBarn | undefined => {\r\n    return registrerteBarn.length > 0 && isFødtBarn(barn)\r\n        ? registrerteBarn.find((regBarn) => dayjs(regBarn.fødselsdato).isSame(barn.fødselsdatoer[0]))\r\n        : undefined;\r\n};\r\n","import dayjs from 'dayjs';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport { IntlShape } from 'react-intl';\r\nimport { formatDateExtended, hasValue, intlUtils, Tidsperiode, TidsperiodeDate } from '@navikt/fp-common';\r\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\r\nimport { RegistrertBarn } from 'app/types/Person';\r\nimport { dateToISOString } from '@navikt/sif-common-formik/lib';\r\nimport { Alder } from 'app/types/Alder';\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(isBetween);\r\ndayjs.extend(minMax);\r\n\r\nexport const date4YearsAgo = dayjs().subtract(4, 'year').startOf('day').toDate();\r\n\r\nexport const getDateFromDateString = (dateString: string | undefined): Date | undefined => {\r\n    if (dateString === undefined) {\r\n        return undefined;\r\n    }\r\n    if (isISODateString(dateString)) {\r\n        return new Date(dateString);\r\n    }\r\n    return undefined;\r\n};\r\n\r\nconst dateIsWithinRange = (date: Date, minDate: Date, maxDate: Date) => {\r\n    return dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\r\n};\r\n\r\nconst validateDateInRange = (\r\n    intl: IntlShape,\r\n    date: Date | undefined,\r\n    minDate: Date,\r\n    maxDate: Date,\r\n    isFomDate: boolean\r\n) => {\r\n    if (date === undefined) {\r\n        if (isFomDate) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\r\n        }\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (!dateIsWithinRange(date, minDate, maxDate)) {\r\n        if (isFomDate) {\r\n            return intlUtils(intl, 'valideringsfeil.dateOutsideRange.fom', {\r\n                fom: formatDateExtended(minDate),\r\n                tom: formatDateExtended(maxDate),\r\n            });\r\n        }\r\n\r\n        return intlUtils(intl, 'valideringsfeil.dateOutsideRange.tom', {\r\n            fom: formatDateExtended(minDate),\r\n            tom: formatDateExtended(maxDate),\r\n        });\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nconst validateFromDateInRange = (\r\n    intl: IntlShape,\r\n    date: Date | undefined,\r\n    minDate: Date,\r\n    maxDate: Date,\r\n    errorKey: string,\r\n    toDate?: Date\r\n): SkjemaelementFeil => {\r\n    const error = validateDateInRange(intl, date, minDate, maxDate, true);\r\n\r\n    if (error !== undefined) {\r\n        return error;\r\n    }\r\n\r\n    if (toDate && dayjs(date).isAfter(toDate, 'day')) {\r\n        return intlUtils(intl, errorKey);\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nconst validateToDateInRange = (\r\n    intl: IntlShape,\r\n    date: Date | undefined,\r\n    minDate: Date,\r\n    maxDate: Date,\r\n    errorKey: string,\r\n    fromDate?: Date\r\n): SkjemaelementFeil => {\r\n    const error = validateDateInRange(intl, date, minDate, maxDate, false);\r\n\r\n    if (error !== undefined) {\r\n        return error;\r\n    }\r\n\r\n    if (fromDate && dayjs(date).isBefore(fromDate, 'day')) {\r\n        return intlUtils(intl, errorKey);\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const dateRangeValidation = {\r\n    validateToDateInRange,\r\n    validateFromDateInRange,\r\n};\r\n\r\nexport const isDateABeforeDateB = (a: string, b: string): boolean => {\r\n    if (!hasValue(a) || !hasValue(b) || !isISODateString(a) || !isISODateString(b)) {\r\n        return false;\r\n    }\r\n\r\n    if (dayjs(a).isBefore(b, 'day')) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const isDateInTheFuture = (date: string): boolean => {\r\n    if (dayjs().isBefore(date)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const velgEldsteBarn = (registrerteBarn: RegistrertBarn[], valgteBarn: string[]) => {\r\n    const filteredBarn = registrerteBarn.filter((regBarn) => valgteBarn.includes(regBarn.fnr));\r\n\r\n    return filteredBarn.sort((a, b) =>\r\n        isDateABeforeDateB(dateToISOString(a.fødselsdato)!, dateToISOString(b.fødselsdato)!) ? 1 : -1\r\n    )[filteredBarn.length - 1];\r\n};\r\n\r\ntype VarighetFormat = 'full' | 'normal';\r\n\r\nexport const getUkerOgDagerFromDager = (dager: number): { uker: number; dager: number } => {\r\n    const uker = Math.floor(dager / 5);\r\n    return {\r\n        dager: dager - uker * 5,\r\n        uker,\r\n    };\r\n};\r\n\r\nexport const getVarighetString = (antallDager: number, intl: IntlShape, format: VarighetFormat = 'full'): string => {\r\n    const { uker, dager } = getUkerOgDagerFromDager(Math.abs(antallDager));\r\n    const dagerStr = intl.formatMessage(\r\n        { id: 'varighet.dager' },\r\n        {\r\n            dager,\r\n        }\r\n    );\r\n    if (uker === 0) {\r\n        return dagerStr;\r\n    }\r\n    const ukerStr = intl.formatMessage({ id: 'varighet.uker' }, { uker });\r\n    if (dager > 0) {\r\n        return `${ukerStr}${intl.formatMessage({\r\n            id: `varighet.separator--${format}`,\r\n        })}${dagerStr}`;\r\n    }\r\n    return ukerStr;\r\n};\r\n\r\nexport const formaterDato = (dato: string | Date | undefined, datoformat?: string): string => {\r\n    return dayjs.utc(dato).format(datoformat || 'dddd D. MMMM YYYY');\r\n};\r\n\r\nexport const formaterDatoUtenDag = (dato: string | Date): string => {\r\n    return dayjs.utc(dato).format('D. MMMM YYYY');\r\n};\r\n\r\ntype DateValue = Date | undefined;\r\n\r\nexport const dateIsSameOrBefore = (date: DateValue, otherDate: DateValue): boolean => {\r\n    if (date && otherDate) {\r\n        return dayjs(date).isSameOrBefore(otherDate, 'day');\r\n    }\r\n    return true;\r\n};\r\nexport const dateIsSameOrAfter = (date: DateValue, otherDate: DateValue): boolean => {\r\n    if (date && otherDate) {\r\n        return dayjs(date).isSameOrAfter(otherDate, 'day');\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const formaterDatoKompakt = (dato: Date): string => {\r\n    return formaterDato(dato, 'DD.MM.YYYY');\r\n};\r\n\r\nexport const findEldsteDato = (dateArray: Date[]): DateValue => {\r\n    if (dateArray.length > 0) {\r\n        return dayjs.min(dateArray.map((date: Date) => dayjs(date))).toDate();\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const getAlderFraDato = (fødselsdato: Date): Alder => {\r\n    const idag = dayjs();\r\n    const dato = dayjs(fødselsdato);\r\n\r\n    const år = idag.diff(dato, 'year');\r\n    dato.add(år, 'years');\r\n    const måneder = idag.diff(dato, 'months');\r\n    dato.add(måneder, 'months');\r\n    const dager = idag.diff(dato, 'days');\r\n\r\n    return {\r\n        år,\r\n        måneder,\r\n        dager,\r\n    };\r\n};\r\n\r\nexport const convertTidsperiodeToTidsperiodeDate = (tidsperiode: Tidsperiode): TidsperiodeDate => {\r\n    return {\r\n        fom: dayjs(tidsperiode.fom).toDate(),\r\n        tom: dayjs(tidsperiode.tom).toDate(),\r\n    };\r\n};\r\n\r\nexport const getRelevantFamiliehendelseDato = (\r\n    termindato: string | undefined,\r\n    fødselsdato: string | undefined,\r\n    omsorgsovertakelsesdato: string | undefined\r\n): string => {\r\n    if (fødselsdato !== undefined) {\r\n        return fødselsdato;\r\n    } else {\r\n        return termindato !== undefined ? termindato : omsorgsovertakelsesdato!;\r\n    }\r\n};\r\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\r\n\r\nexport const convertBooleanOrUndefinedToYesOrNo = (value: boolean | undefined): YesOrNo => {\r\n    if (value === true) {\r\n        return YesOrNo.YES;\r\n    }\r\n\r\n    if (value === false) {\r\n        return YesOrNo.NO;\r\n    }\r\n\r\n    return YesOrNo.UNANSWERED;\r\n};\r\n\r\nexport const convertYesOrNoOrUndefinedToBoolean = (value: YesOrNo | undefined) => {\r\n    if (value === YesOrNo.YES) {\r\n        return true;\r\n    }\r\n\r\n    if (value === YesOrNo.UNANSWERED) {\r\n        return undefined;\r\n    }\r\n\r\n    return false;\r\n};\r\n","import { Dekningsgrad } from 'app/types/Dekningsgrad';\r\n\r\nexport const getDekningsgradFromString = (dekningsgrad: string | undefined) => {\r\n    if (!dekningsgrad) {\r\n        return Dekningsgrad.HUNDRE_PROSENT;\r\n    }\r\n\r\n    return dekningsgrad === Dekningsgrad.HUNDRE_PROSENT ? Dekningsgrad.HUNDRE_PROSENT : Dekningsgrad.ÅTTI_PROSENT;\r\n};\r\n","import Bytes from 'bytes';\r\nimport { Attachment } from 'app/types/Attachment';\r\n\r\nexport const assertUnreachable = (_x: never): never => {\r\n    throw new Error('This should never happen');\r\n};\r\n\r\nexport const bytesString = (bytes: number): string => {\r\n    return Bytes(bytes, {\r\n        unitSeparator: ' ',\r\n        thousandsSeparator: ' ',\r\n        decimalPlaces: 1,\r\n        fixedDecimals: false,\r\n    });\r\n};\r\n\r\nexport const deleteAttachment = (attachments: Attachment[], deleted: Attachment): Attachment[] => {\r\n    return attachments.filter((att) => att !== deleted);\r\n};\r\n","import { useHistory } from 'react-router';\r\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport Api from 'app/api/api';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport { useCallback } from 'react';\r\n\r\nconst useAvbrytSøknad = () => {\r\n    const history = useHistory();\r\n    const { dispatch } = useForeldrepengesøknadContext();\r\n\r\n    const avbrytSøknadHandler = useCallback(() => {\r\n        logAmplitudeEvent('applikasjon-hendelse', {\r\n            app: 'foreldrepengesoknad',\r\n            team: 'foreldrepenger',\r\n            hendelse: 'avbrutt',\r\n        });\r\n\r\n        dispatch(actionCreator.avbrytSøknad());\r\n        Api.deleteStoredAppState();\r\n        history.push('/');\r\n    }, [history, dispatch]);\r\n\r\n    return avbrytSøknadHandler;\r\n};\r\n\r\nexport default useAvbrytSøknad;\r\n","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Api from 'app/api/api';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport SøknadRoutes from 'app/routes/routes';\r\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\r\nimport { ForeldrepengesøknadContextAction } from 'app/context/action/actionCreator';\r\n\r\nconst useOnValidSubmit = <T>(\r\n    submitHandler: (values: T) => ForeldrepengesøknadContextAction[],\r\n    nextRoute: SøknadRoutes\r\n) => {\r\n    const { dispatch, state } = useForeldrepengesøknadContext();\r\n    const history = useHistory();\r\n    const [harSubmitted, setSubmitted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (harSubmitted) {\r\n            Api.storeAppState(state);\r\n            history.push(nextRoute);\r\n        }\r\n    }, [harSubmitted, history, nextRoute, state]);\r\n\r\n    const setSubmitAndHandleSubmit = (values: T) => {\r\n        const actions = submitHandler(values);\r\n        const dispatchRouteChange =\r\n            nextRoute === SøknadRoutes.SØKNAD_SENDT ? undefined : dispatch(actionCreator.updateCurrentRoute(nextRoute));\r\n        Promise.all([dispatchRouteChange, ...actions.map((a) => dispatch(a))]).then(() => setSubmitted(true));\r\n    };\r\n\r\n    return setSubmitAndHandleSubmit;\r\n};\r\n\r\nexport default useOnValidSubmit;\r\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\n\r\nconst useSøkerinfo = (): Søkerinfo => {\r\n    const { state } = useForeldrepengesøknadContext();\r\n    return state.søkerinfo;\r\n};\r\n\r\nexport default useSøkerinfo;\r\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\r\nimport { Søknad } from 'app/context/types/Søknad';\r\n\r\nconst useSøknad = (): Søknad => {\r\n    const { state } = useForeldrepengesøknadContext();\r\n    return state.søknad;\r\n};\r\n\r\nexport default useSøknad;\r\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\r\nimport UttaksplanInfo from 'app/context/types/UttaksplanInfo';\r\n\r\nconst useUttaksplanInfo = <T extends UttaksplanInfo>(): T | undefined => {\r\n    const { state } = useForeldrepengesøknadContext();\r\n    //TODO (TOR) Fiks casting\r\n    return <T>state.uttaksplanInfo;\r\n};\r\n\r\nexport default useUttaksplanInfo;\r\n","import { Søkerrolle } from 'app/types/Søkerrolle';\r\n\r\nconst isFarEllerMedmor = (rolle: Søkerrolle) => {\r\n    if (rolle === 'far' || rolle === 'medmor') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport default isFarEllerMedmor;\r\n","import { hasValue } from '@navikt/fp-common';\r\n\r\nconst onlyNumbersRegExp = /^[0-9]*$/;\r\n\r\nconst getMod11 = (strValue: string): number => {\r\n    let checkNbr = 2;\r\n    let mod = 0;\r\n\r\n    for (let i = strValue.length - 2; i >= 0; --i) {\r\n        mod += parseInt(strValue.charAt(i), 10) * checkNbr;\r\n        if (++checkNbr > 7) {\r\n            checkNbr = 2;\r\n        }\r\n    }\r\n    const result = 11 - (mod % 11);\r\n    return result === 11 ? 0 : result;\r\n};\r\n\r\nconst er9Tall = (orgnr: string): boolean => {\r\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\r\n};\r\n\r\nconst starterPå8Eller9 = (orgnr: string): boolean => {\r\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\r\n};\r\n\r\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\r\n    if (!orgnr || er9Tall(orgnr) === false || starterPå8Eller9(orgnr) === false || orgnr === '999999999') {\r\n        return false;\r\n    }\r\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\r\n};\r\n\r\nexport const numberHasValue = (num: string): boolean => {\r\n    if (!hasValue(num) || num.trim().length === 0) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst numberRegExp = RegExp(/^[0-9,.\\s]*$/);\r\n\r\nconst trimNumberValue = (value: string): string => {\r\n    return value.replace(/,/g, '.').replace(/\\s/g, '');\r\n};\r\n\r\nexport const getFloatFromString = (value: string | undefined): number | undefined => {\r\n    if (value !== undefined && value !== null && value.length > 0 && numberRegExp.test(value)) {\r\n        const trimmedValue = trimNumberValue(value);\r\n        const numberOfPoints = (trimmedValue.match(/\\./g) || []).length;\r\n        if (numberOfPoints > 1) {\r\n            return undefined;\r\n        }\r\n        return parseFloat(trimmedValue);\r\n    }\r\n    return undefined;\r\n};\r\n","import { Kjønn } from '@navikt/fp-common';\r\nimport AnnenForelder, { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\r\nimport { NavnPåForeldre } from 'app/types/NavnPåForeldre';\r\nimport Person from 'app/types/Person';\r\n\r\nexport const formaterNavn = (fornavn: string, etternavn: string, mellomnavn?: string) => {\r\n    return mellomnavn ? `${fornavn} ${mellomnavn} ${etternavn}` : `${fornavn} ${etternavn}`;\r\n};\r\n\r\nconst navnSlutterPåSLyd = (navn: string): boolean => {\r\n    const sisteBokstav = navn.charAt(navn.length - 1).toLowerCase();\r\n    return sisteBokstav === 's' || sisteBokstav === 'x' || sisteBokstav === 'z';\r\n};\r\n\r\nexport const getNavnGenitivEierform = (navn: string, locale: string): string => {\r\n    if (locale !== 'nb') {\r\n        return navn;\r\n    }\r\n    if (navnSlutterPåSLyd(navn)) {\r\n        return `${navn}'`;\r\n    }\r\n    return `${navn}s`;\r\n};\r\n\r\nexport const getKjønnFromFnr = (annenForelder: AnnenForelder): Kjønn | undefined => {\r\n    if (isAnnenForelderOppgitt(annenForelder)) {\r\n        const { fnr } = annenForelder;\r\n\r\n        if (fnr.length !== 11) {\r\n            return undefined;\r\n        }\r\n        return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const getMorErAleneOmOmsorg = (\r\n    søkerErMor: boolean,\r\n    søkerErAleneOmOmsorg: boolean,\r\n    annenForelder: AnnenForelder\r\n) => {\r\n    return søkerErMor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\r\n};\r\n\r\nexport const getFarMedmorErAleneOmOmsorg = (\r\n    søkerErFarMedmor: boolean,\r\n    søkerErAleneOmOmsorg: boolean,\r\n    annenForelder: AnnenForelder\r\n) => {\r\n    return søkerErFarMedmor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\r\n};\r\n\r\nexport const getNavnPåForeldre = (\r\n    person: Person,\r\n    annenForelder: AnnenForelder,\r\n    erFarEllerMedmor: boolean\r\n): NavnPåForeldre => {\r\n    const navnSøker = person.fornavn;\r\n    const navnAnnenForelder = isAnnenForelderOppgitt(annenForelder) ? annenForelder.fornavn : '';\r\n    const navnMor = erFarEllerMedmor ? navnAnnenForelder : navnSøker;\r\n    const navnFarMedmor = erFarEllerMedmor ? navnSøker : navnAnnenForelder;\r\n\r\n    return {\r\n        mor: navnMor,\r\n        farMedmor: navnFarMedmor,\r\n    };\r\n};\r\n","import { Dekningsgrad } from 'app/types/Dekningsgrad';\r\nimport { TilgjengeligeStønadskontoerDTO } from 'app/types/TilgjengeligeStønadskontoerDTO';\r\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\r\nimport dayjs from 'dayjs';\r\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\r\n\r\nconst getAktivitetsFrieUkerForeldrepenger = (dekningsgrad: Dekningsgrad, startdatoUttak: string): number => {\r\n    if (dekningsgrad === Dekningsgrad.HUNDRE_PROSENT) {\r\n        return 15;\r\n    } else {\r\n        return dayjs(startdatoUttak).isBefore(dayjs(new Date(2019, 0, 1))) ? 15 : 19;\r\n    }\r\n};\r\n\r\nconst opprettAktivitetsFriKonto = (\r\n    kontoer: TilgjengeligStønadskonto[],\r\n    dekningsgrad: Dekningsgrad,\r\n    startdatoUttak: string,\r\n    erMorUfør: boolean\r\n): TilgjengeligStønadskonto[] => {\r\n    if (erMorUfør === false) {\r\n        return kontoer;\r\n    }\r\n\r\n    const nyeKontoer: TilgjengeligStønadskonto[] = [];\r\n    const aktivitetskravFrieDagerForeldrepenger = getAktivitetsFrieUkerForeldrepenger(dekningsgrad, startdatoUttak) * 5;\r\n\r\n    nyeKontoer.push({ ...kontoer[0], dager: kontoer[0].dager - aktivitetskravFrieDagerForeldrepenger });\r\n    nyeKontoer.push({ konto: StønadskontoType.AktivitetsfriKvote, dager: aktivitetskravFrieDagerForeldrepenger });\r\n\r\n    return nyeKontoer;\r\n};\r\n\r\nconst mapTilgjengeligStønadskontoDTOToTilgjengeligStønadskonto = (\r\n    stønadskontoerDTO: TilgjengeligeStønadskontoerDTO,\r\n    dekningsgrad: Dekningsgrad,\r\n    startdatoUttak: string,\r\n    erMorUfør: boolean\r\n): TilgjengeligStønadskonto[] => {\r\n    let tilgjengeligeStønadskontoer: TilgjengeligStønadskonto[] = [];\r\n\r\n    Object.keys(stønadskontoerDTO.kontoer)\r\n        .filter((konto: string) => konto !== StønadskontoType.Flerbarnsdager)\r\n        .forEach((konto) => {\r\n            tilgjengeligeStønadskontoer.push({\r\n                konto: konto as StønadskontoType,\r\n                dager: stønadskontoerDTO.kontoer[konto],\r\n            });\r\n        });\r\n\r\n    tilgjengeligeStønadskontoer = opprettAktivitetsFriKonto(\r\n        tilgjengeligeStønadskontoer,\r\n        dekningsgrad,\r\n        startdatoUttak,\r\n        erMorUfør\r\n    );\r\n\r\n    return tilgjengeligeStønadskontoer;\r\n};\r\n\r\nexport const getValgtStønadskontoFor80Og100Prosent = (\r\n    kontoer80: TilgjengeligeStønadskontoerDTO,\r\n    kontoer100: TilgjengeligeStønadskontoerDTO,\r\n    familiehendelsesdato: string,\r\n    erMorUfør: boolean\r\n) => {\r\n    const åttiProsent = mapTilgjengeligStønadskontoDTOToTilgjengeligStønadskonto(\r\n        kontoer80,\r\n        Dekningsgrad.ÅTTI_PROSENT,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n    const hundreProsent = mapTilgjengeligStønadskontoDTOToTilgjengeligStønadskonto(\r\n        kontoer100,\r\n        Dekningsgrad.HUNDRE_PROSENT,\r\n        familiehendelsesdato,\r\n        erMorUfør\r\n    );\r\n    return {\r\n        [Dekningsgrad.ÅTTI_PROSENT]: åttiProsent,\r\n        [Dekningsgrad.HUNDRE_PROSENT]: hundreProsent,\r\n    };\r\n};\r\n","import { Attachment, InnsendingsType } from 'app/types/Attachment';\r\nimport { AttachmentType } from 'app/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { guid } from 'nav-frontend-js-utils';\r\n\r\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\r\n\r\nexport const mapFilTilVedlegg = (\r\n    file: File,\r\n    type: AttachmentType,\r\n    skjemanummer: Skjemanummer,\r\n    innsendingsType?: InnsendingsType\r\n): Attachment => ({\r\n    id: generateAttachmentId(),\r\n    file,\r\n    filename: file.name,\r\n    filesize: file.size,\r\n    uploaded: false,\r\n    pending: false,\r\n    type,\r\n    skjemanummer,\r\n    innsendingsType,\r\n});\r\n\r\nexport const isAttachmentWithError = ({ pending, uploaded, filesize }: Attachment) =>\r\n    (pending === false && uploaded === false) || filesize === 0;\r\n\r\nexport const lagSendSenereDokument = (type: AttachmentType, skjemanummer: Skjemanummer) => {\r\n    return mapFilTilVedlegg({ name: '', size: '' } as any, type, skjemanummer, InnsendingsType.SEND_SENERE);\r\n};\r\n\r\nexport const lagSendSenereDokumentNårIngenAndreFinnes = (\r\n    dokumenter: Attachment[],\r\n    type: AttachmentType,\r\n    skjema: Skjemanummer\r\n): Attachment[] => {\r\n    if (dokumenter.length === 0) {\r\n        return [lagSendSenereDokument(type, skjema)];\r\n    }\r\n    if (dokumenter.length === 1) {\r\n        return dokumenter;\r\n    }\r\n    return dokumenter.filter((dok) => dok.innsendingsType !== InnsendingsType.SEND_SENERE);\r\n};\r\n","import React from 'react';\r\nimport ForeldrepengesøknadContextProvider from '../../app/context/ForeldrepengesøknadContext';\r\n\r\nconst withForeldrepengersøknadContextProvider = (Story: any) => (\r\n    <ForeldrepengesøknadContextProvider>\r\n        <Story />\r\n    </ForeldrepengesøknadContextProvider>\r\n);\r\n\r\nexport default withForeldrepengersøknadContextProvider;\r\n","import * as React from 'react';\r\nimport { IntlProvider as Provider } from 'react-intl';\r\nimport moment from 'moment';\r\nimport nnMessages from './nn_NO.json';\r\nimport nbMessages from './nb_NO.json';\r\nimport { allCommonMessages, Locale } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    locale: Locale;\r\n    children: React.ReactNode;\r\n}\r\n\r\nmoment.locale('nb');\r\n\r\nconst getLanguageMessages = (locale: Locale) => {\r\n    if (locale === 'nb') {\r\n        return { ...nbMessages, ...allCommonMessages.nb };\r\n    } else {\r\n        return { ...nnMessages, ...allCommonMessages.nn };\r\n    }\r\n};\r\n\r\nconst IntlProvider: React.FunctionComponent<Props> = ({ locale, children }) => {\r\n    return (\r\n        <Provider locale={locale} messages={getLanguageMessages(locale) || {}}>\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\nexport default IntlProvider;\r\n","import React from 'react';\r\n\r\nimport IntlProvider from '../../app/intl/IntlProvider';\r\n\r\nconst withIntlProvider = (Story: any) => (\r\n    <IntlProvider locale=\"nb\">\r\n        <Story />\r\n    </IntlProvider>\r\n);\r\n\r\nexport default withIntlProvider;\r\n","import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst withRouterProvider = (Story: any) => (\r\n    <Router history={history}>\r\n        <Story />\r\n    </Router>\r\n);\r\n\r\nexport default withRouterProvider;\r\n","import { FunctionComponent, useEffect } from 'react';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport getAxiosInstance from '../../app/api/apiInterceptor';\r\n\r\ninterface Props {\r\n    children: any;\r\n    mock: (adapter: MockAdapter) => void;\r\n}\r\n\r\nconst apiMock = new MockAdapter(getAxiosInstance());\r\n\r\nconst AxiosMock: FunctionComponent<Props> = ({ children, mock }) => {\r\n    useEffect(() => {\r\n        mock(apiMock);\r\n        return () => {\r\n            apiMock.reset();\r\n        };\r\n    });\r\n    return children;\r\n};\r\n\r\nexport default AxiosMock;\r\n","import { erMyndig } from '@navikt/fp-common';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport Person, { RegistrertAnnenForelder, RegistrertBarn } from 'app/types/Person';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { SøkerinfoDTO, SøkerinfoDTOArbeidsforhold, SøkerinfoDTOBarn, SøkerinfoDTOSøker } from 'app/types/SøkerinfoDTO';\r\nimport dayjs from 'dayjs';\r\n\r\nconst mapArbeidsforholdDTOToArbeidsforhold = (\r\n    arbeidsforhold: SøkerinfoDTOArbeidsforhold[] | undefined\r\n): Arbeidsforhold[] => {\r\n    if (!arbeidsforhold) {\r\n        return [];\r\n    }\r\n\r\n    return arbeidsforhold.map((arbforhold) => {\r\n        return {\r\n            arbeidsgiverId: arbforhold.arbeidsgiverId,\r\n            arbeidsgiverIdType: arbforhold.arbeidsgiverIdType,\r\n            arbeidsgiverNavn: arbforhold.arbeidsgiverNavn,\r\n            fom: dayjs(arbforhold.fom).toDate(),\r\n            stillingsprosent: arbforhold.stillingsprosent,\r\n            tom: arbforhold.tom ? dayjs(arbforhold.tom).toDate() : undefined,\r\n        };\r\n    });\r\n};\r\n\r\nconst mapSøkerinfoDTOSøkerToPerson = (personDTO: SøkerinfoDTOSøker): Person => {\r\n    return {\r\n        erMyndig: erMyndig(personDTO.fødselsdato),\r\n        etternavn: personDTO.etternavn,\r\n        fornavn: personDTO.fornavn,\r\n        fnr: personDTO.fnr,\r\n        fødselsdato: dayjs(personDTO.fødselsdato).toDate(),\r\n        ikkeNordiskEøsLand: personDTO.ikkeNordiskEøsLand,\r\n        kjønn: personDTO.kjønn,\r\n        bankkonto: personDTO.bankkonto,\r\n    };\r\n};\r\n\r\nconst mapSøkerinfoDTOBarnToRegistrertBarn = (registrerteBarn: SøkerinfoDTOBarn[] | undefined): RegistrertBarn[] => {\r\n    if (!registrerteBarn) {\r\n        return [];\r\n    }\r\n\r\n    return registrerteBarn.map((barn) => {\r\n        const { annenForelder } = barn;\r\n        const oppgittAnnenForelder: RegistrertAnnenForelder | undefined = annenForelder\r\n            ? {\r\n                  etternavn: annenForelder.etternavn,\r\n                  fnr: annenForelder.fnr,\r\n                  fornavn: annenForelder.fornavn,\r\n                  fødselsdato: dayjs(annenForelder.fødselsdato).toDate(),\r\n              }\r\n            : undefined;\r\n\r\n        return {\r\n            etternavn: barn.etternavn,\r\n            fnr: barn.fnr,\r\n            fornavn: barn.fornavn,\r\n            fødselsdato: dayjs(barn.fødselsdato).toDate(),\r\n            kjønn: barn.kjønn,\r\n            annenForelder: oppgittAnnenForelder,\r\n        };\r\n    });\r\n};\r\n\r\nconst mapSøkerinfoDTOToSøkerinfo = (søkerinfoDTO: SøkerinfoDTO): Søkerinfo => {\r\n    const arbeidsforhold = mapArbeidsforholdDTOToArbeidsforhold(søkerinfoDTO.søker.arbeidsforhold);\r\n    const person = mapSøkerinfoDTOSøkerToPerson(søkerinfoDTO.søker);\r\n    const registrerteBarn = mapSøkerinfoDTOBarnToRegistrertBarn(søkerinfoDTO.søker.barn);\r\n\r\n    return {\r\n        arbeidsforhold,\r\n        person,\r\n        registrerteBarn,\r\n    };\r\n};\r\n\r\nexport default mapSøkerinfoDTOToSøkerinfo;\r\n","import { FunctionComponent, useEffect, useState } from 'react';\r\n\r\nimport actionCreator from '../../app/context/action/actionCreator';\r\nimport { useForeldrepengesøknadContext } from '../../app/context/hooks/useForeldrepengesøknadContext';\r\nimport { ForeldrepengesøknadContextState } from '../../app/context/ForeldrepengesøknadContextConfig';\r\nimport { SøkerinfoDTO } from '../../app/types/SøkerinfoDTO';\r\nimport mapSøkerinfoDTOToSøkerinfo from '../../app/utils/mapSøkerinfoDTO';\r\n\r\ninterface Props {\r\n    children: any;\r\n    søknad: ForeldrepengesøknadContextState;\r\n    søkerinfo: SøkerinfoDTO;\r\n}\r\n\r\nconst ForeldrepengerStateMock: FunctionComponent<Props> = ({ children, søknad, søkerinfo }) => {\r\n    const [erFerdig, setFerdig] = useState(false);\r\n    const { dispatch } = useForeldrepengesøknadContext();\r\n\r\n    useEffect(() => {\r\n        if (!erFerdig) {\r\n            Promise.all([\r\n                dispatch(actionCreator.applyStoredState(søknad)),\r\n                dispatch(actionCreator.setSøkerinfo(mapSøkerinfoDTOToSøkerinfo(søkerinfo))),\r\n            ]).then(() => setFerdig(true));\r\n        }\r\n    }, [dispatch, søknad, søkerinfo, erFerdig]);\r\n\r\n    return erFerdig ? children : null;\r\n};\r\n\r\nexport default ForeldrepengerStateMock;\r\n","export enum OppholdÅrsakType {\r\n    UttakFellesperiodeAnnenForelder = 'UTTAK_FELLESP_ANNEN_FORELDER',\r\n    UttakFedrekvoteAnnenForelder = 'UTTAK_FEDREKVOTE_ANNEN_FORELDER',\r\n    UttakMødrekvoteAnnenForelder = 'UTTAK_MØDREKVOTE_ANNEN_FORELDER',\r\n    UttakForelderpengerFørFødsel = 'UTTAK_FORELDREPENGER_FØR_FØDSEL_ANNEN_FORELDER',\r\n    Ingen = 'INGEN',\r\n}\r\n","import { TidsperiodeDate } from '@navikt/fp-common';\r\nimport { Attachment } from 'app/types/Attachment';\r\nimport { Forelder } from 'app/types/Forelder';\r\nimport { MorsAktivitet } from './MorsAktivitet';\r\nimport { OppholdÅrsakType } from './OppholdÅrsakType';\r\nimport { OverføringÅrsakType } from './OverføringÅrsakType';\r\nimport { PeriodeHullÅrsak } from './PeriodeHullÅrsak';\r\nimport { PeriodeInfoType } from './PeriodeInfoType';\r\nimport { PeriodeResultatType } from './PeriodeResultatType';\r\nimport { StønadskontoType } from './StønadskontoType';\r\nimport { UtsettelseÅrsakType } from './UtsettelseÅrsakType';\r\n\r\nexport enum Periodetype {\r\n    Uttak = 'uttak',\r\n    Utsettelse = 'utsettelse',\r\n    Opphold = 'opphold',\r\n    Overføring = 'overføring',\r\n    Hull = 'ubegrunnetOpphold',\r\n    Info = 'info',\r\n}\r\n\r\nexport enum Arbeidsform {\r\n    arbeidstaker = 'ARBEIDSTAKER',\r\n    frilans = 'FRILANS',\r\n    selvstendignæringsdrivende = 'SELVSTENDIG_NÆRINGSDRIVENDE',\r\n}\r\n\r\nexport interface PeriodeBase {\r\n    id: string;\r\n    type: Periodetype;\r\n    tidsperiode: TidsperiodeDate;\r\n    vedlegg?: Attachment[];\r\n}\r\n\r\nexport interface ForeldrepengerFørFødselUttaksperiode extends UttaksperiodeBase {\r\n    konto: StønadskontoType.ForeldrepengerFørFødsel;\r\n    skalIkkeHaUttakFørTermin: boolean;\r\n}\r\n\r\nexport interface UttaksperiodeBase extends PeriodeBase {\r\n    type: Periodetype.Uttak;\r\n    konto: StønadskontoType;\r\n    forelder: Forelder;\r\n    morsAktivitetIPerioden?: MorsAktivitet;\r\n    ønskerSamtidigUttak?: boolean;\r\n    samtidigUttakProsent?: string;\r\n    gradert?: boolean;\r\n    stillingsprosent?: string;\r\n    orgnumre?: string[];\r\n    arbeidsformer?: Arbeidsform[];\r\n    erArbeidstaker?: boolean;\r\n    harIkkeAktivitetskrav?: boolean;\r\n    vedlegg?: Attachment[];\r\n    ønskerFlerbarnsdager?: boolean;\r\n    erMorForSyk?: boolean;\r\n}\r\n\r\nexport type Uttaksperiode = UttaksperiodeBase | ForeldrepengerFørFødselUttaksperiode;\r\n\r\nexport interface Utsettelsesperiode extends PeriodeBase {\r\n    type: Periodetype.Utsettelse;\r\n    årsak: UtsettelseÅrsakType;\r\n    forelder: Forelder;\r\n    morsAktivitetIPerioden?: MorsAktivitet;\r\n    orgnumre?: string[];\r\n    erArbeidstaker: boolean;\r\n    arbeidsformer?: Arbeidsform[];\r\n    harAvtaleOmFulltidForDeltidsstilling?: boolean;\r\n}\r\n\r\nexport interface Oppholdsperiode extends PeriodeBase {\r\n    type: Periodetype.Opphold;\r\n    årsak: OppholdÅrsakType;\r\n    forelder: Forelder;\r\n}\r\n\r\nexport interface Overføringsperiode extends PeriodeBase {\r\n    type: Periodetype.Overføring;\r\n    konto: StønadskontoType;\r\n    forelder: Forelder;\r\n    årsak: OverføringÅrsakType;\r\n}\r\n\r\nexport interface PeriodeHull extends PeriodeBase {\r\n    type: Periodetype.Hull;\r\n    tidsperiode: TidsperiodeDate;\r\n    årsak?: PeriodeHullÅrsak;\r\n}\r\n\r\ninterface InfoPeriodeBase extends PeriodeBase {\r\n    type: Periodetype.Info;\r\n    infotype: PeriodeInfoType;\r\n    overskrives: boolean;\r\n    visPeriodeIPlan: boolean;\r\n}\r\n\r\nexport interface AvslåttPeriode extends InfoPeriodeBase {\r\n    type: Periodetype.Info;\r\n    infotype: PeriodeInfoType.avslåttPeriode;\r\n    avslåttPeriodeType?: Periodetype;\r\n    stønadskonto: StønadskontoType;\r\n    forelder: Forelder;\r\n    overskrives: true;\r\n    visPeriodeIPlan: boolean;\r\n}\r\n\r\nexport interface UttakAnnenPartInfoPeriode extends InfoPeriodeBase {\r\n    type: Periodetype.Info;\r\n    infotype: PeriodeInfoType.uttakAnnenPart;\r\n    årsak: OppholdÅrsakType;\r\n    forelder: Forelder;\r\n    overskrives: true;\r\n    resultatType: PeriodeResultatType;\r\n    visPeriodeIPlan: boolean;\r\n    ønskerSamtidigUttak?: boolean;\r\n    samtidigUttakProsent?: string;\r\n    gradert?: boolean;\r\n    stillingsprosent?: string;\r\n}\r\n\r\nexport interface UtsettelseAnnenPartInfoPeriode extends InfoPeriodeBase {\r\n    type: Periodetype.Info;\r\n    infotype: PeriodeInfoType.utsettelseAnnenPart;\r\n    årsak: UtsettelseÅrsakType;\r\n    forelder: Forelder;\r\n    overskrives: true;\r\n    resultatType: PeriodeResultatType;\r\n    visPeriodeIPlan: boolean;\r\n}\r\n\r\nexport type InfoPeriode = AvslåttPeriode | UttakAnnenPartInfoPeriode | UtsettelseAnnenPartInfoPeriode;\r\n\r\nexport type Periode =\r\n    | Uttaksperiode\r\n    | Utsettelsesperiode\r\n    | Oppholdsperiode\r\n    | Overføringsperiode\r\n    | PeriodeHull\r\n    | InfoPeriode;\r\n\r\nexport function isUttaksperiode(periode: Periode): periode is Uttaksperiode {\r\n    return periode.type === Periodetype.Uttak;\r\n}\r\n\r\nexport const isForeldrepengerFørFødselUttaksperiode = (\r\n    periode: Periode\r\n): periode is ForeldrepengerFørFødselUttaksperiode => {\r\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.ForeldrepengerFørFødsel;\r\n};\r\n\r\nexport const isUttakAvFellesperiode = (periode: Periode): periode is Uttaksperiode => {\r\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.Fellesperiode;\r\n};\r\n\r\nexport const isUtsettelsesperiode = (periode: Periode): periode is Utsettelsesperiode => {\r\n    return periode.type === Periodetype.Utsettelse;\r\n};\r\n\r\nexport const isUtsettelsePgaFerie = (periode: Periode): periode is Utsettelsesperiode => {\r\n    return isUtsettelsesperiode(periode) && periode.årsak === UtsettelseÅrsakType.Ferie;\r\n};\r\n\r\nexport const isUtsettelsePgaArbeid = (periode: Periode): periode is Utsettelsesperiode => {\r\n    return isUtsettelsesperiode(periode) && periode.årsak === UtsettelseÅrsakType.Arbeid;\r\n};\r\n\r\nexport const isOverføringsperiode = (periode: Periode): periode is Overføringsperiode => {\r\n    return periode.type === Periodetype.Overføring;\r\n};\r\n\r\nexport const isOppholdsperiode = (periode: Periode): periode is Oppholdsperiode => {\r\n    return periode.type === Periodetype.Opphold;\r\n};\r\n\r\nexport const isInfoPeriode = (periode: Periode): periode is InfoPeriode => {\r\n    return periode.type === Periodetype.Info && periode.overskrives === true;\r\n};\r\n\r\nexport const isHull = (periode: Periode): periode is PeriodeHull => {\r\n    return periode.type === Periodetype.Hull;\r\n};\r\n","export enum PeriodeInfoType {\r\n    avslåttPeriode = 'avslåttPeriode',\r\n    uttakAnnenPart = 'uttakAnnenPart',\r\n    utsettelseAnnenPart = 'utsettelseAnnenPart',\r\n}\r\n","export enum StønadskontoType {\r\n    Mødrekvote = 'MØDREKVOTE',\r\n    Fedrekvote = 'FEDREKVOTE',\r\n    Fellesperiode = 'FELLESPERIODE',\r\n    Foreldrepenger = 'FORELDREPENGER',\r\n    ForeldrepengerFørFødsel = 'FORELDREPENGER_FØR_FØDSEL',\r\n    Flerbarnsdager = 'FLERBARNSDAGER', // Ikke brukt som egen type i periodene\r\n    AktivitetsfriKvote = 'AKTIVITETSFRI_KVOTE', // Foreldrepenger\r\n}\r\n","export enum UtsettelseÅrsakType {\r\n    Ferie = 'FERIE',\r\n    Arbeid = 'ARBEID',\r\n    Sykdom = 'SYKDOM_SKADE',\r\n    InstitusjonSøker = 'SØKER_INNLAGT',\r\n    InstitusjonBarnet = 'BARN_INNLAGT',\r\n    HvØvelse = 'HV_OVELSE',\r\n    NavTiltak = 'NAV_TILTAK',\r\n}\r\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 36479,\n\t\"./cy.js\": 36479,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 22781,\n\t\"./id.js\": 22781,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"far1\",\n  \"use\": \"far1-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"far1\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M21 53.673C22.021 55.306 24.89 84 33.5 84 42.112 84 46 54.772 46 53.251c-13.185-7.553-25 .422-25 .422z\\\" />\\r\\n        <path fill=\\\"#0F5FA9\\\" d=\\\"M34 72.5L25.848 52C21.45 52 7 62.043 7 71.395V96h54V71.395C61 62.043 46.546 52 42.151 52L34 72.5z\\\" />\\r\\n        <path fill=\\\"#3C84C5\\\" d=\\\"M25.877 50.448c-2.373.819-5.874 3.035-5.874 3.035-.178 7.167 6.548 14.4 6.548 14.4l1.366-4.585 5.14 9.617 2.738.085 4.729-8.69 1.927 4.88c6.489-11.143 5.494-15.832 5.494-15.832C45.355 51.16 42.086 50 42.086 50l-7.75 20.36-8.459-19.912z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M54.188 38.27C51.67 48.508 43.585 56 34 56c-9.586 0-17.67-7.492-20.188-17.73a2.27 2.27 0 0 1-.812.148c-1.103 0-2-.771-2-1.726v-6.965c0-.955.897-1.727 2-1.727.071 0 .142.003.211.01C14.663 16.132 23.417 7 34 7c10.582 0 19.337 9.132 20.789 21.01.07-.007.14-.01.211-.01 1.105 0 2 .772 2 1.727v6.965c0 .955-.895 1.726-2 1.726-.289 0-.564-.053-.812-.148z\\\" />\\r\\n        <g>\\r\\n            <g fill=\\\"#635E59\\\">\\r\\n                <path d=\\\"M26.03 30.625c-1.447.109-1.852-2.024-1.417-3.417.083-.264.562-1.465 1.41-1.465.847 0 1.221.656 1.273.769.623 1.358.317 3.993-1.266 4.113M42.18 30.625c1.447.109 1.852-2.024 1.416-3.417-.082-.264-.561-1.465-1.41-1.465-.846 0-1.22.656-1.272.769-.623 1.358-.318 3.993 1.266 4.113\\\" />\\r\\n            </g>\\r\\n            <path stroke=\\\"#D1BFA3\\\" stroke-linecap=\\\"round\\\" d=\\\"M34.487 32.583c.865-.133 1.708-.1 2.104.385.965 1.185.688 2.554-.937 3.566-.812.505-1.962.712-2.667.4\\\" />\\r\\n            <path stroke=\\\"#593A32\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"1.013\\\" d=\\\"M40.722 40.568s-1.828 4.187-6.914 4.031c-5.086-.156-6.993-4.031-6.993-4.031\\\" />\\r\\n            <path fill=\\\"#F6B873\\\" d=\\\"M33.601 37.077c3.002 0 4.448.43 8.071 1.761C51.006 42.268 54.35 28.429 54.9 28c0 27.019-13.205 32-21.436 32C25.361 60 12.9 53.732 12.9 28c0 0 2.615 15.643 11.72 11.073 3.94-1.978 5.98-1.996 8.981-1.996zm-.46 8.954c4.752 0 8.603-1.564 8.603-3.492 0-1.929-3.851-3.492-8.602-3.492s-8.602 1.563-8.602 3.492c0 1.928 3.85 3.492 8.602 3.492z\\\" />\\r\\n        </g>\\r\\n        <path fill=\\\"#F6B873\\\" d=\\\"M13.67 31.447c-.144-5.564 1.786-8.148 3.374-10.11 0 0-.965 4.275-.294 3.385 3.8-5.02 21.4-1.581 25.05-8.06.46 3.567-4.148 4.643-4.148 4.643 3.673.696 6.855-.784 7.718-2.542.283 1.433-.589 2.384-1.865 3.364 4.514-.855 4.587-3.966 4.587-3.966.643 4.127 5.27 2.542 5.27 9.298l.102 3.988c0 .162.479-.972 1.436-3.4C55.18 12.466 46.5 3 34.422 3 22.895 3 12.85 13.948 12.857 27.702c0 .317.078.917.112 1.21.514 4.468.721 7.461.62 8.98.083-1.016.11-3.164.081-6.445z\\\" />\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"far2\",\n  \"use\": \"far2-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"far2\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#117938\\\" d=\\\"M33.873 52h-8.066C21.457 52 7 62.22 7 71.523V96h54V71.523C61 62.22 46.29 52 41.942 52h-8.069z\\\" />\\r\\n        <path fill=\\\"#FFF\\\" d=\\\"M20.745 53.803c1.043 1.69 5.729 10.108 12.638 15.292 6.862-5.105 12.89-14.154 12.89-15.729-13.463-7.82-25.528.437-25.528.437z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M54.188 38.27C51.67 48.508 43.585 56 34 56c-9.586 0-17.67-7.492-20.188-17.73a2.27 2.27 0 0 1-.812.148c-1.103 0-2-.771-2-1.726v-6.965c0-.955.897-1.727 2-1.727.071 0 .142.003.211.01C14.663 16.132 23.417 7 34 7c10.582 0 19.337 9.132 20.789 21.01.07-.007.14-.01.211-.01 1.105 0 2 .772 2 1.727v6.965c0 .955-.895 1.726-2 1.726-.289 0-.564-.053-.812-.148z\\\" />\\r\\n        <path fill=\\\"#635E59\\\" d=\\\"M26.03 30.625c-1.447.109-1.852-2.024-1.417-3.417.083-.264.562-1.465 1.41-1.465.847 0 1.221.656 1.273.769.623 1.358.317 3.993-1.266 4.113M42.18 30.625c1.447.109 1.852-2.024 1.416-3.417-.082-.264-.561-1.465-1.41-1.465-.846 0-1.22.656-1.272.769-.623 1.358-.318 3.993 1.266 4.113\\\" />\\r\\n        <path stroke=\\\"#D1BFA3\\\" stroke-linecap=\\\"round\\\" d=\\\"M34.487 32.583c.865-.133 1.708-.1 2.104.385.965 1.185.688 2.554-.937 3.566-.812.505-1.962.712-2.667.4\\\" />\\r\\n        <path stroke=\\\"#593A32\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"1.013\\\" d=\\\"M40.722 40.568s-1.828 4.187-6.914 4.031c-5.086-.156-6.993-4.031-6.993-4.031\\\" />\\r\\n        <path fill=\\\"#F6B873\\\" d=\\\"M53.837 31.063c.328-.385.11-1.345.11-2.57C53.946 14.965 44.773 4 33.461 4 22.15 4 12.977 14.965 12.977 28.493c0 1.783.065 3.553.641 3.506.34-6.59 2.284-11.336 2.983-13.154 1.386-3.604 2.814-5.626 7.594-2.811 4.724 2.784 27.604-14.59 29.57 15.126-.065.07-.042.037.072-.097z\\\" />\\r\\n        <g>\\r\\n            <path fill=\\\"#9B9590\\\" d=\\\"M34 55c7.732 0 14 6.02 14 13.447v13.106C48 88.979 41.732 95 34 95s-14-6.02-14-13.447V68.447C20 61.021 26.268 55 34 55z\\\" />\\r\\n            <g fill=\\\"#C6C2BF\\\">\\r\\n                <path d=\\\"M13.352 58.653l4.035-3.403a1.08 1.08 0 0 1 1.473.085.985.985 0 0 1 .202.326L28.939 82.1c.193.515-.087 1.08-.626 1.267L23.78 84.94c-.541.188-1.14-.078-1.337-.594l-9.38-24.61a.963.963 0 0 1 .289-1.083zM54.648 58.653c.32.27.435.7.29 1.083l-9.38 24.61h-.001c-.197.516-.796.782-1.337.594l-4.533-1.573c-.539-.187-.819-.752-.626-1.267l9.877-26.44a.985.985 0 0 1 .202-.325 1.08 1.08 0 0 1 1.473-.085l4.035 3.403z\\\" />\\r\\n            </g>\\r\\n        </g>\\r\\n        <g>\\r\\n            <path fill=\\\"#5EAEC7\\\" d=\\\"M43 85.987V94H25v-8.013c0-2.292 2.94-4.91 4.91-5.987h8.18c1.988 1.097 4.91 3.721 4.91 5.987z\\\" />\\r\\n            <path fill=\\\"#FA96A0\\\" d=\\\"M40.428 81.66c.863.765 1.712 1.696 2.163 2.618-.272.168-1.55.168-1.694-.233.15.387.05.845-.282 1.127a.97.97 0 0 1-1.338-.073c.22.464.052 1.03-.395 1.291a.97.97 0 0 1-1.071-.06.997.997 0 0 1-.635 1.08.969.969 0 0 1-.933-.147.984.984 0 0 1-.746.625.97.97 0 0 1-.872-.286.98.98 0 0 1-.878.55.978.978 0 0 1-.843-.487.969.969 0 0 1-.806.223.984.984 0 0 1-.746-.625.969.969 0 0 1-.933.146.997.997 0 0 1-.635-1.079.97.97 0 0 1-1.071.06 1.003 1.003 0 0 1-.395-1.291.97.97 0 0 1-1.338.073 1.005 1.005 0 0 1-.282-1.127c-.284.127-.612-.39-.88-.545.41-.64 1.068-1.294 1.747-1.865.564 2.168 3.23 3.81 6.435 3.81 3.192 0 5.85-1.63 6.428-3.784z\\\" />\\r\\n            <path fill=\\\"#E7E5E2\\\" d=\\\"M22.023 68.255C22.408 61.975 27.623 57 34 57c6.377 0 11.592 4.974 11.977 11.255A2 2 0 0 1 47 70v2a2 2 0 0 1-2.087 1.998 12.038 12.038 0 0 1-6.926 6.324 4 4 0 0 1-7.974 0 12.038 12.038 0 0 1-6.926-6.324A2 2 0 0 1 21 72v-2a2 2 0 0 1 1.023-1.745z\\\" />\\r\\n            <path fill=\\\"#78706A\\\" fill-rule=\\\"nonzero\\\" d=\\\"M31.484 58.356a.4.4 0 0 1 .771.213c-.073.265-.003.38.484.818.506.456.624 1.054.343 1.698a.4.4 0 1 1-.733-.32c.146-.333.1-.562-.145-.783-.698-.628-.903-.964-.72-1.626zm2.23-.214a.4.4 0 1 1 .643.475c-.163.222-.139.355.159.938.309.607.205 1.208-.288 1.708a.4.4 0 0 1-.57-.56c.255-.26.295-.49.145-.785-.426-.836-.497-1.223-.09-1.776zm2.185-.022a.4.4 0 0 1 .466.65c-.224.16-.242.295-.14.941.107.673-.178 1.213-.801 1.536a.4.4 0 0 1-.369-.71c.323-.167.432-.374.38-.7-.147-.927-.094-1.317.464-1.717z\\\" />\\r\\n            <g>\\r\\n                <g fill=\\\"#E8CCC8\\\">\\r\\n                    <path d=\\\"M30.8 74.333c0 1.381-1.074 2.5-2.4 2.5-1.325 0-2.4-1.119-2.4-2.5 0-1.38 1.075-2.5 2.4-2.5 1.326 0 2.4 1.12 2.4 2.5M42 74.333c0 1.381-1.074 2.5-2.4 2.5-1.325 0-2.4-1.119-2.4-2.5 0-1.38 1.075-2.5 2.4-2.5 1.326 0 2.4 1.12 2.4 2.5\\\" />\\r\\n                </g>\\r\\n                <path fill=\\\"#FA96A0\\\" d=\\\"M32.705 77.956a1.257 1.257 0 0 1-.73-1.227l.563-1.562 2.209.976-.688 1.507c-.334.38-.873.519-1.354.306z\\\" />\\r\\n                <path fill=\\\"#D1BFA3\\\" fill-rule=\\\"nonzero\\\" d=\\\"M34.66 70.611a.4.4 0 0 1-.475-.322.417.417 0 0 1 .31-.493c.538-.118.987-.027 1.235.405.48.842.313 1.812-.445 2.483-.441.39-1.06.53-1.492.259a.427.427 0 0 1-.135-.573.391.391 0 0 1 .549-.14c.095.06.356 0 .56-.18.464-.412.554-.934.275-1.422-.026-.046-.142-.07-.383-.017z\\\" />\\r\\n                <g fill=\\\"#635E59\\\">\\r\\n                    <path fill-rule=\\\"nonzero\\\" d=\\\"M36.812 69.232a.418.418 0 0 0 .291.505.4.4 0 0 0 .485-.303c.226-.942.619-1.35 1.212-1.35s.986.408 1.212 1.35a.4.4 0 0 0 .485.303.418.418 0 0 0 .291-.505c-.307-1.28-.981-1.982-1.988-1.982-1.007 0-1.68.702-1.988 1.982z\\\" />\\r\\n                    <path d=\\\"M29.606 70.164c-1.103.075-1.412-1.38-1.08-2.33.063-.18.428-1 1.074-1 .646 0 .93.448.97.525.475.926.243 2.724-.964 2.805\\\" />\\r\\n                </g>\\r\\n                <path fill=\\\"#593A32\\\" fill-rule=\\\"nonzero\\\" d=\\\"M35.958 75.353a.425.425 0 0 0-.18-.559.393.393 0 0 0-.536.186c-.192.4-.582.603-1.242.603s-1.05-.203-1.242-.603a.393.393 0 0 0-.537-.186.425.425 0 0 0-.179.559c.342.711 1.018 1.064 1.958 1.064s1.616-.353 1.958-1.064z\\\" />\\r\\n            </g>\\r\\n        </g>\\r\\n        <g>\\r\\n            <path fill=\\\"#C6C2BF\\\" d=\\\"M49 96H19v-9.882C19 84.948 20.362 84 22.042 84h23.916c1.68 0 3.042.948 3.042 2.118V96z\\\" />\\r\\n            <path fill=\\\"#FFF\\\" d=\\\"M21.124 84h25.752C48.601 84 50 85.343 50 87s-1.399 3-3.124 3H21.124C19.399 90 18 88.657 18 87s1.399-3 3.124-3z\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"far3\",\n  \"use\": \"far3-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"far3\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M21 53.673C22.021 55.306 24.89 84 33.5 84 42.112 84 46 54.772 46 53.251c-13.185-7.553-25 .422-25 .422z\\\" />\\r\\n        <path fill=\\\"#8B6D47\\\" d=\\\"M45.68 53.18C51.676 56.128 61 64.116 61 71.523V96H7V71.523c0-7.147 8.531-14.834 14.458-18.014-.3.183-.458.294-.458.294C22.021 55.493 24.766 63 33.376 63 41.99 63 46 54.941 46 53.366a26.67 26.67 0 0 0-.32-.186z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M54.188 38.27C51.67 48.508 43.585 56 34 56c-9.586 0-17.67-7.492-20.188-17.73a2.27 2.27 0 0 1-.812.148c-1.103 0-2-.771-2-1.726v-6.965c0-.955.897-1.727 2-1.727.071 0 .142.003.211.01C14.663 16.132 23.417 7 34 7c10.582 0 19.337 9.132 20.789 21.01.07-.007.14-.01.211-.01 1.105 0 2 .772 2 1.727v6.965c0 .955-.895 1.726-2 1.726-.289 0-.564-.053-.812-.148z\\\" />\\r\\n        <g fill=\\\"#635E59\\\">\\r\\n            <path d=\\\"M26.03 30.625c-1.447.109-1.852-2.024-1.417-3.417.083-.264.562-1.465 1.41-1.465.847 0 1.221.656 1.273.769.623 1.358.317 3.993-1.266 4.113M42.18 30.625c1.447.109 1.852-2.024 1.416-3.417-.082-.264-.561-1.465-1.41-1.465-.846 0-1.22.656-1.272.769-.623 1.358-.318 3.993 1.266 4.113\\\" />\\r\\n        </g>\\r\\n        <path stroke=\\\"#D1BFA3\\\" stroke-linecap=\\\"round\\\" d=\\\"M34.487 32.583c.865-.133 1.708-.1 2.104.385.965 1.185.688 2.554-.937 3.566-.812.505-1.962.712-2.667.4\\\" />\\r\\n        <path stroke=\\\"#593A32\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"1.013\\\" d=\\\"M40.722 40.568s-1.828 4.187-6.914 4.031c-5.086-.156-6.993-4.031-6.993-4.031\\\" />\\r\\n        <path fill=\\\"#F6B873\\\" d=\\\"M29.188 38.012l5.183.374 5.243-.376A4 4 0 0 1 43.9 42v.703h-2.305l-.306-1.25-.21 1.25h-.839l-.153-.592-.166.592-5.424.222-7.66-.222-.17-.592-.297.592H24.9v-.7a4 4 0 0 1 4.288-3.99z\\\" />\\r\\n        <path fill=\\\"#344144\\\" d=\\\"M33.934 3c1.64 0 2.97 1.393 2.97 3.111v.017c5.927 1.042 11.014 4.946 14.727 12.242l1.274.428c1.002 2.016 1.296 4.391 1.492 6.786-5.664-1.607-12.495-2.41-20.492-2.41-11.999 0-20.33 2.562-20.33 2.562.132-2.442 0-4.664 1.167-6.938l1.57-.428c3.423-6.547 8.654-11.248 14.65-12.305C30.985 4.368 32.307 3 33.934 3z\\\" />\\r\\n        <g>\\r\\n            <path fill=\\\"#9B9590\\\" d=\\\"M34 55c7.732 0 14 6.02 14 13.447v13.106C48 88.979 41.732 95 34 95s-14-6.02-14-13.447V68.447C20 61.021 26.268 55 34 55z\\\" />\\r\\n            <g fill=\\\"#C6C2BF\\\">\\r\\n                <path d=\\\"M13.352 58.653l4.035-3.403a1.08 1.08 0 0 1 1.473.085.985.985 0 0 1 .202.326L28.939 82.1c.193.515-.087 1.08-.626 1.267L23.78 84.94c-.541.188-1.14-.078-1.337-.594l-9.38-24.61a.963.963 0 0 1 .289-1.083zM54.648 58.653c.32.27.435.7.29 1.083l-9.38 24.61h-.001c-.197.516-.796.782-1.337.594l-4.533-1.573c-.539-.187-.819-.752-.626-1.267l9.877-26.44a.985.985 0 0 1 .202-.325 1.08 1.08 0 0 1 1.473-.085l4.035 3.403z\\\" />\\r\\n            </g>\\r\\n        </g>\\r\\n        <g>\\r\\n            <path fill=\\\"#117938\\\" d=\\\"M43 85.987V94H25v-8.013c0-2.292 2.94-4.91 4.91-5.987h8.18c1.988 1.097 4.91 3.721 4.91 5.987z\\\" />\\r\\n            <path fill=\\\"#FA96A0\\\" d=\\\"M40.428 81.66c.863.765 1.712 1.696 2.163 2.618-.272.168-1.55.168-1.694-.233.15.387.05.845-.282 1.127a.97.97 0 0 1-1.338-.073c.22.464.052 1.03-.395 1.291a.97.97 0 0 1-1.071-.06.997.997 0 0 1-.635 1.08.969.969 0 0 1-.933-.147.984.984 0 0 1-.746.625.97.97 0 0 1-.872-.286.98.98 0 0 1-.878.55.978.978 0 0 1-.843-.487.969.969 0 0 1-.806.223.984.984 0 0 1-.746-.625.969.969 0 0 1-.933.146.997.997 0 0 1-.635-1.079.97.97 0 0 1-1.071.06 1.003 1.003 0 0 1-.395-1.291.97.97 0 0 1-1.338.073 1.005 1.005 0 0 1-.282-1.127c-.284.127-.612-.39-.88-.545.41-.64 1.068-1.294 1.747-1.865.564 2.168 3.23 3.81 6.435 3.81 3.192 0 5.85-1.63 6.428-3.784z\\\" />\\r\\n            <path fill=\\\"#E7E5E2\\\" d=\\\"M22.023 68.255C22.408 61.975 27.623 57 34 57c6.377 0 11.592 4.974 11.977 11.255A2 2 0 0 1 47 70v2a2 2 0 0 1-2.087 1.998 12.038 12.038 0 0 1-6.926 6.324 4 4 0 0 1-7.974 0 12.038 12.038 0 0 1-6.926-6.324A2 2 0 0 1 21 72v-2a2 2 0 0 1 1.023-1.745z\\\" />\\r\\n            <path fill=\\\"#78706A\\\" fill-rule=\\\"nonzero\\\" d=\\\"M31.484 58.356a.4.4 0 0 1 .771.213c-.073.265-.003.38.484.818.506.456.624 1.054.343 1.698a.4.4 0 1 1-.733-.32c.146-.333.1-.562-.145-.783-.698-.628-.903-.964-.72-1.626zm2.23-.214a.4.4 0 1 1 .643.475c-.163.222-.139.355.159.938.309.607.205 1.208-.288 1.708a.4.4 0 0 1-.57-.56c.255-.26.295-.49.145-.785-.426-.836-.497-1.223-.09-1.776zm2.185-.022a.4.4 0 0 1 .466.65c-.224.16-.242.295-.14.941.107.673-.178 1.213-.801 1.536a.4.4 0 0 1-.369-.71c.323-.167.432-.374.38-.7-.147-.927-.094-1.317.464-1.717z\\\" />\\r\\n            <g>\\r\\n                <g fill=\\\"#E8CCC8\\\">\\r\\n                    <path d=\\\"M30.8 74.333c0 1.381-1.074 2.5-2.4 2.5-1.325 0-2.4-1.119-2.4-2.5 0-1.38 1.075-2.5 2.4-2.5 1.326 0 2.4 1.12 2.4 2.5M42 74.333c0 1.381-1.074 2.5-2.4 2.5-1.325 0-2.4-1.119-2.4-2.5 0-1.38 1.075-2.5 2.4-2.5 1.326 0 2.4 1.12 2.4 2.5\\\" />\\r\\n                </g>\\r\\n                <path fill=\\\"#FA96A0\\\" d=\\\"M32.705 77.956a1.257 1.257 0 0 1-.73-1.227l.563-1.562 2.209.976-.688 1.507c-.334.38-.873.519-1.354.306z\\\" />\\r\\n                <path fill=\\\"#D1BFA3\\\" fill-rule=\\\"nonzero\\\" d=\\\"M34.66 70.611a.4.4 0 0 1-.475-.322.417.417 0 0 1 .31-.493c.538-.118.987-.027 1.235.405.48.842.313 1.812-.445 2.483-.441.39-1.06.53-1.492.259a.427.427 0 0 1-.135-.573.391.391 0 0 1 .549-.14c.095.06.356 0 .56-.18.464-.412.554-.934.275-1.422-.026-.046-.142-.07-.383-.017z\\\" />\\r\\n                <g fill=\\\"#635E59\\\">\\r\\n                    <path fill-rule=\\\"nonzero\\\" d=\\\"M36.812 69.232a.418.418 0 0 0 .291.505.4.4 0 0 0 .485-.303c.226-.942.619-1.35 1.212-1.35s.986.408 1.212 1.35a.4.4 0 0 0 .485.303.418.418 0 0 0 .291-.505c-.307-1.28-.981-1.982-1.988-1.982-1.007 0-1.68.702-1.988 1.982z\\\" />\\r\\n                    <path d=\\\"M29.606 70.164c-1.103.075-1.412-1.38-1.08-2.33.063-.18.428-1 1.074-1 .646 0 .93.448.97.525.475.926.243 2.724-.964 2.805\\\" />\\r\\n                </g>\\r\\n                <path fill=\\\"#593A32\\\" fill-rule=\\\"nonzero\\\" d=\\\"M35.958 75.353a.425.425 0 0 0-.18-.559.393.393 0 0 0-.536.186c-.192.4-.582.603-1.242.603s-1.05-.203-1.242-.603a.393.393 0 0 0-.537-.186.425.425 0 0 0-.179.559c.342.711 1.018 1.064 1.958 1.064s1.616-.353 1.958-1.064z\\\" />\\r\\n            </g>\\r\\n        </g>\\r\\n        <g>\\r\\n            <path fill=\\\"#C6C2BF\\\" d=\\\"M49 96H19v-9.882C19 84.948 20.362 84 22.042 84h23.916c1.68 0 3.042.948 3.042 2.118V96z\\\" />\\r\\n            <path fill=\\\"#FFF\\\" d=\\\"M21.124 84h25.752C48.601 84 50 85.343 50 87s-1.399 3-3.124 3H21.124C19.399 90 18 88.657 18 87s1.399-3 3.124-3z\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"far4\",\n  \"use\": \"far4-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"far4\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#194D62\\\" d=\\\"M33.873 52.936h-8.066C21.457 52.936 7 62.938 7 72.044V96h54V72.044c0-9.106-14.71-19.108-19.058-19.108h-8.069z\\\" />\\r\\n        <path fill=\\\"#CDD1D1\\\" d=\\\"M20.745 54.7c1.043 1.656 5.729 9.893 12.638 14.968 6.862-4.997 12.89-13.853 12.89-15.395-13.463-7.654-25.528.428-25.528.428z\\\" />\\r\\n        <path fill=\\\"#709CAA\\\" d=\\\"M35.968 61.756v-4.905l-.724.038h-3.52L31 56.851v4.905l1.085.664-.998 5.328c.8.827 1.561 1.476 2.285 1.947a20.269 20.269 0 0 0 2.325-1.853l-.814-5.422 1.085-.664z\\\" />\\r\\n        <path fill=\\\"#FFF\\\" d=\\\"M45.918 51.957c-3.538 3.135-7.857 4.964-12.523 4.964-4.584 0-8.83-1.804-12.332-4.873-.042.28-.258 1.578-.258 1.866 0 3.446 5.686 7.87 9.33 10.767l2.125-7.218h2.562l2.043 7.218c3.42-2.793 9.291-7.215 9.291-10.767 0-.319-.188-1.645-.238-1.957z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M54.188 38.27C51.67 48.508 43.585 56 34 56c-9.586 0-17.67-7.492-20.188-17.73a2.27 2.27 0 0 1-.812.148c-1.103 0-2-.771-2-1.726v-6.965c0-.955.897-1.727 2-1.727.071 0 .142.003.211.01C14.663 16.132 23.417 7 34 7c10.582 0 19.337 9.132 20.789 21.01.07-.007.14-.01.211-.01 1.105 0 2 .772 2 1.727v6.965c0 .955-.895 1.726-2 1.726-.289 0-.564-.053-.812-.148z\\\" />\\r\\n        <g>\\r\\n            <g fill=\\\"#635E59\\\">\\r\\n                <path d=\\\"M26.03 30.625c-1.447.109-1.852-2.024-1.417-3.417.083-.264.562-1.465 1.41-1.465.847 0 1.221.656 1.273.769.623 1.358.317 3.993-1.266 4.113M42.18 30.625c1.447.109 1.852-2.024 1.416-3.417-.082-.264-.561-1.465-1.41-1.465-.846 0-1.22.656-1.272.769-.623 1.358-.318 3.993 1.266 4.113\\\" />\\r\\n            </g>\\r\\n            <path stroke=\\\"#D1BFA3\\\" stroke-linecap=\\\"round\\\" d=\\\"M34.487 32.583c.865-.133 1.708-.1 2.104.385.965 1.185.688 2.554-.937 3.566-.812.505-1.962.712-2.667.4\\\" />\\r\\n            <path stroke=\\\"#593A32\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"1.013\\\" d=\\\"M40.722 40.568s-1.828 4.187-6.914 4.031c-5.086-.156-6.993-4.031-6.993-4.031\\\" />\\r\\n        </g>\\r\\n        <path fill=\\\"#3E3832\\\" d=\\\"M54.161 28.85C51.174 2.37 29.391 18.742 24.795 16.034c-4.78-2.815-6.208-.793-7.594 2.81-.683 1.776-2.552 6.342-2.956 12.69.661 4.663 2.825 10.365 10.604 7.562 4.134-1.49 5.874-2.144 8.823-2.144 2.949 0 4.748.464 8.543 2.144 10.184 2.499 11.592-5.844 11.946-10.246zm.374-1.163C56.415 51.183 40.925 56 32.988 56c-6.25 0-15.514-3.596-18.995-17-.723-2.78-.559-5.337-.383-8.892-.026-.5-.033-1.057-.033-1.615C13.577 14.965 22.75 4 34.062 4 45.15 4 54.18 14.532 54.535 27.687zM25.9 42.214c0 1.775 3.582 4.441 8 4.441s8-2.666 8-4.44c0-1.776-3.582-3.215-8-3.215s-8 1.44-8 3.214z\\\" />\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"medmor1\",\n  \"use\": \"medmor1-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"medmor1\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#F6B873\\\" d=\\\"M57.28 73.245c-11.146 1.729-10.877 3.75-23.405 3.75-12.59 0-12.352-2.053-23.414-3.948-.016-.398-.024-40.173-.024-40.576C10.438 17.851 20.93 6 33.876 6c12.943 0 23.438 11.852 23.438 26.471 0 .47-.011 40.31-.033 40.774z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M21.688 56.318c.957 1.531 3.646 28.432 11.718 28.432 8.074 0 11.719-27.4 11.719-28.827-12.361-7.081-23.438.395-23.438.395z\\\" />\\r\\n        <path fill=\\\"#5EAEC7\\\" d=\\\"M44.825 55.856c5.621 2.764 14.362 10.253 14.362 17.197V96H8.563V73.053c0-6.7 7.998-13.907 13.554-16.888-.281.172-.43.275-.43.275.958 1.586 3.531 8.623 11.603 8.623 8.074 0 11.835-7.555 11.835-9.032-.1-.06-.2-.118-.3-.175z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M14.693 31.8s-.098.559-.225.467a1.522 1.522 0 0 0-.568-.116c-.87 0-1.577.73-1.579 1.631l-.008 6.24c-.002.903.701 1.635 1.572 1.636.349 0 .668-.12.93-.319 2.105 10.049 9.61 17.146 18.557 17.161 8.949.015 16.477-7.058 18.611-17.1.26.2.58.321.93.322.87 0 1.576-.73 1.577-1.63l.01-6.241c0-.902-.703-1.634-1.573-1.636-.2 0-.392.043-.568.114C32.178 34.72 25.139 21 24.544 21c0 0-8.44 7.9-9.85 10.8z\\\" />\\r\\n        <g>\\r\\n            <g fill=\\\"#635E59\\\">\\r\\n                <path d=\\\"M26.68 37.671c-1.356.102-1.736-1.897-1.327-3.203.077-.248.526-1.375 1.32-1.375.795 0 1.145.616 1.194.722.584 1.273.297 3.744-1.187 3.856M41.82 37.671c1.357.102 1.737-1.897 1.328-3.203-.077-.248-.526-1.375-1.321-1.375-.794 0-1.145.616-1.193.722-.585 1.273-.298 3.744 1.186 3.856\\\" />\\r\\n            </g>\\r\\n            <path fill=\\\"#D1BFA3\\\" fill-rule=\\\"nonzero\\\" d=\\\"M34.68 39.97c.798-.123 1.343-.046 1.538.194.737.905.501 1.863-.762 2.649-.665.413-1.58.559-2.063.344a.469.469 0 0 0-.38.858c.8.354 2.031.158 2.938-.406 1.717-1.068 2.11-2.666.994-4.037-.472-.58-1.308-.698-2.407-.528a.469.469 0 1 0 .143.926z\\\" />\\r\\n            <path fill=\\\"#D19E9C\\\" fill-rule=\\\"nonzero\\\" d=\\\"M40.024 46.805a4.27 4.27 0 0 1-.295.527 6.648 6.648 0 0 1-.998 1.214c-1.198 1.152-2.759 1.818-4.745 1.757-1.937-.06-3.49-.715-4.708-1.772a6.988 6.988 0 0 1-1.111-1.219 4.265 4.265 0 0 1-.33-.526.469.469 0 1 0-.842.414c.069.14.203.368.408.656a7.92 7.92 0 0 0 1.26 1.382c1.375 1.194 3.132 1.936 5.294 2.002 2.252.07 4.051-.699 5.424-2.018a7.58 7.58 0 0 0 1.138-1.386c.184-.288.303-.516.364-.656a.469.469 0 1 0-.86-.375z\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"medmor2\",\n  \"use\": \"medmor2-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"medmor2\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#333\\\" d=\\\"M60.947 34.992a4.658 4.658 0 0 1 1.99 3.833A4.67 4.67 0 0 1 62 41.643a4.67 4.67 0 0 1 .938 2.818c0 2.31-1.66 4.226-3.833 4.583-.49 2.284-2.25 4.087-4.489 4.605.099 2.18-1.334 4.195-3.5 4.722a4.491 4.491 0 0 1-3.426-.541 5.85 5.85 0 0 1-2.72.668c-2.522 0-4.678-1.593-5.547-3.843-.627-.097-1.248-.4-1.78-.959a3.081 3.081 0 0 0-2.512-.967 3.418 3.418 0 0 0-.061.117c-.566 1.127-1.552 1.678-2.561 1.745a3.34 3.34 0 0 0-.19.556c-.734 2.984-4.641 3.215-5.867.693-.732 1.571-2.306 2.658-4.13 2.658a4.524 4.524 0 0 1-3.364-1.503 4.489 4.489 0 0 1-2.182.563c-2.522 0-4.568-2.078-4.568-4.642 0-.449.063-.883.18-1.293a4.635 4.635 0 0 1-2.924-3.819 4.644 4.644 0 0 1-2.802-4.282 4.642 4.642 0 0 1 2.92-4.33c.106-1.465-.785-2.952-2.382-3.358-3.182-.81-3.182-5.407 0-6.216 2.4-.611 3.205-3.663 1.427-5.412-2.358-2.318-.096-6.298 3.058-5.382.52.15 1.03.162 1.504.062a4.75 4.75 0 0 1-.056-.729c0-1.734.936-3.247 2.323-4.043-.159-2.784 3.298-4.551 5.4-2.384.674-1.707 2.318-2.912 4.239-2.912.58 0 1.136.11 1.647.311a3.01 3.01 0 0 1 1.235-.985c1.016-2.057 4.146-2.522 5.528-.193 1.276 2.153 4.384 2.04 5.508-.198 1.444-2.878 5.627-2 5.941 1.09.157-.016.316-.025.476-.025 1.967 0 3.643 1.263 4.286 3.035a3.33 3.33 0 0 0 .125-.078c2.752-1.815 6.06 1.318 4.476 4.237-1.197 2.2.452 4.88 2.922 4.748 3.277-.173 4.6 4.223 1.792 5.944a3.305 3.305 0 0 0-.246.166c1.87.581 3.23 2.349 3.23 4.44 0 1.18-.434 2.256-1.147 3.075.046.2.072.403.08.607z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M21.688 56.318c.957 1.531 3.646 28.432 11.718 28.432 8.074 0 11.719-27.4 11.719-28.827-12.361-7.081-23.438.395-23.438.395z\\\" />\\r\\n        <path fill=\\\"#0F5FA9\\\" d=\\\"M33.875 73.969L26.232 54.75c-4.122 0-17.67 9.416-17.67 18.183V96h50.626V72.933c0-8.767-13.551-18.183-17.671-18.183l-7.642 19.219z\\\" />\\r\\n        <path fill=\\\"#3C84C5\\\" d=\\\"M26.26 53.295c-2.225.767-5.507 2.845-5.507 2.845-.167 6.72 6.139 13.5 6.139 13.5l1.28-4.298 4.819 9.016 2.567.08 4.433-8.147 1.806 4.574c6.084-10.446 5.152-14.842 5.152-14.842-2.43-2.06-5.493-3.148-5.493-3.148L34.19 71.962l-7.93-18.667z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M35.561 21.015c.245 1.877 1.79 3.323 3.659 3.323 1.699 0 3.13-1.197 3.56-2.826a4.17 4.17 0 0 1-.15 1.172c-1.088 3.964 4.522 7.02 7.272 4.057.442-.223 1.022-.172 1.737.155.52 1.721.88 3.537 1.054 5.42.088-.02.178-.03.28-.03.88 0 1.527.74 1.527 1.652v5.958c0 .914-.635 1.652-1.517 1.652-.352 0-.596-.12-.859-.32l-.06.263c-1.328 5.986-4.55 10.844-8.844 13.785-2.88 2.05-6.233 3.224-9.814 3.224-2.529 0-4.944-.586-7.16-1.652-5.737-2.583-10.124-8.27-11.676-15.623-.264.202-.495.323-.848.323-.881 0-1.41-.738-1.41-1.652v-6.221c1.803 1.489 5.75 1.044 6.48-1.988.724-3.014 4.345-4.025 6.418-1.793 2.751 2.963 7.473.122 6.387-3.84-.75-2.73 1.4-5.272 3.964-5.04z\\\" />\\r\\n        <g>\\r\\n            <g fill=\\\"#635E59\\\">\\r\\n                <path d=\\\"M26.68 37.671c-1.356.102-1.736-1.897-1.327-3.203.077-.248.526-1.375 1.32-1.375.795 0 1.145.616 1.194.722.584 1.273.297 3.744-1.187 3.856M41.82 37.671c1.357.102 1.737-1.897 1.328-3.203-.077-.248-.526-1.375-1.321-1.375-.794 0-1.145.616-1.193.722-.585 1.273-.298 3.744 1.186 3.856\\\" />\\r\\n            </g>\\r\\n            <path fill=\\\"#D1BFA3\\\" fill-rule=\\\"nonzero\\\" d=\\\"M34.68 39.97c.798-.123 1.343-.046 1.538.194.737.905.501 1.863-.762 2.649-.665.413-1.58.559-2.063.344a.469.469 0 0 0-.38.858c.8.354 2.031.158 2.938-.406 1.717-1.068 2.11-2.666.994-4.037-.472-.58-1.308-.698-2.407-.528a.469.469 0 1 0 .143.926z\\\" />\\r\\n            <path fill=\\\"#D19E9C\\\" fill-rule=\\\"nonzero\\\" d=\\\"M40.024 46.805a4.27 4.27 0 0 1-.295.527 6.648 6.648 0 0 1-.998 1.214c-1.198 1.152-2.759 1.818-4.745 1.757-1.937-.06-3.49-.715-4.708-1.772a6.988 6.988 0 0 1-1.111-1.219 4.265 4.265 0 0 1-.33-.526.469.469 0 1 0-.842.414c.069.14.203.368.408.656a7.92 7.92 0 0 0 1.26 1.382c1.375 1.194 3.132 1.936 5.294 2.002 2.252.07 4.051-.699 5.424-2.018a7.58 7.58 0 0 0 1.138-1.386c.184-.288.303-.516.364-.656a.469.469 0 1 0-.86-.375z\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"mor1\",\n  \"use\": \"mor1-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"mor1\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#8B5F26\\\" d=\\\"M10.438 32.032C10.438 17.655 21.008 6 34.052 6 47.092 6 57.72 17.623 57.72 32v.316s.027 27.71-23.675 27.71c-23.7 0-23.608 9.536-23.608 9.536V33.188v-1.156z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M21.688 56.318c.957 1.531 3.646 28.432 11.718 28.432 8.074 0 11.719-27.4 11.719-28.827-12.361-7.081-23.438.395-23.438.395z\\\" />\\r\\n        <path fill=\\\"#A13A28\\\" d=\\\"M44.825 55.856c5.621 2.764 14.362 10.253 14.362 17.197V96H8.563V73.053c0-6.7 7.998-13.907 13.554-16.888-.281.172-.43.275-.43.275.958 1.586 3.531 8.623 11.603 8.623 8.074 0 11.835-7.555 11.835-9.032-.1-.06-.2-.118-.3-.175z\\\" />\\r\\n        <path fill=\\\"#F5A096\\\" d=\\\"M48.712 58.204a36.674 36.674 0 0 1 4.044 3.316L48.127 75.45a8.204 8.204 0 0 1-.654 3.054c3.446 1.878 6.213 4.571 7.965 8.065V96H9.5c0-7.668 3.367-13.243 8.657-16.667 3.789-2.357 8.569-3.539 14.35-3.539 3.882 0 7.253.677 10.15 1.953a.524.524 0 0 0 .69-.264.517.517 0 0 0-.266-.684c-3.034-1.336-6.55-2.04-10.574-2.04-5.194 0-9.633.93-13.313 2.8l-1.205-4.783-3.569-10.793a35.803 35.803 0 0 1 3.988-3.439l3.537 9.983.344.079a8.357 8.357 0 0 1 4.96-1.62 8.36 8.36 0 0 1 6.264 2.807 8.36 8.36 0 0 1 6.264-2.806c1.83 0 3.522.584 4.898 1.574.134-.032.269-.065.403-.099l3.634-10.258z\\\" />\\r\\n        <path fill=\\\"#A13A28\\\" d=\\\"M29.628 88.83c-1.567-1.788-2.09-5.364 0-6.555 1.26-.718 2.519-.243 3.778.985 1.26-1.228 2.519-1.703 3.778-.985 2.09 1.191 1.568 4.767 0 6.554-.879 1.002-3.646 3.484-3.778 3.42-.132.064-2.899-2.418-3.778-3.42z\\\" />\\r\\n        <path fill=\\\"#E6E5E2\\\" fill-rule=\\\"nonzero\\\" d=\\\"M55.438 85.43V96H40.816c-.56 0-1.013-.455-1.013-1.016 0-.56.453-1.015 1.013-1.015h5.572v-.508h-8.131c-.546 0-.987-.455-.987-1.015 0-.561.441-1.016.987-1.016h8.131v-.508h-9.65c-.545 0-.988-.455-.988-1.016 0-.56.443-1.015.988-1.015h9.65v-.508h-6.962c-.63 0-1.143-.455-1.143-1.016 0-.56.512-1.015 1.143-1.015h9.051l1.093-.508h-4.702c-.56 0-1.013-.455-1.013-1.016 0-.56.454-1.016 1.013-1.016h7.4c.396 0 .73.241 1.212.508.213.118.865.488 1.957 1.11z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M14.693 31.8s-.098.559-.225.467a1.522 1.522 0 0 0-.568-.116c-.87 0-1.577.73-1.579 1.631l-.008 6.24c-.002.903.701 1.635 1.572 1.636.349 0 .668-.12.93-.319 2.105 10.049 9.61 17.146 18.557 17.161 8.949.015 16.477-7.058 18.611-17.1.26.2.58.321.93.322.87 0 1.576-.73 1.577-1.63l.01-6.241c0-.902-.703-1.634-1.573-1.636-.2 0-.392.043-.568.114C32.178 34.72 25.139 21 24.544 21c0 0-8.44 7.9-9.85 10.8z\\\" />\\r\\n        <g>\\r\\n            <g fill=\\\"#635E59\\\">\\r\\n                <path d=\\\"M26.68 37.671c-1.356.102-1.736-1.897-1.327-3.203.077-.248.526-1.375 1.32-1.375.795 0 1.145.616 1.194.722.584 1.273.297 3.744-1.187 3.856M41.82 37.671c1.357.102 1.737-1.897 1.328-3.203-.077-.248-.526-1.375-1.321-1.375-.794 0-1.145.616-1.193.722-.585 1.273-.298 3.744 1.186 3.856\\\" />\\r\\n            </g>\\r\\n            <path fill=\\\"#D1BFA3\\\" fill-rule=\\\"nonzero\\\" d=\\\"M34.68 39.97c.798-.123 1.343-.046 1.538.194.737.905.501 1.863-.762 2.649-.665.413-1.58.559-2.063.344a.469.469 0 0 0-.38.858c.8.354 2.031.158 2.938-.406 1.717-1.068 2.11-2.666.994-4.037-.472-.58-1.308-.698-2.407-.528a.469.469 0 1 0 .143.926z\\\" />\\r\\n            <path fill=\\\"#D19E9C\\\" fill-rule=\\\"nonzero\\\" d=\\\"M40.024 46.805a4.27 4.27 0 0 1-.295.527 6.648 6.648 0 0 1-.998 1.214c-1.198 1.152-2.759 1.818-4.745 1.757-1.937-.06-3.49-.715-4.708-1.772a6.988 6.988 0 0 1-1.111-1.219 4.265 4.265 0 0 1-.33-.526.469.469 0 1 0-.842.414c.069.14.203.368.408.656a7.92 7.92 0 0 0 1.26 1.382c1.375 1.194 3.132 1.936 5.294 2.002 2.252.07 4.051-.699 5.424-2.018a7.58 7.58 0 0 0 1.138-1.386c.184-.288.303-.516.364-.656a.469.469 0 1 0-.86-.375z\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"mor2\",\n  \"use\": \"mor2-usage\",\n  \"viewBox\": \"0 0 68 96\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 68 96\\\" id=\\\"mor2\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <path fill=\\\"#3E3832\\\" d=\\\"M10.438 32.032C10.438 17.655 21.008 6 34.052 6 47.092 6 57.72 17.623 57.72 32v.316s.027 27.71-23.675 27.71c-23.7 0-23.608 9.536-23.608 9.536V33.188v-1.156z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M21.688 56.318c.957 1.531 3.646 28.432 11.718 28.432 8.074 0 11.719-27.4 11.719-28.827-12.361-7.081-23.438.395-23.438.395z\\\" />\\r\\n        <path fill=\\\"#0C5472\\\" d=\\\"M44.825 55.856c5.621 2.764 14.362 10.253 14.362 17.197V96H8.563V73.053c0-6.7 7.998-13.907 13.554-16.888-.281.172-.43.275-.43.275.958 1.586 3.531 8.623 11.603 8.623 8.074 0 11.835-7.555 11.835-9.032-.1-.06-.2-.118-.3-.175z\\\" />\\r\\n        <path fill=\\\"#F5A096\\\" d=\\\"M48.719 58.2c1.358.96 2.73 2.066 4.03 3.3l-4.622 13.949a8.204 8.204 0 0 1-.654 3.054c3.446 1.878 6.213 4.571 7.965 8.065V96H9.5c0-7.668 3.367-13.243 8.657-16.667 3.789-2.357 8.569-3.539 14.35-3.539 3.882 0 7.253.677 10.15 1.953a.524.524 0 0 0 .69-.264.517.517 0 0 0-.266-.684c-3.034-1.336-6.55-2.04-10.574-2.04-5.194 0-9.633.93-13.313 2.8l-1.205-4.783-3.569-10.793a35.803 35.803 0 0 1 3.988-3.439l3.537 9.983.344.079a8.357 8.357 0 0 1 4.96-1.62 8.36 8.36 0 0 1 6.264 2.807 8.36 8.36 0 0 1 6.264-2.806c1.83 0 3.522.584 4.898 1.574.134-.032.269-.065.403-.099l3.64-10.262z\\\" />\\r\\n        <path fill=\\\"#A13A28\\\" d=\\\"M29.628 88.83c-1.567-1.788-2.09-5.364 0-6.555 1.26-.718 2.519-.243 3.778.985 1.26-1.228 2.519-1.703 3.778-.985 2.09 1.191 1.568 4.767 0 6.554-.879 1.002-3.646 3.484-3.778 3.42-.132.064-2.899-2.418-3.778-3.42z\\\" />\\r\\n        <path fill=\\\"#E6E5E2\\\" fill-rule=\\\"nonzero\\\" d=\\\"M55.438 85.43V96H40.816c-.56 0-1.013-.455-1.013-1.016 0-.56.453-1.015 1.013-1.015h5.572v-.508h-8.131c-.546 0-.987-.455-.987-1.015 0-.561.441-1.016.987-1.016h8.131v-.508h-9.65c-.545 0-.988-.455-.988-1.016 0-.56.443-1.015.988-1.015h9.65v-.508h-6.962c-.63 0-1.143-.455-1.143-1.016 0-.56.512-1.015 1.143-1.015h9.051l1.093-.508h-4.702c-.56 0-1.013-.455-1.013-1.016 0-.56.454-1.016 1.013-1.016h7.4c.396 0 .73.241 1.212.508.213.118.865.488 1.957 1.11z\\\" />\\r\\n        <path fill=\\\"#E7E5E2\\\" d=\\\"M14.693 31.8s-.098.559-.225.467a1.522 1.522 0 0 0-.568-.116c-.87 0-1.577.73-1.579 1.631l-.008 6.24c-.002.903.701 1.635 1.572 1.636.349 0 .668-.12.93-.319 2.105 10.049 9.61 17.146 18.557 17.161 8.949.015 16.477-7.058 18.611-17.1.26.2.58.321.93.322.87 0 1.576-.73 1.577-1.63l.01-6.241c0-.902-.703-1.634-1.573-1.636-.2 0-.392.043-.568.114C32.178 34.72 25.139 21 24.544 21c0 0-8.44 7.9-9.85 10.8z\\\" />\\r\\n        <g>\\r\\n            <g fill=\\\"#635E59\\\">\\r\\n                <path d=\\\"M26.68 37.671c-1.356.102-1.736-1.897-1.327-3.203.077-.248.526-1.375 1.32-1.375.795 0 1.145.616 1.194.722.584 1.273.297 3.744-1.187 3.856M41.82 37.671c1.357.102 1.737-1.897 1.328-3.203-.077-.248-.526-1.375-1.321-1.375-.794 0-1.145.616-1.193.722-.585 1.273-.298 3.744 1.186 3.856\\\" />\\r\\n            </g>\\r\\n            <path fill=\\\"#D1BFA3\\\" fill-rule=\\\"nonzero\\\" d=\\\"M34.68 39.97c.798-.123 1.343-.046 1.538.194.737.905.501 1.863-.762 2.649-.665.413-1.58.559-2.063.344a.469.469 0 0 0-.38.858c.8.354 2.031.158 2.938-.406 1.717-1.068 2.11-2.666.994-4.037-.472-.58-1.308-.698-2.407-.528a.469.469 0 1 0 .143.926z\\\" />\\r\\n            <path fill=\\\"#D19E9C\\\" fill-rule=\\\"nonzero\\\" d=\\\"M40.024 46.805a4.27 4.27 0 0 1-.295.527 6.648 6.648 0 0 1-.998 1.214c-1.198 1.152-2.759 1.818-4.745 1.757-1.937-.06-3.49-.715-4.708-1.772a6.988 6.988 0 0 1-1.111-1.219 4.265 4.265 0 0 1-.33-.526.469.469 0 1 0-.842.414c.069.14.203.368.408.656a7.92 7.92 0 0 0 1.26 1.382c1.375 1.194 3.132 1.936 5.294 2.002 2.252.07 4.051-.699 5.424-2.018a7.58 7.58 0 0 0 1.138-1.386c.184-.288.303-.516.364-.656a.469.469 0 1 0-.86-.375z\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","var map = {\n\t\"./far1.svg\": 46863,\n\t\"./far2.svg\": 77947,\n\t\"./far3.svg\": 83630,\n\t\"./far4.svg\": 33383,\n\t\"./medmor1.svg\": 17426,\n\t\"./medmor2.svg\": 18320,\n\t\"./mor1.svg\": 42515,\n\t\"./mor2.svg\": 51064\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 93911;","var map = {\n\t\"./components/Attachment.stories.tsx\": 77871,\n\t\"./components/AttachmentList.stories.tsx\": 5101,\n\t\"./components/DinePlikter.stories.tsx\": 33822,\n\t\"./components/EksternUrl.stories.tsx\": 30795,\n\t\"./components/Fieldset.stories.tsx\": 41824,\n\t\"./components/Foreldrepar.stories.tsx\": 92887,\n\t\"./components/FormikFileUploader.stories.tsx\": 827,\n\t\"./components/InfoOmSøknaden.stories.tsx\": 92112,\n\t\"./components/InnholdMedIllustrasjon.stories.tsx\": 18638,\n\t\"./components/InteractiveListElement.stories.tsx\": 84469,\n\t\"./components/LenkeKnapp.stories.tsx\": 20180,\n\t\"./components/Personkort.stories.tsx\": 15654,\n\t\"./components/Sirkelmaske.stories.tsx\": 47355,\n\t\"./components/Veileder.stories.tsx\": 88604,\n\t\"./pages/ByttBrowserModal.stories.tsx\": 67558,\n\t\"./pages/DinePersonopplysningerModal.stories.tsx\": 79844,\n\t\"./pages/SøknadSendt.stories.tsx\": 41234,\n\t\"./pages/Velkommen.stories.tsx\": 18855,\n\t\"./steps/annen-forelder/AnnenForelder.stories.tsx\": 44940,\n\t\"./steps/inntektsinformasjon/Inntektsinformasjon.stories.tsx\": 97454,\n\t\"./steps/manglende-vedlegg/ManglendeVedlegg.stories.tsx\": 72093,\n\t\"./steps/om-barnet/OmBarnet.stories.tsx\": 59797,\n\t\"./steps/oppsummering/Oppsummering.stories.tsx\": 74529,\n\t\"./steps/søkersituasjon/Søkersituasjon.stories.tsx\": 3717,\n\t\"./steps/utenlandsopphold/Utenlandsopphold.stories.tsx\": 32421,\n\t\"./steps/uttaksplan-info/far-medmor-fødsel-begge-har-rett/FarMedmorFødselBeggeHarRett.stories.tsx\": 7056,\n\t\"./steps/uttaksplan-info/førstegangssøknad-med-annen-part/FarMedmorFødselOgMorHarIkkeRett.stories.tsx\": 87102,\n\t\"./steps/uttaksplan-info/mor-far-adopsjon/MorFarAdopsjon.stories.tsx\": 6600,\n\t\"./steps/uttaksplan-info/mor-fødsel/MorFødsel.stories.tsx\": 56481\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 54306;"],"names":["require","window","REST_API_URL","UTTAK_API_URL","decorators","Story","id","style","padding","ownKeys","object","enumerableOnly","keys","Object","symbols","sym","_defineProperty","obj","key","value","enumerable","configurable","writable","config","logger","JSON","decorator","addDecorator","loader","addLoader","addParameters","_objectSpread","target","i","arguments","source","enhancer","addArgTypesEnhancer","addArgsEnhancer","setGlobalRender","v","console","title","component","Template","args","PendingVedleggUtenUrl","attachment","pending","filename","VedleggMedUrl","url","Filstørrelse","filesize","SlettKnapp","storySource","Default","attachments","VedleggListeMedFilstørrelse","showFileSize","lenkeTekst","EkstraTekst","tekst","Fieldset","legend","Foreldrepar","forelder1","MorOgFar","forelder2","MorHalvtSynlig","variant","ForeldreSeparert","ForeldreNærmere","Kompakt","kompakt","name","label","attachmentType","AttachmentType","skjemanummer","Skjemanummer","FilSomErLastetOpp","context","søknad","type","harGodkjentVilkår","søkersituasjon","situasjon","rolle","barn","fødselsdatoer","antallBarn","datoForAleneomsorg","dokumentasjonAvAleneomsorg","annenForelder","kanIkkeOppgis","søker","informasjonOmUtenlandsopphold","erEndringssøknad","dekningsgrad","uttaksplan","version","currentRoute","søkerinfo","saker","fnr","fornavn","etternavn","kjønn","fødselsdato","ikkeNordiskEøsLand","erIUttaksplanenSteg","ekisterendeSak","tilgjengeligeStønadskontoer","konto","StønadskontoType","dager","eksisterendeSak","AnnenForelder","erAleneOmOmsorg","harRettPåForeldrepenger","InfoOmMorsSak","erAnnenPartsSak","Periodetype","gradert","stillingsprosent","ønskerSamtidigUttak","samtidigUttakProsent","tidsperiode","fom","dayjs","tom","InnholdMedIllustrasjon","tittel","MedIllustrasjon","illustrasjoner","uker","MedIllustrasjonOgInfoboks","infoboks","InteractiveListElement","text","onEdit","alert","onDelete","deleteLinkText","editButtonAriaText","deleteButtonAriaText","ManglendeDokumentasjon","missingDocumentation","LenkeKnapp","onClick","Personkort","children","PersonkortMedIkon","ikon","PersonkortMedInvertertTekst","invertert","PersonkortMedTextAlignBottom","textValign","PengerIkon","size","focusable","role","viewBox","width","height","fill","fillRule","d","cx","cy","r","Sirkelmaske","InaktivSirkelmaske","diameter","aktiv","AktivSirkelmaske","AktivSirkelmaskeMedBakgrunn","farge","margin","MedAnsiktUndrende","ansikt","MedAnsiktSkeptisk","MedFargeGrøn","MedFargeBlå","MedFargeTransparent","MedStilKompakt","stil","ByttBrowserModalImpl","skalEndreNettleser","React","isOpen","toggleIsOpen","intl","useIntl","cls","bemUtils","className","contentLabel","intlUtils","closeButton","onRequestClose","withIntl","base64ToArrayBuffer","base64","binaryString","bytes","Uint8Array","openPdfPreview","browserInfo","detect","pdfBlob","Blob","URL","SpotlightLetter","props","xmlns","xmlns-xlink","stroke","strokeWidth","xlinkHref","transform","KvitteringHeader","kvittering","bem","pdf","mottattDato","block","padBottom","tag","values","visible","undefined","href","e","KvitteringSuksess","missingAttachments","isMissingAttachments","guid","a","apneLabel","StatusBoks","saksNr","links","border","UtbetalingerIkon","rest","rx","ry","KalenderIkon","KoffertIkon","SendSøknadIkon","SøknadSendtSectionHeader","info","infoApneLabel","SøknadSendtTittel","aria-label","SøknadSendt","useState","setKvittering","useSøkerinfo","person","arbeidsforhold","useEffect","Api","innsendingstidspunkt","response","logAmplitudeEvent","app","team","pageKey","PageKeys","textAlign","erFerdig","bankkonto","mock","restMock","apiMock","MedBankkonto","kontonummer","MedArbeidsforhold","VenterPåLagring","VelkommenFormField","getInitialVelkommenValues","harForståttRettigheterOgPlikter","VelkommenFormComponents","getTypedFormComponents","validateHarForståttRettigheterOgPlikter","Velkommen","locale","onChangeLocale","useSøknad","isDinePersonopplysningerModalOpen","setDinePersonopplysningerModalOpen","onValidSubmit","useOnValidSubmit","onValidSubmitHandler","actionCreator","SøknadRoutes","FormikWrapper","initialValues","onSubmit","renderForm","Form","includeButtons","availableLocales","toggle","dialog","ConfirmationCheckbox","validate","HarAlleredeLestOgForstått","AnnenForelderFormField","AnnenForelderFormComponents","initialAnnenForelderValues","YesOrNo","utenlandskFnr","aleneOmOmsorg","bostedsland","mapAnnenForelderFormToState","hasValue","erUfør","convertYesOrNoOrUndefinedToBoolean","erInformertOmSøknaden","getAnnenForelderFormInitialValues","isAnnenForelderOppgitt","convertBooleanOrUndefinedToYesOrNo","erMorUfør","registrertBarn","isAnnenForelderIkkeOppgitt","AnnenForelderFormConfig","isAnswered","isIncluded","isOptional","skalOppgiPersonalia","søkerRolle","gjelderStebarnsadopsjon","isAnnenForelderKanIkkeOppgisIncluded","visibilityFilter","parentQuestion","isFarEllerMedmor","annenForelderQuestionsConfig","Questions","AvtaleAtFarTarUtForeldrepengerVeileder","annenForelderNavn","fargetema","svg","transparentBackground","navn","FarDokumentasjonAleneomsorgVeileder","MåOrientereAnnenForelderVeileder","validateDatoForAleneomsorg","isISODateString","dato","formatDate","familiehendelsedato","validateFornavn","validateEtternavn","isValidFødselsnummer","validateFødselsnummer","validFnrResult","isFødselsnummerFormatValid","erUtenlandskFnr","isSixteenOrOlder","isFødselsnummerValid","Number","mnd","år","OppgiPersonalia","visibility","gjelderAdopsjon","søkersFødselsnummer","Input","disabled","Checkbox","CountrySelect","useAlpha3Code","RegistrertePersonalia","formaterNavn","getAlderFraDato","getFamiliehendelsedato","getRegistrertBarnOmDetFinnes","useCallback","newSøker","newBarn","onAvbrytSøknad","useAvbrytSøknad","formValues","getVisbility","isAdoptertStebarn","bannerTitle","backLinkHref","getPreviousStepHref","activeStepId","pageTitle","stepTitle","onCancel","onContinueLater","steps","cleanup","cleanAnnenForelderFormData","cleanedData","lagSendSenereDokumentNårIngenAndreFinnes","includeValidationSummary","YesOrNoQuestion","description","DatePicker","minDate","textAlignCenter","withRouter","data","location","SkalOppgiPersonalia","ForFar","InntektsinformasjonFormField","InntektsinformasjonFormComponents","getTitle","AnnenInntektType","AndreInntekterListe","andreInntekter","deleteAnnenInntekt","selectAnnenInntekt","listStyle","formatTidsperiodeMedValgfriSluttdato","annenInntekt","AndreInntekterFormField","AndreInntekterModalFormComponents","initialAndreInntekterFormValues","land","dokumentasjon","getSkjemanummer","getInitialAndreInntekterFormValues","navnPåArbeidsgiver","pågående","mapAnnenInntektModalValuesToState","arbeidsgiverNavn","vedlegg","AndreInntekterModalFormConfig","validateAnnenInntektFom","isDateInTheFuture","isDateABeforeDateB","validateAnnenInntektTom","AndreInntekterModal","selectedAnnenInntekt","addAnnenInntekt","editAnnenInntekt","getVeilederMessageId","shouldCloseOnOverlayClick","andreInntekterModalQuestionsConfig","cleanupAndreInntekterForm","RadioPanelGroup","radios","placeholder","fullscreenOverlay","showYearSelector","maxDate","AndreInntekter","andreInntekterInformasjon","setAndreInntekterInformasjon","isModalOpen","setIsModalOpen","setSelectedAnnenInntekt","hattAndreInntekter","backgroundColor","marginBottom","updatedandreInntekterInformasjon","updatedAndreInntekterInformasjon","inntekt","htmlType","handleOnLeggTil","ArbeidsforholdInformasjon","harArbeidsforhold","EgenNæringListe","næringsInformasjon","deleteNæring","selectNæring","næring","HvemKanDriveMedEgenNæring","EgenNæringModalFormField","EgenNæringModalFormComponents","initialEgenNæringModalValues","typer","registrertINorge","orgnr","yrkesAktivDato","datoForEndring","inntektEtterEndring","forklaringEndring","getInitialEgenNæringModalValues","navnPåNæringen","næringsresultat","hattVarigEndringAvNæringsinntektSiste4Kalenderår","harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene","harRegnskapsfører","navnRegnskapsfører","telefonRegnskapsfører","regnskapsførerNærVennEllerFamilie","mapEgenNæringModalFormValuesToState","endringAvNæringsinntektInformasjon","regnskapsfører","forklaring","næringsinntektEtterEndring","parseInt","telefonnummer","erNærVennEllerFamilie","næringstyper","organisasjonsnummer","registrertILand","næringsinntekt","oppstartsdato","erVirksomhetRegnetSomNyoppstartet","EgenNæringModalFormConfig","getDateFromDateString","validateEgenNæringFom","validateEgenNæringTom","validateEgenNæringOrgnr","erGyldigNorskOrgnummer","validateEgenNæringForklaringTilEndring","validateEgenNæringEndringAvInntektsDato","validateEgenNæringYrkesAktivDatoDato","validateNumber","valueNumber","getNumberFromNumberInputValue","Math","OrgnummerEllerLand","NumberInput","Regnskapsfører","EgenNæringModal","selectedNæring","addNæring","editNæring","egenNæringModalQuestionsConfig","cleanupEgenNæringForm","CheckboxPanelGroup","checkboxes","Næringstype","Textarea","maxLength","EgenNæring","egenNæringInformasjon","setEgenNæringsInformasjon","setSelectedNæring","updatedEgenNæringInformasjon","nær","validateFrilansoppstartsDato","FrilansoppdragListe","frilansoppdrag","deleteFrilansoppdrag","selectOppdrag","oppdrag","HvemKanVæreFrilanser","FrilansoppdragModalFormField","FrilansoppdragModalFormComponents","initialFrilansoppdragModalValues","navnOppdragsgiver","mapFrilansoppdragModalValuesToState","getInitialFrilansoppdragModalValues","FrilansoppdragModalFormConfig","validateNavnPåOppdragsgiver","validateOppdragFom","validatePågåendeOppdrag","validateOppdragTom","FrilansoppdragModal","selectedFrilansoppdrag","addFrilansoppdrag","editFrilansoppdrag","frilansoppdragModalQuestionsConfig","cleanupFrilansoppdragForm","Frilans","setFrilansoppdrag","selectedOppdrag","setSelectedOppdrag","hattInntektSomFrilans","frilansOppstartsDato","jobberFremdelesSomFrilanser","updatedFrilansoppdrag","opp","inntektSomFosterforelder","InfoTilFiskere","rel","initialInntektsinformasjonFormValues","getInitialInntektsinformasjonFormValues","hattInntektSomNæringsdrivende","oppdragForNæreVennerEllerFamilie","InntektsinformasjonFormConfig","Inntektsinformasjon","updatedSøker","mapInntektsinformasjonFormDataToState","frilansInformasjon","oppstart","jobberFremdelesSomFrilans","harJobbetForNærVennEllerFamilieSiste10Mnd","driverFosterhjem","oppdragForNæreVennerEllerFamilieSiste10Mnd","språkkode","harHattAnnenInntektSiste10Mnd","harJobbetSomFrilansSiste10Mnd","harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd","andreInntekterSiste10Mnd","selvstendigNæringsdrivendeInformasjon","inntektsinforMasjonQuestionsConfig","HarArbeidsforhold","arbeidsgiverId","arbeidsgiverIdType","ManglendeVedleggFormField","ManglendeVedleggFormComponents","ManglendeVedleggFormConfig","manglendeVedleggTyper","manglendeVedleggQuestionsConfig","finnSendSenereVedlegg","path","currentKey","foundAttachments","previousEntries","isArrayOfAttachments","Array","element","InnsendingsType","getInitValues","getManglendeVedleggValues","fornavnAnnenForelder","ManglendeVedlegg","alleSendSenereVedlegg","alleStierMedManglendeVedlegg","sti","lagSti","stiDeler","isNaN","formatertSti","_","førsteUttaksEllerUttsettelsesPeriode","p","isInfoPeriode","erLikEllerMindreEnnFireUkerTilUttaketStarter","keyISoknad","periode","sendSenereVedlegg","isAttachmentForPeriode","render","lagSendSenereDokument","terminbekreftelse","ManglerVedleggForUlikePerioder","OmBarnetFormField","OmBarnetFormComponents","validateFødselsdato","etterDagensDato","validateFødselsdatoAdopsjon","adopsjonsdato","barnetErUnder15årPåAdopsjonsdato","validateTermindato","erMindreEnn3UkerSiden","erIUke22Pluss3","validateTermindatoFødsel","validateAdopsjonsdato","AdopsjonAnnetBarn","useTwoColumns","Select","ISOStringToDate","adoptertIUtlandet","ankomstdato","validateAnkomstdato","omsorgsovertakelse","AdopsjonEktefellesBarn","BarnFødtEllerAdoptert","adopsjonAvEktefellesBarn","Fødsel","erBarnetFødt","termindato","Termin","terminbekreftelsedato","OmBarnetFormConfig","gjelderAnnetBarn","registrerteBarn","valgteBarn","skalViseErBarnFødt","includeTermindato","sixWeeksAfterBirthday","getOmBarnetInitialValues","initialOmBarnetValues","isFødtBarn","isUfødtBarn","isAdoptertAnnetBarn","RegistrertBarn","setFieldValue","subtext","autoComplete","OmBarnet","mapOmBarnetFormDataToState","eldsteBarn","velgEldsteBarn","BarnType","dateToISOString","ForAdopsjon","OppsummeringsPunkt","AnnenForelderOppsummering","BarnAdoptertIUtlandetDetaljer","getTerminEllerFødselTittel","BarnOppsummering","getAntallBarnTekst","antallBarnString","getTerminEllerFødselsdato","OppsummeringsPanel","KvinneIkon","display","xmlnsXlink","Personalia","UtenlandsoppholdOppsummeringListe","utenlandsopphold","tidligereOpphold","opphold","countries","erAdoptertBarn","UtenlandsoppholdOppsummering","senereOpphold","erINorgePåFamiliehendelsedato","getErINorgePåFamiliehendelsedato","erINorge","doesTidsperiodeContainDate","tidOpphold","senOpphold","OppsummeringFormField","initialOppsummeringValues","getInitialOppsummeringValues","OppsummeringFormComponents","validateHarGodkjentOppsummering","AnnenInntektDetaljer","jobbIUtlandetInntekt","isAttachmentWithError","renderListOfAttachmentPreviewLinks","InntekterTabell","list","l","AndreInntekterOppsummering","headerVenstre","headerHøyre","content","FrilansOppsummering","Næringsdetaljer","næringstype","SelvstendigNæringsdrivendeOppsummering","ArbeidsforholdOgAndreInntekterOppsummering","Oppsummering","harGodkjentOppsummering","MedAnnenForelder","MedAdoptertBarn","MedUtenlandsopphold","iNorgeNeste12Mnd","iNorgeSiste12Mnd","MedArbeidsforholdOgAndreInntekter","MedArbeidsforholdOgAndreInntekterJobbetForNærFamilie","MedSelvstendigNæringsdrivende","MedSelvstendigNæringsdrivendeUtenDiverse","MedAndreInntekterJobbIUtlandet","MedAndreInntekterMilitærtjeneste","SøkersituasjonFormField","initialSøkersituasjonValues","getInitialSøkerSituasjonValues","stateValues","SøkersituasjonFormComponents","VelgRolle","SøkersituasjonFormConfig","Søkersituasjon","mapSøkersituasjonFormDataToState","formData","søkerKjønn","allQuestionsAnswered","Far","UtenlandsoppholdFieldNames","initialUtenlandsoppholdFormData","UtenlandsoppholdFormComponents","BostedUtlandFormFields","UtenlandsoppholdFormConfig","harBoddINorgeSiste12Mnd","utenlandsoppholdSiste12Mnd","skalBoINorgeNeste12Mnd","utenlandsoppholdNeste12Mnd","utenlandsoppholdFormQuestions","mapBostedToFormValues","bosted","landkode","BostedUtlandForm","erFremtidigOpphold","onFormikSubmit","updatedBosted","isValidBostedUtland","Error","fromDatepickerProps","dateRangeValidation","toDatepickerProps","validateRequiredField","BostedUtlandList","bosteder","getItemId","getItemTitle","getCountryName","labelRenderer","renderBostedUtlandLabel","formatDateExtended","items","BostedUtlandListAndDialog","labels","dialogWidth","sortFunc","formRenderer","item","listRenderer","mapUtenlandsoppholdTilBostedUtland","getInitialUtenlandsoppholdValuesFromState","init","mapBostedUtlandToUtenlandsopphold","bostedUtland","validateUtenlandsoppholdNeste12Mnd","dateRanges","from","u","to","dateRangesCollide","dateRangesExceedsRange","date1YearFromNow","validateUtenlandsoppholdSiste12Mnd","Date","Utenlandsopphold","mapUtenlandsoppholdFormDataToState","yes","no","validateYesOrNoIsAnswered","addLabel","modalTitle","UttaksplanInfoFarMedmorFødselBeggeHarRett","stønadskonto100","stønadskonto80","UttaksplanDerMorIkkeHarRettPåForeldrepenger","søkerinfoFarSøker","UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør","contextFarSøker","UttaksplanMedAleneomsorg","søkerinfoMorSøker","UttaksplanMedDeltUttakDerMorSøker","contextMorSøker","UttaksplanMedDeltUttakDerFarSøker","UttaksplanMedPrematurFødsel","UttaksplanMedDeltUttak","UttaksplanMedFlerbarnsukerTvillinger","FeatureToggle","Environment","appSettings","LOGIN_URL","APP_VERSION","FAMILIE","eventName","logToConsoleOnly","eventData","setTimeout","amplitude","error","DEFAULT_OPTIONS","isSuspended","useRequest","options","setData","setError","axiosInstance","getAxiosInstance","res","dateStringToDateObjectMapper","_key","moment","storageParser","storageResponse","UttakArbeidType","PeriodeResultatType","FamiliehendelseType","getFamiliehendelseType","TERM","ADOPSJON","MorsAktivitet","harUttaksdager","Perioden","harGyldigTidsperiode","isValidTidsperiode","korrigerTidsperiodeTilGyldigUttaksdag","fomOk","erUttaksdag","tomOk","Uttaksdagen","getForelderForPeriode","saksperiode","søkerErFarEllerMedmor","Forelder","beregnSamtidigUttaksProsent","egenProsent","utbetalingsprosent","mapAnnenPartInfoPeriodeFromSaksperiode","tidsperiodeDate","convertTidsperiodeToTidsperiodeDate","infotype","PeriodeInfoType","årsak","forelder","overskrives","resultatType","visPeriodeIPlan","skalVises","innvilgedePerioder","Tidsperioden","ip","getOppholdÅrsakFromSaksperiode","OppholdÅrsakType","annenPartSamtidigUttakPeriode","samtidigUttakProsentAnnenPart","samtidigUttaksprosent","mapPeriodeFromSaksperiode","erFarEllerMedmor","mapOverføringsperiodeFromSaksperiode","overfoeringAarsak","mapUttaksperiodeFromSaksperiode","grunnlag","omsorgsovertakelsesdato","familiehendelseDato","getRelevantFamiliehendelseDato","ønskerFlerbarnsdager","arbeidsformer","getArbeidsformFromUttakArbeidstype","orgnumre","morsAktivitetIPerioden","erMorForSyk","mapUtsettelseperiodeFromSaksperiode","utsettelsesperiode","erArbeidstaker","morsAktivitet","UtsettelseÅrsakType","orgnummer","Arbeidsform","mapInfoPeriodeFromAvslåttSaksperiode","avslåttPeriodeType","stønadskonto","gyldigeSaksperioder","INNVILGET","mapSaksperioderTilUttaksperioder","saksperioder","slåSammenLikePerioder","perioder","nyePerioder","infoPerioder","ordinærePerioder","tmp","forrigePeriode","index","arbeidstype","FRILANS","getStønadskontoTypeFromOppholdÅrsakType","erEksisterendeSakErDeltUttak","farMedmorErAleneOmOmsorg","farMedmorHarRett","morErAleneOmOmsorg","morHarRett","mapSaksperiodeFromDTO","oppholdAarsak","gjelderAnnenPart","returnPeriode","saksperiodeErInnvilget","filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode","likePerioder","periode2","reduceDuplikateSaksperioderGrunnetArbeidsforhold","inneholderDuplikatSaksperiode","resultatPerioder","periodeSomOverlever","s","arbeidsform","mapEksisterendeSakFromDTO","restGrunnlag","erDeltUttak","Dekningsgrad","familiehendelseType","formaterStønadskontoParamsDatoer","formaterDato","uttakBaseUrl","useGetSaker","withCredentials","sakerData","sakerError","useGetUttakskontoer","params","farHarRett","morHarAleneomsorg","farHarAleneomsorg","startdatoUttak","urlParams","omsorgsovertakelseDato","timeout","tilgjengeligeStønadskontoerData","tilgjengeligeStønadskontoerError","storeAppState","state","uttaksplanInfo","deleteStoredAppState","sendStorageKvittering","useGetEksisterendeSakMedFnr","søkerFnr","annenPart","annenPartFnr","eksisterendeSakAnnenPartData","eksisterendeSakAnnenPartError","useStoredAppState","transformResponse","storageData","storageError","søkerinfoData","søkerinfoError","useGetEksisterendeSak","saksnummer","eksisterendeSakData","eksisterendeSakError","apiBaseUrl","AxiosInstance","baseURL","Promise","CheckmarkIkon","VeilederNormal","strokeLinecap","points","Attachment","classnames","bytesString","ariaLabel","AttachmentList","classNames","DinePlikter","link","EksternUrl","marginLeft","EksternIkon","flexDirection","FlexibleSvg","iconRef","other","firstSvg","secondSvg","lessOpacity","saveAttachment","headers","VALID_EXTENSIONS","sjekkFiltypeVedlegg","alleNyeVedlegg","erGyldig","fileExtensionIsValid","ext","setErrors","oldState","lastOppVedlegg","AttachmentApi","replaceFn","antallEksisterendeVedlegg","removeFn","FormikFileUploader","onFileInputClick","otherProps","useFormikContext","errors","acceptedExtensions","onFilesSelect","push","replace","remove","mapFilerTilPendingVedlegg","filer","nyttVedlegg","mapFilTilVedlegg","fil","files","alleNyeGyldigeVedlegg","feil","deleteAttachment","ForeldreparSituasjon","SituasjonSirkel","valgtForelder","getSituasjonForelderSvg","farOgMor","mor","farMedmor","bareFar","bareMor","aleneomsorg","morOgMedmor","farOgFar","getAntallForeldreISituasjon","isValidStillingsprosent","pst","parseFloat","prettifyProsent","nbr","getStønadskontoNavn","navnPåForeldre","getNavnGenitivEierform","getUttaksprosentFromStillingsprosent","getForelderNavn","getPeriodeTittel","getOppholdskontoNavn","erMor","foreldernavn","getStønadskontoFromOppholdsårsak","InfoEksisterendePerioder","oppgittePerioder","navnForOverskrift","InfoOmSøknaden","getAntallUker","annenForelderKjønn","getKjønnFromFnr","getMorErAleneOmOmsorg","getFarMedmorErAleneOmOmsorg","getForeldreparSituasjon","skalViseInfoOmMorsSak","forelderVedAleneomsorg","hvem","getHvem","navnAnnenForelder","erAnnenPartsEksisterendeSak","getNavnPåForeldre","sisteInfoPeriode","Periodene","nesteMuligeUttaksdagEtterAnnenPart","navnGenitivEierform","infoperioder","visPlanTekst","søkersPerioder","getVarighetString","b","KalenderBakgrunnIkon","AntallUkerKalenderIkon","UkerSirkel","aria-hidden","Pencil","strokeLinejoin","VeilederKompakt","svgProps","Veileder","MAKS_PERMISJONSLENGDE_I_ÅR","MAKS_FERIEDAGER_ETT_ÅR","MAKS_FERIEDAGER_MED_OVERFØRING","ANTALL_UKER_MØDREKVOTE_ETTER_FØDSEL","ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL","MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL","foreldrepengesøknadInitialState","finnVedleggAvType","vedleggAvType","alleVedlegg","foreldrepengesøknadReducer","action","ForeldrepengesøknadContextActionKeys","payload","ForeldrepengesøknadContext","createContext","ForeldrepengesøknadContextProvider","useReducer","dispatch","contextValue","useMemo","setVelkommen","setSøkersituasjon","setOmBarnet","avbrytSøknad","AVBRYT_SØKNAD","updateCurrentRoute","applyStoredState","setAnnenForelder","setSøkerinfo","setSøker","setInformasjonOmUtenlandsopphold","setSaker","setUttaksplanInfo","setDekningsgrad","setVedlegg","useForeldrepengesøknadContext","useContext","isAdoptertBarn","adoptere","rettOgPlikt","fleksibeltuttak","papirsøknad","viktigeFrister","nav_aktivitetskrav","brukerstøtte","innsyn","morsAktivitetskrav","frilanserInfoBoks","næringsdrivendeInfoBoks","brukerprofil","familie","graderingInfo","hvordanSendeInntektsmelding","omLottOgHyre","DinePersonopplysningerModal","arbforhold","HarIkkeArbeidsforhold","assertUnreachable","FarMedmorFødselBeggeHarRettFormField","FarMedmorFødselBeggeHarRettFormComponents","initialFarMedmorFødselBeggeHarRettValues","morsSisteDag","antallUkerFellesperiode","antallDagerFellesperiode","mapFarMedmorFødselBeggeHarRettToState","farMedmorsFørsteDag","getInitialFarMedmorFødselBeggeHarRettValues","FarMedmorFødselBeggeHarRettFormConfig","MorsSisteDagSpørsmål","FormComponents","fieldName","familiehendelsesdato","navnMor","uttaksplanDatoavgrensninger","disableWeekend","FarMedmorsFørsteDag","farSinFørsteUttaksdag","RangeIcon","renderPlusIcon","renderMinusIcon","icon","this","lastTapAt","lastClientX","lastClientY","preventDoubleTapZoom","event","tapAt","timeDiff","clientX","clientY","xDiff","yDiff","AriaText","tagName","Sirkelknapp","posisjoneringFraHøyre","labelId","left","onTouchStart","aria-labelledby","aria-pressed","AntallUkerOgDagerFellesperiodeFarMedmorSpørsmål","ukerFieldName","dagerFieldName","antallDager","antallUker","ukerMedFellesperiode","trekkFraUke","currentAntall","number","min","integerValue","bredde","step","leggTilUke","max","trekkFraDag","leggTilDag","getErMorUfør","FarMedmorFødselFørsteganggsøknadBeggeHarRett","tilgjengeligeStønadskontoer100DTO","tilgjengeligeStønadskontoer80DTO","eksisterendeSakAnnenPart","erFødsel","annenForelderHarRett","lagretUttaksplanInfo","useUttaksplanInfo","getDekningsgradFromString","navnFar","getValgtStønadskontoFor80Og100Prosent","farMedmorFødselBeggeHarRettQuestionsConfig","valgtStønadskonto","tilgjengeligeDager","getTilgjengeligeDager","FormKomponent","dekningsgradFeltNavn","navnFarMedmor","getFlerbarnsuker","MorFødselFormField","MorFødselFormComponents","initialMorFødselValues","permisjonStartdato","fellesperiodeukerMor","mapMorFødselFormToState","skalIkkeHaUttakFørTermin","getInitialMorFødselValues","validateErStartdatoFørTermindato","avgrensninger","uttaksConstants","VeilederStartdatoPermisjon","startdato","antallDagerFørFødselIhtRegler","førsteMuligeStartdato","visKunFeil","ugyldigDatoÅrsak","getÅrsakDersomUgyldigStartdato","msg","varighet","erFeilmelding","StartdatoPermisjonMor","erBarnFødt","spørsmålNår","spørsmålHaddeIkke","familiehendelsesdatoDate","sisteUttaksdagFørTermin","getValidTidsperiode","visVeileder","datoAvgrensninger","maksDato","dayPickerProps","initialMonth","getVarighetForStartdato","barnetErFødt","RangeStepper","direction","defaultValueLabelRenderer","defaultBottomContentRenderer","RangeInput","active","handleBlur","handleFocus","deactivateIfOutside","container","contains","hjelpetekst","ariaLabelText","inputId","valueLabelRenderer","steppers","ariaValueChangedMessage","bottomContentRenderer","hjelpetekstApneLabel","valueLabelPlacement","onChange","ariaLabelId","bottomRenderer","bemWrapper","bemRangeInput","bemStepper","aria-live","ref","onBlur","onFocus","FordelingFellesperiodeSpørsmål","valgtFellesperiodeukerMor","annenForelderErFarEllerMedmor","getAntallUkerFellesperiode","ukerFellesperiode","antallUkerFedreKvote","getAntallUkerFedrekvote","antallUkerMødreKvote","getAntallUkerMødrekvote","infotekst","pakrevdForelder1","pakrevdForelder2","navnForelder1","navnForelder2","annenForeldersNavn","lenker","reduceLabel","increaseLabel","ukerForelder","ukerTotalt","navnForelder","MorFødselFormConfig","morFødselQuestionsConfig","MorFødsel","mellomnavn","shouldRender","visInfoOmPrematuruker","skalViseInfoOmPrematuruker","fødselsdatoEtterEllerLikFørsteJuli","ekstraDagerGrunnetPrematurFødsel","oppgittAnnenForelder","annenForelderFornavn","førsteUttaksdag","defaultPermisjonStartdato","antallprematuruker","antallprematurdager","AdopsjonStartdatoValg","MorFarAdopsjonFormField","MorFarAdopsjonFormComponents","initialMorFarAdopsjonValues","startdatoAdopsjonValg","annenStartdatoAdopsjon","mapMorFarAdopsjonFormToState","harAnnenForelderSøktFP","getInitialMorFarAdopsjonValues","finnEnum","valg","MorFarAdopsjonFormConfig","harAnnenForeldreRettPåForeldrepenger","morFarAdopsjonQuestionsConfig","validateErAnnenStartdatoAdopsjonGyldig","finnStartdatoAdopsjon","konverterStringTilDate","invalidDateRanges","StartdatoAdopsjon","valgtStartdatoAdopsjon","formaterDatoUtenDag","disabledDateRanges","MorFarAdopsjon","erAdopsjon","søkerErAleneOmOmsorg","annenForelderOppgittIkkeAleneOmOmsorg","erSøkerMor","fornavnAnnenForeldre","erAnnenPartUfør","navnAnnenPart","navnSøker","erAdoptertIUtlandet","ankomstdatoDate","adopsjonsdatoDate","latestDate","findEldsteDato","dateIsSameOrAfter","FarMedmorAleneomsorgFødselFormField","FarMedmorAleneomsorgFødselFormComponents","FarMedmorAleneomsorgFødselFormConfig","initialFarMedmorAleneomsorgFødselValues","getInitialFarMedmorAleneomsorgFødselValues","startetPåOmsorgsovertakelse","startPåOmsorgsovertakelse","validateStartdatoUttakFarMedmorAleneomsorgFødsel","FarMedmorAleneomsorgFødsel","mapFarMedmorAleneomsorgFødselFormToState","farMedmorAleneomsorgFødselAdopsjonQuestionsConfig","FarMedmorFørstegangssøknadMedAnnenPartFormField","FarMedmorFørstegangssøknadMedAnnenPartFormComponents","FarMedmorFørstegangssøknadMedAnnenPartFormConfig","farMedmorFørstegangssøknadMedAnnenPartQuestionsConfig","getFarMedmorFørstegangssøknadMedAnnenPartInitialValues","FarMedmorFørstegangssøknadMedAnnenPart","morsPerioder","valgtMengdeStønadskonto","UttaksplanInfoScenarios","getFarHarRett","erFarMedmor","getMorHarRett","getStønadskontoParams","UttaksplanInfo","stønadskontoer100","stønadskontoer80","FarMedmorFødselOgMorHarIkkeRettFormField","FarMedmorFødselOgMorHarIkkeRettFormComponents","initialFarMedmorFødselOgMorHarIkkeRettValues","mapFarMedmorFødselOgMorHarIkkeRettFormToState","getInitialFarMedmorFødselOgMorHarIkkeRettValues","FarMedmorFødselOgMorHarIkkeRettFormConfig","farMedmorFødselOgMorHarIkkeRettQuestionsConfig","validateStartdatoFarMedmor","FarMedmorFødselOgMorHarIkkeRett","annenForelderHarIkkeRett","datoAvgrensinger","DekningsgradSpørsmål","UttaksplanHexFarge","getBarStyle","color","color2","background","Multibar","leftBar","rightBar","centerBar","borderColor","DeltOmsorgGraf","fordeling","getProsentFordelingPerDel","pstMultiplikator","inkluderForeldrepengerFørTermin","pstMor","pstFarMedmor","pstFelles","txtMor","navnEierform","graa","lilla","blaa","paddingTop","AleneomsorgGraf","txt","position","TilgjengeligeDagerGraf","summerAntallDagerIKontoer","kontoer","kontoErFørTermin","kontoErEtterTermin","kontoerEtterTermin","dagerTotalt","dagerForeldrepengerFørFødsel","dagerEtterTermin","dagerForeldrepenger","getForeldrepengeKontoer","dagerMor","getMorsStønadskontoer","dagerFar","getFarsStønadskontoer","dagerFelles","getFellesStønadskontoer","flerbarnsdager","getFlerbarnskonto","dagerKunTilMor","dagerFarMedmor","maksDagerFar","maksDagerMor","stønadskontoer","setStartdato","flyttPeriode","setUttaksdager","getTidsperiode","getAntallUttaksdager","getAntallFridager","erLik","inkluderTidsperiode","inkluderUtsettelser","erPerioderLike","erSammenhengende","erPerioderSammenhengende","p1","p1NesteUttaksdato","p2Startdato","p2","inneholderFridager","starterFør","slutterEtter","slutterSammeDagEllerEtter","isForeldrepengerFørFødselUttaksperiode","fff1","getPeriodeFootprint","fff2","k1","k2","sortedPeriode","formaterDatoKompakt","getPeriode","getOpphold","isOppholdsperiode","getUttak","getUttaksperioder","isUttaksperiode","getOverføringer","isOverføringsperiode","getHull","isHull","getHullOgInfo","getInfoperioder","getUtsettelser","isUtsettelsesperiode","getPerioderEtterFamiliehendelsesdato","getPerioderFørFamiliehendelsesdato","getPerioderMedUgyldigTidsperiode","getPeriodeMedUgyldigTidsperiode","getPerioderMedFerieForForelder","erPeriodeMedFerieForForelder","getFørstePerioderEtterFamiliehendelsesdato","getFørstePeriodeEtterFamiliehendelsesdato","aktuellePerioder","getForeldrepengerFørTermin","getFørsteUttaksdag","førstePeriode","getFørsteUttaksdagEtterSistePeriode","getFørsteUttaksdagEksluderInfoperioder","getAntallFeriedager","getFerieUtsettelser","isUtsettelsePgaFerie","finnOverlappendePerioder","fomEllerTomErInnenforTidsperiode","datoErInnenforTidsperiode","fomTomOmkranserTidsperiode","finnPeriodeMedDato","finnFørstePeriodeEtterDato","finnAlleForegåendePerioder","finnPerioderFørPeriode","finnAllePåfølgendePerioder","finnPerioderEtterPeriode","finnDenForegåendePerioden","finnForrigePeriode","foregåendePerioder","finnPåfølgendePeriode","påfølgendePerioder","forskyvPerioder","uttaksdagerCurrent","result","dagerIPerioden","forskyvetStartdato","justertPeriode","forskyvPeriode","sort","finnSisteInfoperiode","sorterPerioder","holidays","getOffentligeFridager","fraÅr","tilÅr","days","start","slutt","erTidsperioderLike","t1","t2","erOmsluttetAv","erTidsperiodeOmsluttetAvTidsperiode","tidsperiode1","tidsperiode2","dateIsSameOrBefore","erUtenfor","erTidsperiodeUtenforTidsperiode","getAntallUttaksdagerITidsperiode","getUttaksdagerSomErFridager","dag","flyttTidsperiode","uttaksdager","formaterString","tidsperiodeToString","formaterStringKort","tidsperiodeToStringKort","erFomEllerEtterDato","erTidsperiodeFomEllerEtterDato","erFørDato","inneholderDato","inneholderTidsperiodeDato","antall","forrige","getUttaksdagFørDato","getUttaksdagTilOgMedDato","neste","getUttaksdagEtterDato","getUttaksdagFraOgMedDato","denneEllerNeste","denneEllerForrige","getUttaksdagerFremTilDato","leggTil","trekkUttaksdagerFraDato","leggUttaksdagerTilDato","nyDato","dagteller","uttaksdageteller","tellerdato","trekkFra","getUkedag","sum","sisteMuligePermisjonsdag","startDato","konverterMinOgMaxDatoerTilString","defaultPermisjonsperiodeAvgrensning","minDato","weekendsNotSelectable","startdatoFørTermin","morsSisteUttaksdag","startdatoPermisjonFarMedmor","startdatoPermisjonAdopsjon","startdatoPermisjonAleneomsorgFarMedmor","startdatoFørTerminForeldrepengerFørFødselKonto","ekstrauttakFørFødsel","sisteDagFørFødsel","regBarn","date4YearsAgo","dateString","validateDateInRange","date","dateIsWithinRange","validateToDateInRange","fromDate","validateFromDateInRange","toDate","filteredBarn","getUkerOgDagerFromDager","format","dagerStr","ukerStr","datoformat","dateArray","idag","måneder","_x","Bytes","unitSeparator","thousandsSeparator","decimalPlaces","fixedDecimals","att","history","useHistory","hendelse","harSubmitted","setSubmitted","nextRoute","setSubmitAndHandleSubmit","actions","submitHandler","dispatchRouteChange","onlyNumbersRegExp","er9Tall","starterPå8Eller9","getMod11","strValue","checkNbr","mod","RegExp","navnSlutterPåSLyd","sisteBokstav","søkerErMor","søkerErFarMedmor","opprettAktivitetsFriKonto","nyeKontoer","aktivitetskravFrieDagerForeldrepenger","getAktivitetsFrieUkerForeldrepenger","mapTilgjengeligStønadskontoDTOToTilgjengeligStønadskonto","stønadskontoerDTO","åttiProsent","hundreProsent","generateAttachmentId","concat","file","uploaded","innsendingsType","dokumenter","dok","withForeldrepengersøknadContextProvider","getLanguageMessages","allCommonMessages","IntlProvider","messages","withIntlProvider","createBrowserHistory","withRouterProvider","AxiosMock","mapSøkerinfoDTOToSøkerinfo","søkerinfoDTO","mapArbeidsforholdDTOToArbeidsforhold","mapSøkerinfoDTOSøkerToPerson","personDTO","erMyndig","mapSøkerinfoDTOBarnToRegistrertBarn","ForeldrepengerStateMock","setFerdig","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","webpackContextKeys","resolve","module","exports","symbol"],"sourceRoot":""}